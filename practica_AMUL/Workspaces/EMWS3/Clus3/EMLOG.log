*------------------------------------------------------------*
Usuario:                Admin
Fecha:                13/12/20
Hora:                16H52
Sitio:                70161230
Plataforma:            X64_10HOME
Versión de mantenimiento: 9.04.01M6P111518
Versión de EM:          15.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16H52" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de entrenamiento";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de entrenamiento
Fecha:                13/12/20
Hora:                16H52
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O225KD7U "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O225KD7U new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16H52" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Sitio:                70161230";
MPRINT(EM_DIAGRAM):   put "Plataforma:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "Versión de mantenimiento: 9.04.01M6P111518";
MPRINT(EM_DIAGRAM):   put "Versión de EM:          15.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16H52" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de entrenamiento";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de puntuación";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida del informe";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22068      proc freq data=EMWS3.Clus3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS3.Clus3_VariableSet noprint;
22069      table ROLE*LEVEL/out=WORK.Clus3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Clus3META;
22070      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 242 observations read from the data set EMWS3.CLUS3_VARIABLESET.
NOTE: The data set WORK.CLUS3META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22071      proc print data=WORK.Clus3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Clus3META label noobs;
22072      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22073      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Rol" LEVEL = "Nivel de medida" COUNT = "Número de ocurrencias";
22074      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22075      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Resumen de variables";
MPRINT(EM_DIAGRAM):   run;
22076      run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS3META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22077      title10;
MPRINT(EM_DIAGRAM):   title10;
22078      data WORK.M1KC7EKU;
MPRINT(EM_DIAGRAM):    data WORK.M1KC7EKU;
22079      set WORK.M1KC7EKU;
MPRINT(EM_DIAGRAM):   set WORK.M1KC7EKU;
22080      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
22081      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.M1KC7EKU.
NOTE: The data set WORK.M1KC7EKU has 241 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus3: preparando metadatos para el entrenamiento;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1KC7EKU;
MPRINT(EM_DIAGRAM):   set WORK.M1KC7EKU;
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
22090      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22091      * Clus3: clustering preliminar;
MPRINT(EM_DIAGRAM):   * Clus3: clustering preliminar;
22092      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22093      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22094      * Create DMDB macros;
MPRINT(EM_DIAGRAM):   * Create DMDB macros;
22095      %let _sns = %sysfunc(getoption(SOURCE));
22096      options nosource;
MPRINT(EM_DIAGRAM):   options nosource;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   options SOURCE;
MPRINT(EM_DIAGRAM):   * End DMDB macros generation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus3: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22129      * End DMDB macros generation;
22130      *------------------------------------------------------------*;
22131      *------------------------------------------------------------*;
22132      * Clus3: Create DMDB;
22133      *------------------------------------------------------------*;
22134      proc dmdb batch data=EMWS3.Ids2_DATA
22135      dmdbcat=WORK.Clus3_DMDB
22136      maxlevel = 513
22137      out=WORK.Clus3_DMDB
22138      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS3.Ids2_DATA dmdbcat=WORK.Clus3_DMDB maxlevel = 513 out=WORK.Clus3_DMDB ;
MPRINT(EM_DIAGRAM):   var
22139      var %DMDBVar;
MPRINT(DMDBVAR):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE COLOR
COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT FAX FEEL
FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD
KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND SOURC
STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK
WORLD XLIB XTERM YEAR YOU
MPRINT(EM_DIAGRAM):  ;
22140      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 3000   Memory used = 511K.
NOTE: Vista EMWS3.IDS2_DATA.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: The data set WORK.CLUS3_DMDB has 3000 observations and 241 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
22141      quit;
22142      *--- end code ---*;
 
22143      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22144      * Clus3: Inputs intervalo Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Inputs intervalo Macro ;
22145      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22146      %macro DMVQINTERVAL;
22147          ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC
22148         ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD
22149         BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
22150         COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT
22151         CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI
22152         DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL
22153         ENGIN ERROR EVENT EXPERI FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND
22154         FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND
22155         GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT
22156         INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD KILL KIND LEVEL
22157         LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON
22158         MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN
22159         OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
22160         POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR
22161         RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN
22162         SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL
22163         SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN
22164         SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE
22165         TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA
22166         VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
22167      %mend DMVQINTERVAL;
22168      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22169      * Clus3: ejecutar procedimiento DMVQ;
MPRINT(EM_DIAGRAM):   * Clus3: ejecutar procedimiento DMVQ;
22170      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22171      title;
MPRINT(EM_DIAGRAM):   title;
22172      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
22173      proc dmvq data=WORK.Clus3_DMDB dmdbcat=WORK.Clus3_DMDB std=RANGE nominal=GLM ordinal=RANK
22174      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus3_DMDB dmdbcat=WORK.Clus3_DMDB std=RANGE nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS3_DMDB.DATA has 241 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
22175      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER
WORK WORLD XLIB XTERM YEAR YOU
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 241 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
22176      VQ maxc = 50 clusname=_SEGMENT_ CLUSLABEL="Id de segmento" DISTLABEL="Distancia";
MPRINT(EM_DIAGRAM):   VQ maxc = 50 clusname=_SEGMENT_ CLUSLABEL="Id de segmento" DISTLABEL="Distancia";
NOTE: A maximum of 50 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
22177      MAKE outvar=EMWS3.Clus3_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS3.Clus3_OUTVAR;
 
NOTE: 241 input variable(s).
NOTE: Number of cases=3000
NOTE: Sum of frequencies=3000
NOTE: Sum of weights=3000
NOTE: VARDEF=DF
NOTE: Maximum number of categories=0
NOTE: The total number of variables is 241 with dimensionality 241.
NOTE: 241 variables will be used for clustering.
NOTE: Open output data set EMWS3.CLUS3_OUTVAR.DATA with 242 variables.
NOTE: The data set EMWS3.CLUS3_OUTVAR has 4 observations and 242 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
22178      INITIAL radius=0
22179      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 ;
NOTE: 50 semillas seleccionadas del conjunto de datos WORK.CLUS3_DMDB.DATA usando el algoritmo SEPARATE.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
22180      TRAIN tech=FORGY
22181      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
WARNING: Se ha alcanzado el límite de 10 iteraciones sin convergencia.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
22182      SAVE outstat=WORK.Clus3_OUTSTAT outmean=EMWS3.Clus3_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=WORK.Clus3_OUTSTAT outmean=EMWS3.Clus3_OUTMEAN;
NOTE: The data set WORK.CLUS3_OUTSTAT has 316 observations and 244 variables.
NOTE: The data set EMWS3.CLUS3_OUTMEAN has 50 observations and 250 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
22183      code file="C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\DMVQSCORECODE.sas"
22184      group=Clus3
22185      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\DMVQSCORECODE.sas" group=Clus3 ;
NOTE: External file C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
22186      run;
MPRINT(EM_DIAGRAM):   run;
 
22187      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 3000 observations read from the data set WORK.CLUS3_DMDB.
NOTE: PROCEDURE DMVQ ha utilizado (Tiempo de proceso total):
      real time           0.47 seconds
      cpu time            0.47 seconds
 
 
22188      proc transpose data=EMWS3.Clus3_OUTVAR out=WORK.Clus3_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS3.Clus3_OUTVAR out=WORK.Clus3_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
22189      var ACCESS--YOU;
MPRINT(EM_DIAGRAM):   var ACCESS--YOU;
22190      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
22191      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS3.CLUS3_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS3_OUTVAR has 241 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22192      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22193      * Clus3: variables DMVQ;
MPRINT(EM_DIAGRAM):   * Clus3: variables DMVQ;
22194      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22195      %macro dmvqvars;
22196          ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC
22197         ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD
22198         BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
22199         COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT
22200         CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI
22201         DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL
22202         ENGIN ERROR EVENT EXPERI FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND
22203         FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND
22204         GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT
22205         INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD KILL KIND LEVEL
22206         LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON
22207         MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN
22208         OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
22209         POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR
22210         RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN
22211         SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL
22212         SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN
22213         SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE
22214         TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA
22215         VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
22216      %mend ;
22217
22218
 
22219      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22220      * Clus3: determinando el número de clústeres;
MPRINT(EM_DIAGRAM):   * Clus3: determinando el número de clústeres;
22221      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22222      proc cluster data=EMWS3.Clus3_OUTMEAN method=WARD pseudo outtree=EMWS3.Clus3_CLUSSEED
22223      ;
MPRINT(EM_DIAGRAM):   proc cluster data=EMWS3.Clus3_OUTMEAN method=WARD pseudo outtree=EMWS3.Clus3_CLUSSEED ;
MPRINT(EM_DIAGRAM):   var
22224      var %dmvqvars;
MPRINT(DMVQVARS):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE COLOR
COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT FAX FEEL
FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD
KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND SOURC
STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK
WORLD XLIB XTERM YEAR YOU
MPRINT(EM_DIAGRAM):  ;
22225      copy _SEGMENT_;
MPRINT(EM_DIAGRAM):   copy _SEGMENT_;
22226      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS3.CLUS3_CLUSSEED has 99 observations and 258 variables.
NOTE: The PROCEDURE CLUSTER printed page 2.
NOTE: PROCEDURE CLUSTER ha utilizado (Tiempo de proceso total):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22227      quit;
22228      proc sort data =EMWS3.Clus3_CLUSSEED out=WORK._SEED_;
MPRINT(EM_DIAGRAM):   proc sort data =EMWS3.Clus3_CLUSSEED out=WORK._SEED_;
22229      by _ncl_;
MPRINT(EM_DIAGRAM):   by _ncl_;
22230      where (_ccc_ > -99999.0);
MPRINT(EM_DIAGRAM):   where (_ccc_ > -99999.0);
22231      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set EMWS3.CLUS3_CLUSSEED.
      WHERE _ccc_>-99999;
NOTE: The data set WORK._SEED_ has 49 observations and 258 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22232      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):   data WORK._SEED2_;
22233      retain oJump occc oncl;
MPRINT(EM_DIAGRAM):   retain oJump occc oncl;
22234      set WORK._SEED_;
MPRINT(EM_DIAGRAM):   set WORK._SEED_;
22235      _lccc_=lag(_ccc_);
MPRINT(EM_DIAGRAM):   _lccc_=lag(_ccc_);
22236      if _lccc_ > . then jump = _ccc_ - _lccc_;
MPRINT(EM_DIAGRAM):   if _lccc_ > . then jump = _ccc_ - _lccc_;
22237      if jump<0 and ojump>0 then do;
MPRINT(EM_DIAGRAM):   if jump<0 and ojump>0 then do;
22238      * Have a local Max;
MPRINT(EM_DIAGRAM):   * Have a local Max;
22239      numclus = oncl;
MPRINT(EM_DIAGRAM):   numclus = oncl;
22240      cccvalue = occc;
MPRINT(EM_DIAGRAM):   cccvalue = occc;
22241      output;
MPRINT(EM_DIAGRAM):   output;
22242      end;
MPRINT(EM_DIAGRAM):   end;
22243      ojump = jump;
MPRINT(EM_DIAGRAM):   ojump = jump;
22244      occc = _ccc_;
MPRINT(EM_DIAGRAM):   occc = _ccc_;
22245      oncl = _ncl_;
MPRINT(EM_DIAGRAM):   oncl = _ncl_;
22246      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set WORK._SEED_.
NOTE: The data set WORK._SEED2_ has 0 observations and 265 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22247      proc print data=WORK._SEED2_ label;
MPRINT(EM_DIAGRAM):   proc print data=WORK._SEED2_ label;
22248      var numclus cccvalue;
MPRINT(EM_DIAGRAM):   var numclus cccvalue;
22249      label numclus="%sysfunc(sasmsg(sashelp.dmine, rpt_numclus_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label numclus= "Número de clústeres";
22250      label cccvalue="%sysfunc(sasmsg(sashelp.dmine, rpt_ccc_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label cccvalue= "Criterio cúbico de clustering";
22251      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_OptClus_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Candidatos para número de clústeres óptimos";
MPRINT(EM_DIAGRAM):   run;
22252      run;
 
NOTE: No hay observaciones en el conjunto de datos WORK._SEED2_.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22253      title10;
MPRINT(EM_DIAGRAM):   title10;
22254      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22255      * Clus3: entrenamiento;
MPRINT(EM_DIAGRAM):   * Clus3: entrenamiento;
22256      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22257      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22258      * Clus3: ejecutar procedimiento DMVQ;
MPRINT(EM_DIAGRAM):   * Clus3: ejecutar procedimiento DMVQ;
22259      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22260      title;
MPRINT(EM_DIAGRAM):   title;
22261      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
22262      proc dmvq data=WORK.Clus3_DMDB dmdbcat=WORK.Clus3_DMDB std=RANGE nominal=GLM ordinal=RANK
22263      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus3_DMDB dmdbcat=WORK.Clus3_DMDB std=RANGE nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS3_DMDB.DATA has 241 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
22264      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER
WORK WORLD XLIB XTERM YEAR YOU
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 241 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
22265      VQ maxc = 20 clusname=_SEGMENT_ CLUSLABEL="Id de segmento" DISTLABEL="Distancia";
MPRINT(EM_DIAGRAM):   VQ maxc = 20 clusname=_SEGMENT_ CLUSLABEL="Id de segmento" DISTLABEL="Distancia";
NOTE: A maximum of 20 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
22266      MAKE outvar=EMWS3.Clus3_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS3.Clus3_OUTVAR;
 
NOTE: 241 input variable(s).
NOTE: Number of cases=3000
NOTE: Sum of frequencies=3000
NOTE: Sum of weights=3000
NOTE: VARDEF=DF
NOTE: Maximum number of categories=0
NOTE: The total number of variables is 241 with dimensionality 241.
NOTE: 241 variables will be used for clustering.
NOTE: Open output data set EMWS3.CLUS3_OUTVAR.DATA with 242 variables.
NOTE: The data set EMWS3.CLUS3_OUTVAR has 4 observations and 242 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
22267      INITIAL radius=0
22268      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 ;
NOTE: 20 semillas seleccionadas del conjunto de datos WORK.CLUS3_DMDB.DATA usando el algoritmo SEPARATE.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
22269      TRAIN tech=FORGY
22270      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
WARNING: Se ha alcanzado el límite de 10 iteraciones sin convergencia.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
22271      SAVE outstat=EMWS3.Clus3_OUTSTAT outmean=EMWS3.Clus3_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=EMWS3.Clus3_OUTSTAT outmean=EMWS3.Clus3_OUTMEAN;
NOTE: The data set EMWS3.CLUS3_OUTSTAT has 136 observations and 244 variables.
NOTE: The data set EMWS3.CLUS3_OUTMEAN has 20 observations and 250 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
22272      code file="C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\DMVQSCORECODE.sas"
22273      group=Clus3
22274      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\DMVQSCORECODE.sas" group=Clus3 ;
NOTE: External file C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
22275      run;
MPRINT(EM_DIAGRAM):   run;
 
22276      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 3000 observations read from the data set WORK.CLUS3_DMDB.
NOTE: PROCEDURE DMVQ ha utilizado (Tiempo de proceso total):
      real time           0.27 seconds
      cpu time            0.28 seconds
 
 
22277      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
WARNING: Libref _SPDSLIB is not assigned.
22278      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22279      * Clus3: Cluster Label;
MPRINT(EM_DIAGRAM):   * Clus3: Cluster Label;
22280      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22281      data EMWS3.Clus3_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_LABEL;
22282      length _SEGMENT_ 8 Label $80;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ 8 Label $80;
22283      format _SEGMENT_ 4.;
MPRINT(EM_DIAGRAM):   format _SEGMENT_ 4.;
22284      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Nombre del segmento";
22285      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentLabel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Etiqueta del segmento";
22286      _SEGMENT_= 1;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 1;
22287      Label='Cluster1';
MPRINT(EM_DIAGRAM):   Label='Cluster1';
22288      output;
MPRINT(EM_DIAGRAM):   output;
22289      _SEGMENT_= 2;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 2;
22290      Label='Cluster2';
MPRINT(EM_DIAGRAM):   Label='Cluster2';
22291      output;
MPRINT(EM_DIAGRAM):   output;
22292      _SEGMENT_= 3;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 3;
22293      Label='Cluster3';
MPRINT(EM_DIAGRAM):   Label='Cluster3';
22294      output;
MPRINT(EM_DIAGRAM):   output;
22295      _SEGMENT_= 4;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 4;
22296      Label='Cluster4';
MPRINT(EM_DIAGRAM):   Label='Cluster4';
22297      output;
MPRINT(EM_DIAGRAM):   output;
22298      _SEGMENT_= 5;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 5;
22299      Label='Cluster5';
MPRINT(EM_DIAGRAM):   Label='Cluster5';
22300      output;
MPRINT(EM_DIAGRAM):   output;
22301      _SEGMENT_= 6;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 6;
22302      Label='Cluster6';
MPRINT(EM_DIAGRAM):   Label='Cluster6';
22303      output;
MPRINT(EM_DIAGRAM):   output;
22304      _SEGMENT_= 7;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 7;
22305      Label='Cluster7';
MPRINT(EM_DIAGRAM):   Label='Cluster7';
22306      output;
MPRINT(EM_DIAGRAM):   output;
22307      _SEGMENT_= 8;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 8;
22308      Label='Cluster8';
MPRINT(EM_DIAGRAM):   Label='Cluster8';
22309      output;
MPRINT(EM_DIAGRAM):   output;
22310      _SEGMENT_= 9;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 9;
22311      Label='Cluster9';
MPRINT(EM_DIAGRAM):   Label='Cluster9';
22312      output;
MPRINT(EM_DIAGRAM):   output;
22313      _SEGMENT_= 10;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 10;
22314      Label='Cluster10';
MPRINT(EM_DIAGRAM):   Label='Cluster10';
22315      output;
MPRINT(EM_DIAGRAM):   output;
22316      _SEGMENT_= 11;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 11;
22317      Label='Cluster11';
MPRINT(EM_DIAGRAM):   Label='Cluster11';
22318      output;
MPRINT(EM_DIAGRAM):   output;
22319      _SEGMENT_= 12;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 12;
22320      Label='Cluster12';
MPRINT(EM_DIAGRAM):   Label='Cluster12';
22321      output;
MPRINT(EM_DIAGRAM):   output;
22322      _SEGMENT_= 13;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 13;
22323      Label='Cluster13';
MPRINT(EM_DIAGRAM):   Label='Cluster13';
22324      output;
MPRINT(EM_DIAGRAM):   output;
22325      _SEGMENT_= 14;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 14;
22326      Label='Cluster14';
MPRINT(EM_DIAGRAM):   Label='Cluster14';
22327      output;
MPRINT(EM_DIAGRAM):   output;
22328      _SEGMENT_= 15;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 15;
22329      Label='Cluster15';
MPRINT(EM_DIAGRAM):   Label='Cluster15';
22330      output;
MPRINT(EM_DIAGRAM):   output;
22331      _SEGMENT_= 16;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 16;
22332      Label='Cluster16';
MPRINT(EM_DIAGRAM):   Label='Cluster16';
22333      output;
MPRINT(EM_DIAGRAM):   output;
22334      _SEGMENT_= 17;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 17;
22335      Label='Cluster17';
MPRINT(EM_DIAGRAM):   Label='Cluster17';
22336      output;
MPRINT(EM_DIAGRAM):   output;
22337      _SEGMENT_= 18;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 18;
22338      Label='Cluster18';
MPRINT(EM_DIAGRAM):   Label='Cluster18';
22339      output;
MPRINT(EM_DIAGRAM):   output;
22340      _SEGMENT_= 19;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 19;
22341      Label='Cluster19';
MPRINT(EM_DIAGRAM):   Label='Cluster19';
22342      output;
MPRINT(EM_DIAGRAM):   output;
22343      _SEGMENT_= 20;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 20;
22344      Label='Cluster20';
MPRINT(EM_DIAGRAM):   Label='Cluster20';
22345      output;
MPRINT(EM_DIAGRAM):   output;
22346      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS3.CLUS3_LABEL has 20 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16H52" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de puntuación";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de puntuación
Fecha:                13/12/20
Hora:                16H52
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1J0IUHW "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1J0IUHW new;
MPRINT(EM_DIAGRAM):   run;
22448      proc transpose data=EMWS3.Clus3_OUTVAR out=WORK.Clus3_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS3.Clus3_OUTVAR out=WORK.Clus3_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
22449      var ACCESS--YOU;
MPRINT(EM_DIAGRAM):   var ACCESS--YOU;
22450      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
22451      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS3.CLUS3_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS3_OUTVAR has 0 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22452      proc sort data=WORK.Clus3_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus3_OUTVAR;
22453      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22454      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS3_OUTVAR has 0 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22455      proc sort data=EMWS3.Clus3_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus3_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus3_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus3_SORTEDVARS;
22456      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22457      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 242 observations read from the data set EMWS3.CLUS3_VARIABLESET.
NOTE: The data set WORK.CLUS3_SORTEDVARS has 242 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22458      data WORK.Clus3_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus3_OUTVAR;
22459      merge WORK.Clus3_OUTVAR(in=INVAR) WORK.Clus3_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus3_OUTVAR(in=INVAR) WORK.Clus3_SORTEDVARS;
22460      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22461      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
22462      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS3_OUTVAR.
NOTE: There were 242 observations read from the data set WORK.CLUS3_SORTEDVARS.
NOTE: The data set WORK.CLUS3_OUTVAR has 0 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
22463      filename emflow "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22464      *------------------------------------------------------------*;
22465      * Clus3: Scoring DATA data;
22466      *------------------------------------------------------------*;
22467      data EMWS3.Clus3_TRAIN
22468      / view=EMWS3.Clus3_TRAIN
22469      ;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_TRAIN / view=EMWS3.Clus3_TRAIN ;
22470      set EMWS3.Ids2_DATA
22471      ;
MPRINT(EM_DIAGRAM):   set EMWS3.Ids2_DATA ;
22472      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize ACCESS ;
MPRINT(EM_DIAGRAM):   drop T_ACCESS ;
MPRINT(EM_DIAGRAM):   if missing( ACCESS ) then T_ACCESS = .;
MPRINT(EM_DIAGRAM):   else T_ACCESS = (ACCESS - 0) * 4.09763448766634;
MPRINT(EM_DIAGRAM):   *** Standardize ADAM ;
MPRINT(EM_DIAGRAM):   drop T_ADAM ;
MPRINT(EM_DIAGRAM):   if missing( ADAM ) then T_ADAM = .;
MPRINT(EM_DIAGRAM):   else T_ADAM = (ADAM - 0) * 2.42841107703564;
MPRINT(EM_DIAGRAM):   *** Standardize ADDRESS ;
MPRINT(EM_DIAGRAM):   drop T_ADDRESS ;
MPRINT(EM_DIAGRAM):   if missing( ADDRESS ) then T_ADDRESS = .;
MPRINT(EM_DIAGRAM):   else T_ADDRESS = (ADDRESS - 0) * 2.42063863061201;
MPRINT(EM_DIAGRAM):   *** Standardize ADVANC ;
MPRINT(EM_DIAGRAM):   drop T_ADVANC ;
MPRINT(EM_DIAGRAM):   if missing( ADVANC ) then T_ADVANC = .;
MPRINT(EM_DIAGRAM):   else T_ADVANC = (ADVANC - 0) * 6.14512436517837;
MPRINT(EM_DIAGRAM):   *** Standardize AMERICAN ;
MPRINT(EM_DIAGRAM):   drop T_AMERICAN ;
MPRINT(EM_DIAGRAM):   if missing( AMERICAN ) then T_AMERICAN = .;
MPRINT(EM_DIAGRAM):   else T_AMERICAN = (AMERICAN - 0) * 5.95482088127584;
MPRINT(EM_DIAGRAM):   *** Standardize ANDI ;
MPRINT(EM_DIAGRAM):   drop T_ANDI ;
MPRINT(EM_DIAGRAM):   if missing( ANDI ) then T_ANDI = .;
MPRINT(EM_DIAGRAM):   else T_ANDI = (ANDI - 0) * 1.65547339804832;
MPRINT(EM_DIAGRAM):   *** Standardize ANSWER ;
MPRINT(EM_DIAGRAM):   drop T_ANSWER ;
MPRINT(EM_DIAGRAM):   if missing( ANSWER ) then T_ANSWER = .;
MPRINT(EM_DIAGRAM):   else T_ANSWER = (ANSWER - 0) * 4.64860866821607;
MPRINT(EM_DIAGRAM):   *** Standardize APPLIC ;
MPRINT(EM_DIAGRAM):   drop T_APPLIC ;
MPRINT(EM_DIAGRAM):   if missing( APPLIC ) then T_APPLIC = .;
MPRINT(EM_DIAGRAM):   else T_APPLIC = (APPLIC - 0) * 3.9853350155139;
MPRINT(EM_DIAGRAM):   *** Standardize APPRECI ;
MPRINT(EM_DIAGRAM):   drop T_APPRECI ;
MPRINT(EM_DIAGRAM):   if missing( APPRECI ) then T_APPRECI = .;
MPRINT(EM_DIAGRAM):   else T_APPRECI = (APPRECI - 0) * 4.61159422033839;
MPRINT(EM_DIAGRAM):   *** Standardize ARAB ;
MPRINT(EM_DIAGRAM):   drop T_ARAB ;
MPRINT(EM_DIAGRAM):   if missing( ARAB ) then T_ARAB = .;
MPRINT(EM_DIAGRAM):   else T_ARAB = (ARAB - 0) * 4.52418448919517;
MPRINT(EM_DIAGRAM):   *** Standardize AREA ;
MPRINT(EM_DIAGRAM):   drop T_AREA ;
MPRINT(EM_DIAGRAM):   if missing( AREA ) then T_AREA = .;
MPRINT(EM_DIAGRAM):   else T_AREA = (AREA - 0) * 6.43887367010951;
MPRINT(EM_DIAGRAM):   *** Standardize ARGIC ;
MPRINT(EM_DIAGRAM):   drop T_ARGIC ;
MPRINT(EM_DIAGRAM):   if missing( ARGIC ) then T_ARGIC = .;
MPRINT(EM_DIAGRAM):   else T_ARGIC = (ARGIC - 0) * 3.07690480537955;
MPRINT(EM_DIAGRAM):   *** Standardize ARMENIA ;
MPRINT(EM_DIAGRAM):   drop T_ARMENIA ;
MPRINT(EM_DIAGRAM):   if missing( ARMENIA ) then T_ARMENIA = .;
MPRINT(EM_DIAGRAM):   else T_ARMENIA = (ARMENIA - 0) * 1.72392651861691;
MPRINT(EM_DIAGRAM):   *** Standardize ARMENIAN ;
MPRINT(EM_DIAGRAM):   drop T_ARMENIAN ;
MPRINT(EM_DIAGRAM):   if missing( ARMENIAN ) then T_ARMENIAN = .;
MPRINT(EM_DIAGRAM):   else T_ARMENIAN = (ARMENIAN - 0) * 4.23900299721636;
MPRINT(EM_DIAGRAM):   *** Standardize ATTACK ;
MPRINT(EM_DIAGRAM):   drop T_ATTACK ;
MPRINT(EM_DIAGRAM):   if missing( ATTACK ) then T_ATTACK = .;
MPRINT(EM_DIAGRAM):   else T_ATTACK = (ATTACK - 0) * 6.01910247519059;
MPRINT(EM_DIAGRAM):   *** Standardize AUDIO ;
MPRINT(EM_DIAGRAM):   drop T_AUDIO ;
MPRINT(EM_DIAGRAM):   if missing( AUDIO ) then T_AUDIO = .;
MPRINT(EM_DIAGRAM):   else T_AUDIO = (AUDIO - 0) * 2.78083660347682;
MPRINT(EM_DIAGRAM):   *** Standardize BANK ;
MPRINT(EM_DIAGRAM):   drop T_BANK ;
MPRINT(EM_DIAGRAM):   if missing( BANK ) then T_BANK = .;
MPRINT(EM_DIAGRAM):   else T_BANK = (BANK - 0) * 3.66222724209961;
MPRINT(EM_DIAGRAM):   *** Standardize BASE ;
MPRINT(EM_DIAGRAM):   drop T_BASE ;
MPRINT(EM_DIAGRAM):   if missing( BASE ) then T_BASE = .;
MPRINT(EM_DIAGRAM):   else T_BASE = (BASE - 0) * 7.43743258447749;
MPRINT(EM_DIAGRAM):   *** Standardize BATTERI ;
MPRINT(EM_DIAGRAM):   drop T_BATTERI ;
MPRINT(EM_DIAGRAM):   if missing( BATTERI ) then T_BATTERI = .;
MPRINT(EM_DIAGRAM):   else T_BATTERI = (BATTERI - 0) * 2.30059996771798;
MPRINT(EM_DIAGRAM):   *** Standardize BILL ;
MPRINT(EM_DIAGRAM):   drop T_BILL ;
MPRINT(EM_DIAGRAM):   if missing( BILL ) then T_BILL = .;
MPRINT(EM_DIAGRAM):   else T_BILL = (BILL - 0) * 2.31716773502006;
MPRINT(EM_DIAGRAM):   *** Standardize BOOK ;
MPRINT(EM_DIAGRAM):   drop T_BOOK ;
MPRINT(EM_DIAGRAM):   if missing( BOOK ) then T_BOOK = .;
MPRINT(EM_DIAGRAM):   else T_BOOK = (BOOK - 0) * 4.04342989591831;
MPRINT(EM_DIAGRAM):   *** Standardize BRAIN ;
MPRINT(EM_DIAGRAM):   drop T_BRAIN ;
MPRINT(EM_DIAGRAM):   if missing( BRAIN ) then T_BRAIN = .;
MPRINT(EM_DIAGRAM):   else T_BRAIN = (BRAIN - 0) * 3.4585828348183;
MPRINT(EM_DIAGRAM):   *** Standardize BRIAN ;
MPRINT(EM_DIAGRAM):   drop T_BRIAN ;
MPRINT(EM_DIAGRAM):   if missing( BRIAN ) then T_BRIAN = .;
MPRINT(EM_DIAGRAM):   else T_BRIAN = (BRIAN - 0) * 1.99781751577907;
MPRINT(EM_DIAGRAM):   *** Standardize BUILD ;
MPRINT(EM_DIAGRAM):   drop T_BUILD ;
MPRINT(EM_DIAGRAM):   if missing( BUILD ) then T_BUILD = .;
MPRINT(EM_DIAGRAM):   else T_BUILD = (BUILD - 0) * 4.49635319685497;
MPRINT(EM_DIAGRAM):   *** Standardize BUTTON ;
MPRINT(EM_DIAGRAM):   drop T_BUTTON ;
MPRINT(EM_DIAGRAM):   if missing( BUTTON ) then T_BUTTON = .;
MPRINT(EM_DIAGRAM):   else T_BUTTON = (BUTTON - 0) * 2.10801097276364;
MPRINT(EM_DIAGRAM):   *** Standardize CALIFORNIA ;
MPRINT(EM_DIAGRAM):   drop T_CALIFORNIA ;
MPRINT(EM_DIAGRAM):   if missing( CALIFORNIA ) then T_CALIFORNIA = .;
MPRINT(EM_DIAGRAM):   else T_CALIFORNIA = (CALIFORNIA - 0) * 4.43833320661117;
MPRINT(EM_DIAGRAM):   *** Standardize CALL ;
MPRINT(EM_DIAGRAM):   drop T_CALL ;
MPRINT(EM_DIAGRAM):   if missing( CALL ) then T_CALL = .;
MPRINT(EM_DIAGRAM):   else T_CALL = (CALL - 0) * 4.479518170049;
MPRINT(EM_DIAGRAM):   *** Standardize CAN ;
MPRINT(EM_DIAGRAM):   drop T_CAN ;
MPRINT(EM_DIAGRAM):   if missing( CAN ) then T_CAN = .;
MPRINT(EM_DIAGRAM):   else T_CAN = (CAN - 0) * 7.10913523262021;
MPRINT(EM_DIAGRAM):   *** Standardize CARD ;
MPRINT(EM_DIAGRAM):   drop T_CARD ;
MPRINT(EM_DIAGRAM):   if missing( CARD ) then T_CARD = .;
MPRINT(EM_DIAGRAM):   else T_CARD = (CARD - 0) * 2.30717651411815;
MPRINT(EM_DIAGRAM):   *** Standardize CASE ;
MPRINT(EM_DIAGRAM):   drop T_CASE ;
MPRINT(EM_DIAGRAM):   if missing( CASE ) then T_CASE = .;
MPRINT(EM_DIAGRAM):   else T_CASE = (CASE - 0) * 7.55808831887078;
MPRINT(EM_DIAGRAM):   *** Standardize CENTER ;
MPRINT(EM_DIAGRAM):   drop T_CENTER ;
MPRINT(EM_DIAGRAM):   if missing( CENTER ) then T_CENTER = .;
MPRINT(EM_DIAGRAM):   else T_CENTER = (CENTER - 0) * 6.39144983708563;
MPRINT(EM_DIAGRAM):   *** Standardize CHANG ;
MPRINT(EM_DIAGRAM):   drop T_CHANG ;
MPRINT(EM_DIAGRAM):   if missing( CHANG ) then T_CHANG = .;
MPRINT(EM_DIAGRAM):   else T_CHANG = (CHANG - 0) * 3.76385580310905;
MPRINT(EM_DIAGRAM):   *** Standardize CHIP ;
MPRINT(EM_DIAGRAM):   drop T_CHIP ;
MPRINT(EM_DIAGRAM):   if missing( CHIP ) then T_CHIP = .;
MPRINT(EM_DIAGRAM):   else T_CHIP = (CHIP - 0) * 3.39398033352704;
MPRINT(EM_DIAGRAM):   *** Standardize CIRCUIT ;
MPRINT(EM_DIAGRAM):   drop T_CIRCUIT ;
MPRINT(EM_DIAGRAM):   if missing( CIRCUIT ) then T_CIRCUIT = .;
MPRINT(EM_DIAGRAM):   else T_CIRCUIT = (CIRCUIT - 0) * 3.95296855266446;
MPRINT(EM_DIAGRAM):   *** Standardize CLIENT ;
MPRINT(EM_DIAGRAM):   drop T_CLIENT ;
MPRINT(EM_DIAGRAM):   if missing( CLIENT ) then T_CLIENT = .;
MPRINT(EM_DIAGRAM):   else T_CLIENT = (CLIENT - 0) * 3.56978003030981;
MPRINT(EM_DIAGRAM):   *** Standardize CODE ;
MPRINT(EM_DIAGRAM):   drop T_CODE ;
MPRINT(EM_DIAGRAM):   if missing( CODE ) then T_CODE = .;
MPRINT(EM_DIAGRAM):   else T_CODE = (CODE - 0) * 3.98645548043578;
MPRINT(EM_DIAGRAM):   *** Standardize COLOR ;
MPRINT(EM_DIAGRAM):   drop T_COLOR ;
MPRINT(EM_DIAGRAM):   if missing( COLOR ) then T_COLOR = .;
MPRINT(EM_DIAGRAM):   else T_COLOR = (COLOR - 0) * 2.27872473230825;
MPRINT(EM_DIAGRAM):   *** Standardize COMMUN ;
MPRINT(EM_DIAGRAM):   drop T_COMMUN ;
MPRINT(EM_DIAGRAM):   if missing( COMMUN ) then T_COMMUN = .;
MPRINT(EM_DIAGRAM):   else T_COMMUN = (COMMUN - 0) * 6.34525155997964;
MPRINT(EM_DIAGRAM):   *** Standardize COMP ;
MPRINT(EM_DIAGRAM):   drop T_COMP ;
MPRINT(EM_DIAGRAM):   if missing( COMP ) then T_COMP = .;
MPRINT(EM_DIAGRAM):   else T_COMP = (COMP - 0) * 4.34484145200034;
MPRINT(EM_DIAGRAM):   *** Standardize COMPANI ;
MPRINT(EM_DIAGRAM):   drop T_COMPANI ;
MPRINT(EM_DIAGRAM):   if missing( COMPANI ) then T_COMPANI = .;
MPRINT(EM_DIAGRAM):   else T_COMPANI = (COMPANI - 0) * 4.4440297471331;
MPRINT(EM_DIAGRAM):   *** Standardize COMPIL ;
MPRINT(EM_DIAGRAM):   drop T_COMPIL ;
MPRINT(EM_DIAGRAM):   if missing( COMPIL ) then T_COMPIL = .;
MPRINT(EM_DIAGRAM):   else T_COMPIL = (COMPIL - 0) * 2.21826483650506;
MPRINT(EM_DIAGRAM):   *** Standardize COMPUT ;
MPRINT(EM_DIAGRAM):   drop T_COMPUT ;
MPRINT(EM_DIAGRAM):   if missing( COMPUT ) then T_COMPUT = .;
MPRINT(EM_DIAGRAM):   else T_COMPUT = (COMPUT - 0) * 5.40785388374868;
MPRINT(EM_DIAGRAM):   *** Standardize CONNECT ;
MPRINT(EM_DIAGRAM):   drop T_CONNECT ;
MPRINT(EM_DIAGRAM):   if missing( CONNECT ) then T_CONNECT = .;
MPRINT(EM_DIAGRAM):   else T_CONNECT = (CONNECT - 0) * 4.63257715030811;
MPRINT(EM_DIAGRAM):   *** Standardize CONTROL ;
MPRINT(EM_DIAGRAM):   drop T_CONTROL ;
MPRINT(EM_DIAGRAM):   if missing( CONTROL ) then T_CONTROL = .;
MPRINT(EM_DIAGRAM):   else T_CONTROL = (CONTROL - 0) * 6.21979205590598;
MPRINT(EM_DIAGRAM):   *** Standardize COPI ;
MPRINT(EM_DIAGRAM):   drop T_COPI ;
MPRINT(EM_DIAGRAM):   if missing( COPI ) then T_COPI = .;
MPRINT(EM_DIAGRAM):   else T_COPI = (COPI - 0) * 3.62407904166108;
MPRINT(EM_DIAGRAM):   *** Standardize CORRECT ;
MPRINT(EM_DIAGRAM):   drop T_CORRECT ;
MPRINT(EM_DIAGRAM):   if missing( CORRECT ) then T_CORRECT = .;
MPRINT(EM_DIAGRAM):   else T_CORRECT = (CORRECT - 0) * 4.41662116784113;
MPRINT(EM_DIAGRAM):   *** Standardize CREAT ;
MPRINT(EM_DIAGRAM):   drop T_CREAT ;
MPRINT(EM_DIAGRAM):   if missing( CREAT ) then T_CREAT = .;
MPRINT(EM_DIAGRAM):   else T_CREAT = (CREAT - 0) * 6.18435445164465;
MPRINT(EM_DIAGRAM):   *** Standardize CURRENT ;
MPRINT(EM_DIAGRAM):   drop T_CURRENT ;
MPRINT(EM_DIAGRAM):   if missing( CURRENT ) then T_CURRENT = .;
MPRINT(EM_DIAGRAM):   else T_CURRENT = (CURRENT - 0) * 4.80677628507551;
MPRINT(EM_DIAGRAM):   *** Standardize DAI ;
MPRINT(EM_DIAGRAM):   drop T_DAI ;
MPRINT(EM_DIAGRAM):   if missing( DAI ) then T_DAI = .;
MPRINT(EM_DIAGRAM):   else T_DAI = (DAI - 0) * 3.872164787462;
MPRINT(EM_DIAGRAM):   *** Standardize DATA ;
MPRINT(EM_DIAGRAM):   drop T_DATA ;
MPRINT(EM_DIAGRAM):   if missing( DATA ) then T_DATA = .;
MPRINT(EM_DIAGRAM):   else T_DATA = (DATA - 0) * 3.37502336487597;
MPRINT(EM_DIAGRAM):   *** Standardize DAVID ;
MPRINT(EM_DIAGRAM):   drop T_DAVID ;
MPRINT(EM_DIAGRAM):   if missing( DAVID ) then T_DAVID = .;
MPRINT(EM_DIAGRAM):   else T_DAVID = (DAVID - 0) * 4.28651996609655;
MPRINT(EM_DIAGRAM):   *** Standardize DEPART ;
MPRINT(EM_DIAGRAM):   drop T_DEPART ;
MPRINT(EM_DIAGRAM):   if missing( DEPART ) then T_DEPART = .;
MPRINT(EM_DIAGRAM):   else T_DEPART = (DEPART - 0) * 7.50475429483073;
MPRINT(EM_DIAGRAM):   *** Standardize DEPT ;
MPRINT(EM_DIAGRAM):   drop T_DEPT ;
MPRINT(EM_DIAGRAM):   if missing( DEPT ) then T_DEPT = .;
MPRINT(EM_DIAGRAM):   else T_DEPT = (DEPT - 0) * 6.56911162004866;
MPRINT(EM_DIAGRAM):   *** Standardize DESIGN ;
MPRINT(EM_DIAGRAM):   drop T_DESIGN ;
MPRINT(EM_DIAGRAM):   if missing( DESIGN ) then T_DESIGN = .;
MPRINT(EM_DIAGRAM):   else T_DESIGN = (DESIGN - 0) * 2.94441411189408;
MPRINT(EM_DIAGRAM):   *** Standardize DETECTOR ;
MPRINT(EM_DIAGRAM):   drop T_DETECTOR ;
MPRINT(EM_DIAGRAM):   if missing( DETECTOR ) then T_DETECTOR = .;
MPRINT(EM_DIAGRAM):   else T_DETECTOR = (DETECTOR - 0) * 1.08709270349317;
MPRINT(EM_DIAGRAM):   *** Standardize DEVIC ;
MPRINT(EM_DIAGRAM):   drop T_DEVIC ;
MPRINT(EM_DIAGRAM):   if missing( DEVIC ) then T_DEVIC = .;
MPRINT(EM_DIAGRAM):   else T_DEVIC = (DEVIC - 0) * 4.67205735821466;
MPRINT(EM_DIAGRAM):   *** Standardize DISEAS ;
MPRINT(EM_DIAGRAM):   drop T_DISEAS ;
MPRINT(EM_DIAGRAM):   if missing( DISEAS ) then T_DISEAS = .;
MPRINT(EM_DIAGRAM):   else T_DISEAS = (DISEAS - 0) * 3.32887979826876;
MPRINT(EM_DIAGRAM):   *** Standardize DISPLAI ;
MPRINT(EM_DIAGRAM):   drop T_DISPLAI ;
MPRINT(EM_DIAGRAM):   if missing( DISPLAI ) then T_DISPLAI = .;
MPRINT(EM_DIAGRAM):   else T_DISPLAI = (DISPLAI - 0) * 3.78752765238273;
MPRINT(EM_DIAGRAM):   *** Standardize DISTRIBUT ;
MPRINT(EM_DIAGRAM):   drop T_DISTRIBUT ;
MPRINT(EM_DIAGRAM):   if missing( DISTRIBUT ) then T_DISTRIBUT = .;
MPRINT(EM_DIAGRAM):   else T_DISTRIBUT = (DISTRIBUT - 0) * 7.05552574600035;
MPRINT(EM_DIAGRAM):   *** Standardize DOCTOR ;
MPRINT(EM_DIAGRAM):   drop T_DOCTOR ;
MPRINT(EM_DIAGRAM):   if missing( DOCTOR ) then T_DOCTOR = .;
MPRINT(EM_DIAGRAM):   else T_DOCTOR = (DOCTOR - 0) * 3.29683080963783;
MPRINT(EM_DIAGRAM):   *** Standardize DOESN ;
MPRINT(EM_DIAGRAM):   drop T_DOESN ;
MPRINT(EM_DIAGRAM):   if missing( DOESN ) then T_DOESN = .;
MPRINT(EM_DIAGRAM):   else T_DOESN = (DOESN - 0) * 6.48645082745116;
MPRINT(EM_DIAGRAM):   *** Standardize DON ;
MPRINT(EM_DIAGRAM):   drop T_DON ;
MPRINT(EM_DIAGRAM):   if missing( DON ) then T_DON = .;
MPRINT(EM_DIAGRAM):   else T_DON = (DON - 0) * 8.24380917430803;
MPRINT(EM_DIAGRAM):   *** Standardize DRAW ;
MPRINT(EM_DIAGRAM):   drop T_DRAW ;
MPRINT(EM_DIAGRAM):   if missing( DRAW ) then T_DRAW = .;
MPRINT(EM_DIAGRAM):   else T_DRAW = (DRAW - 0) * 2.92669701852183;
MPRINT(EM_DIAGRAM):   *** Standardize DRIVE ;
MPRINT(EM_DIAGRAM):   drop T_DRIVE ;
MPRINT(EM_DIAGRAM):   if missing( DRIVE ) then T_DRIVE = .;
MPRINT(EM_DIAGRAM):   else T_DRIVE = (DRIVE - 0) * 3.04563267369848;
MPRINT(EM_DIAGRAM):   *** Standardize DRUG ;
MPRINT(EM_DIAGRAM):   drop T_DRUG ;
MPRINT(EM_DIAGRAM):   if missing( DRUG ) then T_DRUG = .;
MPRINT(EM_DIAGRAM):   else T_DRUG = (DRUG - 0) * 3.37780479528133;
MPRINT(EM_DIAGRAM):   *** Standardize EDU ;
MPRINT(EM_DIAGRAM):   drop T_EDU ;
MPRINT(EM_DIAGRAM):   if missing( EDU ) then T_EDU = .;
MPRINT(EM_DIAGRAM):   else T_EDU = (EDU - 0) * 4.62191604150833;
MPRINT(EM_DIAGRAM):   *** Standardize EFFECT ;
MPRINT(EM_DIAGRAM):   drop T_EFFECT ;
MPRINT(EM_DIAGRAM):   if missing( EFFECT ) then T_EFFECT = .;
MPRINT(EM_DIAGRAM):   else T_EFFECT = (EFFECT - 0) * 2.59618812249216;
MPRINT(EM_DIAGRAM):   *** Standardize ELECTR ;
MPRINT(EM_DIAGRAM):   drop T_ELECTR ;
MPRINT(EM_DIAGRAM):   if missing( ELECTR ) then T_ELECTR = .;
MPRINT(EM_DIAGRAM):   else T_ELECTR = (ELECTR - 0) * 4.4458951495204;
MPRINT(EM_DIAGRAM):   *** Standardize ELECTRON ;
MPRINT(EM_DIAGRAM):   drop T_ELECTRON ;
MPRINT(EM_DIAGRAM):   if missing( ELECTRON ) then T_ELECTRON = .;
MPRINT(EM_DIAGRAM):   else T_ELECTRON = (ELECTRON - 0) * 2.0191870692385;
MPRINT(EM_DIAGRAM):   *** Standardize EMAIL ;
MPRINT(EM_DIAGRAM):   drop T_EMAIL ;
MPRINT(EM_DIAGRAM):   if missing( EMAIL ) then T_EMAIL = .;
MPRINT(EM_DIAGRAM):   else T_EMAIL = (EMAIL - 0) * 4.76322980481312;
MPRINT(EM_DIAGRAM):   *** Standardize ENGIN ;
MPRINT(EM_DIAGRAM):   drop T_ENGIN ;
MPRINT(EM_DIAGRAM):   if missing( ENGIN ) then T_ENGIN = .;
MPRINT(EM_DIAGRAM):   else T_ENGIN = (ENGIN - 0) * 6.75667225857073;
MPRINT(EM_DIAGRAM):   *** Standardize ERROR ;
MPRINT(EM_DIAGRAM):   drop T_ERROR ;
MPRINT(EM_DIAGRAM):   if missing( ERROR ) then T_ERROR = .;
MPRINT(EM_DIAGRAM):   else T_ERROR = (ERROR - 0) * 3.50448704639361;
MPRINT(EM_DIAGRAM):   *** Standardize EVENT ;
MPRINT(EM_DIAGRAM):   drop T_EVENT ;
MPRINT(EM_DIAGRAM):   if missing( EVENT ) then T_EVENT = .;
MPRINT(EM_DIAGRAM):   else T_EVENT = (EVENT - 0) * 2.77897384146163;
MPRINT(EM_DIAGRAM):   *** Standardize EXPERI ;
MPRINT(EM_DIAGRAM):   drop T_EXPERI ;
MPRINT(EM_DIAGRAM):   if missing( EXPERI ) then T_EXPERI = .;
MPRINT(EM_DIAGRAM):   else T_EXPERI = (EXPERI - 0) * 5.77101579726576;
MPRINT(EM_DIAGRAM):   *** Standardize FACT ;
MPRINT(EM_DIAGRAM):   drop T_FACT ;
MPRINT(EM_DIAGRAM):   if missing( FACT ) then T_FACT = .;
MPRINT(EM_DIAGRAM):   else T_FACT = (FACT - 0) * 10.9555206018458;
MPRINT(EM_DIAGRAM):   *** Standardize FAX ;
MPRINT(EM_DIAGRAM):   drop T_FAX ;
MPRINT(EM_DIAGRAM):   if missing( FAX ) then T_FAX = .;
MPRINT(EM_DIAGRAM):   else T_FAX = (FAX - 0) * 8.47991264225496;
MPRINT(EM_DIAGRAM):   *** Standardize FEEL ;
MPRINT(EM_DIAGRAM):   drop T_FEEL ;
MPRINT(EM_DIAGRAM):   if missing( FEEL ) then T_FEEL = .;
MPRINT(EM_DIAGRAM):   else T_FEEL = (FEEL - 0) * 5.75411054232057;
MPRINT(EM_DIAGRAM):   *** Standardize FILE ;
MPRINT(EM_DIAGRAM):   drop T_FILE ;
MPRINT(EM_DIAGRAM):   if missing( FILE ) then T_FILE = .;
MPRINT(EM_DIAGRAM):   else T_FILE = (FILE - 0) * 2.35197598797465;
MPRINT(EM_DIAGRAM):   *** Standardize FIND ;
MPRINT(EM_DIAGRAM):   drop T_FIND ;
MPRINT(EM_DIAGRAM):   if missing( FIND ) then T_FIND = .;
MPRINT(EM_DIAGRAM):   else T_FIND = (FIND - 0) * 5.8118481131623;
MPRINT(EM_DIAGRAM):   *** Standardize FOLLOWUP ;
MPRINT(EM_DIAGRAM):   drop T_FOLLOWUP ;
MPRINT(EM_DIAGRAM):   if missing( FOLLOWUP ) then T_FOLLOWUP = .;
MPRINT(EM_DIAGRAM):   else T_FOLLOWUP = (FOLLOWUP - 0) * 4.68706321386279;
MPRINT(EM_DIAGRAM):   *** Standardize FONT ;
MPRINT(EM_DIAGRAM):   drop T_FONT ;
MPRINT(EM_DIAGRAM):   if missing( FONT ) then T_FONT = .;
MPRINT(EM_DIAGRAM):   else T_FONT = (FONT - 0) * 1.58271039864806;
MPRINT(EM_DIAGRAM):   *** Standardize FOOD ;
MPRINT(EM_DIAGRAM):   drop T_FOOD ;
MPRINT(EM_DIAGRAM):   if missing( FOOD ) then T_FOOD = .;
MPRINT(EM_DIAGRAM):   else T_FOOD = (FOOD - 0) * 2.99578204227638;
MPRINT(EM_DIAGRAM):   *** Standardize FRI ;
MPRINT(EM_DIAGRAM):   drop T_FRI ;
MPRINT(EM_DIAGRAM):   if missing( FRI ) then T_FRI = .;
MPRINT(EM_DIAGRAM):   else T_FRI = (FRI - 0) * 5.88152841773181;
MPRINT(EM_DIAGRAM):   *** Standardize FRIEND ;
MPRINT(EM_DIAGRAM):   drop T_FRIEND ;
MPRINT(EM_DIAGRAM):   if missing( FRIEND ) then T_FRIEND = .;
MPRINT(EM_DIAGRAM):   else T_FRIEND = (FRIEND - 0) * 4.35877836047294;
MPRINT(EM_DIAGRAM):   *** Standardize FUNCTION ;
MPRINT(EM_DIAGRAM):   drop T_FUNCTION ;
MPRINT(EM_DIAGRAM):   if missing( FUNCTION ) then T_FUNCTION = .;
MPRINT(EM_DIAGRAM):   else T_FUNCTION = (FUNCTION - 0) * 5.1173689858046;
MPRINT(EM_DIAGRAM):   *** Standardize GEB ;
MPRINT(EM_DIAGRAM):   drop T_GEB ;
MPRINT(EM_DIAGRAM):   if missing( GEB ) then T_GEB = .;
MPRINT(EM_DIAGRAM):   else T_GEB = (GEB - 0) * 4.73177524728255;
MPRINT(EM_DIAGRAM):   *** Standardize GENER ;
MPRINT(EM_DIAGRAM):   drop T_GENER ;
MPRINT(EM_DIAGRAM):   if missing( GENER ) then T_GENER = .;
MPRINT(EM_DIAGRAM):   else T_GENER = (GENER - 0) * 7.41141655455616;
MPRINT(EM_DIAGRAM):   *** Standardize GEORGIA ;
MPRINT(EM_DIAGRAM):   drop T_GEORGIA ;
MPRINT(EM_DIAGRAM):   if missing( GEORGIA ) then T_GEORGIA = .;
MPRINT(EM_DIAGRAM):   else T_GEORGIA = (GEORGIA - 0) * 1.83117424586408;
MPRINT(EM_DIAGRAM):   *** Standardize GIVE ;
MPRINT(EM_DIAGRAM):   drop T_GIVE ;
MPRINT(EM_DIAGRAM):   if missing( GIVE ) then T_GIVE = .;
MPRINT(EM_DIAGRAM):   else T_GIVE = (GIVE - 0) * 5.12000735632698;
MPRINT(EM_DIAGRAM):   *** Standardize GOOD ;
MPRINT(EM_DIAGRAM):   drop T_GOOD ;
MPRINT(EM_DIAGRAM):   if missing( GOOD ) then T_GOOD = .;
MPRINT(EM_DIAGRAM):   else T_GOOD = (GOOD - 0) * 7.84845177981592;
MPRINT(EM_DIAGRAM):   *** Standardize GORDON ;
MPRINT(EM_DIAGRAM):   drop T_GORDON ;
MPRINT(EM_DIAGRAM):   if missing( GORDON ) then T_GORDON = .;
MPRINT(EM_DIAGRAM):   else T_GORDON = (GORDON - 0) * 3.47234244923162;
MPRINT(EM_DIAGRAM):   *** Standardize GOVERN ;
MPRINT(EM_DIAGRAM):   drop T_GOVERN ;
MPRINT(EM_DIAGRAM):   if missing( GOVERN ) then T_GOVERN = .;
MPRINT(EM_DIAGRAM):   else T_GOVERN = (GOVERN - 0) * 6.97158293696036;
MPRINT(EM_DIAGRAM):   *** Standardize GRAPHIC ;
MPRINT(EM_DIAGRAM):   drop T_GRAPHIC ;
MPRINT(EM_DIAGRAM):   if missing( GRAPHIC ) then T_GRAPHIC = .;
MPRINT(EM_DIAGRAM):   else T_GRAPHIC = (GRAPHIC - 0) * 1.85199926810442;
MPRINT(EM_DIAGRAM):   *** Standardize GREAT ;
MPRINT(EM_DIAGRAM):   drop T_GREAT ;
MPRINT(EM_DIAGRAM):   if missing( GREAT ) then T_GREAT = .;
MPRINT(EM_DIAGRAM):   else T_GREAT = (GREAT - 0) * 5.17931019849811;
MPRINT(EM_DIAGRAM):   *** Standardize GREEK ;
MPRINT(EM_DIAGRAM):   drop T_GREEK ;
MPRINT(EM_DIAGRAM):   if missing( GREEK ) then T_GREEK = .;
MPRINT(EM_DIAGRAM):   else T_GREEK = (GREEK - 0) * 3.01306399653486;
MPRINT(EM_DIAGRAM):   *** Standardize GROUND ;
MPRINT(EM_DIAGRAM):   drop T_GROUND ;
MPRINT(EM_DIAGRAM):   if missing( GROUND ) then T_GROUND = .;
MPRINT(EM_DIAGRAM):   else T_GROUND = (GROUND - 0) * 1.78910822919951;
MPRINT(EM_DIAGRAM):   *** Standardize GROUP ;
MPRINT(EM_DIAGRAM):   drop T_GROUP ;
MPRINT(EM_DIAGRAM):   if missing( GROUP ) then T_GROUP = .;
MPRINT(EM_DIAGRAM):   else T_GROUP = (GROUP - 0) * 3.99942378943969;
MPRINT(EM_DIAGRAM):   *** Standardize HAPPEN ;
MPRINT(EM_DIAGRAM):   drop T_HAPPEN ;
MPRINT(EM_DIAGRAM):   if missing( HAPPEN ) then T_HAPPEN = .;
MPRINT(EM_DIAGRAM):   else T_HAPPEN = (HAPPEN - 0) * 7.3099533432033;
MPRINT(EM_DIAGRAM):   *** Standardize HEAR ;
MPRINT(EM_DIAGRAM):   drop T_HEAR ;
MPRINT(EM_DIAGRAM):   if missing( HEAR ) then T_HEAR = .;
MPRINT(EM_DIAGRAM):   else T_HEAR = (HEAR - 0) * 4.9256523149998;
MPRINT(EM_DIAGRAM):   *** Standardize HIGH ;
MPRINT(EM_DIAGRAM):   drop T_HIGH ;
MPRINT(EM_DIAGRAM):   if missing( HIGH ) then T_HIGH = .;
MPRINT(EM_DIAGRAM):   else T_HIGH = (HIGH - 0) * 3.6198859665534;
MPRINT(EM_DIAGRAM):   *** Standardize HOME ;
MPRINT(EM_DIAGRAM):   drop T_HOME ;
MPRINT(EM_DIAGRAM):   if missing( HOME ) then T_HOME = .;
MPRINT(EM_DIAGRAM):   else T_HOME = (HOME - 0) * 5.20343485840704;
MPRINT(EM_DIAGRAM):   *** Standardize IDEA ;
MPRINT(EM_DIAGRAM):   drop T_IDEA ;
MPRINT(EM_DIAGRAM):   if missing( IDEA ) then T_IDEA = .;
MPRINT(EM_DIAGRAM):   else T_IDEA = (IDEA - 0) * 3.87827996932545;
MPRINT(EM_DIAGRAM):   *** Standardize IMAG ;
MPRINT(EM_DIAGRAM):   drop T_IMAG ;
MPRINT(EM_DIAGRAM):   if missing( IMAG ) then T_IMAG = .;
MPRINT(EM_DIAGRAM):   else T_IMAG = (IMAG - 0) * 3.63138175350257;
MPRINT(EM_DIAGRAM):   *** Standardize INCLUD ;
MPRINT(EM_DIAGRAM):   drop T_INCLUD ;
MPRINT(EM_DIAGRAM):   if missing( INCLUD ) then T_INCLUD = .;
MPRINT(EM_DIAGRAM):   else T_INCLUD = (INCLUD - 0) * 7.45287218604392;
MPRINT(EM_DIAGRAM):   *** Standardize INFO ;
MPRINT(EM_DIAGRAM):   drop T_INFO ;
MPRINT(EM_DIAGRAM):   if missing( INFO ) then T_INFO = .;
MPRINT(EM_DIAGRAM):   else T_INFO = (INFO - 0) * 2.43990942670609;
MPRINT(EM_DIAGRAM):   *** Standardize INFORM ;
MPRINT(EM_DIAGRAM):   drop T_INFORM ;
MPRINT(EM_DIAGRAM):   if missing( INFORM ) then T_INFORM = .;
MPRINT(EM_DIAGRAM):   else T_INFORM = (INFORM - 0) * 4.30231113990862;
MPRINT(EM_DIAGRAM):   *** Standardize INPUT ;
MPRINT(EM_DIAGRAM):   drop T_INPUT ;
MPRINT(EM_DIAGRAM):   if missing( INPUT ) then T_INPUT = .;
MPRINT(EM_DIAGRAM):   else T_INPUT = (INPUT - 0) * 3.34038456253531;
MPRINT(EM_DIAGRAM):   *** Standardize INSTITUT ;
MPRINT(EM_DIAGRAM):   drop T_INSTITUT ;
MPRINT(EM_DIAGRAM):   if missing( INSTITUT ) then T_INSTITUT = .;
MPRINT(EM_DIAGRAM):   else T_INSTITUT = (INSTITUT - 0) * 3.1608756439435;
MPRINT(EM_DIAGRAM):   *** Standardize INTEREST ;
MPRINT(EM_DIAGRAM):   drop T_INTEREST ;
MPRINT(EM_DIAGRAM):   if missing( INTEREST ) then T_INTEREST = .;
MPRINT(EM_DIAGRAM):   else T_INTEREST = (INTEREST - 0) * 5.51854784066428;
MPRINT(EM_DIAGRAM):   *** Standardize INTERNET ;
MPRINT(EM_DIAGRAM):   drop T_INTERNET ;
MPRINT(EM_DIAGRAM):   if missing( INTERNET ) then T_INTERNET = .;
MPRINT(EM_DIAGRAM):   else T_INTERNET = (INTERNET - 0) * 1.88889117212133;
MPRINT(EM_DIAGRAM):   *** Standardize ISRA ;
MPRINT(EM_DIAGRAM):   drop T_ISRA ;
MPRINT(EM_DIAGRAM):   if missing( ISRA ) then T_ISRA = .;
MPRINT(EM_DIAGRAM):   else T_ISRA = (ISRA - 0) * 2.93382132882602;
MPRINT(EM_DIAGRAM):   *** Standardize ISRAEL ;
MPRINT(EM_DIAGRAM):   drop T_ISRAEL ;
MPRINT(EM_DIAGRAM):   if missing( ISRAEL ) then T_ISRAEL = .;
MPRINT(EM_DIAGRAM):   else T_ISRAEL = (ISRAEL - 0) * 3.39785495462447;
MPRINT(EM_DIAGRAM):   *** Standardize JEW ;
MPRINT(EM_DIAGRAM):   drop T_JEW ;
MPRINT(EM_DIAGRAM):   if missing( JEW ) then T_JEW = .;
MPRINT(EM_DIAGRAM):   else T_JEW = (JEW - 0) * 3.14491364076581;
MPRINT(EM_DIAGRAM):   *** Standardize JEWISH ;
MPRINT(EM_DIAGRAM):   drop T_JEWISH ;
MPRINT(EM_DIAGRAM):   if missing( JEWISH ) then T_JEWISH = .;
MPRINT(EM_DIAGRAM):   else T_JEWISH = (JEWISH - 0) * 5.92217056150352;
MPRINT(EM_DIAGRAM):   *** Standardize JOHN ;
MPRINT(EM_DIAGRAM):   drop T_JOHN ;
MPRINT(EM_DIAGRAM):   if missing( JOHN ) then T_JOHN = .;
MPRINT(EM_DIAGRAM):   else T_JOHN = (JOHN - 0) * 3.59085427385425;
MPRINT(EM_DIAGRAM):   *** Standardize KEYBOARD ;
MPRINT(EM_DIAGRAM):   drop T_KEYBOARD ;
MPRINT(EM_DIAGRAM):   if missing( KEYBOARD ) then T_KEYBOARD = .;
MPRINT(EM_DIAGRAM):   else T_KEYBOARD = (KEYBOARD - 0) * 1.43127982922717;
MPRINT(EM_DIAGRAM):   *** Standardize KEYWORD ;
MPRINT(EM_DIAGRAM):   drop T_KEYWORD ;
MPRINT(EM_DIAGRAM):   if missing( KEYWORD ) then T_KEYWORD = .;
MPRINT(EM_DIAGRAM):   else T_KEYWORD = (KEYWORD - 0) * 5.02226940309122;
MPRINT(EM_DIAGRAM):   *** Standardize KILL ;
MPRINT(EM_DIAGRAM):   drop T_KILL ;
MPRINT(EM_DIAGRAM):   if missing( KILL ) then T_KILL = .;
MPRINT(EM_DIAGRAM):   else T_KILL = (KILL - 0) * 4.07596293417053;
MPRINT(EM_DIAGRAM):   *** Standardize KIND ;
MPRINT(EM_DIAGRAM):   drop T_KIND ;
MPRINT(EM_DIAGRAM):   if missing( KIND ) then T_KIND = .;
MPRINT(EM_DIAGRAM):   else T_KIND = (KIND - 0) * 5.00154702429699;
MPRINT(EM_DIAGRAM):   *** Standardize LEVEL ;
MPRINT(EM_DIAGRAM):   drop T_LEVEL ;
MPRINT(EM_DIAGRAM):   if missing( LEVEL ) then T_LEVEL = .;
MPRINT(EM_DIAGRAM):   else T_LEVEL = (LEVEL - 0) * 3.79255144404833;
MPRINT(EM_DIAGRAM):   *** Standardize LIST ;
MPRINT(EM_DIAGRAM):   drop T_LIST ;
MPRINT(EM_DIAGRAM):   if missing( LIST ) then T_LIST = .;
MPRINT(EM_DIAGRAM):   else T_LIST = (LIST - 0) * 3.01527314406741;
MPRINT(EM_DIAGRAM):   *** Standardize LIVE ;
MPRINT(EM_DIAGRAM):   drop T_LIVE ;
MPRINT(EM_DIAGRAM):   if missing( LIVE ) then T_LIVE = .;
MPRINT(EM_DIAGRAM):   else T_LIVE = (LIVE - 0) * 5.54620113841454;
MPRINT(EM_DIAGRAM):   *** Standardize LONG ;
MPRINT(EM_DIAGRAM):   drop T_LONG ;
MPRINT(EM_DIAGRAM):   if missing( LONG ) then T_LONG = .;
MPRINT(EM_DIAGRAM):   else T_LONG = (LONG - 0) * 4.19939497891168;
MPRINT(EM_DIAGRAM):   *** Standardize MACHIN ;
MPRINT(EM_DIAGRAM):   drop T_MACHIN ;
MPRINT(EM_DIAGRAM):   if missing( MACHIN ) then T_MACHIN = .;
MPRINT(EM_DIAGRAM):   else T_MACHIN = (MACHIN - 0) * 4.78877337764077;
MPRINT(EM_DIAGRAM):   *** Standardize MAIL ;
MPRINT(EM_DIAGRAM):   drop T_MAIL ;
MPRINT(EM_DIAGRAM):   if missing( MAIL ) then T_MAIL = .;
MPRINT(EM_DIAGRAM):   else T_MAIL = (MAIL - 0) * 3.59372355302247;
MPRINT(EM_DIAGRAM):   *** Standardize MANAG ;
MPRINT(EM_DIAGRAM):   drop T_MANAG ;
MPRINT(EM_DIAGRAM):   if missing( MANAG ) then T_MANAG = .;
MPRINT(EM_DIAGRAM):   else T_MANAG = (MANAG - 0) * 3.76132037636571;
MPRINT(EM_DIAGRAM):   *** Standardize MARK ;
MPRINT(EM_DIAGRAM):   drop T_MARK ;
MPRINT(EM_DIAGRAM):   if missing( MARK ) then T_MARK = .;
MPRINT(EM_DIAGRAM):   else T_MARK = (MARK - 0) * 3.0438061756493;
MPRINT(EM_DIAGRAM):   *** Standardize MED ;
MPRINT(EM_DIAGRAM):   drop T_MED ;
MPRINT(EM_DIAGRAM):   if missing( MED ) then T_MED = .;
MPRINT(EM_DIAGRAM):   else T_MED = (MED - 0) * 9.37751776577826;
MPRINT(EM_DIAGRAM):   *** Standardize MEDIC ;
MPRINT(EM_DIAGRAM):   drop T_MEDIC ;
MPRINT(EM_DIAGRAM):   if missing( MEDIC ) then T_MEDIC = .;
MPRINT(EM_DIAGRAM):   else T_MEDIC = (MEDIC - 0) * 5.50007463226141;
MPRINT(EM_DIAGRAM):   *** Standardize MEDICIN ;
MPRINT(EM_DIAGRAM):   drop T_MEDICIN ;
MPRINT(EM_DIAGRAM):   if missing( MEDICIN ) then T_MEDICIN = .;
MPRINT(EM_DIAGRAM):   else T_MEDICIN = (MEDICIN - 0) * 3.69632394160673;
MPRINT(EM_DIAGRAM):   *** Standardize MEMORI ;
MPRINT(EM_DIAGRAM):   drop T_MEMORI ;
MPRINT(EM_DIAGRAM):   if missing( MEMORI ) then T_MEMORI = .;
MPRINT(EM_DIAGRAM):   else T_MEMORI = (MEMORI - 0) * 3.08243006790177;
MPRINT(EM_DIAGRAM):   *** Standardize MICHAEL ;
MPRINT(EM_DIAGRAM):   drop T_MICHAEL ;
MPRINT(EM_DIAGRAM):   if missing( MICHAEL ) then T_MICHAEL = .;
MPRINT(EM_DIAGRAM):   else T_MICHAEL = (MICHAEL - 0) * 2.376254304054;
MPRINT(EM_DIAGRAM):   *** Standardize MIKE ;
MPRINT(EM_DIAGRAM):   drop T_MIKE ;
MPRINT(EM_DIAGRAM):   if missing( MIKE ) then T_MIKE = .;
MPRINT(EM_DIAGRAM):   else T_MIKE = (MIKE - 0) * 1.86275620709937;
MPRINT(EM_DIAGRAM):   *** Standardize MON ;
MPRINT(EM_DIAGRAM):   drop T_MON ;
MPRINT(EM_DIAGRAM):   if missing( MON ) then T_MON = .;
MPRINT(EM_DIAGRAM):   else T_MON = (MON - 0) * 3.11461914988643;
MPRINT(EM_DIAGRAM):   *** Standardize MOTIF ;
MPRINT(EM_DIAGRAM):   drop T_MOTIF ;
MPRINT(EM_DIAGRAM):   if missing( MOTIF ) then T_MOTIF = .;
MPRINT(EM_DIAGRAM):   else T_MOTIF = (MOTIF - 0) * 1.77833146496822;
MPRINT(EM_DIAGRAM):   *** Standardize MOTOROLA ;
MPRINT(EM_DIAGRAM):   drop T_MOTOROLA ;
MPRINT(EM_DIAGRAM):   if missing( MOTOROLA ) then T_MOTOROLA = .;
MPRINT(EM_DIAGRAM):   else T_MOTOROLA = (MOTOROLA - 0) * 2.9016104519679;
MPRINT(EM_DIAGRAM):   *** Standardize NATION ;
MPRINT(EM_DIAGRAM):   drop T_NATION ;
MPRINT(EM_DIAGRAM):   if missing( NATION ) then T_NATION = .;
MPRINT(EM_DIAGRAM):   else T_NATION = (NATION - 0) * 4.71969762486743;
MPRINT(EM_DIAGRAM):   *** Standardize NETWORK ;
MPRINT(EM_DIAGRAM):   drop T_NETWORK ;
MPRINT(EM_DIAGRAM):   if missing( NETWORK ) then T_NETWORK = .;
MPRINT(EM_DIAGRAM):   else T_NETWORK = (NETWORK - 0) * 4.22356430684241;
MPRINT(EM_DIAGRAM):   *** Standardize NEW ;
MPRINT(EM_DIAGRAM):   drop T_NEW ;
MPRINT(EM_DIAGRAM):   if missing( NEW ) then T_NEW = .;
MPRINT(EM_DIAGRAM):   else T_NEW = (NEW - 0) * 5.28609191862929;
MPRINT(EM_DIAGRAM):   *** Standardize NEWS ;
MPRINT(EM_DIAGRAM):   drop T_NEWS ;
MPRINT(EM_DIAGRAM):   if missing( NEWS ) then T_NEWS = .;
MPRINT(EM_DIAGRAM):   else T_NEWS = (NEWS - 0) * 6.63244786409493;
MPRINT(EM_DIAGRAM):   *** Standardize NEWSREAD ;
MPRINT(EM_DIAGRAM):   drop T_NEWSREAD ;
MPRINT(EM_DIAGRAM):   if missing( NEWSREAD ) then T_NEWSREAD = .;
MPRINT(EM_DIAGRAM):   else T_NEWSREAD = (NEWSREAD - 0) * 5.31710677495046;
MPRINT(EM_DIAGRAM):   *** Standardize NOIS ;
MPRINT(EM_DIAGRAM):   drop T_NOIS ;
MPRINT(EM_DIAGRAM):   if missing( NOIS ) then T_NOIS = .;
MPRINT(EM_DIAGRAM):   else T_NOIS = (NOIS - 0) * 2.08482728145691;
MPRINT(EM_DIAGRAM):   *** Standardize NUMBER ;
MPRINT(EM_DIAGRAM):   drop T_NUMBER ;
MPRINT(EM_DIAGRAM):   if missing( NUMBER ) then T_NUMBER = .;
MPRINT(EM_DIAGRAM):   else T_NUMBER = (NUMBER - 0) * 3.36789722047143;
MPRINT(EM_DIAGRAM):   *** Standardize OPER ;
MPRINT(EM_DIAGRAM):   drop T_OPER ;
MPRINT(EM_DIAGRAM):   if missing( OPER ) then T_OPER = .;
MPRINT(EM_DIAGRAM):   else T_OPER = (OPER - 0) * 4.43940874156981;
MPRINT(EM_DIAGRAM):   *** Standardize OPINION ;
MPRINT(EM_DIAGRAM):   drop T_OPINION ;
MPRINT(EM_DIAGRAM):   if missing( OPINION ) then T_OPINION = .;
MPRINT(EM_DIAGRAM):   else T_OPINION = (OPINION - 0) * 6.49554772318911;
MPRINT(EM_DIAGRAM):   *** Standardize ORIGIN ;
MPRINT(EM_DIAGRAM):   drop T_ORIGIN ;
MPRINT(EM_DIAGRAM):   if missing( ORIGIN ) then T_ORIGIN = .;
MPRINT(EM_DIAGRAM):   else T_ORIGIN = (ORIGIN - 0) * 5.47874632775651;
MPRINT(EM_DIAGRAM):   *** Standardize OUTPUT ;
MPRINT(EM_DIAGRAM):   drop T_OUTPUT ;
MPRINT(EM_DIAGRAM):   if missing( OUTPUT ) then T_OUTPUT = .;
MPRINT(EM_DIAGRAM):   else T_OUTPUT = (OUTPUT - 0) * 3.45534764240484;
MPRINT(EM_DIAGRAM):   *** Standardize PAIN ;
MPRINT(EM_DIAGRAM):   drop T_PAIN ;
MPRINT(EM_DIAGRAM):   if missing( PAIN ) then T_PAIN = .;
MPRINT(EM_DIAGRAM):   else T_PAIN = (PAIN - 0) * 2.24484759770233;
MPRINT(EM_DIAGRAM):   *** Standardize PALESTINIAN ;
MPRINT(EM_DIAGRAM):   drop T_PALESTINIAN ;
MPRINT(EM_DIAGRAM):   if missing( PALESTINIAN ) then T_PALESTINIAN = .;
MPRINT(EM_DIAGRAM):   else T_PALESTINIAN = (PALESTINIAN - 0) * 3.33089082968775;
MPRINT(EM_DIAGRAM):   *** Standardize PART ;
MPRINT(EM_DIAGRAM):   drop T_PART ;
MPRINT(EM_DIAGRAM):   if missing( PART ) then T_PART = .;
MPRINT(EM_DIAGRAM):   else T_PART = (PART - 0) * 2.36437545659518;
MPRINT(EM_DIAGRAM):   *** Standardize PATIENT ;
MPRINT(EM_DIAGRAM):   drop T_PATIENT ;
MPRINT(EM_DIAGRAM):   if missing( PATIENT ) then T_PATIENT = .;
MPRINT(EM_DIAGRAM):   else T_PATIENT = (PATIENT - 0) * 5.37603723162367;
MPRINT(EM_DIAGRAM):   *** Standardize PERSON ;
MPRINT(EM_DIAGRAM):   drop T_PERSON ;
MPRINT(EM_DIAGRAM):   if missing( PERSON ) then T_PERSON = .;
MPRINT(EM_DIAGRAM):   else T_PERSON = (PERSON - 0) * 4.19729146778759;
MPRINT(EM_DIAGRAM):   *** Standardize PHONE ;
MPRINT(EM_DIAGRAM):   drop T_PHONE ;
MPRINT(EM_DIAGRAM):   if missing( PHONE ) then T_PHONE = .;
MPRINT(EM_DIAGRAM):   else T_PHONE = (PHONE - 0) * 3.42665222382902;
MPRINT(EM_DIAGRAM):   *** Standardize PITT ;
MPRINT(EM_DIAGRAM):   drop T_PITT ;
MPRINT(EM_DIAGRAM):   if missing( PITT ) then T_PITT = .;
MPRINT(EM_DIAGRAM):   else T_PITT = (PITT - 0) * 2.66789121160375;
MPRINT(EM_DIAGRAM):   *** Standardize PITTSBURGH ;
MPRINT(EM_DIAGRAM):   drop T_PITTSBURGH ;
MPRINT(EM_DIAGRAM):   if missing( PITTSBURGH ) then T_PITTSBURGH = .;
MPRINT(EM_DIAGRAM):   else T_PITTSBURGH = (PITTSBURGH - 0) * 4.87153141210063;
MPRINT(EM_DIAGRAM):   *** Standardize PLACE ;
MPRINT(EM_DIAGRAM):   drop T_PLACE ;
MPRINT(EM_DIAGRAM):   if missing( PLACE ) then T_PLACE = .;
MPRINT(EM_DIAGRAM):   else T_PLACE = (PLACE - 0) * 5.0827629036618;
MPRINT(EM_DIAGRAM):   *** Standardize POINT ;
MPRINT(EM_DIAGRAM):   drop T_POINT ;
MPRINT(EM_DIAGRAM):   if missing( POINT ) then T_POINT = .;
MPRINT(EM_DIAGRAM):   else T_POINT = (POINT - 0) * 4.65455214211544;
MPRINT(EM_DIAGRAM):   *** Standardize POLICI ;
MPRINT(EM_DIAGRAM):   drop T_POLICI ;
MPRINT(EM_DIAGRAM):   if missing( POLICI ) then T_POLICI = .;
MPRINT(EM_DIAGRAM):   else T_POLICI = (POLICI - 0) * 8.41452739753352;
MPRINT(EM_DIAGRAM):   *** Standardize POSIT ;
MPRINT(EM_DIAGRAM):   drop T_POSIT ;
MPRINT(EM_DIAGRAM):   if missing( POSIT ) then T_POSIT = .;
MPRINT(EM_DIAGRAM):   else T_POSIT = (POSIT - 0) * 3.98645548043578;
MPRINT(EM_DIAGRAM):   *** Standardize POST ;
MPRINT(EM_DIAGRAM):   drop T_POST ;
MPRINT(EM_DIAGRAM):   if missing( POST ) then T_POST = .;
MPRINT(EM_DIAGRAM):   else T_POST = (POST - 0) * 6.1241631127725;
MPRINT(EM_DIAGRAM):   *** Standardize POWER ;
MPRINT(EM_DIAGRAM):   drop T_POWER ;
MPRINT(EM_DIAGRAM):   if missing( POWER ) then T_POWER = .;
MPRINT(EM_DIAGRAM):   else T_POWER = (POWER - 0) * 3.01621257128619;
MPRINT(EM_DIAGRAM):   *** Standardize PROBLEM ;
MPRINT(EM_DIAGRAM):   drop T_PROBLEM ;
MPRINT(EM_DIAGRAM):   if missing( PROBLEM ) then T_PROBLEM = .;
MPRINT(EM_DIAGRAM):   else T_PROBLEM = (PROBLEM - 0) * 7.0126506335806;
MPRINT(EM_DIAGRAM):   *** Standardize PRODUCT ;
MPRINT(EM_DIAGRAM):   drop T_PRODUCT ;
MPRINT(EM_DIAGRAM):   if missing( PRODUCT ) then T_PRODUCT = .;
MPRINT(EM_DIAGRAM):   else T_PRODUCT = (PRODUCT - 0) * 4.84857704765892;
MPRINT(EM_DIAGRAM):   *** Standardize PROGRAM ;
MPRINT(EM_DIAGRAM):   drop T_PROGRAM ;
MPRINT(EM_DIAGRAM):   if missing( PROGRAM ) then T_PROGRAM = .;
MPRINT(EM_DIAGRAM):   else T_PROGRAM = (PROGRAM - 0) * 3.85619513795463;
MPRINT(EM_DIAGRAM):   *** Standardize PROJECT ;
MPRINT(EM_DIAGRAM):   drop T_PROJECT ;
MPRINT(EM_DIAGRAM):   if missing( PROJECT ) then T_PROJECT = .;
MPRINT(EM_DIAGRAM):   else T_PROJECT = (PROJECT - 0) * 3.85177641840636;
MPRINT(EM_DIAGRAM):   *** Standardize PUBLIC ;
MPRINT(EM_DIAGRAM):   drop T_PUBLIC ;
MPRINT(EM_DIAGRAM):   if missing( PUBLIC ) then T_PUBLIC = .;
MPRINT(EM_DIAGRAM):   else T_PUBLIC = (PUBLIC - 0) * 3.22461720691186;
MPRINT(EM_DIAGRAM):   *** Standardize QUESTION ;
MPRINT(EM_DIAGRAM):   drop T_QUESTION ;
MPRINT(EM_DIAGRAM):   if missing( QUESTION ) then T_QUESTION = .;
MPRINT(EM_DIAGRAM):   else T_QUESTION = (QUESTION - 0) * 6.05202205428262;
MPRINT(EM_DIAGRAM):   *** Standardize RADAR ;
MPRINT(EM_DIAGRAM):   drop T_RADAR ;
MPRINT(EM_DIAGRAM):   if missing( RADAR ) then T_RADAR = .;
MPRINT(EM_DIAGRAM):   else T_RADAR = (RADAR - 0) * 1.64028348569154;
MPRINT(EM_DIAGRAM):   *** Standardize RADIO ;
MPRINT(EM_DIAGRAM):   drop T_RADIO ;
MPRINT(EM_DIAGRAM):   if missing( RADIO ) then T_RADIO = .;
MPRINT(EM_DIAGRAM):   else T_RADIO = (RADIO - 0) * 3.27810759013307;
MPRINT(EM_DIAGRAM):   *** Standardize READ ;
MPRINT(EM_DIAGRAM):   drop T_READ ;
MPRINT(EM_DIAGRAM):   if missing( READ ) then T_READ = .;
MPRINT(EM_DIAGRAM):   else T_READ = (READ - 0) * 4.42237465935729;
MPRINT(EM_DIAGRAM):   *** Standardize REASON ;
MPRINT(EM_DIAGRAM):   drop T_REASON ;
MPRINT(EM_DIAGRAM):   if missing( REASON ) then T_REASON = .;
MPRINT(EM_DIAGRAM):   else T_REASON = (REASON - 0) * 9.31761791253643;
MPRINT(EM_DIAGRAM):   *** Standardize RECEIV ;
MPRINT(EM_DIAGRAM):   drop T_RECEIV ;
MPRINT(EM_DIAGRAM):   if missing( RECEIV ) then T_RECEIV = .;
MPRINT(EM_DIAGRAM):   else T_RECEIV = (RECEIV - 0) * 3.29627760495118;
MPRINT(EM_DIAGRAM):   *** Standardize REMEMB ;
MPRINT(EM_DIAGRAM):   drop T_REMEMB ;
MPRINT(EM_DIAGRAM):   if missing( REMEMB ) then T_REMEMB = .;
MPRINT(EM_DIAGRAM):   else T_REMEMB = (REMEMB - 0) * 5.36096344091829;
MPRINT(EM_DIAGRAM):   *** Standardize REPLI ;
MPRINT(EM_DIAGRAM):   drop T_REPLI ;
MPRINT(EM_DIAGRAM):   if missing( REPLI ) then T_REPLI = .;
MPRINT(EM_DIAGRAM):   else T_REPLI = (REPLI - 0) * 6.302186984309;
MPRINT(EM_DIAGRAM):   *** Standardize REPORT ;
MPRINT(EM_DIAGRAM):   drop T_REPORT ;
MPRINT(EM_DIAGRAM):   if missing( REPORT ) then T_REPORT = .;
MPRINT(EM_DIAGRAM):   else T_REPORT = (REPORT - 0) * 4.8008784102956;
MPRINT(EM_DIAGRAM):   *** Standardize REQUIR ;
MPRINT(EM_DIAGRAM):   drop T_REQUIR ;
MPRINT(EM_DIAGRAM):   if missing( REQUIR ) then T_REQUIR = .;
MPRINT(EM_DIAGRAM):   else T_REQUIR = (REQUIR - 0) * 7.93928217872022;
MPRINT(EM_DIAGRAM):   *** Standardize RESEARCH ;
MPRINT(EM_DIAGRAM):   drop T_RESEARCH ;
MPRINT(EM_DIAGRAM):   if missing( RESEARCH ) then T_RESEARCH = .;
MPRINT(EM_DIAGRAM):   else T_RESEARCH = (RESEARCH - 0) * 5.28309774587878;
MPRINT(EM_DIAGRAM):   *** Standardize RESPONS ;
MPRINT(EM_DIAGRAM):   drop T_RESPONS ;
MPRINT(EM_DIAGRAM):   if missing( RESPONS ) then T_RESPONS = .;
MPRINT(EM_DIAGRAM):   else T_RESPONS = (RESPONS - 0) * 5.9381275927421;
MPRINT(EM_DIAGRAM):   *** Standardize ROBERT ;
MPRINT(EM_DIAGRAM):   drop T_ROBERT ;
MPRINT(EM_DIAGRAM):   if missing( ROBERT ) then T_ROBERT = .;
MPRINT(EM_DIAGRAM):   else T_ROBERT = (ROBERT - 0) * 1.8248903937835;
MPRINT(EM_DIAGRAM):   *** Standardize RUN ;
MPRINT(EM_DIAGRAM):   drop T_RUN ;
MPRINT(EM_DIAGRAM):   if missing( RUN ) then T_RUN = .;
MPRINT(EM_DIAGRAM):   else T_RUN = (RUN - 0) * 6.08016199674241;
MPRINT(EM_DIAGRAM):   *** Standardize SAT ;
MPRINT(EM_DIAGRAM):   drop T_SAT ;
MPRINT(EM_DIAGRAM):   if missing( SAT ) then T_SAT = .;
MPRINT(EM_DIAGRAM):   else T_SAT = (SAT - 0) * 5.28116628047848;
MPRINT(EM_DIAGRAM):   *** Standardize SCHOOL ;
MPRINT(EM_DIAGRAM):   drop T_SCHOOL ;
MPRINT(EM_DIAGRAM):   if missing( SCHOOL ) then T_SCHOOL = .;
MPRINT(EM_DIAGRAM):   else T_SCHOOL = (SCHOOL - 0) * 5.41530789631916;
MPRINT(EM_DIAGRAM):   *** Standardize SCI ;
MPRINT(EM_DIAGRAM):   drop T_SCI ;
MPRINT(EM_DIAGRAM):   if missing( SCI ) then T_SCI = .;
MPRINT(EM_DIAGRAM):   else T_SCI = (SCI - 0) * 3.86334678194681;
MPRINT(EM_DIAGRAM):   *** Standardize SCIENC ;
MPRINT(EM_DIAGRAM):   drop T_SCIENC ;
MPRINT(EM_DIAGRAM):   if missing( SCIENC ) then T_SCIENC = .;
MPRINT(EM_DIAGRAM):   else T_SCIENC = (SCIENC - 0) * 6.56365560945997;
MPRINT(EM_DIAGRAM):   *** Standardize SCREEN ;
MPRINT(EM_DIAGRAM):   drop T_SCREEN ;
MPRINT(EM_DIAGRAM):   if missing( SCREEN ) then T_SCREEN = .;
MPRINT(EM_DIAGRAM):   else T_SCREEN = (SCREEN - 0) * 2.80730286771813;
MPRINT(EM_DIAGRAM):   *** Standardize SELL ;
MPRINT(EM_DIAGRAM):   drop T_SELL ;
MPRINT(EM_DIAGRAM):   if missing( SELL ) then T_SELL = .;
MPRINT(EM_DIAGRAM):   else T_SELL = (SELL - 0) * 4.48708374071907;
MPRINT(EM_DIAGRAM):   *** Standardize SEND ;
MPRINT(EM_DIAGRAM):   drop T_SEND ;
MPRINT(EM_DIAGRAM):   if missing( SEND ) then T_SEND = .;
MPRINT(EM_DIAGRAM):   else T_SEND = (SEND - 0) * 5.56197567358981;
MPRINT(EM_DIAGRAM):   *** Standardize SERDAR ;
MPRINT(EM_DIAGRAM):   drop T_SERDAR ;
MPRINT(EM_DIAGRAM):   if missing( SERDAR ) then T_SERDAR = .;
MPRINT(EM_DIAGRAM):   else T_SERDAR = (SERDAR - 0) * 2.09987060606459;
MPRINT(EM_DIAGRAM):   *** Standardize SERVER ;
MPRINT(EM_DIAGRAM):   drop T_SERVER ;
MPRINT(EM_DIAGRAM):   if missing( SERVER ) then T_SERVER = .;
MPRINT(EM_DIAGRAM):   else T_SERVER = (SERVER - 0) * 2.57500352960129;
MPRINT(EM_DIAGRAM):   *** Standardize SERVIC ;
MPRINT(EM_DIAGRAM):   drop T_SERVIC ;
MPRINT(EM_DIAGRAM):   if missing( SERVIC ) then T_SERVIC = .;
MPRINT(EM_DIAGRAM):   else T_SERVIC = (SERVIC - 0) * 7.39693461644889;
MPRINT(EM_DIAGRAM):   *** Standardize SHOW ;
MPRINT(EM_DIAGRAM):   drop T_SHOW ;
MPRINT(EM_DIAGRAM):   if missing( SHOW ) then T_SHOW = .;
MPRINT(EM_DIAGRAM):   else T_SHOW = (SHOW - 0) * 9.06604212992825;
MPRINT(EM_DIAGRAM):   *** Standardize SIDE ;
MPRINT(EM_DIAGRAM):   drop T_SIDE ;
MPRINT(EM_DIAGRAM):   if missing( SIDE ) then T_SIDE = .;
MPRINT(EM_DIAGRAM):   else T_SIDE = (SIDE - 0) * 4.93914957474677;
MPRINT(EM_DIAGRAM):   *** Standardize SIGNAL ;
MPRINT(EM_DIAGRAM):   drop T_SIGNAL ;
MPRINT(EM_DIAGRAM):   if missing( SIGNAL ) then T_SIGNAL = .;
MPRINT(EM_DIAGRAM):   else T_SIGNAL = (SIGNAL - 0) * 3.38065533154697;
MPRINT(EM_DIAGRAM):   *** Standardize SOFTWAR ;
MPRINT(EM_DIAGRAM):   drop T_SOFTWAR ;
MPRINT(EM_DIAGRAM):   if missing( SOFTWAR ) then T_SOFTWAR = .;
MPRINT(EM_DIAGRAM):   else T_SOFTWAR = (SOFTWAR - 0) * 4.29749579343883;
MPRINT(EM_DIAGRAM):   *** Standardize SOUND ;
MPRINT(EM_DIAGRAM):   drop T_SOUND ;
MPRINT(EM_DIAGRAM):   if missing( SOUND ) then T_SOUND = .;
MPRINT(EM_DIAGRAM):   else T_SOUND = (SOUND - 0) * 3.65781122916394;
MPRINT(EM_DIAGRAM):   *** Standardize SOURC ;
MPRINT(EM_DIAGRAM):   drop T_SOURC ;
MPRINT(EM_DIAGRAM):   if missing( SOURC ) then T_SOURC = .;
MPRINT(EM_DIAGRAM):   else T_SOURC = (SOURC - 0) * 2.78630007892985;
MPRINT(EM_DIAGRAM):   *** Standardize STANDARD ;
MPRINT(EM_DIAGRAM):   drop T_STANDARD ;
MPRINT(EM_DIAGRAM):   if missing( STANDARD ) then T_STANDARD = .;
MPRINT(EM_DIAGRAM):   else T_STANDARD = (STANDARD - 0) * 4.02897864307366;
MPRINT(EM_DIAGRAM):   *** Standardize START ;
MPRINT(EM_DIAGRAM):   drop T_START ;
MPRINT(EM_DIAGRAM):   if missing( START ) then T_START = .;
MPRINT(EM_DIAGRAM):   else T_START = (START - 0) * 7.53680562133528;
MPRINT(EM_DIAGRAM):   *** Standardize STATE ;
MPRINT(EM_DIAGRAM):   drop T_STATE ;
MPRINT(EM_DIAGRAM):   if missing( STATE ) then T_STATE = .;
MPRINT(EM_DIAGRAM):   else T_STATE = (STATE - 0) * 5.92066543507595;
MPRINT(EM_DIAGRAM):   *** Standardize STEVE ;
MPRINT(EM_DIAGRAM):   drop T_STEVE ;
MPRINT(EM_DIAGRAM):   if missing( STEVE ) then T_STEVE = .;
MPRINT(EM_DIAGRAM):   else T_STEVE = (STEVE - 0) * 3.48935132106124;
MPRINT(EM_DIAGRAM):   *** Standardize STUDI ;
MPRINT(EM_DIAGRAM):   drop T_STUDI ;
MPRINT(EM_DIAGRAM):   if missing( STUDI ) then T_STUDI = .;
MPRINT(EM_DIAGRAM):   else T_STUDI = (STUDI - 0) * 5.33160690355022;
MPRINT(EM_DIAGRAM):   *** Standardize SUBSCRIB ;
MPRINT(EM_DIAGRAM):   drop T_SUBSCRIB ;
MPRINT(EM_DIAGRAM):   if missing( SUBSCRIB ) then T_SUBSCRIB = .;
MPRINT(EM_DIAGRAM):   else T_SUBSCRIB = (SUBSCRIB - 0) * 0.71855697064332;
MPRINT(EM_DIAGRAM):   *** Standardize SUGGEST ;
MPRINT(EM_DIAGRAM):   drop T_SUGGEST ;
MPRINT(EM_DIAGRAM):   if missing( SUGGEST ) then T_SUGGEST = .;
MPRINT(EM_DIAGRAM):   else T_SUGGEST = (SUGGEST - 0) * 7.92691956749453;
MPRINT(EM_DIAGRAM):   *** Standardize SUN ;
MPRINT(EM_DIAGRAM):   drop T_SUN ;
MPRINT(EM_DIAGRAM):   if missing( SUN ) then T_SUN = .;
MPRINT(EM_DIAGRAM):   else T_SUN = (SUN - 0) * 4.80667325525575;
MPRINT(EM_DIAGRAM):   *** Standardize SUPPORT ;
MPRINT(EM_DIAGRAM):   drop T_SUPPORT ;
MPRINT(EM_DIAGRAM):   if missing( SUPPORT ) then T_SUPPORT = .;
MPRINT(EM_DIAGRAM):   else T_SUPPORT = (SUPPORT - 0) * 3.37328146905376;
MPRINT(EM_DIAGRAM):   *** Standardize SWITCH ;
MPRINT(EM_DIAGRAM):   drop T_SWITCH ;
MPRINT(EM_DIAGRAM):   if missing( SWITCH ) then T_SWITCH = .;
MPRINT(EM_DIAGRAM):   else T_SWITCH = (SWITCH - 0) * 2.88035001519678;
MPRINT(EM_DIAGRAM):   *** Standardize SYSTEM ;
MPRINT(EM_DIAGRAM):   drop T_SYSTEM ;
MPRINT(EM_DIAGRAM):   if missing( SYSTEM ) then T_SYSTEM = .;
MPRINT(EM_DIAGRAM):   else T_SYSTEM = (SYSTEM - 0) * 6.55169316226039;
MPRINT(EM_DIAGRAM):   *** Standardize TALK ;
MPRINT(EM_DIAGRAM):   drop T_TALK ;
MPRINT(EM_DIAGRAM):   if missing( TALK ) then T_TALK = .;
MPRINT(EM_DIAGRAM):   else T_TALK = (TALK - 0) * 3.35400694955132;
MPRINT(EM_DIAGRAM):   *** Standardize TECHNOLOG ;
MPRINT(EM_DIAGRAM):   drop T_TECHNOLOG ;
MPRINT(EM_DIAGRAM):   if missing( TECHNOLOG ) then T_TECHNOLOG = .;
MPRINT(EM_DIAGRAM):   else T_TECHNOLOG = (TECHNOLOG - 0) * 3.19896414213013;
MPRINT(EM_DIAGRAM):   *** Standardize TERMIN ;
MPRINT(EM_DIAGRAM):   drop T_TERMIN ;
MPRINT(EM_DIAGRAM):   if missing( TERMIN ) then T_TERMIN = .;
MPRINT(EM_DIAGRAM):   else T_TERMIN = (TERMIN - 0) * 3.20544894695733;
MPRINT(EM_DIAGRAM):   *** Standardize TEST ;
MPRINT(EM_DIAGRAM):   drop T_TEST ;
MPRINT(EM_DIAGRAM):   if missing( TEST ) then T_TEST = .;
MPRINT(EM_DIAGRAM):   else T_TEST = (TEST - 0) * 3.44941004862211;
MPRINT(EM_DIAGRAM):   *** Standardize THAT ;
MPRINT(EM_DIAGRAM):   drop T_THAT ;
MPRINT(EM_DIAGRAM):   if missing( THAT ) then T_THAT = .;
MPRINT(EM_DIAGRAM):   else T_THAT = (THAT - 0) * 9.43387301812898;
MPRINT(EM_DIAGRAM):   *** Standardize THU ;
MPRINT(EM_DIAGRAM):   drop T_THU ;
MPRINT(EM_DIAGRAM):   if missing( THU ) then T_THU = .;
MPRINT(EM_DIAGRAM):   else T_THU = (THU - 0) * 5.15275447711372;
MPRINT(EM_DIAGRAM):   *** Standardize TIME ;
MPRINT(EM_DIAGRAM):   drop T_TIME ;
MPRINT(EM_DIAGRAM):   if missing( TIME ) then T_TIME = .;
MPRINT(EM_DIAGRAM):   else T_TIME = (TIME - 0) * 6.00969282466044;
MPRINT(EM_DIAGRAM):   *** Standardize TREATMENT ;
MPRINT(EM_DIAGRAM):   drop T_TREATMENT ;
MPRINT(EM_DIAGRAM):   if missing( TREATMENT ) then T_TREATMENT = .;
MPRINT(EM_DIAGRAM):   else T_TREATMENT = (TREATMENT - 0) * 4.28116834159018;
MPRINT(EM_DIAGRAM):   *** Standardize TRUE ;
MPRINT(EM_DIAGRAM):   drop T_TRUE ;
MPRINT(EM_DIAGRAM):   if missing( TRUE ) then T_TRUE = .;
MPRINT(EM_DIAGRAM):   else T_TRUE = (TRUE - 0) * 4.99164342356806;
MPRINT(EM_DIAGRAM):   *** Standardize TUE ;
MPRINT(EM_DIAGRAM):   drop T_TUE ;
MPRINT(EM_DIAGRAM):   if missing( TUE ) then T_TUE = .;
MPRINT(EM_DIAGRAM):   else T_TUE = (TUE - 0) * 6.10720937566147;
MPRINT(EM_DIAGRAM):   *** Standardize TURKISH ;
MPRINT(EM_DIAGRAM):   drop T_TURKISH ;
MPRINT(EM_DIAGRAM):   if missing( TURKISH ) then T_TURKISH = .;
MPRINT(EM_DIAGRAM):   else T_TURKISH = (TURKISH - 0) * 2.72926345909578;
MPRINT(EM_DIAGRAM):   *** Standardize TYPE ;
MPRINT(EM_DIAGRAM):   drop T_TYPE ;
MPRINT(EM_DIAGRAM):   if missing( TYPE ) then T_TYPE = .;
MPRINT(EM_DIAGRAM):   else T_TYPE = (TYPE - 0) * 3.10963939675502;
MPRINT(EM_DIAGRAM):   *** Standardize UNIV ;
MPRINT(EM_DIAGRAM):   drop T_UNIV ;
MPRINT(EM_DIAGRAM):   if missing( UNIV ) then T_UNIV = .;
MPRINT(EM_DIAGRAM):   else T_UNIV = (UNIV - 0) * 5.92777154989409;
MPRINT(EM_DIAGRAM):   *** Standardize UNIVERS ;
MPRINT(EM_DIAGRAM):   drop T_UNIVERS ;
MPRINT(EM_DIAGRAM):   if missing( UNIVERS ) then T_UNIVERS = .;
MPRINT(EM_DIAGRAM):   else T_UNIVERS = (UNIVERS - 0) * 5.80931195996725;
MPRINT(EM_DIAGRAM):   *** Standardize UNIX ;
MPRINT(EM_DIAGRAM):   drop T_UNIX ;
MPRINT(EM_DIAGRAM):   if missing( UNIX ) then T_UNIX = .;
MPRINT(EM_DIAGRAM):   else T_UNIX = (UNIX - 0) * 3.30072892529905;
MPRINT(EM_DIAGRAM):   *** Standardize USENET ;
MPRINT(EM_DIAGRAM):   drop T_USENET ;
MPRINT(EM_DIAGRAM):   if missing( USENET ) then T_USENET = .;
MPRINT(EM_DIAGRAM):   else T_USENET = (USENET - 0) * 5.99794705751076;
MPRINT(EM_DIAGRAM):   *** Standardize USER ;
MPRINT(EM_DIAGRAM):   drop T_USER ;
MPRINT(EM_DIAGRAM):   if missing( USER ) then T_USER = .;
MPRINT(EM_DIAGRAM):   else T_USER = (USER - 0) * 3.29881440691399;
MPRINT(EM_DIAGRAM):   *** Standardize UTEXA ;
MPRINT(EM_DIAGRAM):   drop T_UTEXA ;
MPRINT(EM_DIAGRAM):   if missing( UTEXA ) then T_UTEXA = .;
MPRINT(EM_DIAGRAM):   else T_UTEXA = (UTEXA - 0) * 1.33446294548045;
MPRINT(EM_DIAGRAM):   *** Standardize UUCP ;
MPRINT(EM_DIAGRAM):   drop T_UUCP ;
MPRINT(EM_DIAGRAM):   if missing( UUCP ) then T_UUCP = .;
MPRINT(EM_DIAGRAM):   else T_UUCP = (UUCP - 0) * 5.1465616359408;
MPRINT(EM_DIAGRAM):   *** Standardize VERSION ;
MPRINT(EM_DIAGRAM):   drop T_VERSION ;
MPRINT(EM_DIAGRAM):   if missing( VERSION ) then T_VERSION = .;
MPRINT(EM_DIAGRAM):   else T_VERSION = (VERSION - 0) * 5.44024908108807;
MPRINT(EM_DIAGRAM):   *** Standardize VIRGINIA ;
MPRINT(EM_DIAGRAM):   drop T_VIRGINIA ;
MPRINT(EM_DIAGRAM):   if missing( VIRGINIA ) then T_VIRGINIA = .;
MPRINT(EM_DIAGRAM):   else T_VIRGINIA = (VIRGINIA - 0) * 1.56848971585599;
MPRINT(EM_DIAGRAM):   *** Standardize VOLTAG ;
MPRINT(EM_DIAGRAM):   drop T_VOLTAG ;
MPRINT(EM_DIAGRAM):   if missing( VOLTAG ) then T_VOLTAG = .;
MPRINT(EM_DIAGRAM):   else T_VOLTAG = (VOLTAG - 0) * 2.82398405328062;
MPRINT(EM_DIAGRAM):   *** Standardize WATER ;
MPRINT(EM_DIAGRAM):   drop T_WATER ;
MPRINT(EM_DIAGRAM):   if missing( WATER ) then T_WATER = .;
MPRINT(EM_DIAGRAM):   else T_WATER = (WATER - 0) * 2.41062120349601;
MPRINT(EM_DIAGRAM):   *** Standardize WED ;
MPRINT(EM_DIAGRAM):   drop T_WED ;
MPRINT(EM_DIAGRAM):   if missing( WED ) then T_WED = .;
MPRINT(EM_DIAGRAM):   else T_WED = (WED - 0) * 4.00164111577006;
MPRINT(EM_DIAGRAM):   *** Standardize WIDGET ;
MPRINT(EM_DIAGRAM):   drop T_WIDGET ;
MPRINT(EM_DIAGRAM):   if missing( WIDGET ) then T_WIDGET = .;
MPRINT(EM_DIAGRAM):   else T_WIDGET = (WIDGET - 0) * 1.62705336812421;
MPRINT(EM_DIAGRAM):   *** Standardize WINDOW ;
MPRINT(EM_DIAGRAM):   drop T_WINDOW ;
MPRINT(EM_DIAGRAM):   if missing( WINDOW ) then T_WINDOW = .;
MPRINT(EM_DIAGRAM):   else T_WINDOW = (WINDOW - 0) * 2.81462439954458;
MPRINT(EM_DIAGRAM):   *** Standardize WIRE ;
MPRINT(EM_DIAGRAM):   drop T_WIRE ;
MPRINT(EM_DIAGRAM):   if missing( WIRE ) then T_WIRE = .;
MPRINT(EM_DIAGRAM):   else T_WIRE = (WIRE - 0) * 2.45211024512543;
MPRINT(EM_DIAGRAM):   *** Standardize WONDER ;
MPRINT(EM_DIAGRAM):   drop T_WONDER ;
MPRINT(EM_DIAGRAM):   if missing( WONDER ) then T_WONDER = .;
MPRINT(EM_DIAGRAM):   else T_WONDER = (WONDER - 0) * 7.46037303280928;
MPRINT(EM_DIAGRAM):   *** Standardize WORK ;
MPRINT(EM_DIAGRAM):   drop T_WORK ;
MPRINT(EM_DIAGRAM):   if missing( WORK ) then T_WORK = .;
MPRINT(EM_DIAGRAM):   else T_WORK = (WORK - 0) * 6.75133541473952;
MPRINT(EM_DIAGRAM):   *** Standardize WORLD ;
MPRINT(EM_DIAGRAM):   drop T_WORLD ;
MPRINT(EM_DIAGRAM):   if missing( WORLD ) then T_WORLD = .;
MPRINT(EM_DIAGRAM):   else T_WORLD = (WORLD - 0) * 8.3425896333976;
MPRINT(EM_DIAGRAM):   *** Standardize XLIB ;
MPRINT(EM_DIAGRAM):   drop T_XLIB ;
MPRINT(EM_DIAGRAM):   if missing( XLIB ) then T_XLIB = .;
MPRINT(EM_DIAGRAM):   else T_XLIB = (XLIB - 0) * 1.99512053695088;
MPRINT(EM_DIAGRAM):   *** Standardize XTERM ;
MPRINT(EM_DIAGRAM):   drop T_XTERM ;
MPRINT(EM_DIAGRAM):   if missing( XTERM ) then T_XTERM = .;
MPRINT(EM_DIAGRAM):   else T_XTERM = (XTERM - 0) * 1.87682582544599;
MPRINT(EM_DIAGRAM):   *** Standardize YEAR ;
MPRINT(EM_DIAGRAM):   drop T_YEAR ;
MPRINT(EM_DIAGRAM):   if missing( YEAR ) then T_YEAR = .;
MPRINT(EM_DIAGRAM):   else T_YEAR = (YEAR - 0) * 8.57780075115767;
MPRINT(EM_DIAGRAM):   *** Standardize YOU ;
MPRINT(EM_DIAGRAM):   drop T_YOU ;
MPRINT(EM_DIAGRAM):   if missing( YOU ) then T_YOU = .;
MPRINT(EM_DIAGRAM):   else T_YOU = (YOU - 0) * 5.2943325608246;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUS3vlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Id de segmento' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distancia' ;
MPRINT(EM_DIAGRAM):   array CLUS3vads [20] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 20;
MPRINT(EM_DIAGRAM):   CLUS3vads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_ACCESS ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ACCESS - 0.01288804839824 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ACCESS - 0.01834743681454 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ACCESS - 0.00260416666666 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ACCESS - 0.35332840508621 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ACCESS - 0.02325581395348 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ACCESS - 0.02655905335618 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ACCESS - 0.00719548541862 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ACCESS - 0.00796987958627 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ACCESS - 0.00589625992418 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ACCESS - 0.01498012079639 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ACCESS - 0.00468385179581 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ACCESS - 0.00666875106783 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ACCESS - 0.00077055773234 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00357448900726;
MPRINT(EM_DIAGRAM):   if not missing( T_ADAM ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ADAM - 0.00075485122214 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ADAM - 0.00111502347417 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ADAM - 0.02224797134189 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ADAM - 0.00178501909057 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ADAM - 0.00230104834924 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ADAM - 0.00077342668729 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ADAM - 0.0435328052164 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00263050473814;
MPRINT(EM_DIAGRAM):   if not missing( T_ADDRESS ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ADDRESS - 0.0050765892266 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ADDRESS - 0.00383829621329 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ADDRESS - 0.00594707106749 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ADDRESS - 0.00266827082934 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ADDRESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ADDRESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ADDRESS - 0.01127071278314 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ADDRESS - 0.00405435316665 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ADDRESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ADDRESS - 0.00944426856304 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ADDRESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ADDRESS - 0.03946772665548 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ADDRESS - 0.00585662877142 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ADDRESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ADDRESS - 0.00966462373884 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ADDRESS - 0.00310811433441 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ADDRESS - 0.00545686752583 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ADDRESS - 0.01433321866758 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ADDRESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ADDRESS - 0.00247123295409 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194998376212;
MPRINT(EM_DIAGRAM):   if not missing( T_ADVANC ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ADVANC - 0.03852427678417 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ADVANC - 0.01602060378112 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ADVANC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ADVANC - 0.00188263961872 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ADVANC - 0.18034332506949 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ADVANC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ADVANC - 0.03719629665578 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ADVANC - 0.01106497124213 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ADVANC - 0.00486322188449 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ADVANC - 0.03152782207886 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ADVANC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ADVANC - 0.04443073508455 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ADVANC - 0.02475297942423 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ADVANC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ADVANC - 0.04731907611131 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ADVANC - 0.00678542219843 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ADVANC - 0.04814402397177 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ADVANC - 0.04387497573286 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ADVANC - 0.03940886699507 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ADVANC - 0.00125134919143 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00802279459761;
MPRINT(EM_DIAGRAM):   if not missing( T_AMERICAN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_AMERICAN - 0.00165929203539 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_AMERICAN - 0.01527994658936 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_AMERICAN - 0.01143492607292 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_AMERICAN - 0.05151038899988 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_AMERICAN - 0.00120683875293 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_AMERICAN - 0.01108843028768 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_AMERICAN - 0.00627177700348 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_AMERICAN - 0.01194604726176 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_AMERICAN - 0.00564746528469 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_AMERICAN - 0.01336910807898 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_AMERICAN - 0.04409122371951 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00613792893604;
MPRINT(EM_DIAGRAM):   if not missing( T_ANDI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ANDI - 0.05153725742658 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ANDI - 0.00194980859212 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ANDI - 0.00678124760039 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ANDI - 0.00083542188805 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ANDI - 0.00128452151573 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ANDI - 0.00024254183846 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ANDI - 0.00349685338576 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ANDI - 0.00665926748057 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ANDI - 0.01147578819199 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00100139210422;
MPRINT(EM_DIAGRAM):   if not missing( T_ANSWER ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ANSWER - 0.00871771952769 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ANSWER - 0.00700010865319 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ANSWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ANSWER - 0.00938567997638 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ANSWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ANSWER - 0.00350501310479 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ANSWER - 0.00868985893462 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ANSWER - 0.01113770339761 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ANSWER - 0.01161901000155 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ANSWER - 0.01205194459265 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ANSWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ANSWER - 0.00958678115481 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ANSWER - 0.00725538241509 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ANSWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ANSWER - 0.01629645988491 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ANSWER - 0.00969770621836 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ANSWER - 0.0564033412875 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ANSWER - 0.00349446709376 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ANSWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ANSWER - 0.02064586155706 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00336220864585;
MPRINT(EM_DIAGRAM):   if not missing( T_APPLIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_APPLIC - 0.01597682135435 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_APPLIC - 0.00090187590187 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_APPLIC - 0.01270957131424 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_APPLIC - 0.00791536312847 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_APPLIC - 0.04134954313834 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_APPLIC - 0.01445203862496 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_APPLIC - 0.04874219033526 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_APPLIC - 0.0660784934415 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_APPLIC - 0.00352934569435 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_APPLIC - 0.00912573199158 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_APPLIC - 0.00118658770752 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00514779472168;
MPRINT(EM_DIAGRAM):   if not missing( T_APPRECI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_APPRECI - 0.01276870517314 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_APPRECI - 0.01815888867473 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_APPRECI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_APPRECI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_APPRECI - 0.03009259259259 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_APPRECI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_APPRECI - 0.01754496714388 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_APPRECI - 0.00929444945853 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_APPRECI - 0.00976821546228 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_APPRECI - 0.02746945575279 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_APPRECI - 0.03522727272727 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_APPRECI - 0.01529239584152 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_APPRECI - 0.02145413436294 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_APPRECI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_APPRECI - 0.02541386368662 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_APPRECI - 0.01223581814343 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_APPRECI - 0.03569329660238 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_APPRECI - 0.01062091503267 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_APPRECI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_APPRECI - 0.00435879526552 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00452860811928;
MPRINT(EM_DIAGRAM):   if not missing( T_ARAB ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ARAB - 0.00422689010672 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ARAB - 0.05651278482878 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ARAB - 0.00200339558573 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ARAB - 0.00210488558558 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ARAB - 0.00061943910598 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ARAB - 0.00211242391693 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ARAB - 0.00117600159457 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ARAB - 0.00291156453518 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ARAB - 0.16416215851278 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00757788329944;
MPRINT(EM_DIAGRAM):   if not missing( T_AREA ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_AREA - 0.02708845529325 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_AREA - 0.02136350320082 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_AREA - 0.13977967488024 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_AREA - 0.01350503761283 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_AREA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_AREA - 0.00888594241583 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_AREA - 0.01883427681805 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_AREA - 0.01828761505717 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_AREA - 0.0029304029304 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_AREA - 0.00582344971749 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_AREA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_AREA - 0.00693036940176 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_AREA - 0.00933955467799 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_AREA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_AREA - 0.01063899216944 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_AREA - 0.0293175786484 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_AREA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_AREA - 0.01307189542483 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_AREA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_AREA - 0.01436492267997 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00506812794404;
MPRINT(EM_DIAGRAM):   if not missing( T_ARGIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ARGIC - 0.11823681824256 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ARGIC - 0.01541700404858 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ARGIC - 0.00173125488322 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ARGIC - 0.00116571428571 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ARGIC - 0.19833333333333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ARGIC - 0.00179604593263 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ARGIC - 0.00005423281829 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00234228830211;
MPRINT(EM_DIAGRAM):   if not missing( T_ARMENIA ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ARMENIA - 0.07911901367591 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ARMENIA - 0.00128466972314 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ARMENIA - 0.00025396825396 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ARMENIA - 0.00036099453995 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ARMENIA - 0.01077441077441 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ARMENIA - 9.4523430586128E-6 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00091579971232;
MPRINT(EM_DIAGRAM):   if not missing( T_ARMENIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ARMENIAN - 0.00244849417608 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ARMENIAN - 0.44263838369887 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ARMENIAN - 0.0305944055944 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ARMENIAN - 0.00383343997258 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ARMENIAN - 0.00036363636363 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ARMENIAN - 0.00086146424308 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ARMENIAN - 0.01679692856163 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ARMENIAN - 0.00009022691101 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00943357450269;
MPRINT(EM_DIAGRAM):   if not missing( T_ATTACK ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ATTACK - 0.00776980744405 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ATTACK - 0.04159911318153 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ATTACK - 0.01002136330121 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ATTACK - 0.00487264841698 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ATTACK - 0.01537056928034 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ATTACK - 0.00241662324127 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ATTACK - 0.00156039922667 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ATTACK - 0.00276988387465 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ATTACK - 0.07852231968096 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00465524898098;
MPRINT(EM_DIAGRAM):   if not missing( T_AUDIO ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_AUDIO - 0.05108706754766 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_AUDIO - 0.0191819830961 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_AUDIO - 0.0106975305742 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_AUDIO - 0.00177255930879 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_AUDIO - 0.00127367599326 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_AUDIO - 0.003402524282 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_AUDIO - 0.00895958774617 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_AUDIO - 0.00695847362514 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_AUDIO - 0.0084422657952 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00319775466892;
MPRINT(EM_DIAGRAM):   if not missing( T_BANK ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_BANK - 0.00093000276094 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_BANK - 0.00863517606223 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_BANK - 0.0132049319843 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_BANK - 0.0055874072436 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_BANK - 0.5286328122844 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_BANK - 0.00193033944378 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_BANK - 0.00127302382941 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_BANK - 0.00425766294769 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_BANK - 0.01117647058823 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_BANK - 0.01235457774647 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00770333013271;
MPRINT(EM_DIAGRAM):   if not missing( T_BASE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_BASE - 0.01106915661539 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_BASE - 0.00445517670622 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_BASE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_BASE - 0.01320941557924 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_BASE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_BASE - 0.06054097827404 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_BASE - 0.03511370552159 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_BASE - 0.01146068498848 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_BASE - 0.02476698461715 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_BASE - 0.00763292290223 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_BASE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_BASE - 0.02721276452965 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_BASE - 0.00887738213771 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_BASE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_BASE - 0.02307527866796 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_BASE - 0.01935586159586 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_BASE - 0.00824524312896 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_BASE - 0.02043198529411 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_BASE - 0.05571428571428 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_BASE - 0.02524617661583 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00564879559042;
MPRINT(EM_DIAGRAM):   if not missing( T_BATTERI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_BATTERI - 0.01108797501301 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_BATTERI - 0.00009168704156 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_BATTERI - 0.01052169493091 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_BATTERI - 0.01612452888124 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_BATTERI - 0.00455350715382 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_BATTERI - 0.00368836335023 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_BATTERI - 0.00332382219908 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_BATTERI - 0.00045551169146 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_BATTERI - 0.03554342758018 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_BATTERI - 0.00082848285562 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00353960326361;
MPRINT(EM_DIAGRAM):   if not missing( T_BILL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_BILL - 0.00533172099159 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_BILL - 0.0086827650913 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_BILL - 0.016761772345 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_BILL - 0.00063116635369 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_BILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_BILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_BILL - 0.00233918128654 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_BILL - 0.00750538381832 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_BILL - 0.00697825521961 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_BILL - 0.00880218169201 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_BILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_BILL - 0.00389208314904 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_BILL - 0.00507234578025 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_BILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_BILL - 0.00513110733823 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_BILL - 0.00210247952781 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_BILL - 0.00848763497039 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_BILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_BILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_BILL - 0.00130893838325 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00159099402995;
MPRINT(EM_DIAGRAM):   if not missing( T_BOOK ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_BOOK - 0.06628423477387 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_BOOK - 0.00530353219348 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_BOOK - 0.01786283891547 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_BOOK - 0.00942522337308 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_BOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_BOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_BOOK - 0.0078596491228 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_BOOK - 0.01266024676251 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_BOOK - 0.0058201058201 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_BOOK - 0.00581009256768 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_BOOK - 0.01958041958041 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_BOOK - 0.00660564873579 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_BOOK - 0.01437997820396 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_BOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_BOOK - 0.00519576955886 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_BOOK - 0.01429435940189 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_BOOK - 0.00617079889807 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_BOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_BOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_BOOK - 0.00585997738724 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00378502613574;
MPRINT(EM_DIAGRAM):   if not missing( T_BRAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_BRAIN - 0.00085091899251 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_BRAIN - 0.01074423988802 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_BRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_BRAIN - 0.00116655528221 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_BRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_BRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_BRAIN - 0.00608888734691 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_BRAIN - 0.00537796598741 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_BRAIN - 0.02896067690612 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_BRAIN - 0.00547808951572 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_BRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_BRAIN - 0.02150259013021 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_BRAIN - 0.00564287946127 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_BRAIN - 0.13541666666666 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_BRAIN - 0.00466459635188 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_BRAIN - 0.00712901221174 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_BRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_BRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_BRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_BRAIN - 0.00757132565054 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00225834820048;
MPRINT(EM_DIAGRAM):   if not missing( T_BRIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_BRIAN - 0.01132332415132 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_BRIAN - 0.00603561230977 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_BRIAN - 0.00081004149025 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_BRIAN - 0.01614583333333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_BRIAN - 0.00981311975591 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_BRIAN - 0.00217403644208 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_BRIAN - 0.00251623376623 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_BRIAN - 0.00619569232171 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_BRIAN - 0.02548837033956 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_BRIAN - 0.0018183836893 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_BRIAN - 0.0069209332035 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_BRIAN - 0.00403669853287 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_BRIAN - 0.01818181818181 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0021856704032;
MPRINT(EM_DIAGRAM):   if not missing( T_BUILD ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_BUILD - 0.02102855102622 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_BUILD - 0.0023020332393 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_BUILD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_BUILD - 0.0050005532555 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_BUILD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_BUILD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_BUILD - 0.00747261152438 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_BUILD - 0.01622608754786 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_BUILD - 0.00140515222482 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_BUILD - 0.0235816169489 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_BUILD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_BUILD - 0.00597142214399 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_BUILD - 0.03160666678567 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_BUILD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_BUILD - 0.011080093436 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_BUILD - 0.00280339280739 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_BUILD - 0.00800865800865 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_BUILD - 0.00598205383848 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_BUILD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_BUILD - 0.00308509337052 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00393417257323;
MPRINT(EM_DIAGRAM):   if not missing( T_BUTTON ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_BUTTON - 0.00121154656552 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_BUTTON - 0.00037714810442 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_BUTTON - 0.00277972709551 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_BUTTON - 0.00132557028338 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_BUTTON - 0.0110012238448 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_BUTTON - 0.01716085155929 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_BUTTON - 0.01387251223768 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_BUTTON - 0.01417213391751 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_BUTTON - 0.00031210986267 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00150884596115;
MPRINT(EM_DIAGRAM):   if not missing( T_CALIFORNIA ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CALIFORNIA - 0.01411680816588 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CALIFORNIA - 0.01713065355575 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CALIFORNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CALIFORNIA - 0.00655577542763 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CALIFORNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CALIFORNIA - 0.02578361981799 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CALIFORNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CALIFORNIA - 0.00753936104782 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CALIFORNIA - 0.0063492063492 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CALIFORNIA - 0.0140747100858 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CALIFORNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CALIFORNIA - 0.01184269825635 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CALIFORNIA - 0.000714349562 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CALIFORNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CALIFORNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CALIFORNIA - 0.00289056073659 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CALIFORNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CALIFORNIA - 0.03064496238747 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CALIFORNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CALIFORNIA - 0.01547555638402 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00334946171345;
MPRINT(EM_DIAGRAM):   if not missing( T_CALL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CALL - 0.0187445132118 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CALL - 0.01483583717801 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CALL - 0.1524289970248 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CALL - 0.00919229314789 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CALL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CALL - 0.00710434328464 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CALL - 0.01866061467362 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CALL - 0.01932457093623 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CALL - 0.01950277163007 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CALL - 0.02170354367325 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CALL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CALL - 0.00840308168565 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CALL - 0.0260858323287 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CALL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CALL - 0.03815102705524 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CALL - 0.02319358483655 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CALL - 0.00809134826526 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CALL - 0.00691176470588 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CALL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CALL - 0.02114827573966 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00430180286262;
MPRINT(EM_DIAGRAM):   if not missing( T_CAN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CAN - 0.00330789045939 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CAN - 0.01390139659442 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CAN - 0.05024278108888 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CAN - 0.02741660856161 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CAN - 0.00288444204074 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CAN - 0.02221678162094 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CAN - 0.02273546883963 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CAN - 0.02246523898091 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CAN - 0.01594556298784 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CAN - 0.05620534110414 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CAN - 0.02817047086895 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CAN - 0.03026298391123 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CAN - 0.01021376021637 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CAN - 0.04727121047836 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CAN - 0.01212121212121 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CAN - 0.01384083044982 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CAN - 0.01011941712046 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00584895262832;
MPRINT(EM_DIAGRAM):   if not missing( T_CARD ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CARD - 0.00522733139395 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CARD - 0.01195413352566 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CARD - 0.00248727019874 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CARD - 0.00122729504172 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CARD - 0.0196788640999 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CARD - 0.00751879699248 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CARD - 0.00332761275471 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CARD - 0.00080005120327 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CARD - 0.00264905515382 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CARD - 0.00322372662798 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CARD - 0.00859993120055 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CARD - 0.00504118312151 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00228853567535;
MPRINT(EM_DIAGRAM):   if not missing( T_CASE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CASE - 0.00447454436967 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CASE - 0.03932044671668 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CASE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CASE - 0.00711190545867 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CASE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CASE - 0.07843058356934 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CASE - 0.02495268434588 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CASE - 0.02734936808057 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CASE - 0.03025151166269 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CASE - 0.00774408014589 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CASE - 0.03312180776969 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CASE - 0.02454843015385 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CASE - 0.03299932562427 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CASE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CASE - 0.00676101614532 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CASE - 0.05145126411585 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CASE - 0.00370562770562 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CASE - 0.0153606442577 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CASE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CASE - 0.03515008611231 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00714032805844;
MPRINT(EM_DIAGRAM):   if not missing( T_CENTER ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CENTER - 0.02272734314964 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CENTER - 0.02197225935568 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CENTER - 0.01754385964912 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CENTER - 0.04087604055089 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CENTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CENTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CENTER - 0.02090950207353 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CENTER - 0.01217831146019 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CENTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CENTER - 0.00518632291228 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CENTER - 0.07698009921879 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CENTER - 0.02327278383321 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CENTER - 0.02384830300397 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CENTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CENTER - 0.01195038159605 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CENTER - 0.0133167066901 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CENTER - 0.01325757575757 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CENTER - 0.01739758403361 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CENTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CENTER - 0.07004770134575 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00734044785206;
MPRINT(EM_DIAGRAM):   if not missing( T_CHANG ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CHANG - 0.00087291553789 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CHANG - 0.01053591852313 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CHANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CHANG - 0.00358187804981 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CHANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CHANG - 0.00459985546548 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CHANG - 0.01177631881153 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CHANG - 0.00793845052154 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CHANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CHANG - 0.0096261235493 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CHANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CHANG - 0.00953663513676 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CHANG - 0.0145417445483 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CHANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CHANG - 0.02677152823698 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CHANG - 0.00703968141553 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CHANG - 0.01172366682344 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CHANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CHANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CHANG - 0.00334847064667 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00223602384301;
MPRINT(EM_DIAGRAM):   if not missing( T_CHIP ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CHIP - 0.03296582944042 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CHIP - 0.0003271063159 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CHIP - 0.02430555555555 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CHIP - 0.01046853295261 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CHIP - 0.0201299556062 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CHIP - 0.03036502951104 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CHIP - 0.00523545706371 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CHIP - 0.00792367929553 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CHIP - 0.02323966942148 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CHIP - 0.00857843137254 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CHIP - 0.00011141174598 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00460467806333;
MPRINT(EM_DIAGRAM):   if not missing( T_CIRCUIT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CIRCUIT - 0.05999352664631 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CIRCUIT - 0.01273489631251 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CIRCUIT - 0.02388284207336 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CIRCUIT - 0.01173690760423 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CIRCUIT - 0.01234704408079 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CIRCUIT - 0.00126761991684 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CIRCUIT - 0.00085068735538 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CIRCUIT - 0.00736837235559 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CIRCUIT - 0.02813796269909 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CIRCUIT - 0.00532821824381 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0054635886551;
MPRINT(EM_DIAGRAM):   if not missing( T_CLIENT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CLIENT - 0.00148323569737 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CLIENT - 0.00240503409018 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CLIENT - 0.00220779220779 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CLIENT - 0.00491942840838 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CLIENT - 0.01629439452289 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CLIENT - 0.09714059641485 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CLIENT - 0.02852217221353 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0041521077325;
MPRINT(EM_DIAGRAM):   if not missing( T_CODE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CODE - 0.01542641702826 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CODE - 0.00164203612479 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CODE - 0.02226720647773 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CODE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CODE - 0.01322115384615 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CODE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CODE - 0.00514948588617 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CODE - 0.00939429278229 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CODE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CODE - 0.03778078253633 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CODE - 0.01880341880341 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CODE - 0.01130926358244 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CODE - 0.02481741526014 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CODE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CODE - 0.02377345009183 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CODE - 0.00396658026594 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CODE - 0.00888888888888 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CODE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CODE - 0.04135338345864 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CODE - 0.00045773375056 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00410754144058;
MPRINT(EM_DIAGRAM):   if not missing( T_COLOR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_COLOR - 0.00052946070645 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_COLOR - 0.00084938400858 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_COLOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_COLOR - 0.0000784445185 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_COLOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_COLOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_COLOR - 0.04435595158077 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_COLOR - 0.00706559833294 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_COLOR - 0.005125 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_COLOR - 0.00693950804628 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_COLOR - 0.0114566284779 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_COLOR - 0.00893065135753 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_COLOR - 0.02435693022634 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_COLOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_COLOR - 0.02701614116148 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_COLOR - 0.00080597384363 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_COLOR - 0.00599844599844 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_COLOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_COLOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_COLOR - 0.00104635768497 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00329555912783;
MPRINT(EM_DIAGRAM):   if not missing( T_COMMUN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_COMMUN - 0.0392969563839 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_COMMUN - 0.01133571137936 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_COMMUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_COMMUN - 0.01077123738352 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_COMMUN - 0.14305266805266 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_COMMUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_COMMUN - 0.00935394145153 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_COMMUN - 0.01835376400118 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_COMMUN - 0.01899364950737 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_COMMUN - 0.00939242121716 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_COMMUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_COMMUN - 0.00657161297893 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_COMMUN - 0.01714521064487 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_COMMUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_COMMUN - 0.03035430759175 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_COMMUN - 0.01509031366168 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_COMMUN - 0.00177383592017 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_COMMUN - 0.00627450980392 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_COMMUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_COMMUN - 0.01094136624069 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00501247265599;
MPRINT(EM_DIAGRAM):   if not missing( T_COMP ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_COMP - 0.01331178449627 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_COMP - 0.00043917435221 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_COMP - 0.00898587933247 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_COMP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_COMP - 0.08860924916959 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_COMP - 0.01139114235923 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_COMP - 0.08163774183458 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_COMP - 0.00598587617151 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_COMP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_COMP - 0.0475508002582 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_COMP - 0.01417004048582 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_COMP - 0.05811211108593 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_COMP - 0.0647385382618 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_COMP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_COMP - 0.17140688535514 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_COMP - 0.0047452271404 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_COMP - 0.05270186953942 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_COMP - 0.00605536332179 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_COMP - 0.73857701005387 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_COMP - 0.00133124269853 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00836858224829;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPANI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_COMPANI - 0.01285374603979 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_COMPANI - 0.00603196614566 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_COMPANI - 0.10269816917738 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_COMPANI - 0.00791561616499 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_COMPANI - 0.01482371794871 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_COMPANI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_COMPANI - 0.00649122807017 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_COMPANI - 0.01637186743241 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_COMPANI - 0.00456637299728 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_COMPANI - 0.02015471716171 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_COMPANI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_COMPANI - 0.00633639281811 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_COMPANI - 0.01092330341508 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_COMPANI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_COMPANI - 0.00820680310979 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_COMPANI - 0.00194446623264 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_COMPANI - 0.04215061945934 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_COMPANI - 0.05643839175758 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_COMPANI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_COMPANI - 0.00285019967351 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00422826374553;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPIL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_COMPIL - 0.00332803872626 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_COMPIL - 0.03577488687782 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_COMPIL - 0.0049621057699 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_COMPIL - 0.00222128165528 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_COMPIL - 0.01027705572961 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_COMPIL - 0.01256606211752 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_COMPIL - 0.03996924542951 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_COMPIL - 0.0063091266315 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_COMPIL - 0.00483193457842 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_COMPIL - 0.03492063492063 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0021340542775;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPUT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_COMPUT - 0.02478712802421 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_COMPUT - 0.02651911045204 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_COMPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_COMPUT - 0.00636031455267 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_COMPUT - 0.01654411764705 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_COMPUT - 0.02239923417143 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_COMPUT - 0.10258180296701 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_COMPUT - 0.01769058972651 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_COMPUT - 0.15147367438944 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_COMPUT - 0.03872996520634 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_COMPUT - 0.03046421663442 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_COMPUT - 0.05380786415881 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_COMPUT - 0.03091579915657 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_COMPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_COMPUT - 0.02260545769611 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_COMPUT - 0.01779698810807 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_COMPUT - 0.1157019786444 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_COMPUT - 0.01819178457638 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_COMPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_COMPUT - 0.01229802748632 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00667425988144;
MPRINT(EM_DIAGRAM):   if not missing( T_CONNECT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CONNECT - 0.00244542339546 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CONNECT - 0.00505625640448 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CONNECT - 0.01467955603293 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CONNECT - 0.00068032164081 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CONNECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CONNECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CONNECT - 0.01051867452761 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CONNECT - 0.01529118804123 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CONNECT - 0.00769119769119 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CONNECT - 0.01042211255498 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CONNECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CONNECT - 0.00862894415525 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CONNECT - 0.03537750385051 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CONNECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CONNECT - 0.00610620588564 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CONNECT - 0.01353322909868 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CONNECT - 0.02533872917206 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CONNECT - 0.01699109595529 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CONNECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CONNECT - 0.00123691346601 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00365708369664;
MPRINT(EM_DIAGRAM):   if not missing( T_CONTROL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CONTROL - 0.01426645957388 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CONTROL - 0.01282006214449 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CONTROL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CONTROL - 0.00528072110583 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CONTROL - 0.0234375 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CONTROL - 0.00167710196779 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CONTROL - 0.00747525183615 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CONTROL - 0.02574428847461 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CONTROL - 0.01244513240518 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CONTROL - 0.01615646512585 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CONTROL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CONTROL - 0.01700422853002 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CONTROL - 0.01281925305157 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CONTROL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CONTROL - 0.00337154571396 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CONTROL - 0.02795920372972 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CONTROL - 0.01784045993532 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CONTROL - 0.025 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CONTROL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CONTROL - 0.01998097769662 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00605835001324;
MPRINT(EM_DIAGRAM):   if not missing( T_COPI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_COPI - 0.00833151254031 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_COPI - 0.00130557273414 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_COPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_COPI - 0.00142385747797 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_COPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_COPI - 0.00336271282432 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_COPI - 0.02066765900099 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_COPI - 0.01481105844499 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_COPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_COPI - 0.0238284607817 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_COPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_COPI - 0.01124176645246 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_COPI - 0.01135612587357 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_COPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_COPI - 0.00820395312682 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_COPI - 0.02814300487926 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_COPI - 0.00223161851068 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_COPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_COPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_COPI - 0.00226812194918 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00488180943163;
MPRINT(EM_DIAGRAM):   if not missing( T_CORRECT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CORRECT - 0.0047445674955 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CORRECT - 0.00836975053711 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CORRECT - 0.02681491865256 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CORRECT - 0.00430871830945 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CORRECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CORRECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CORRECT - 0.02500792770489 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CORRECT - 0.01291387891534 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CORRECT - 0.00821119402634 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CORRECT - 0.0117876066389 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CORRECT - 0.02708559046587 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CORRECT - 0.00684270548918 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CORRECT - 0.01153507382886 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CORRECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CORRECT - 0.01237639508156 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CORRECT - 0.01003288504881 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CORRECT - 0.00264270613107 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CORRECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CORRECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CORRECT - 0.00258237321556 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00280739680636;
MPRINT(EM_DIAGRAM):   if not missing( T_CREAT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CREAT - 0.00109812027646 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CREAT - 0.00633480780808 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CREAT - 0.00226097517941 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CREAT - 0.02042413052587 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CREAT - 0.02933514119379 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CREAT - 0.00909557774187 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CREAT - 0.01330757265905 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CREAT - 0.02972027972027 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CREAT - 0.00284043441938 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CREAT - 0.04367455460187 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CREAT - 0.09512363445168 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CREAT - 0.00510725739262 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CREAT - 0.00335968379446 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CREAT - 0.00666666666666 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CREAT - 0.00569950485694 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00655530340844;
MPRINT(EM_DIAGRAM):   if not missing( T_CURRENT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_CURRENT - 0.01713054065528 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_CURRENT - 0.00294784382386 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_CURRENT - 0.00186171961419 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_CURRENT - 0.00816545023133 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_CURRENT - 0.02656631785657 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_CURRENT - 0.00689581614208 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_CURRENT - 0.01222527472527 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_CURRENT - 0.02103218172258 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_CURRENT - 0.00860355056221 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_CURRENT - 0.0074993837488 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_CURRENT - 0.0073534064097 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_CURRENT - 0.04279425982084 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_CURRENT - 0.0051909670365 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00427224609771;
MPRINT(EM_DIAGRAM):   if not missing( T_DAI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DAI - 0.0128915844663 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DAI - 0.01866105733568 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DAI - 0.0083915322987 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DAI - 0.00990247574549 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DAI - 0.00702855740355 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DAI - 0.01113135777974 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DAI - 0.00393990929705 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DAI - 0.00727496501907 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DAI - 0.00503059986592 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DAI - 0.00427810988371 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DAI - 0.00140591803305 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DAI - 0.01238747863341 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DAI - 0.00987819370172 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DAI - 0.01003016591251 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DAI - 0.07142857142857 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DAI - 0.00536067895752 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00174689902549;
MPRINT(EM_DIAGRAM):   if not missing( T_DATA ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DATA - 0.01232265232625 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DATA - 0.00631313131313 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DATA - 0.02314814814814 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DATA - 0.00861477685046 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DATA - 0.01105780524176 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DATA - 0.02314971069268 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DATA - 0.01626780365548 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DATA - 0.01755128861507 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DATA - 0.01094384110324 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DATA - 0.00520702107074 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DATA - 0.02468711607324 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DATA - 0.00057300014892 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00385138209;
MPRINT(EM_DIAGRAM):   if not missing( T_DAVID ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DAVID - 0.01275649365976 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DAVID - 0.02945543766327 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DAVID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DAVID - 0.0469867717985 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DAVID - 0.02430555555555 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DAVID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DAVID - 0.00897283531409 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DAVID - 0.01896383407287 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DAVID - 0.00580362726704 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DAVID - 0.02700818035195 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DAVID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DAVID - 0.01445430424186 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DAVID - 0.0093740106323 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DAVID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DAVID - 0.0041095198171 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DAVID - 0.02475941726726 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DAVID - 0.03510876203899 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DAVID - 0.06373488238621 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DAVID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DAVID - 0.0036149534516 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00691673325015;
MPRINT(EM_DIAGRAM):   if not missing( T_DEPART ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DEPART - 0.04163372904709 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DEPART - 0.00200216450216 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DEPART - 0.05201119619473 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DEPART - 0.00422643659189 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DEPART - 0.03400735294117 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DEPART - 0.0220971654587 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DEPART - 0.01050960735171 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DEPART - 0.01031115567327 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DEPART - 0.01805546997828 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DEPART - 0.04479508534471 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DEPART - 0.01778846153846 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DEPART - 0.04106950648699 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DEPART - 0.02091112959237 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DEPART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DEPART - 0.01542667441224 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DEPART - 0.01172108335058 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DEPART - 0.09801584299309 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DEPART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DEPART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DEPART - 0.07639466168993 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01152300821202;
MPRINT(EM_DIAGRAM):   if not missing( T_DEPT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DEPT - 0.02856632150339 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DEPT - 0.01291383439687 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DEPT - 0.01243615367532 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DEPT - 0.0054016751845 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DEPT - 0.02916666666666 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DEPT - 0.06542603914696 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DEPT - 0.01893498960259 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DEPT - 0.00795650621256 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DEPT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DEPT - 0.03715237820381 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DEPT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DEPT - 0.04697258835764 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DEPT - 0.02469893458775 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DEPT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DEPT - 0.01288394242976 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DEPT - 0.0153747167111 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DEPT - 0.01866729308589 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DEPT - 0.01220043572984 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DEPT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DEPT - 0.00647834812804 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00713544971934;
MPRINT(EM_DIAGRAM):   if not missing( T_DESIGN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DESIGN - 0.02368653461675 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DESIGN - 0.0009493430546 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DESIGN - 0.00086640252873 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DESIGN - 0.01524532916847 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DESIGN - 0.01086065184241 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DESIGN - 0.00787903700847 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DESIGN - 0.00994301229263 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DESIGN - 0.00800441322135 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DESIGN - 0.00625780464238 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DESIGN - 0.00640384232456 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DESIGN - 0.01473829201101 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DESIGN - 0.00156657784524 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00187054605814;
MPRINT(EM_DIAGRAM):   if not missing( T_DETECTOR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DETECTOR - 0.00753660321796 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DETECTOR - 0.00787027699637 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DETECTOR - 0.01241134751773 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DETECTOR - 0.0078431372549 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0016340005264;
MPRINT(EM_DIAGRAM):   if not missing( T_DEVIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DEVIC - 0.02340196967653 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DEVIC - 0.00110059432093 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DEVIC - 0.17440743244842 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DEVIC - 0.01395348837209 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DEVIC - 0.02046175730386 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DEVIC - 0.01626582297563 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DEVIC - 0.01155705818605 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DEVIC - 0.02647429046967 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DEVIC - 0.00671016275793 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DEVIC - 0.00003711236138 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DEVIC - 0.00584325549408 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DEVIC - 0.00826446280991 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DEVIC - 0.00082289159959 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00448975568447;
MPRINT(EM_DIAGRAM):   if not missing( T_DISEAS ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DISEAS - 0.00441721955301 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DISEAS - 0.05259849469709 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DISEAS - 0.00082518688901 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DISEAS - 0.00186025408348 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DISEAS - 0.00918966438347 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DISEAS - 0.03508639166775 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DISEAS - 0.00009267631103 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DISEAS - 0.00473585988173 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DISEAS - 0.00207889666362 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DISEAS - 0.01093305113053 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DISEAS - 0.00023693943596 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00296395104832;
MPRINT(EM_DIAGRAM):   if not missing( T_DISPLAI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DISPLAI - 0.00559463479817 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DISPLAI - 0.00118739730751 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DISPLAI - 0.01745495495495 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DISPLAI - 0.0171278182396 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DISPLAI - 0.00660269936964 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DISPLAI - 0.0101237078043 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DISPLAI - 0.09458163659232 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DISPLAI - 0.01293124460199 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DISPLAI - 0.07754818754343 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DISPLAI - 0.07127999319099 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DISPLAI - 0.00469465741071 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DISPLAI - 0.01523341523341 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DISPLAI - 0.01628151260504 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00542321360685;
MPRINT(EM_DIAGRAM):   if not missing( T_DISTRIBUT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DISTRIBUT - 0.02873732348556 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DISTRIBUT - 0.04250394140771 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DISTRIBUT - 0.029767893696 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DISTRIBUT - 0.03279732351121 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DISTRIBUT - 0.06221088877338 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DISTRIBUT - 0.0089840744433 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DISTRIBUT - 0.04135252365954 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DISTRIBUT - 0.01872065422023 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DISTRIBUT - 0.00450898308041 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DISTRIBUT - 0.01823215877478 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DISTRIBUT - 0.07679018136335 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DISTRIBUT - 0.30930397387607 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DISTRIBUT - 0.03160632632459 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DISTRIBUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DISTRIBUT - 0.02575489116604 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DISTRIBUT - 0.02333536904023 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DISTRIBUT - 0.07174875068126 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DISTRIBUT - 0.01283846872082 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DISTRIBUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DISTRIBUT - 0.00514146873212 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00865567001839;
MPRINT(EM_DIAGRAM):   if not missing( T_DOCTOR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DOCTOR - 0.0098605503781 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DOCTOR - 0.06429989050031 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DOCTOR - 0.00062951681555 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DOCTOR - 0.00213241012518 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DOCTOR - 0.00331384015594 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DOCTOR - 0.00827910389885 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DOCTOR - 0.02276877789196 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DOCTOR - 0.00008539280691 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DOCTOR - 0.00839358647942 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DOCTOR - 0.00175093815361 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DOCTOR - 0.02158014614157 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DOCTOR - 0.0114046973803 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DOCTOR - 0.00110832942158 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00317355505604;
MPRINT(EM_DIAGRAM):   if not missing( T_DOESN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DOESN - 0.01570652019825 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DOESN - 0.01718971585675 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DOESN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DOESN - 0.00376955671633 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DOESN - 0.060546875 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DOESN - 0.01434655876073 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DOESN - 0.01217086031978 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DOESN - 0.01922361960849 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DOESN - 0.02163280895898 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DOESN - 0.01414016819594 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DOESN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DOESN - 0.01507366244439 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DOESN - 0.02832000782985 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DOESN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DOESN - 0.03410320750152 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DOESN - 0.02413497387952 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DOESN - 0.02440924015854 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DOESN - 0.01628151260504 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DOESN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DOESN - 0.01084898871281 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00556103648851;
MPRINT(EM_DIAGRAM):   if not missing( T_DON ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DON - 0.06314342479323 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DON - 0.03031947632841 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DON - 0.29644339026915 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DON - 0.02882899388356 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DON - 0.03273809523809 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DON - 0.01628604005621 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DON - 0.0375422827488 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DON - 0.05919421015871 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DON - 0.06358579574759 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DON - 0.01884313305321 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DON - 0.04632549598818 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DON - 0.04622686602398 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DON - 0.02654121313284 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DON - 0.0473068399734 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DON - 0.061245584488 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DON - 0.01743953985333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DON - 0.05278864890437 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DON - 0.02709359605911 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DON - 0.0445558029509 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00984988778005;
MPRINT(EM_DIAGRAM):   if not missing( T_DRAW ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DRAW - 0.00065671898886 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DRAW - 0.00307057283801 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DRAW - 0.01469026022227 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DRAW - 0.00802428997217 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DRAW - 0.00561498235758 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DRAW - 0.00499807210333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DRAW - 0.00422027476121 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DRAW - 0.04672313821649 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DRAW - 0.00029903719826 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DRAW - 0.01992384169269 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DRAW - 0.00161984450017 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00311280364982;
MPRINT(EM_DIAGRAM):   if not missing( T_DRIVE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DRIVE - 0.00348279518302 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DRIVE - 0.00122508609646 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DRIVE - 0.00260387811634 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DRIVE - 0.01092024765589 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DRIVE - 0.00846604965449 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DRIVE - 0.01018418201516 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DRIVE - 0.00809837092731 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DRIVE - 0.0064787744877 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DRIVE - 0.00029044617476 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DRIVE - 0.00584111502565 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DRIVE - 0.01383457300275 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DRIVE - 0.00614379084967 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DRIVE - 0.00621989227053 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00209677995678;
MPRINT(EM_DIAGRAM):   if not missing( T_DRUG ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_DRUG - 0.01273751627733 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_DRUG - 0.03598819187737 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_DRUG - 0.00050578034682 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_DRUG - 0.00224023895882 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_DRUG - 0.00667861586475 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_DRUG - 0.02267219149174 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_DRUG - 0.00338964942049 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_DRUG - 0.01835664335664 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_DRUG - 0.00112781954887 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_DRUG - 0.00803124427609 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_DRUG - 0.00758800400772 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00270119779196;
MPRINT(EM_DIAGRAM):   if not missing( T_EDU ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_EDU - 0.02848466360537 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_EDU - 0.04888128648151 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_EDU - 0.05522426756546 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_EDU - 0.00226430628441 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_EDU - 0.01654411764705 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_EDU - 0.02291586560698 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_EDU - 0.05924530776472 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_EDU - 0.01586938721192 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_EDU - 0.31304219405538 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_EDU - 0.02888830946554 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_EDU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_EDU - 0.0360875552775 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_EDU - 0.01061751395374 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_EDU - 0.59649604781183 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_EDU - 0.0112382890133 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_EDU - 0.01884682349503 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_EDU - 0.078389438203 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_EDU - 0.02512998949579 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_EDU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_EDU - 0.00906338026888 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01018096044943;
MPRINT(EM_DIAGRAM):   if not missing( T_EFFECT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_EFFECT - 0.00385955556268 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_EFFECT - 0.03567994425535 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_EFFECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_EFFECT - 0.00277608410004 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_EFFECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_EFFECT - 0.00763158826236 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_EFFECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_EFFECT - 0.00789676308437 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_EFFECT - 0.01740296767237 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_EFFECT - 0.00229099183346 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_EFFECT - 0.0458619970815 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_EFFECT - 0.00672749965725 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_EFFECT - 0.00617696593518 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_EFFECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_EFFECT - 0.00251379741575 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_EFFECT - 0.0203092299224 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_EFFECT - 0.0084175084175 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_EFFECT - 0.01127480906892 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_EFFECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_EFFECT - 0.00232279446475 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00170444052488;
MPRINT(EM_DIAGRAM):   if not missing( T_ELECTR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ELECTR - 0.01136560487026 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ELECTR - 0.00184619302266 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ELECTR - 0.01932045303131 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ELECTR - 0.00164923291825 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ELECTR - 0.00271345029239 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ELECTR - 0.01035519432064 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ELECTR - 0.00449719648261 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ELECTR - 0.00175842832888 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ELECTR - 0.00363668847755 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ELECTR - 0.02551830468046 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ELECTR - 0.18075452169083 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ELECTR - 0.01968396398107 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ELECTR - 0.00141250694648 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00421821746014;
MPRINT(EM_DIAGRAM):   if not missing( T_ELECTRON ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ELECTRON - 0.04830045990465 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ELECTRON - 0.00165945165945 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ELECTRON - 0.08037608669626 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ELECTRON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ELECTRON - 0.03862117763772 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ELECTRON - 0.00567260627037 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ELECTRON - 0.02051693986565 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ELECTRON - 0.02083180781047 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ELECTRON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ELECTRON - 0.02642105782855 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ELECTRON - 0.05802150477787 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ELECTRON - 0.0351700487487 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ELECTRON - 0.00400741193721 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ELECTRON - 0.01754385964912 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ELECTRON - 0.00326885321522 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ELECTRON - 0.00848174928121 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ELECTRON - 0.04479388073213 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ELECTRON - 0.03846844590559 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ELECTRON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ELECTRON - 0.0020144957802 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00188195528935;
MPRINT(EM_DIAGRAM):   if not missing( T_EMAIL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_EMAIL - 0.03057801556833 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_EMAIL - 0.01751677191971 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_EMAIL - 0.02564102564102 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_EMAIL - 0.00307163444527 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_EMAIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_EMAIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_EMAIL - 0.02572102689408 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_EMAIL - 0.00659398755533 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_EMAIL - 0.01031845666319 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_EMAIL - 0.03815190369133 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_EMAIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_EMAIL - 0.02731069952633 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_EMAIL - 0.01641977376439 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_EMAIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_EMAIL - 0.02977245717521 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_EMAIL - 0.00831854514504 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_EMAIL - 0.0198025711662 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_EMAIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_EMAIL - 0.03619047619047 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_EMAIL - 0.00414060637495 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00528353968317;
MPRINT(EM_DIAGRAM):   if not missing( T_ENGIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ENGIN - 0.02539488530755 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ENGIN - 0.00579055218553 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ENGIN - 0.01199200532978 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ENGIN - 0.00688471065691 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ENGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ENGIN - 0.00445324096981 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ENGIN - 0.01683541323172 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ENGIN - 0.01066201314371 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ENGIN - 0.00714974514395 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ENGIN - 0.01337476555364 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ENGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ENGIN - 0.00881642130536 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ENGIN - 0.01144612988007 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ENGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ENGIN - 0.00517674260504 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ENGIN - 0.00946227363176 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ENGIN - 0.5643039897001 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ENGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ENGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ENGIN - 0.0096132000429 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00841015892288;
MPRINT(EM_DIAGRAM):   if not missing( T_ERROR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ERROR - 0.00176991150442 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ERROR - 0.00103519668737 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ERROR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ERROR - 0.00076093213566 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ERROR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ERROR - 0.00749268123013 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ERROR - 0.01201092985205 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ERROR - 0.00577127683822 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ERROR - 0.00383275261324 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ERROR - 0.00358946868127 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ERROR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ERROR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ERROR - 0.07444206894329 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ERROR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ERROR - 0.00647981178407 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ERROR - 0.00940872216213 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ERROR - 0.00217391304347 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ERROR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ERROR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ERROR - 0.00031364498239 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00271516175395;
MPRINT(EM_DIAGRAM):   if not missing( T_EVENT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_EVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_EVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_EVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_EVENT - 0.00565339175806 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_EVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_EVENT - 0.06530332158835 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_EVENT - 0.00377648667122 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_EVENT - 0.00373632883051 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_EVENT - 0.00183982683982 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_EVENT - 0.0055145079926 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_EVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_EVENT - 0.00721425750558 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_EVENT - 0.00745954618286 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_EVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_EVENT - 0.06500957650341 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_EVENT - 0.00689882360216 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_EVENT - 0.00686980390997 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_EVENT - 0.0066844919786 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_EVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_EVENT - 0.00261915677273 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00292364919943;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPERI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_EXPERI - 0.03922478896679 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_EXPERI - 0.00775892998776 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_EXPERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_EXPERI - 0.00288728946708 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_EXPERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_EXPERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_EXPERI - 0.01572030458487 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_EXPERI - 0.00742426961245 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_EXPERI - 0.00712360415864 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_EXPERI - 0.00774605021539 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_EXPERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_EXPERI - 0.00711481089621 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_EXPERI - 0.01233209008047 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_EXPERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_EXPERI - 0.00715146913567 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_EXPERI - 0.11065100970908 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_EXPERI - 0.0146069575245 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_EXPERI - 0.0078781512605 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_EXPERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_EXPERI - 0.00198892985884 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00454901538184;
MPRINT(EM_DIAGRAM):   if not missing( T_FACT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FACT - 0.01535997491135 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FACT - 0.01492264885815 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FACT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FACT - 0.04587444493823 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FACT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FACT - 0.01413081443326 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FACT - 0.01142604370502 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FACT - 0.00837648120439 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FACT - 0.02643355142844 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FACT - 0.00328187588205 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FACT - 0.1050417149016 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FACT - 0.00837239946278 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FACT - 0.00466609765657 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FACT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FACT - 0.00329854513808 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FACT - 0.20113320705486 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FACT - 0.01100233100233 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FACT - 0.01005967604433 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FACT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FACT - 0.05626137202047 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00905844390357;
MPRINT(EM_DIAGRAM):   if not missing( T_FAX ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FAX - 0.00745344481242 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FAX - 0.00984043801825 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FAX - 0.0464454662741 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FAX - 0.00020387359836 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FAX - 0.04411764705882 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FAX - 0.03362787994212 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FAX - 0.0287040791438 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FAX - 0.00625128408549 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FAX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FAX - 0.06080581607931 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FAX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FAX - 0.00547324192835 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FAX - 0.04138720608066 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FAX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FAX - 0.01947196945966 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FAX - 0.00923453382302 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FAX - 0.03436718698204 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FAX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FAX - 0.05911330049261 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FAX - 0.01546773639357 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00775350103067;
MPRINT(EM_DIAGRAM):   if not missing( T_FEEL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FEEL - 0.00575262213854 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FEEL - 0.0106893181593 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FEEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FEEL - 0.00745515740313 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FEEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FEEL - 0.00178890876565 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FEEL - 0.00350877192982 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FEEL - 0.0171171105274 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FEEL - 0.00544217687074 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FEEL - 0.00483119359912 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FEEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FEEL - 0.01178606900757 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FEEL - 0.00326298846447 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FEEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FEEL - 0.00328942264426 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FEEL - 0.02624003319962 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FEEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FEEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FEEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FEEL - 0.02237640754263 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00374578836291;
MPRINT(EM_DIAGRAM):   if not missing( T_FILE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FILE - 0.00355197691917 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FILE - 0.000702000702 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FILE - 0.00426742532005 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FILE - 0.00197554008713 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FILE - 0.03795248868778 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FILE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FILE - 0.03657935653094 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FILE - 0.00639099419999 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FILE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FILE - 0.01509279937844 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FILE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FILE - 0.01325714237503 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FILE - 0.01926904694024 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FILE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FILE - 0.03812210460167 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FILE - 0.00371864615269 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FILE - 0.00698226504678 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FILE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FILE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FILE - 0.00221092615395 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0025055111111;
MPRINT(EM_DIAGRAM):   if not missing( T_FIND ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FIND - 0.04699732402206 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FIND - 0.02780739832235 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FIND - 0.41812429696659 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FIND - 0.01084331681267 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FIND - 0.04044117647058 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FIND - 0.00645684257602 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FIND - 0.008169714149 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FIND - 0.01702814885859 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FIND - 0.01905247761539 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FIND - 0.04552136801256 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FIND - 0.01021099508753 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FIND - 0.02201216968581 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FIND - 0.03100563509308 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FIND - 0.02800574353039 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FIND - 0.02825377455979 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FIND - 0.00548354935194 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FIND - 0.01134996626183 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00694155278948;
MPRINT(EM_DIAGRAM):   if not missing( T_FOLLOWUP ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FOLLOWUP - 0.00674466251141 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FOLLOWUP - 0.02150740029391 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FOLLOWUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FOLLOWUP - 0.037245204493 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FOLLOWUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FOLLOWUP - 0.00585507055688 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FOLLOWUP - 0.00878605970462 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FOLLOWUP - 0.00847868490902 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FOLLOWUP - 0.01280482410671 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FOLLOWUP - 0.00822992917533 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FOLLOWUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FOLLOWUP - 0.01944489791125 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FOLLOWUP - 0.00977300174341 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FOLLOWUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FOLLOWUP - 0.01163418210604 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FOLLOWUP - 0.01481071468266 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FOLLOWUP - 0.00534851621808 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FOLLOWUP - 0.04024563671622 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FOLLOWUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FOLLOWUP - 0.00443733743391 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00246291976259;
MPRINT(EM_DIAGRAM):   if not missing( T_FONT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FONT - 0.01402816251154 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FONT - 0.00033597443632 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FONT - 0.01006224660984 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FONT - 0.01168091168091 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FONT - 0.01111269866798 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FONT - 0.01461843181087 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FONT - 0.00425076836016 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00164279251308;
MPRINT(EM_DIAGRAM):   if not missing( T_FOOD ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FOOD - 0.00908695723327 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FOOD - 0.02213243315527 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FOOD - 0.00415779133334 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FOOD - 0.03333333333333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FOOD - 0.01976541403918 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FOOD - 0.00139682539682 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FOOD - 0.00164871194379 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FOOD - 0.01651031894934 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FOOD - 0.00738105768623 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FOOD - 0.00152001712695 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FOOD - 0.02658567034255 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FOOD - 0.01036192810457 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FOOD - 0.00034581859494 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00394717678326;
MPRINT(EM_DIAGRAM):   if not missing( T_FRI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FRI - 0.0306316740527 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FRI - 0.02434026078138 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FRI - 0.00866089273817 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FRI - 0.0102838980543 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FRI - 0.1553754589719 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FRI - 0.01519957793342 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FRI - 0.06204714711139 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FRI - 0.01687785412142 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FRI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FRI - 0.03606765943546 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FRI - 0.05903400199174 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FRI - 0.01746085656985 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FRI - 0.02670471303635 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FRI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FRI - 0.02907966937314 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FRI - 0.01056788452744 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FRI - 0.07506186822285 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FRI - 0.06199065399051 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FRI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FRI - 0.01362532056019 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00708758507999;
MPRINT(EM_DIAGRAM):   if not missing( T_FRIEND ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FRIEND - 0.00365311875535 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FRIEND - 0.03400348676134 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FRIEND - 0.04155602971392 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FRIEND - 0.00089280788241 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FRIEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FRIEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FRIEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FRIEND - 0.01230080647042 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FRIEND - 0.00539908685846 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FRIEND - 0.00578174896026 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FRIEND - 0.04255319148936 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FRIEND - 0.01193529932826 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FRIEND - 0.0036991987859 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FRIEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FRIEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FRIEND - 0.00890792461953 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FRIEND - 0.01560409287682 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FRIEND - 0.00875129529759 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FRIEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FRIEND - 0.00227112971813 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00303918802304;
MPRINT(EM_DIAGRAM):   if not missing( T_FUNCTION ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_FUNCTION - 0.00596464761174 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_FUNCTION - 0.00582051002219 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_FUNCTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_FUNCTION - 0.00074982545156 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_FUNCTION - 0.05681818181818 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_FUNCTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_FUNCTION - 0.01451375132951 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_FUNCTION - 0.00899667305893 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_FUNCTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_FUNCTION - 0.02187858049657 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_FUNCTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_FUNCTION - 0.01193270254653 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_FUNCTION - 0.02571676988254 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_FUNCTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_FUNCTION - 0.05203519308501 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_FUNCTION - 0.00789447845353 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_FUNCTION - 0.00592885375494 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_FUNCTION - 0.01864876385336 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_FUNCTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_FUNCTION - 0.00123247855784 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00494034847805;
MPRINT(EM_DIAGRAM):   if not missing( T_GEB ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GEB - 0.0006975020707 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GEB - 0.01162859806331 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GEB - 0.00327234117009 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GEB - 0.5306146941937 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GEB - 0.00190953574412 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GEB - 0.0015274685445 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GEB - 0.00838235294117 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00745996646351;
MPRINT(EM_DIAGRAM):   if not missing( T_GENER ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GENER - 0.01144324864016 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GENER - 0.03844065668479 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GENER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GENER - 0.01565035502787 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GENER - 0.02949134199134 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GENER - 0.00174099156657 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GENER - 0.00952001215159 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GENER - 0.02729818102063 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GENER - 0.00866937752544 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GENER - 0.03130243391944 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GENER - 0.01497252747252 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GENER - 0.00987022835547 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GENER - 0.01785329984318 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GENER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GENER - 0.02199803561732 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GENER - 0.02300638806723 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GENER - 0.00926588939011 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GENER - 0.02939774055931 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GENER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GENER - 0.01537196189745 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00692775045609;
MPRINT(EM_DIAGRAM):   if not missing( T_GEORGIA ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GEORGIA - 0.00148822929671 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GEORGIA - 0.00026675381368 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GEORGIA - 0.3413223210525 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194129598548;
MPRINT(EM_DIAGRAM):   if not missing( T_GIVE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GIVE - 0.02206085528354 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GIVE - 0.01230107941967 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GIVE - 0.0556146722739 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GIVE - 0.01445946323932 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GIVE - 0.04809354635294 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GIVE - 0.00681221411759 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GIVE - 0.01271075976378 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GIVE - 0.0173693039619 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GIVE - 0.01799192212636 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GIVE - 0.07692307692307 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GIVE - 0.00451420950035 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GIVE - 0.02178251031592 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GIVE - 0.0249125127774 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GIVE - 0.01365251520177 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GIVE - 0.0175632183908 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GIVE - 0.01214654282765 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GIVE - 0.01857747162466 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0039867412386;
MPRINT(EM_DIAGRAM):   if not missing( T_GOOD ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GOOD - 0.41129278511453 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GOOD - 0.02098738652596 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GOOD - 0.03003270889087 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GOOD - 0.00599606090311 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GOOD - 0.01248039414055 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GOOD - 0.01950229007474 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GOOD - 0.02954955350456 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GOOD - 0.0430146313931 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GOOD - 0.00588487256853 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GOOD - 0.02451802374646 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GOOD - 0.01608103436894 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GOOD - 0.00284186683305 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GOOD - 0.03200380398261 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GOOD - 0.01899808703969 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GOOD - 0.00697906281156 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GOOD - 0.06666666666666 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GOOD - 0.0132127460115 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01052053368232;
MPRINT(EM_DIAGRAM):   if not missing( T_GORDON ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GORDON - 0.00648266630423 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GORDON - 0.00874863072114 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GORDON - 0.00200501253132 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GORDON - 0.00470493242946 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GORDON - 0.52611175395401 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GORDON - 0.00066980638409 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GORDON - 0.00837520705483 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GORDON - 0.00002639101254 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GORDON - 0.0030723932443 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GORDON - 0.00331375941132 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GORDON - 0.03069716775599 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GORDON - 0.0002125358523 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00770529986509;
MPRINT(EM_DIAGRAM):   if not missing( T_GOVERN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GOVERN - 0.00544942704787 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GOVERN - 0.00136569779426 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GOVERN - 0.09689718909147 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GOVERN - 0.03607982611052 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GOVERN - 0.00563145112325 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GOVERN - 0.01278788096875 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GOVERN - 0.00732647885939 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GOVERN - 0.00857479103926 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GOVERN - 0.05163681573323 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00484733616596;
MPRINT(EM_DIAGRAM):   if not missing( T_GRAPHIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GRAPHIC - 0.00938833570412 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GRAPHIC - 0.00017027863777 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GRAPHIC - 0.00629776398328 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GRAPHIC - 0.00115467082248 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GRAPHIC - 0.00664414338967 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GRAPHIC - 0.00235414645957 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GRAPHIC - 0.01219770902355 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GRAPHIC - 0.02361031431756 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GRAPHIC - 0.00165525530929 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GRAPHIC - 0.00342857142857 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00115008148989;
MPRINT(EM_DIAGRAM):   if not missing( T_GREAT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GREAT - 0.02083309617757 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GREAT - 0.0121310333631 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GREAT - 0.00932711525649 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GREAT - 0.00494914233276 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GREAT - 0.0324074074074 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GREAT - 0.01743006164058 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GREAT - 0.01380929415267 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GREAT - 0.01977645157101 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GREAT - 0.00793245815627 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GREAT - 0.01313320825515 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GREAT - 0.00513327973282 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GREAT - 0.00913976421598 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GREAT - 0.00386996140248 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GREAT - 0.00638011115798 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GREAT - 0.00578512396694 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GREAT - 0.00977269541182 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00269364504316;
MPRINT(EM_DIAGRAM):   if not missing( T_GREEK ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GREEK - 0.00535631113181 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GREEK - 0.0211055973362 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GREEK - 0.01544038465856 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GREEK - 0.00118216175359 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GREEK - 0.00880933677477 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GREEK - 0.00077839447678 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GREEK - 0.01517722473604 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GREEK - 0.00207448013537 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00300479601726;
MPRINT(EM_DIAGRAM):   if not missing( T_GROUND ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GROUND - 0.00085915299345 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GROUND - 0.00181252645935 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GROUND - 0.00106045663262 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GROUND - 0.0075505218743 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GROUND - 0.01126907351578 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GROUND - 0.00131943262115 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GROUND - 0.00355729004285 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GROUND - 0.00201671966684 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GROUND - 0.00125949745625 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GROUND - 0.02340143516614 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GROUND - 0.00752219046186 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GROUND - 0.00092234866958 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00185029919574;
MPRINT(EM_DIAGRAM):   if not missing( T_GROUP ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GROUP - 0.00877108354928 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GROUP - 0.01773780190812 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_GROUP - 0.00632211158526 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_GROUP - 0.00607936581715 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_GROUP - 0.01633986928104 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_GROUP - 0.00947745241958 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_GROUP - 0.01444579762936 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_GROUP - 0.01127956744438 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_GROUP - 0.00520348490273 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_GROUP - 0.02462225398506 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_GROUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_GROUP - 0.03063593100675 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_GROUP - 0.00594800205962 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_GROUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_GROUP - 0.00818117657058 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_GROUP - 0.0121731448286 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_GROUP - 0.00748614159549 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_GROUP - 0.02524428195251 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_GROUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_GROUP - 0.01318630397857 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00346574744131;
MPRINT(EM_DIAGRAM):   if not missing( T_HAPPEN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_HAPPEN - 0.00207582213481 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_HAPPEN - 0.0341919491641 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_HAPPEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_HAPPEN - 0.02782911028551 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_HAPPEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_HAPPEN - 0.09790782556665 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_HAPPEN - 0.01794928667984 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_HAPPEN - 0.01403200413941 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_HAPPEN - 0.00454472667587 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_HAPPEN - 0.00150611702848 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_HAPPEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_HAPPEN - 0.01007218398522 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_HAPPEN - 0.01797138360531 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_HAPPEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_HAPPEN - 0.0031535285585 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_HAPPEN - 0.01642491844495 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_HAPPEN - 0.0077718540307 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_HAPPEN - 0.01470588235294 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_HAPPEN - 0.07142857142857 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_HAPPEN - 0.01431627077364 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00501228233194;
MPRINT(EM_DIAGRAM):   if not missing( T_HEAR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_HEAR - 0.02289773416484 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_HEAR - 0.00389152953363 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_HEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_HEAR - 0.00601686527116 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_HEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_HEAR - 0.00696461244023 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_HEAR - 0.01015271831892 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_HEAR - 0.00937698167734 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_HEAR - 0.00906305784725 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_HEAR - 0.01200176030817 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_HEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_HEAR - 0.01513977330624 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_HEAR - 0.00401376293369 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_HEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_HEAR - 0.00398351648351 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_HEAR - 0.0165694304882 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_HEAR - 0.0165700153505 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_HEAR - 0.01913650075414 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_HEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_HEAR - 0.01609191722302 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00335092305857;
MPRINT(EM_DIAGRAM):   if not missing( T_HIGH ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_HIGH - 0.01680734529996 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_HIGH - 0.00622847779854 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_HIGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_HIGH - 0.00159370963299 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_HIGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_HIGH - 0.00279371790999 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_HIGH - 0.00582951586531 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_HIGH - 0.0176482504298 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_HIGH - 0.00857084212995 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_HIGH - 0.00631245787997 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_HIGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_HIGH - 0.00187772200487 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_HIGH - 0.00231899187842 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_HIGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_HIGH - 0.00167711067956 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_HIGH - 0.01316423546018 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_HIGH - 0.00336363636363 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_HIGH - 0.00513318534961 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_HIGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_HIGH - 0.00411675961376 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194351445074;
MPRINT(EM_DIAGRAM):   if not missing( T_HOME ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_HOME - 0.00525003478571 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_HOME - 0.01310530941513 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_HOME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_HOME - 0.01263620391071 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_HOME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_HOME - 0.01258486205402 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_HOME - 0.00256892230576 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_HOME - 0.01292843538047 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_HOME - 0.00412962084058 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_HOME - 0.00893813614407 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_HOME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_HOME - 0.00571313406217 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_HOME - 0.01125350392746 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_HOME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_HOME - 0.00288150014671 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_HOME - 0.01036084973325 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_HOME - 0.01167125803489 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_HOME - 0.00952064853719 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_HOME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_HOME - 0.02121660747801 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00278083727473;
MPRINT(EM_DIAGRAM):   if not missing( T_IDEA ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_IDEA - 0.01154751780961 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_IDEA - 0.0082487254889 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_IDEA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_IDEA - 0.00219088959009 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_IDEA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_IDEA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_IDEA - 0.0103440860215 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_IDEA - 0.0126688652894 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_IDEA - 0.0036968766001 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_IDEA - 0.00904815744321 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_IDEA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_IDEA - 0.00675937250739 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_IDEA - 0.0180081387769 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_IDEA - 0.05555555555555 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_IDEA - 0.00535641446687 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_IDEA - 0.0288442530367 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_IDEA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_IDEA - 0.00497702205882 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_IDEA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_IDEA - 0.00401542229863 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219729366702;
MPRINT(EM_DIAGRAM):   if not missing( T_IMAG ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_IMAG - 0.00782089100673 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_IMAG - 0.00447417312238 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_IMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_IMAG - 0.00068488623287 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_IMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_IMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_IMAG - 0.00560077355041 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_IMAG - 0.00516677319187 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_IMAG - 0.00152597402597 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_IMAG - 0.01043634284737 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_IMAG - 0.22749686317425 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_IMAG - 0.00927685514151 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_IMAG - 0.01704282906416 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_IMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_IMAG - 0.02924606468981 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_IMAG - 0.0020027930784 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_IMAG - 0.02538851190888 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_IMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_IMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_IMAG - 0.00504737528459 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00371744239839;
MPRINT(EM_DIAGRAM):   if not missing( T_INCLUD ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_INCLUD - 0.00106522451655 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_INCLUD - 0.01135044189021 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_INCLUD - 0.0328947368421 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_INCLUD - 0.0195231335375 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_INCLUD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_INCLUD - 0.02424255789266 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_INCLUD - 0.01009741537261 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_INCLUD - 0.01633522825781 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_INCLUD - 0.00977624759176 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_INCLUD - 0.06474450379889 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_INCLUD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_INCLUD - 0.01229959450749 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_INCLUD - 0.02515055153313 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_INCLUD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_INCLUD - 0.02082549208878 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_INCLUD - 0.01682930331489 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_INCLUD - 0.00627813612846 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_INCLUD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_INCLUD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_INCLUD - 0.02376627910267 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00639259130048;
MPRINT(EM_DIAGRAM):   if not missing( T_INFO ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_INFO - 0.01898443424607 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_INFO - 0.01739711001652 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_INFO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_INFO - 0.00021776737655 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_INFO - 0.02520254629629 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_INFO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_INFO - 0.0173120151347 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_INFO - 0.00522837261762 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_INFO - 0.00226480836236 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_INFO - 0.01545718922209 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_INFO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_INFO - 0.00827850877192 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_INFO - 0.01329122991442 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_INFO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_INFO - 0.00927961258161 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_INFO - 0.0036618561982 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_INFO - 0.01431545903004 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_INFO - 0.02039948163173 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_INFO - 0.03458128078817 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_INFO - 0.00016694919607 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00198648562754;
MPRINT(EM_DIAGRAM):   if not missing( T_INFORM ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_INFORM - 0.02100549556747 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_INFORM - 0.05882335915927 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_INFORM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_INFORM - 0.00692238916303 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_INFORM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_INFORM - 0.01487228611398 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_INFORM - 0.05060023097849 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_INFORM - 0.01134453688386 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_INFORM - 0.02103546342613 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_INFORM - 0.0387752616505 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_INFORM - 0.07091588966588 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_INFORM - 0.02315984551436 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_INFORM - 0.00806194198359 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_INFORM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_INFORM - 0.03108831655337 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_INFORM - 0.00839072575154 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_INFORM - 0.02058675487954 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_INFORM - 0.02649556552409 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_INFORM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_INFORM - 0.01256343268133 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00588961957597;
MPRINT(EM_DIAGRAM):   if not missing( T_INPUT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_INPUT - 0.01228827406668 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_INPUT - 0.00030595283759 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_INPUT - 0.00243217169908 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_INPUT - 0.0128593064403 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_INPUT - 0.00704601298101 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_INPUT - 0.00575920417602 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_INPUT - 0.01153958228703 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_INPUT - 0.01244977076956 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_INPUT - 0.00344127690324 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_INPUT - 0.01824025685873 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_INPUT - 0.00087764149119 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00251815963322;
MPRINT(EM_DIAGRAM):   if not missing( T_INSTITUT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_INSTITUT - 0.0118860454326 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_INSTITUT - 0.0112618618913 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_INSTITUT - 0.03564067972385 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_INSTITUT - 0.00050593216696 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_INSTITUT - 0.028125 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_INSTITUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_INSTITUT - 0.02735470179974 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_INSTITUT - 0.0049571073382 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_INSTITUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_INSTITUT - 0.0176959337431 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_INSTITUT - 0.01538461538461 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_INSTITUT - 0.01149803955834 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_INSTITUT - 0.00321557071705 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_INSTITUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_INSTITUT - 0.00814528608646 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_INSTITUT - 0.01082679515802 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_INSTITUT - 0.00796335447498 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_INSTITUT - 0.14889257167855 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_INSTITUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_INSTITUT - 0.00468054420247 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00320854425513;
MPRINT(EM_DIAGRAM):   if not missing( T_INTEREST ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_INTEREST - 0.06161078501943 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_INTEREST - 0.0236030994277 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_INTEREST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_INTEREST - 0.00347646451454 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_INTEREST - 0.02884615384615 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_INTEREST - 0.03154066420746 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_INTEREST - 0.01031336408793 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_INTEREST - 0.01362352500732 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_INTEREST - 0.01446828506711 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_INTEREST - 0.03757702425141 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_INTEREST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_INTEREST - 0.01873343614161 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_INTEREST - 0.00446438070175 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_INTEREST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_INTEREST - 0.02141476330928 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_INTEREST - 0.0145073347707 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_INTEREST - 0.01398601398601 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_INTEREST - 0.00628676470588 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_INTEREST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_INTEREST - 0.01530602977679 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00549624250428;
MPRINT(EM_DIAGRAM):   if not missing( T_INTERNET ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_INTERNET - 0.00381565650047 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_INTERNET - 0.00386296503881 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_INTERNET - 0.00401427297056 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_INTERNET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_INTERNET - 0.04147437171334 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_INTERNET - 0.00993320445377 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_INTERNET - 0.01514577872431 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_INTERNET - 0.00386396176364 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_INTERNET - 0.00110837438423 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_INTERNET - 0.01108555299952 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_INTERNET - 0.00736497545008 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_INTERNET - 0.00222440844454 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_INTERNET - 0.01444433067951 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_INTERNET - 0.27193223443223 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_INTERNET - 0.02064080529611 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_INTERNET - 0.00199103803798 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_INTERNET - 0.00619318181818 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_INTERNET - 0.01383365086925 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_INTERNET - 0.4847995064632 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_INTERNET - 0.00268484591354 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023033906012;
MPRINT(EM_DIAGRAM):   if not missing( T_ISRA ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ISRA - 0.00258112094395 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ISRA - 0.00103363612319 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ISRA - 0.31667326343747 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ISRA - 0.00118845500848 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ISRA - 0.00289759861205 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ISRA - 0.00128864961679 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ISRA - 0.00269084152865 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ISRA - 0.00383772231022 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ISRA - 0.10331497004597 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00454165303342;
MPRINT(EM_DIAGRAM):   if not missing( T_ISRAEL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ISRAEL - 0.0036781273151 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ISRAEL - 0.00367447188567 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ISRAEL - 0.13186269638429 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ISRAEL - 0.00446554911313 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ISRAEL - 0.00445538927115 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ISRAEL - 0.00074745864062 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ISRAEL - 0.00051695616211 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ISRAEL - 0.0146357511607 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ISRAEL - 0.01904761904761 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ISRAEL - 0.02450980392156 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ISRAEL - 0.1691644409026 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00756701302047;
MPRINT(EM_DIAGRAM):   if not missing( T_JEW ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_JEW - 0.00889729581374 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_JEW - 0.02530561152208 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_JEW - 0.0038382357493 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_JEW - 0.00108225108225 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_JEW - 0.00340505817763 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_JEW - 0.00742291494367 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_JEW - 0.00172176308539 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_JEW - 0.10243761257999 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00429198045122;
MPRINT(EM_DIAGRAM):   if not missing( T_JEWISH ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_JEWISH - 0.00059831767148 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_JEWISH - 0.01060331690752 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_JEWISH - 0.00552776911588 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_JEWISH - 0.00674059404806 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_JEWISH - 0.00120398043155 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_JEWISH - 0.00751879699248 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_JEWISH - 0.0016942395854 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_JEWISH - 0.00146487690933 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_JEWISH - 0.0914797102973 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00405993378627;
MPRINT(EM_DIAGRAM):   if not missing( T_JOHN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_JOHN - 0.02954172792395 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_JOHN - 0.00744181083482 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_JOHN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_JOHN - 0.00121402646717 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_JOHN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_JOHN - 0.00199132351895 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_JOHN - 0.00437511393525 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_JOHN - 0.01304390819434 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_JOHN - 0.0136011723275 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_JOHN - 0.02680721398945 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_JOHN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_JOHN - 0.01761748940613 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_JOHN - 0.01199650274794 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_JOHN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_JOHN - 0.0077030220097 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_JOHN - 0.0055832301135 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_JOHN - 0.02741753196298 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_JOHN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_JOHN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_JOHN - 0.00801496112002 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00403753054142;
MPRINT(EM_DIAGRAM):   if not missing( T_KEYBOARD ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_KEYBOARD - 0.00133907778295 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_KEYBOARD - 0.00673795349135 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_KEYBOARD - 0.00285436407097 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_KEYBOARD - 0.00212498968183 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_KEYBOARD - 0.00915023407575 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_KEYBOARD - 0.01012591050265 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_KEYBOARD - 0.0114144292667 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_KEYBOARD - 0.0025886759198 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_KEYBOARD - 0.00138868762981 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00128522091314;
MPRINT(EM_DIAGRAM):   if not missing( T_KEYWORD ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_KEYWORD - 0.00945064054669 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_KEYWORD - 0.03678548369565 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_KEYWORD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_KEYWORD - 0.00465205352528 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_KEYWORD - 0.05302601809954 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_KEYWORD - 0.01162790697674 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_KEYWORD - 0.02371554305186 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_KEYWORD - 0.01238004649362 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_KEYWORD - 0.00520466807412 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_KEYWORD - 0.02047458910554 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_KEYWORD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_KEYWORD - 0.02035948586038 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_KEYWORD - 0.03029120462961 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_KEYWORD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_KEYWORD - 0.0283123039258 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_KEYWORD - 0.01352311476914 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_KEYWORD - 0.00862346872985 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_KEYWORD - 0.06424592169373 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_KEYWORD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_KEYWORD - 0.00084743156092 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00455869962824;
MPRINT(EM_DIAGRAM):   if not missing( T_KILL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_KILL - 0.00192381685263 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_KILL - 0.00150859241768 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_KILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_KILL - 0.03884047868794 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_KILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_KILL - 0.20757391560244 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_KILL - 0.00070175438596 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_KILL - 0.00800963859927 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_KILL - 0.00777367286801 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_KILL - 0.00125545263564 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_KILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_KILL - 0.00121270919233 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_KILL - 0.00530411911522 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_KILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_KILL - 0.00071684587813 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_KILL - 0.00336257393527 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_KILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_KILL - 0.00565610859728 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_KILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_KILL - 0.0614329317785 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00467303917338;
MPRINT(EM_DIAGRAM):   if not missing( T_KIND ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_KIND - 0.02233805145269 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_KIND - 0.01741541478649 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_KIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_KIND - 0.00337119143385 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_KIND - 0.03009259259259 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_KIND - 0.02343291736376 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_KIND - 0.00882655259703 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_KIND - 0.01152121952761 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_KIND - 0.01197685698447 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_KIND - 0.01601074829471 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_KIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_KIND - 0.01833710812405 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_KIND - 0.00615359018806 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_KIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_KIND - 0.00331565371127 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_KIND - 0.02521339738537 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_KIND - 0.00315151515151 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_KIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_KIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_KIND - 0.00705318311398 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00342577386398;
MPRINT(EM_DIAGRAM):   if not missing( T_LEVEL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_LEVEL - 0.04897667814738 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_LEVEL - 0.00756465866964 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_LEVEL - 0.00839054157131 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_LEVEL - 0.00176199502721 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_LEVEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_LEVEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_LEVEL - 0.00316780045351 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_LEVEL - 0.01010327870995 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_LEVEL - 0.00797478350852 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_LEVEL - 0.00529237192515 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_LEVEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_LEVEL - 0.00927873713784 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_LEVEL - 0.00299208918564 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_LEVEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_LEVEL - 0.0069112314839 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_LEVEL - 0.00449052759617 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_LEVEL - 0.0054054054054 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_LEVEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_LEVEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_LEVEL - 0.00117647861735 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229007745831;
MPRINT(EM_DIAGRAM):   if not missing( T_LIST ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_LIST - 0.00535778446061 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_LIST - 0.00420352567822 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_LIST - 0.02711323763955 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_LIST - 0.00269355016124 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_LIST - 0.0322265625 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_LIST - 0.00210291934685 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_LIST - 0.01360143160486 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_LIST - 0.00510317449169 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_LIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_LIST - 0.02112878127094 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_LIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_LIST - 0.01984300416603 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_LIST - 0.00708074939127 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_LIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_LIST - 0.01387142571247 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_LIST - 0.00138623094878 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_LIST - 0.00441558441558 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_LIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_LIST - 0.18330443565811 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_LIST - 0.00259862522977 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00317252187615;
MPRINT(EM_DIAGRAM):   if not missing( T_LIVE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_LIVE - 0.01779324614469 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_LIVE - 0.01099934757221 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_LIVE - 0.05767681284213 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_LIVE - 0.02680988899865 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_LIVE - 0.02893518518518 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_LIVE - 0.00966330181446 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_LIVE - 0.00071901064135 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_LIVE - 0.01163481363605 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_LIVE - 0.01900347863229 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_LIVE - 0.00519354590666 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_LIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_LIVE - 0.0042534074706 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_LIVE - 0.00453738591763 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_LIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_LIVE - 0.00412081167715 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_LIVE - 0.00904356244673 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_LIVE - 0.00483558994197 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_LIVE - 0.00532821824381 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_LIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_LIVE - 0.04070311584194 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00308449074548;
MPRINT(EM_DIAGRAM):   if not missing( T_LONG ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_LONG - 0.00763295831654 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_LONG - 0.01574940852091 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_LONG - 0.01755439650176 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_LONG - 0.0070528352544 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_LONG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_LONG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_LONG - 0.00197483608009 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_LONG - 0.01933304722749 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_LONG - 0.03091168211881 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_LONG - 0.00831699775091 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_LONG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_LONG - 0.00449594194826 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_LONG - 0.01237671480605 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_LONG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_LONG - 0.0164109652979 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_LONG - 0.01447090212709 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_LONG - 0.01297801297801 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_LONG - 0.0062829812393 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_LONG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_LONG - 0.00724411934006 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0029548016993;
MPRINT(EM_DIAGRAM):   if not missing( T_MACHIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MACHIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MACHIN - 0.00600365239173 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MACHIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MACHIN - 0.00101282724114 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MACHIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MACHIN - 0.0398125894413 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MACHIN - 0.00925507927849 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MACHIN - 0.01075133028224 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MACHIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MACHIN - 0.0146668890048 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MACHIN - 0.02073104200763 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MACHIN - 0.02414045125328 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MACHIN - 0.05309442611705 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MACHIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MACHIN - 0.01743888925852 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MACHIN - 0.00941173288113 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MACHIN - 0.0123347641318 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MACHIN - 0.00665266106442 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MACHIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MACHIN - 0.01464498426083 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00445586487322;
MPRINT(EM_DIAGRAM):   if not missing( T_MAIL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MAIL - 0.00950568647786 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MAIL - 0.01777636866635 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MAIL - 0.0140304012703 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MAIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MAIL - 0.01332720588235 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MAIL - 0.00385902377613 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MAIL - 0.0223549333379 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MAIL - 0.01101297175944 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MAIL - 0.00252613240418 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MAIL - 0.05022466742692 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MAIL - 0.01239316239316 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MAIL - 0.03736126605616 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MAIL - 0.01379688957589 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MAIL - 0.48051070518175 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MAIL - 0.01657235425222 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MAIL - 0.00468824532482 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MAIL - 0.04136269673994 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MAIL - 0.01362456747404 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MAIL - 0.38278639306599 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MAIL - 0.00427286036018 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00543251060544;
MPRINT(EM_DIAGRAM):   if not missing( T_MANAG ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MANAG - 0.00605605096501 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MANAG - 0.00736604074673 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MANAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MANAG - 0.00027120132272 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MANAG - 0.03504273504273 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MANAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MANAG - 0.00824090685472 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MANAG - 0.00405288675315 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MANAG - 0.01037986367267 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MANAG - 0.00842745675794 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MANAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MANAG - 0.00606661120737 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MANAG - 0.01605643065901 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MANAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MANAG - 0.10130482047889 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MANAG - 0.00294469751602 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MANAG - 0.01122891445472 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MANAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MANAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MANAG - 0.00401618413543 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00477039637363;
MPRINT(EM_DIAGRAM):   if not missing( T_MARK ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MARK - 0.01730822546738 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MARK - 0.01065255601948 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MARK - 0.08304093567251 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MARK - 0.00161173635234 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MARK - 0.02083333333333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MARK - 0.01530584717703 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MARK - 0.00924347906804 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MARK - 0.01001075407608 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MARK - 0.00287929125138 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MARK - 0.01103183490702 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MARK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MARK - 0.01010373246353 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MARK - 0.00227710632334 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MARK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MARK - 0.00276349814253 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MARK - 0.01601114121992 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MARK - 0.00984848484848 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MARK - 0.00749711649365 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MARK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MARK - 0.00690225200575 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00316774788826;
MPRINT(EM_DIAGRAM):   if not missing( T_MED ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MED - 0.05102554981163 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MED - 0.35082978876304 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MED - 0.0203125 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MED - 0.01521777880714 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MED - 0.03506509602508 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MED - 0.22501007022355 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MED - 0.00575969513817 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MED - 0.08739529440748 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MED - 0.06649153982429 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MED - 0.01889765349929 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MED - 0.09458392280675 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MED - 0.02118628289161 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MED - 0.05042722517975 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01588003300758;
MPRINT(EM_DIAGRAM):   if not missing( T_MEDIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MEDIC - 0.00298562590903 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MEDIC - 0.11449361245333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MEDIC - 0.00095785176069 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MEDIC - 0.01252054403897 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MEDIC - 0.06243840203663 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MEDIC - 0.003108018536 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MEDIC - 0.0414305816135 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MEDIC - 0.00144440047487 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MEDIC - 0.00755654795945 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MEDIC - 0.00142717497556 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MEDIC - 0.02118047703398 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MEDIC - 0.00033273432731 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00577261567568;
MPRINT(EM_DIAGRAM):   if not missing( T_MEDICIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MEDICIN - 0.00427139288903 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MEDICIN - 0.04359338660591 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MEDICIN - 0.00018688413183 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MEDICIN - 0.00788011695906 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MEDICIN - 0.0071232001706 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MEDICIN - 0.01577342892244 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MEDICIN - 0.00286986601941 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MEDICIN - 0.01057692307692 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MEDICIN - 0.00135584863798 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MEDICIN - 0.00308949157382 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MEDICIN - 0.00128564749883 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MEDICIN - 0.01272516844524 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00195561474876;
MPRINT(EM_DIAGRAM):   if not missing( T_MEMORI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MEMORI - 0.00515389954484 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MEMORI - 0.00103071531642 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MEMORI - 0.00214250213828 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MEMORI - 0.00065789473684 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MEMORI - 0.01110518918387 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MEMORI - 0.0088957059519 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MEMORI - 0.02247863955015 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MEMORI - 0.01387358581039 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MEMORI - 0.00280741431035 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MEMORI - 0.0013437167396 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00244757624292;
MPRINT(EM_DIAGRAM):   if not missing( T_MICHAEL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MICHAEL - 0.01111528349167 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MICHAEL - 0.00387394368293 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MICHAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MICHAEL - 0.00027482269503 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MICHAEL - 0.05718176108801 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MICHAEL - 0.00246893915259 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MICHAEL - 0.00202619224116 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MICHAEL - 0.00440730016436 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MICHAEL - 0.00145676691729 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MICHAEL - 0.01087668263569 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MICHAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MICHAEL - 0.00545431679227 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MICHAEL - 0.00188943611493 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MICHAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MICHAEL - 0.00474512721755 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MICHAEL - 0.00392338219268 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MICHAEL - 0.00619065893456 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MICHAEL - 0.20033142978384 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MICHAEL - 0.02913533834586 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MICHAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00222087040818;
MPRINT(EM_DIAGRAM):   if not missing( T_MIKE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MIKE - 0.01133017136768 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MIKE - 0.00324185379083 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MIKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MIKE - 0.00005946313285 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MIKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MIKE - 0.00811401067794 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MIKE - 0.00183010912105 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MIKE - 0.00276847762198 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MIKE - 0.00153846153846 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MIKE - 0.01009342348462 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MIKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MIKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MIKE - 0.002312949482 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MIKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MIKE - 0.00990135410463 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MIKE - 0.00180270964561 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MIKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MIKE - 0.00490196078431 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MIKE - 0.09774436090225 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MIKE - 0.00057747397424 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0015123279714;
MPRINT(EM_DIAGRAM):   if not missing( T_MON ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MON - 0.01981836951178 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MON - 0.02110707745591 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MON - 0.01624337005303 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MON - 0.01168617449874 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MON - 0.00841346153846 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MON - 0.05279375633272 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MON - 0.01085900102137 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MON - 0.00871314635578 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MON - 0.01158891006654 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MON - 0.04895104895104 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MON - 0.01155498026621 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MON - 0.00791377558943 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MON - 0.01892705407787 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MON - 0.01320809594382 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MON - 0.01548209366391 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MON - 0.01269545421001 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00256503596773;
MPRINT(EM_DIAGRAM):   if not missing( T_MOTIF ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MOTIF - 0.010546875 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MOTIF - 0.00740018095843 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MOTIF - 0.00400843486292 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MOTIF - 0.02365906880331 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MOTIF - 0.01549068479394 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MOTIF - 0.03087409376422 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MOTIF - 0.02412237226284 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MOTIF - 0.00495689215523 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MOTIF - 0.00228329809725 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MOTIF - 0.06428571428571 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00293609315228;
MPRINT(EM_DIAGRAM):   if not missing( T_MOTOROLA ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MOTOROLA - 0.01045224602804 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_MOTOROLA - 0.0872012867647 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_MOTOROLA - 0.00390492359932 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_MOTOROLA - 0.00696832110702 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_MOTOROLA - 0.01252661695146 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_MOTOROLA - 0.0197792896751 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_MOTOROLA - 0.01044864640618 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_MOTOROLA - 0.00159775119346 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00286625253481;
MPRINT(EM_DIAGRAM):   if not missing( T_NATION ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_NATION - 0.00187024662372 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_NATION - 0.00939615552168 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_NATION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_NATION - 0.01973790003428 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_NATION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_NATION - 0.03168284734426 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_NATION - 0.01169618432776 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_NATION - 0.00993575794147 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_NATION - 0.00225563909774 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_NATION - 0.00715003917374 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_NATION - 0.04858299595141 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_NATION - 0.01192937867571 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_NATION - 0.00585716382795 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_NATION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_NATION - 0.00710954263359 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_NATION - 0.00664620215172 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_NATION - 0.00253699788583 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_NATION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_NATION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_NATION - 0.01873879059185 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023241280317;
MPRINT(EM_DIAGRAM):   if not missing( T_NETWORK ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_NETWORK - 0.00354383941242 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_NETWORK - 0.0187130594582 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_NETWORK - 0.00806069227121 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_NETWORK - 0.00685217892793 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_NETWORK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_NETWORK - 0.00441474700062 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_NETWORK - 0.02688017816035 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_NETWORK - 0.00846518026141 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_NETWORK - 0.00256991685563 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_NETWORK - 0.02499297394342 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_NETWORK - 0.01981351981351 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_NETWORK - 0.00788614877221 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_NETWORK - 0.01713209779537 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_NETWORK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_NETWORK - 0.00853420514796 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_NETWORK - 0.01626054270845 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_NETWORK - 0.03450551118796 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_NETWORK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_NETWORK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_NETWORK - 0.01132301403396 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00387809117101;
MPRINT(EM_DIAGRAM):   if not missing( T_NEW ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_NEW - 0.05810624119742 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_NEW - 0.04277120739149 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_NEW - 0.02573880256415 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_NEW - 0.00736273613346 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_NEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_NEW - 0.0364267867929 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_NEW - 0.05326062989622 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_NEW - 0.01861853258062 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_NEW - 0.01643782890944 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_NEW - 0.06699842918414 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_NEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_NEW - 0.021100280391 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_NEW - 0.02618516831298 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_NEW - 0.49708003984319 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_NEW - 0.03487731406236 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_NEW - 0.02151580908718 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_NEW - 0.05117265895721 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_NEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_NEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_NEW - 0.02445196156838 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00609636093392;
MPRINT(EM_DIAGRAM):   if not missing( T_NEWS ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_NEWS - 0.00914506180849 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_NEWS - 0.02208428363179 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_NEWS - 0.025 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_NEWS - 0.00641423658752 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_NEWS - 0.02036231884057 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_NEWS - 0.00899478943114 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_NEWS - 0.03745014196346 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_NEWS - 0.02175738367244 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_NEWS - 0.03354122051341 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_NEWS - 0.00888588894056 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_NEWS - 0.02273120818575 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_NEWS - 0.00553290623179 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_NEWS - 0.0156386487356 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00584575256874;
MPRINT(EM_DIAGRAM):   if not missing( T_NEWSREAD ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_NEWSREAD - 0.02862237508233 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_NEWSREAD - 0.02048539628167 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_NEWSREAD - 0.02476780185758 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_NEWSREAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_NEWSREAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_NEWSREAD - 0.00509716470213 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_NEWSREAD - 0.01285968425997 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_NEWSREAD - 0.01061936647082 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_NEWSREAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_NEWSREAD - 0.01037064927051 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_NEWSREAD - 0.04244031830238 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_NEWSREAD - 0.00895320061159 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_NEWSREAD - 0.01655042582072 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_NEWSREAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_NEWSREAD - 0.08425975601499 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_NEWSREAD - 0.0135664259134 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_NEWSREAD - 0.02512637809189 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_NEWSREAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_NEWSREAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_NEWSREAD - 0.00139945771013 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00650673348804;
MPRINT(EM_DIAGRAM):   if not missing( T_NOIS ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_NOIS - 0.0142035378171 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_NOIS - 0.00309917058221 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_NOIS - 0.00308056314606 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_NOIS - 0.00541226215644 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_NOIS - 0.00150184815731 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_NOIS - 0.00370676502552 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_NOIS - 0.00424125166336 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_NOIS - 0.00410116199589 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_NOIS - 0.00031288483832 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_NOIS - 0.01845786046976 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_NOIS - 0.00432757325319 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_NOIS - 0.0054514834587 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00153852325528;
MPRINT(EM_DIAGRAM):   if not missing( T_NUMBER ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_NUMBER - 0.01505235902975 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_NUMBER - 0.00630172242587 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_NUMBER - 0.59966728991892 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_NUMBER - 0.01213462081508 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_NUMBER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_NUMBER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_NUMBER - 0.00709737866673 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_NUMBER - 0.00990363134699 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_NUMBER - 0.00289386796617 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_NUMBER - 0.01301396483628 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_NUMBER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_NUMBER - 0.0121762662003 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_NUMBER - 0.01086494254053 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_NUMBER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_NUMBER - 0.00443952914442 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_NUMBER - 0.00833609709775 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_NUMBER - 0.00882771549438 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_NUMBER - 0.00378396972824 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_NUMBER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_NUMBER - 0.01406867336837 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00412508625723;
MPRINT(EM_DIAGRAM):   if not missing( T_OPER ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_OPER - 0.00905819548106 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_OPER - 0.0095658705025 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_OPER - 0.18466582267756 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_OPER - 0.00617589571197 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_OPER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_OPER - 0.00797342192691 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_OPER - 0.02180901068987 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_OPER - 0.01022665808653 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_OPER - 0.00272108843537 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_OPER - 0.0060535354377 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_OPER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_OPER - 0.0097687542243 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_OPER - 0.00559412865467 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_OPER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_OPER - 0.00181609099904 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_OPER - 0.00912030826475 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_OPER - 0.02642919116938 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_OPER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_OPER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_OPER - 0.00619391597892 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00267764526657;
MPRINT(EM_DIAGRAM):   if not missing( T_OPINION ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_OPINION - 0.01772001122329 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_OPINION - 0.02836017952472 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_OPINION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_OPINION - 0.00926343832143 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_OPINION - 0.0234375 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_OPINION - 0.05013521638727 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_OPINION - 0.01643912638658 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_OPINION - 0.01584100626545 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_OPINION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_OPINION - 0.01039328310879 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_OPINION - 0.04509750812567 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_OPINION - 0.01999639335587 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_OPINION - 0.00721314219672 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_OPINION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_OPINION - 0.00306983504965 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_OPINION - 0.01998417293986 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_OPINION - 0.01062140404664 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_OPINION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_OPINION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_OPINION - 0.07506572066505 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00691079636555;
MPRINT(EM_DIAGRAM):   if not missing( T_ORIGIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ORIGIN - 0.02003539416657 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ORIGIN - 0.02048628243496 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ORIGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ORIGIN - 0.00315153154966 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ORIGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ORIGIN - 0.00504777357129 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ORIGIN - 0.01037521063886 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ORIGIN - 0.01110938619047 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ORIGIN - 0.003125 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ORIGIN - 0.02927438369259 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ORIGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ORIGIN - 0.02849876234078 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ORIGIN - 0.00878592505913 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ORIGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ORIGIN - 0.00494902831256 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ORIGIN - 0.02767559564006 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ORIGIN - 0.00960236511456 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ORIGIN - 0.01618760491966 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ORIGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ORIGIN - 0.00888310899072 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00440179949478;
MPRINT(EM_DIAGRAM):   if not missing( T_OUTPUT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_OUTPUT - 0.01628499423287 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_OUTPUT - 0.005518846245 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_OUTPUT - 0.0166957272438 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_OUTPUT - 0.00471979209446 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_OUTPUT - 0.01353560218021 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_OUTPUT - 0.00883106488472 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_OUTPUT - 0.00687474135421 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_OUTPUT - 0.00105494063865 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_OUTPUT - 0.00573481854114 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_OUTPUT - 0.00990877634476 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00263837166284;
MPRINT(EM_DIAGRAM):   if not missing( T_PAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PAIN - 0.00884955752212 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PAIN - 0.02111666025817 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PAIN - 0.00033641593414 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PAIN - 0.00482216323027 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PAIN - 0.01427404560409 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PAIN - 0.00007413127413 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PAIN - 0.00104063302332 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PAIN - 0.01697498197706 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00175256121979;
MPRINT(EM_DIAGRAM):   if not missing( T_PALESTINIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PALESTINIAN - 0.00100984167736 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PALESTINIAN - 0.05340037111334 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PALESTINIAN - 0.00042151473719 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PALESTINIAN - 0.00013666453128 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PALESTINIAN - 0.00273284767666 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PALESTINIAN - 0.06404242519816 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00260941378693;
MPRINT(EM_DIAGRAM):   if not missing( T_PART ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PART - 0.01828262805757 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PART - 0.00408412511225 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PART - 0.00323426277822 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PART - 0.02645502645502 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PART - 0.01003055764503 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PART - 0.00119047619047 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PART - 0.00606812461212 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PART - 0.00407002024208 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PART - 0.00355307055305 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PART - 0.00282899845978 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PART - 0.00613779248557 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PART - 0.00998441351312 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PART - 0.0093954248366 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PART - 0.01312333451293 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00114007849037;
MPRINT(EM_DIAGRAM):   if not missing( T_PATIENT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PATIENT - 0.00317255682021 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PATIENT - 0.04826639588 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PATIENT - 0.00041302235179 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PATIENT - 0.0189491224354 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PATIENT - 0.0555458558462 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PATIENT - 0.00015370705244 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PATIENT - 0.009870227423 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PATIENT - 0.01828979861234 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PATIENT - 0.01236363636363 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PATIENT - 0.01219512195121 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00504883490175;
MPRINT(EM_DIAGRAM):   if not missing( T_PERSON ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PERSON - 0.00814756540733 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PERSON - 0.01289710195657 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PERSON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PERSON - 0.00940592986054 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PERSON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PERSON - 0.00408860612149 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PERSON - 0.01004527140636 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PERSON - 0.01204195576838 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PERSON - 0.01154901540539 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PERSON - 0.00707115382732 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PERSON - 0.01660839160839 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PERSON - 0.01214063714063 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PERSON - 0.01186855878882 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PERSON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PERSON - 0.00755032280686 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PERSON - 0.01541078079273 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PERSON - 0.01450538098265 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PERSON - 0.00620915032679 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PERSON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PERSON - 0.0121249172514 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229967059068;
MPRINT(EM_DIAGRAM):   if not missing( T_PHONE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PHONE - 0.01090087598306 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PHONE - 0.00534286920877 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PHONE - 0.50282846790098 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PHONE - 0.00070231096453 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PHONE - 0.01654411764705 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PHONE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PHONE - 0.06163059653786 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PHONE - 0.00785599459053 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PHONE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PHONE - 0.01347183344403 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PHONE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PHONE - 0.00690408453566 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PHONE - 0.01070461070602 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PHONE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PHONE - 0.01161387936841 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PHONE - 0.0013723669926 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PHONE - 0.01313579898362 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PHONE - 0.17686986940183 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PHONE - 0.02571428571428 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PHONE - 0.00167639941624 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00507930156386;
MPRINT(EM_DIAGRAM):   if not missing( T_PITT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PITT - 0.00036328232849 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PITT - 0.02389490251008 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PITT - 0.00362524691244 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PITT - 0.30779526098385 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PITT - 0.00038967912189 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PITT - 0.00099454986673 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PITT - 0.00272417441348 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PITT - 0.00436580882352 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PITT - 0.00084277238403 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00327917408148;
MPRINT(EM_DIAGRAM):   if not missing( T_PITTSBURGH ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PITTSBURGH - 0.03756544337236 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PITTSBURGH - 0.00284314023926 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PITTSBURGH - 0.00396468191504 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PITTSBURGH - 0.25533422086395 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PITTSBURGH - 0.00610169434083 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PITTSBURGH - 0.000704920344 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PITTSBURGH - 0.00552762649536 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PITTSBURGH - 0.00465753598343 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PITTSBURGH - 0.07534307840342 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PITTSBURGH - 0.00075849514563 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00478154657828;
MPRINT(EM_DIAGRAM):   if not missing( T_PLACE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PLACE - 0.01834804006333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PLACE - 0.01043954390864 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PLACE - 0.13099109531862 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PLACE - 0.01716474497025 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PLACE - 0.03571428571428 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PLACE - 0.02404699583572 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PLACE - 0.01036074056108 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PLACE - 0.0161374046747 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PLACE - 0.00810999348438 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PLACE - 0.00751586961258 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PLACE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PLACE - 0.00911162400945 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PLACE - 0.00600194576901 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PLACE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PLACE - 0.02531973104487 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PLACE - 0.00603369228759 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PLACE - 0.01179361179361 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PLACE - 0.00860832137733 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PLACE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PLACE - 0.00969935454217 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00360256293573;
MPRINT(EM_DIAGRAM):   if not missing( T_POINT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_POINT - 0.00802071847264 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_POINT - 0.00964437613656 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_POINT - 0.01594896331738 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_POINT - 0.00715568173872 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_POINT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_POINT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_POINT - 0.01188660579301 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_POINT - 0.01375163140578 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_POINT - 0.00826669849226 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_POINT - 0.01094465349611 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_POINT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_POINT - 0.01701270769139 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_POINT - 0.0099127170975 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_POINT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_POINT - 0.00384415756738 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_POINT - 0.02151685822605 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_POINT - 0.0080808080808 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_POINT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_POINT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_POINT - 0.02248272339139 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219530643596;
MPRINT(EM_DIAGRAM):   if not missing( T_POLICI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_POLICI - 0.00885096903832 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_POLICI - 0.02981333147951 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_POLICI - 0.03168842497546 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_POLICI - 0.00306462358427 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_POLICI - 0.00257329201352 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_POLICI - 0.00213721637272 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_POLICI - 0.00316718485237 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_POLICI - 0.0045954045954 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_POLICI - 0.13478332335791 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00773216228441;
MPRINT(EM_DIAGRAM):   if not missing( T_POSIT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_POSIT - 0.00441927081551 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_POSIT - 0.00127095614365 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_POSIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_POSIT - 0.01077159238381 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_POSIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_POSIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_POSIT - 0.00977172931877 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_POSIT - 0.00742012504903 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_POSIT - 0.00532763532763 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_POSIT - 0.00406824077583 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_POSIT - 0.11217948717948 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_POSIT - 0.01056990301841 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_POSIT - 0.00116521247857 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_POSIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_POSIT - 0.04307430303323 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_POSIT - 0.00640325020168 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_POSIT - 0.00416666666666 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_POSIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_POSIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_POSIT - 0.00684317606803 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00263257033987;
MPRINT(EM_DIAGRAM):   if not missing( T_POST ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_POST - 0.01630763241037 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_POST - 0.03961867368608 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_POST - 0.05951954469569 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_POST - 0.02512610630448 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_POST - 0.02218614718614 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_POST - 0.05161201603233 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_POST - 0.00945408236176 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_POST - 0.02070626480456 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_POST - 0.01352863678457 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_POST - 0.04911364046304 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_POST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_POST - 0.03013100653653 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_POST - 0.01225204105682 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_POST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_POST - 0.02457136064129 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_POST - 0.02388525550418 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_POST - 0.0435488078987 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_POST - 0.05004457320516 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_POST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_POST - 0.02279967062213 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0077906236798;
MPRINT(EM_DIAGRAM):   if not missing( T_POWER ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_POWER - 0.015695981098 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_POWER - 0.00253966760177 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_POWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_POWER - 0.00532955269711 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_POWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_POWER - 0.01603736237321 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_POWER - 0.01480199086801 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_POWER - 0.01905019125409 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_POWER - 0.00381835828389 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_POWER - 0.00696868556291 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_POWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_POWER - 0.00994029862824 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_POWER - 0.00174583031542 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_POWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_POWER - 0.00353742310253 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_POWER - 0.01452745040249 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_POWER - 0.02194320538395 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_POWER - 0.02165345234138 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_POWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_POWER - 0.00716517183075 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00274036787096;
MPRINT(EM_DIAGRAM):   if not missing( T_PROBLEM ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PROBLEM - 0.0094389223571 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PROBLEM - 0.02845001308334 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PROBLEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PROBLEM - 0.01503007988445 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PROBLEM - 0.02724358974358 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PROBLEM - 0.00514385069991 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PROBLEM - 0.01802014676353 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PROBLEM - 0.02804076238662 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PROBLEM - 0.01357277487059 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PROBLEM - 0.00986971590909 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PROBLEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PROBLEM - 0.02021527862723 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PROBLEM - 0.29961735259065 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PROBLEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PROBLEM - 0.03331329614544 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PROBLEM - 0.02636505396661 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PROBLEM - 0.02557581742048 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PROBLEM - 0.03264146101021 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PROBLEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PROBLEM - 0.00919301908381 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01039754221923;
MPRINT(EM_DIAGRAM):   if not missing( T_PRODUCT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PRODUCT - 0.02484737209578 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PRODUCT - 0.01902004369432 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PRODUCT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PRODUCT - 0.00144536767936 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PRODUCT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PRODUCT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PRODUCT - 0.00927900800805 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PRODUCT - 0.01276787967087 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PRODUCT - 0.00424137266242 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PRODUCT - 0.02347173356847 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PRODUCT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PRODUCT - 0.01396276149785 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PRODUCT - 0.01646967560955 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PRODUCT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PRODUCT - 0.00154600284126 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PRODUCT - 0.02045820044434 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PRODUCT - 0.00960144927536 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PRODUCT - 0.00674019607843 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PRODUCT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PRODUCT - 0.00242243927443 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00427694699893;
MPRINT(EM_DIAGRAM):   if not missing( T_PROGRAM ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PROGRAM - 0.00862640583834 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PROGRAM - 0.00255616159272 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PROGRAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PROGRAM - 0.00089756646972 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PROGRAM - 0.01867816091954 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PROGRAM - 0.01198877305533 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PROGRAM - 0.0164810593637 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PROGRAM - 0.01778424114295 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PROGRAM - 0.00429613132655 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PROGRAM - 0.02756140146737 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PROGRAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PROGRAM - 0.02886566977457 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PROGRAM - 0.05621033811766 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PROGRAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PROGRAM - 0.05819985495782 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PROGRAM - 0.0032972468713 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PROGRAM - 0.00903694318328 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PROGRAM - 0.14930722152927 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PROGRAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PROGRAM - 0.00009017996005 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00600993010939;
MPRINT(EM_DIAGRAM):   if not missing( T_PROJECT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PROJECT - 0.02811093947402 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PROJECT - 0.0063583191662 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PROJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PROJECT - 0.00214659432886 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PROJECT - 0.08669492810117 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PROJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PROJECT - 0.01086584513345 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PROJECT - 0.00910441567886 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PROJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PROJECT - 0.03178265666303 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PROJECT - 0.01102251407129 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PROJECT - 0.00875076299014 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PROJECT - 0.00150931278098 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PROJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PROJECT - 0.00279660847212 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PROJECT - 0.00417686771727 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PROJECT - 0.01038181146274 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PROJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PROJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PROJECT - 0.00118367729195 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00372018245335;
MPRINT(EM_DIAGRAM):   if not missing( T_PUBLIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PUBLIC - 0.00904751816901 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PUBLIC - 0.0192875047309 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_PUBLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_PUBLIC - 0.01092259464325 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_PUBLIC - 0.27640814387137 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_PUBLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_PUBLIC - 0.0018265760094 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_PUBLIC - 0.00612065924129 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_PUBLIC - 0.00455875500885 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_PUBLIC - 0.0072124196617 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_PUBLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_PUBLIC - 0.00868973622722 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_PUBLIC - 0.00202819186695 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_PUBLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_PUBLIC - 0.00683482533534 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_PUBLIC - 0.01813310803528 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_PUBLIC - 0.00893487722756 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_PUBLIC - 0.01055806938159 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_PUBLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_PUBLIC - 0.00565137027725 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00210583570684;
MPRINT(EM_DIAGRAM):   if not missing( T_QUESTION ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_QUESTION - 0.00987333384209 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_QUESTION - 0.03891060783477 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_QUESTION - 0.12749679707123 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_QUESTION - 0.00359243456323 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_QUESTION - 0.04317384004884 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_QUESTION - 0.01342699997194 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_QUESTION - 0.04658267642823 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_QUESTION - 0.02872586901196 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_QUESTION - 0.0256315090675 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_QUESTION - 0.0166258119819 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_QUESTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_QUESTION - 0.02800593030142 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_QUESTION - 0.01675196573715 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_QUESTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_QUESTION - 0.05046392297397 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_QUESTION - 0.03825443453672 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_QUESTION - 0.04274571507778 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_QUESTION - 0.04332507077979 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_QUESTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_QUESTION - 0.04644809021969 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00821767592665;
MPRINT(EM_DIAGRAM):   if not missing( T_RADAR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_RADAR - 0.00381578947368 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_RADAR - 0.00909686742847 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_RADAR - 0.0060997538958 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_RADAR - 0.00852272727272 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_RADAR - 0.0063025210084 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178172574485;
MPRINT(EM_DIAGRAM):   if not missing( T_RADIO ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_RADIO - 0.01834825367807 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_RADIO - 0.00238408934061 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_RADIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_RADIO - 0.00176857375176 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_RADIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_RADIO - 0.01511560184746 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_RADIO - 0.01502692902468 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_RADIO - 0.01611865228065 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_RADIO - 0.00297619047619 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_RADIO - 0.01308811976239 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_RADIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_RADIO - 0.00141864094197 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_RADIO - 0.00071805550569 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_RADIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_RADIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_RADIO - 0.00122129946262 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_RADIO - 0.0359520833356 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_RADIO - 0.15198781099679 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_RADIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_RADIO - 0.00191006289639 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00390177164566;
MPRINT(EM_DIAGRAM):   if not missing( T_READ ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_READ - 0.01245479481143 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_READ - 0.01308523749146 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_READ - 0.11197423321174 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_READ - 0.00728859898143 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_READ - 0.01704545454545 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_READ - 0.0290716030929 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_READ - 0.00927752565035 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_READ - 0.02189438068466 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_READ - 0.02347783194419 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_READ - 0.01367075184687 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_READ - 0.13813794090705 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_READ - 0.01469616649373 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_READ - 0.01547293541167 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_READ - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_READ - 0.0074478861411 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_READ - 0.01691454010208 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_READ - 0.00370095021257 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_READ - 0.03294117647058 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_READ - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_READ - 0.01304940022685 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00375545385412;
MPRINT(EM_DIAGRAM):   if not missing( T_REASON ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_REASON - 0.0145182494118 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_REASON - 0.0245735121023 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_REASON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_REASON - 0.01072988870387 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_REASON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_REASON - 0.02097582367959 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_REASON - 0.01598172736172 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_REASON - 0.02727683208086 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_REASON - 0.00800260247234 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_REASON - 0.01480228149397 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_REASON - 0.01969981238273 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_REASON - 0.00871310875067 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_REASON - 0.00987555116037 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_REASON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_REASON - 0.03915426389952 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_REASON - 0.05543691923058 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_REASON - 0.01231959529831 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_REASON - 0.01029411764705 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_REASON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_REASON - 0.03511270597736 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00845976378128;
MPRINT(EM_DIAGRAM):   if not missing( T_RECEIV ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_RECEIV - 0.01296988491195 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_RECEIV - 0.0058784545594 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_RECEIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_RECEIV - 0.00435909135271 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_RECEIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_RECEIV - 0.01142175375856 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_RECEIV - 0.02709328866916 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_RECEIV - 0.00865050820521 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_RECEIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_RECEIV - 0.01641644506653 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_RECEIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_RECEIV - 0.00210696179375 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_RECEIV - 0.00205391818571 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_RECEIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_RECEIV - 0.00641552365969 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_RECEIV - 0.00262139870137 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_RECEIV - 0.01116252407013 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_RECEIV - 0.01199585525267 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_RECEIV - 0.06944444444444 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_RECEIV - 0.00532008510459 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00234927298682;
MPRINT(EM_DIAGRAM):   if not missing( T_REMEMB ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_REMEMB - 0.01096651113302 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_REMEMB - 0.01505826924392 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_REMEMB - 0.05520356299003 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_REMEMB - 0.02206620227626 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_REMEMB - 0.05866683991683 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_REMEMB - 0.0133366675002 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_REMEMB - 0.00668480373105 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_REMEMB - 0.01327200131933 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_REMEMB - 0.0031994047619 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_REMEMB - 0.00562335012682 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_REMEMB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_REMEMB - 0.00850230083405 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_REMEMB - 0.00447534175196 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_REMEMB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_REMEMB - 0.0120462322893 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_REMEMB - 0.01384483686497 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_REMEMB - 0.04483117418262 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_REMEMB - 0.00562091503267 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_REMEMB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_REMEMB - 0.00646407528823 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00331829295085;
MPRINT(EM_DIAGRAM):   if not missing( T_REPLI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_REPLI - 0.02618230926827 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_REPLI - 0.0328669476688 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_REPLI - 0.04364674271795 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_REPLI - 0.02659809178617 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_REPLI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_REPLI - 0.0552274914414 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_REPLI - 0.04842124513747 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_REPLI - 0.01867846928628 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_REPLI - 0.13977276933786 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_REPLI - 0.06428521527149 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_REPLI - 0.02564102564102 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_REPLI - 0.06061298824031 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_REPLI - 0.03302001931205 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_REPLI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_REPLI - 0.04921625863628 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_REPLI - 0.01786633944618 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_REPLI - 0.06462113168973 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_REPLI - 0.02156193441924 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_REPLI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_REPLI - 0.01823529813211 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00610141205665;
MPRINT(EM_DIAGRAM):   if not missing( T_REPORT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_REPORT - 0.00557902599868 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_REPORT - 0.01111015214019 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_REPORT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_REPORT - 0.01546125339778 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_REPORT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_REPORT - 0.29084300806988 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_REPORT - 0.00561963580218 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_REPORT - 0.01015441888644 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_REPORT - 0.00198412698412 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_REPORT - 0.00369023192661 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_REPORT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_REPORT - 0.00463182998797 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_REPORT - 0.00661200117275 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_REPORT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_REPORT - 0.00092060686404 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_REPORT - 0.01172474391487 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_REPORT - 0.01060606060606 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_REPORT - 0.02802397000466 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_REPORT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_REPORT - 0.01130428519238 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00395186228763;
MPRINT(EM_DIAGRAM):   if not missing( T_REQUIR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_REQUIR - 0.00767345540713 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_REQUIR - 0.00573821403292 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_REQUIR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_REQUIR - 0.0016348863356 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_REQUIR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_REQUIR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_REQUIR - 0.01885630743525 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_REQUIR - 0.02550661620223 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_REQUIR - 0.00731707317073 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_REQUIR - 0.01940703788702 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_REQUIR - 0.03671328671328 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_REQUIR - 0.01091862721779 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_REQUIR - 0.02960912968413 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_REQUIR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_REQUIR - 0.0096114480181 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_REQUIR - 0.00937339097781 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_REQUIR - 0.06205444786748 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_REQUIR - 0.02057708240392 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_REQUIR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_REQUIR - 0.00491427080995 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00622638521405;
MPRINT(EM_DIAGRAM):   if not missing( T_RESEARCH ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_RESEARCH - 0.0137894635018 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_RESEARCH - 0.02060531044594 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_RESEARCH - 0.01286549707602 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_RESEARCH - 0.00179073810652 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_RESEARCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_RESEARCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_RESEARCH - 0.03289233673185 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_RESEARCH - 0.0162770387653 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_RESEARCH - 0.01209695146554 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_RESEARCH - 0.01529800725715 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_RESEARCH - 0.58968242990973 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_RESEARCH - 0.01254952780535 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_RESEARCH - 0.00937872213094 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_RESEARCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_RESEARCH - 0.01019565204268 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_RESEARCH - 0.02347552047067 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_RESEARCH - 0.00428113553113 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_RESEARCH - 0.09555560125652 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_RESEARCH - 0.03142857142857 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_RESEARCH - 0.04971915800206 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00604738146756;
MPRINT(EM_DIAGRAM):   if not missing( T_RESPONS ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_RESPONS - 0.00756750624007 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_RESPONS - 0.02520737551594 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_RESPONS - 0.14132184251585 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_RESPONS - 0.01498549764872 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_RESPONS - 0.02265625 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_RESPONS - 0.00423522416829 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_RESPONS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_RESPONS - 0.01441437414077 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_RESPONS - 0.00566893424036 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_RESPONS - 0.00744160977681 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_RESPONS - 0.06835131332082 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_RESPONS - 0.00987928117939 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_RESPONS - 0.01600166240504 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_RESPONS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_RESPONS - 0.00634970711618 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_RESPONS - 0.01164599607512 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_RESPONS - 0.00941558441558 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_RESPONS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_RESPONS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_RESPONS - 0.01421076659985 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00369205432189;
MPRINT(EM_DIAGRAM):   if not missing( T_ROBERT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_ROBERT - 0.00530861172202 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_ROBERT - 0.0052750065731 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_ROBERT - 0.00128127718942 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_ROBERT - 0.02043836924718 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_ROBERT - 0.00325381787048 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_ROBERT - 0.00275667728497 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_ROBERT - 0.00709094532786 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_ROBERT - 0.01074488546948 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_ROBERT - 0.00129451314997 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_ROBERT - 0.00804804163437 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_ROBERT - 0.00774148569915 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_ROBERT - 0.00479936216945 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00145376466257;
MPRINT(EM_DIAGRAM):   if not missing( T_RUN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_RUN - 0.03742631351654 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_RUN - 0.00242159800983 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_RUN - 0.03545996862952 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_RUN - 0.0005630808118 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_RUN - 0.04708867521367 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_RUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_RUN - 0.03355175868812 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_RUN - 0.01077699482807 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_RUN - 0.00195011337868 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_RUN - 0.01547557480825 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_RUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_RUN - 0.01662793904616 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_RUN - 0.16792176344032 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_RUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_RUN - 0.03407305604712 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_RUN - 0.0069475418459 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_RUN - 0.03074529046682 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_RUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_RUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_RUN - 0.00270955335271 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00740297854665;
MPRINT(EM_DIAGRAM):   if not missing( T_SAT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SAT - 0.01312052512429 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SAT - 0.00949609170073 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SAT - 0.02487532196443 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SAT - 0.1020979020979 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SAT - 0.0590064622087 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SAT - 0.01241270530873 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SAT - 0.0067409356633 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SAT - 0.00707105909417 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SAT - 0.01675590594867 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SAT - 0.00240587408217 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SAT - 0.01462759437392 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SAT - 0.01906968201106 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SAT - 0.01804713804713 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SAT - 0.02688944122249 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SAT - 0.00740929354158 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00422799501443;
MPRINT(EM_DIAGRAM):   if not missing( T_SCHOOL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SCHOOL - 0.00566177349916 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SCHOOL - 0.04893669594651 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SCHOOL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SCHOOL - 0.00402862946214 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SCHOOL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SCHOOL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SCHOOL - 0.01310148059816 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SCHOOL - 0.01289013760799 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SCHOOL - 0.01822095586502 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SCHOOL - 0.01399857234642 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SCHOOL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SCHOOL - 0.01284549652226 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SCHOOL - 0.00329342833564 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SCHOOL - 0.11111111111111 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SCHOOL - 0.01211598275037 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SCHOOL - 0.01082229468452 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SCHOOL - 0.01444409249287 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SCHOOL - 0.00980392156862 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SCHOOL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SCHOOL - 0.00419513628912 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00487685785717;
MPRINT(EM_DIAGRAM):   if not missing( T_SCI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SCI - 0.04919485959253 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SCI - 0.08246562870831 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SCI - 0.07715374512805 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SCI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SCI - 0.03438010620915 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SCI - 0.00767261582837 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SCI - 0.02508594321298 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SCI - 0.0258517793954 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SCI - 0.05241801165825 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SCI - 0.02458399725797 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SCI - 0.07294489439638 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SCI - 0.04797023351081 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SCI - 0.00659087694302 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SCI - 0.01754385964912 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SCI - 0.00421256138275 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SCI - 0.0300162645467 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SCI - 0.03796707822429 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SCI - 0.04841008286204 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SCI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SCI - 0.00041394003888 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194851612595;
MPRINT(EM_DIAGRAM):   if not missing( T_SCIENC ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SCIENC - 0.02884578887687 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SCIENC - 0.01900064882293 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SCIENC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SCIENC - 0.00795435474493 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SCIENC - 0.02446266968325 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SCIENC - 0.03028095792716 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SCIENC - 0.04926364494339 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SCIENC - 0.00870660696906 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SCIENC - 0.22317575232848 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SCIENC - 0.04507093761049 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SCIENC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SCIENC - 0.05229192599781 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SCIENC - 0.02599627454706 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SCIENC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SCIENC - 0.03469274207514 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SCIENC - 0.08645360687124 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SCIENC - 0.0674017186737 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SCIENC - 0.01553185376714 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SCIENC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SCIENC - 0.01009321914496 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01027128116445;
MPRINT(EM_DIAGRAM):   if not missing( T_SCREEN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SCREEN - 0.00110100128796 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SCREEN - 0.03129586307971 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SCREEN - 0.00391189891207 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SCREEN - 0.00405115329814 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SCREEN - 0.11548519537223 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SCREEN - 0.00753979985586 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SCREEN - 0.03038784821598 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SCREEN - 0.02346105545881 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SCREEN - 0.0036743898705 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SCREEN - 0.00174571805006 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SCREEN - 0.00463935574229 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SCREEN - 0.00037506685295 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00239287393542;
MPRINT(EM_DIAGRAM):   if not missing( T_SELL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SELL - 0.07110342251119 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SELL - 0.00147579693034 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SELL - 0.00023019397863 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SELL - 0.0063372717508 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SELL - 0.01232950508014 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SELL - 0.01356191400124 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SELL - 0.01528516412983 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SELL - 0.00072653298459 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SELL - 0.00428195921377 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SELL - 0.01917933130699 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SELL - 0.00395860902355 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00410242352789;
MPRINT(EM_DIAGRAM):   if not missing( T_SEND ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SEND - 0.01199228466355 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SEND - 0.01080637993625 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SEND - 0.01093312992626 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SEND - 0.00858297369032 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SEND - 0.03317901234567 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SEND - 0.00858753689743 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SEND - 0.01058688873903 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SEND - 0.0454730177138 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SEND - 0.02919628545731 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SEND - 0.02331627836426 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SEND - 0.01671392562338 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SEND - 0.00304176134544 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SEND - 0.03419638001307 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SEND - 0.04142607335331 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SEND - 0.00313685770893 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00502622487998;
MPRINT(EM_DIAGRAM):   if not missing( T_SERDAR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SERDAR - 0.0798571774521 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SERDAR - 0.02357041251778 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SERDAR - 0.00114758146239 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SERDAR - 0.28319088319088 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SERDAR - 0.00047380533369 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SERDAR - 0.00003721860079 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0016942279763;
MPRINT(EM_DIAGRAM):   if not missing( T_SERVER ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SERVER - 0.00510551395507 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SERVER - 0.0002659574468 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SERVER - 0.06139553014553 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SERVER - 0.01744541471493 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SERVER - 0.00387866565723 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SERVER - 0.01134340775954 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SERVER - 0.01518218623481 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SERVER - 0.00332046508703 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SERVER - 0.08873255560572 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SERVER - 0.05930763519974 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00428936570397;
MPRINT(EM_DIAGRAM):   if not missing( T_SERVIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SERVIC - 0.01621420200152 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SERVIC - 0.04257338092556 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SERVIC - 0.13715456516403 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SERVIC - 0.02303006627707 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SERVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SERVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SERVIC - 0.0246372204315 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SERVIC - 0.03154209478372 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SERVIC - 0.02002853046623 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SERVIC - 0.01874835869254 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SERVIC - 0.03234265734265 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SERVIC - 0.00897038346043 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SERVIC - 0.01698610832315 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SERVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SERVIC - 0.0213283263656 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SERVIC - 0.01178721487745 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SERVIC - 0.0274074074074 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SERVIC - 0.02441553544494 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SERVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SERVIC - 0.00464783161907 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00946954762195;
MPRINT(EM_DIAGRAM):   if not missing( T_SHOW ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SHOW - 0.01720368784304 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SHOW - 0.01429390687175 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SHOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SHOW - 0.01760235191722 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SHOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SHOW - 0.03718865522894 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SHOW - 0.01423816828044 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SHOW - 0.02693813559055 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SHOW - 0.02667382095923 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SHOW - 0.0090527823218 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SHOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SHOW - 0.01238057202069 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SHOW - 0.02011645501938 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SHOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SHOW - 0.03045413513024 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SHOW - 0.02453999328771 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SHOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SHOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SHOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SHOW - 0.0164504926874 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00643307433223;
MPRINT(EM_DIAGRAM):   if not missing( T_SIDE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SIDE - 0.01364740823182 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SIDE - 0.02423401898333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SIDE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SIDE - 0.00764378475546 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SIDE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SIDE - 0.02417384845555 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SIDE - 0.00496147544203 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SIDE - 0.01361831348857 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SIDE - 0.00439024390243 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SIDE - 0.0081440975142 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SIDE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SIDE - 0.00719442299381 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SIDE - 0.00458386402 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SIDE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SIDE - 0.00653289593645 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SIDE - 0.02100362131064 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SIDE - 0.02253887289181 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SIDE - 0.01544117647058 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SIDE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SIDE - 0.01488703409854 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00351439601268;
MPRINT(EM_DIAGRAM):   if not missing( T_SIGNAL ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SIGNAL - 0.02116073071358 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SIGNAL - 0.00004965533356 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SIGNAL - 0.0146809379135 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SIGNAL - 0.01506010213155 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SIGNAL - 0.00563789900205 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SIGNAL - 0.01241729509507 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SIGNAL - 0.0033200948973 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SIGNAL - 0.00645317640923 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SIGNAL - 0.00411239585486 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SIGNAL - 0.00860079051383 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0027011007046;
MPRINT(EM_DIAGRAM):   if not missing( T_SOFTWAR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SOFTWAR - 0.01820120780511 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SOFTWAR - 0.01580174271086 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SOFTWAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SOFTWAR - 0.00021619496855 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SOFTWAR - 0.12385110294117 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SOFTWAR - 0.00272142503711 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SOFTWAR - 0.02995094979109 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SOFTWAR - 0.00953303835116 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SOFTWAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SOFTWAR - 0.04065101394611 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SOFTWAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SOFTWAR - 0.01976636656142 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SOFTWAR - 0.02697380307171 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SOFTWAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SOFTWAR - 0.01902405095532 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SOFTWAR - 0.00899110392345 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SOFTWAR - 0.02470175945847 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SOFTWAR - 0.01726051513643 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SOFTWAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SOFTWAR - 0.00390000452046 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0058381351654;
MPRINT(EM_DIAGRAM):   if not missing( T_SOUND ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SOUND - 0.01579440042267 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SOUND - 0.01154006660573 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SOUND - 0.02028985507246 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SOUND - 0.00126436337166 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SOUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SOUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SOUND - 0.01265702921448 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SOUND - 0.01233526437809 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SOUND - 0.00686052300597 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SOUND - 0.00433789156303 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SOUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SOUND - 0.00395667825223 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SOUND - 0.00226136845052 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SOUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SOUND - 0.00037385174108 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SOUND - 0.01059719357648 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SOUND - 0.0051597051597 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SOUND - 0.01164992826398 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SOUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SOUND - 0.00533600059584 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00220193396153;
MPRINT(EM_DIAGRAM):   if not missing( T_SOURC ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SOURC - 0.00980323118377 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SOURC - 0.00226865618255 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SOURC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SOURC - 0.01608132530479 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SOURC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SOURC - 0.00975513196027 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SOURC - 0.00239599407014 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SOURC - 0.00973406981315 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SOURC - 0.00230154243721 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SOURC - 0.02021782099257 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SOURC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SOURC - 0.00777333241101 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SOURC - 0.00554058814302 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SOURC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SOURC - 0.01453831489278 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SOURC - 0.00568439209404 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SOURC - 0.02252099752099 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SOURC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SOURC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SOURC - 0.00484639312059 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00201442174899;
MPRINT(EM_DIAGRAM):   if not missing( T_STANDARD ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_STANDARD - 0.00432342579633 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_STANDARD - 0.00252681925593 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_STANDARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_STANDARD - 0.00015529468503 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_STANDARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_STANDARD - 0.00240011926058 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_STANDARD - 0.00116501780767 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_STANDARD - 0.00842490843078 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_STANDARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_STANDARD - 0.0101652851897 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_STANDARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_STANDARD - 0.00957686498228 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_STANDARD - 0.00914804699885 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_STANDARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_STANDARD - 0.01857275297709 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_STANDARD - 0.00458857938729 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_STANDARD - 0.00537373737373 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_STANDARD - 0.03857247726344 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_STANDARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_STANDARD - 0.02240930426145 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229514349459;
MPRINT(EM_DIAGRAM):   if not missing( T_START ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_START - 0.01584880565798 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_START - 0.01392368657626 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_START - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_START - 0.01978854563207 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_START - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_START - 0.00599563953488 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_START - 0.03252796572977 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_START - 0.02710244837597 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_START - 0.0207463492015 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_START - 0.00950378645613 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_START - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_START - 0.01424716404688 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_START - 0.06984873609026 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_START - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_START - 0.01852439539443 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_START - 0.00967492432013 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_START - 0.01476964769647 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_START - 0.00970588235294 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_START - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_START - 0.02756656026374 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00725482807573;
MPRINT(EM_DIAGRAM):   if not missing( T_STATE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_STATE - 0.01697523820916 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_STATE - 0.02495890582424 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_STATE - 0.06728847435043 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_STATE - 0.0242460445248 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_STATE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_STATE - 0.01972326490867 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_STATE - 0.01388448259976 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_STATE - 0.02167457295203 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_STATE - 0.01096320839572 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_STATE - 0.03468123866845 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_STATE - 0.04012664165103 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_STATE - 0.01087499299213 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_STATE - 0.00970518281399 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_STATE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_STATE - 0.01545572033603 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_STATE - 0.01968046465971 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_STATE - 0.04198505370977 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_STATE - 0.0391951734844 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_STATE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_STATE - 0.05962342999735 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00702601847959;
MPRINT(EM_DIAGRAM):   if not missing( T_STEVE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_STEVE - 0.01496014431821 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_STEVE - 0.02197787229518 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_STEVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_STEVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_STEVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_STEVE - 0.01558634339435 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_STEVE - 0.00442105263157 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_STEVE - 0.00765407860264 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_STEVE - 0.00780009920634 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_STEVE - 0.0108080994643 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_STEVE - 0.03939962476547 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_STEVE - 0.0205376085144 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_STEVE - 0.0049487870473 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_STEVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_STEVE - 0.00985204193432 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_STEVE - 0.025567046609 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_STEVE - 0.00443974630021 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_STEVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_STEVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_STEVE - 0.01751042428183 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00433669128972;
MPRINT(EM_DIAGRAM):   if not missing( T_STUDI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_STUDI - 0.00402252614641 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_STUDI - 0.01958698846316 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_STUDI - 0.03763638408062 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_STUDI - 0.01061774414895 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_STUDI - 0.0126190079668 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_STUDI - 0.01419887933765 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_STUDI - 0.00344841352714 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_STUDI - 0.0017902680416 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_STUDI - 0.06183764162661 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_STUDI - 0.00137189635413 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00414494438826;
MPRINT(EM_DIAGRAM):   if not missing( T_SUBSCRIB ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SUBSCRIB - 0.00039872408293 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SUBSCRIB - 0.00004704062809 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SUBSCRIB - 0.00055035600577 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SUBSCRIB - 0.00065789473684 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SUBSCRIB - 0.0019422863485 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SUBSCRIB - 0.31226503759398 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SUBSCRIB - 0.00006509690138 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00126038052881;
MPRINT(EM_DIAGRAM):   if not missing( T_SUGGEST ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SUGGEST - 0.07121027553634 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SUGGEST - 0.02455682402447 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SUGGEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SUGGEST - 0.00225295601382 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SUGGEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SUGGEST - 0.00964560266885 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SUGGEST - 0.01112602438083 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SUGGEST - 0.01727821910678 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SUGGEST - 0.0183776138032 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SUGGEST - 0.02161673708955 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SUGGEST - 0.14048817827852 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SUGGEST - 0.01109537770154 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SUGGEST - 0.05306837229743 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SUGGEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SUGGEST - 0.01632080015239 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SUGGEST - 0.02026267740531 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SUGGEST - 0.04617307746618 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SUGGEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SUGGEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SUGGEST - 0.01327601097977 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00745529695284;
MPRINT(EM_DIAGRAM):   if not missing( T_SUN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SUN - 0.01117633828503 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SUN - 0.02262842981415 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SUN - 0.01503759398496 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SUN - 0.00607278701691 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SUN - 0.04552364864864 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SUN - 0.00692726373082 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SUN - 0.02010561328345 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SUN - 0.00911172923172 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SUN - 0.01927916564584 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SUN - 0.0154313116801 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SUN - 0.0181862651397 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SUN - 0.00894074482082 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SUN - 0.00415977072419 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SUN - 0.00385674931129 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SUN - 0.00909009799845 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00428325704696;
MPRINT(EM_DIAGRAM):   if not missing( T_SUPPORT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SUPPORT - 0.00890518823136 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SUPPORT - 0.00336890216216 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SUPPORT - 0.00568990042674 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SUPPORT - 0.00937452795789 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SUPPORT - 0.05587318087318 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SUPPORT - 0.00254858235106 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SUPPORT - 0.01691348355079 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SUPPORT - 0.00817476708028 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SUPPORT - 0.00209094163981 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SUPPORT - 0.01108759028425 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SUPPORT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SUPPORT - 0.01857598128022 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SUPPORT - 0.01744318007526 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SUPPORT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SUPPORT - 0.01914529327325 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SUPPORT - 0.00906431235642 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SUPPORT - 0.00469208211143 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SUPPORT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SUPPORT - 0.03809523809523 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SUPPORT - 0.0098647317203 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023391841892;
MPRINT(EM_DIAGRAM):   if not missing( T_SWITCH ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SWITCH - 0.04260123737242 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SWITCH - 0.00106507249364 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SWITCH - 0.02436404600351 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SWITCH - 0.00011330409356 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SWITCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SWITCH - 0.00182053089029 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SWITCH - 0.00444646098003 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SWITCH - 0.01146750614139 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SWITCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SWITCH - 0.00242081187467 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SWITCH - 0.06623931623931 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SWITCH - 0.00131685145066 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SWITCH - 0.00353350856301 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SWITCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SWITCH - 0.00475484735613 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SWITCH - 0.0004206698149 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SWITCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SWITCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SWITCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SWITCH - 0.00172655810536 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00319721638896;
MPRINT(EM_DIAGRAM):   if not missing( T_SYSTEM ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_SYSTEM - 0.03921678914011 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_SYSTEM - 0.03588373773988 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_SYSTEM - 0.01223990208078 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_SYSTEM - 0.01112825970479 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_SYSTEM - 0.03400735294117 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_SYSTEM - 0.01736184091175 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_SYSTEM - 0.43104793057673 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_SYSTEM - 0.02457239020922 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_SYSTEM - 0.0071316997287 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_SYSTEM - 0.0390556467939 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_SYSTEM - 0.01083423618634 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_SYSTEM - 0.01553728289717 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_SYSTEM - 0.04264604980554 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_SYSTEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_SYSTEM - 0.02256190330032 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_SYSTEM - 0.03542186915635 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_SYSTEM - 0.03336019968053 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_SYSTEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_SYSTEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_SYSTEM - 0.01428739697311 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01019489070689;
MPRINT(EM_DIAGRAM):   if not missing( T_TALK ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_TALK - 0.00384670691773 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_TALK - 0.00946351096462 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_TALK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_TALK - 0.00681561175647 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_TALK - 0.05686936936936 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_TALK - 0.00445324096981 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_TALK - 0.00513674762696 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_TALK - 0.00772654565864 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_TALK - 0.00707911231854 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_TALK - 0.00463362113881 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_TALK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_TALK - 0.00211466165413 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_TALK - 0.00217103996521 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_TALK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_TALK - 0.00089605734767 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_TALK - 0.00249319524577 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_TALK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_TALK - 0.01187782805429 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_TALK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_TALK - 0.02341756907595 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00169307087435;
MPRINT(EM_DIAGRAM):   if not missing( T_TECHNOLOG ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_TECHNOLOG - 0.01145113128087 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_TECHNOLOG - 0.0024339691167 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_TECHNOLOG - 0.01528013582342 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_TECHNOLOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_TECHNOLOG - 0.06653645833333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_TECHNOLOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_TECHNOLOG - 0.02292036231277 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_TECHNOLOG - 0.00892475332029 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_TECHNOLOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_TECHNOLOG - 0.021889838508 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_TECHNOLOG - 0.00975081256771 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_TECHNOLOG - 0.00900608194299 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_TECHNOLOG - 0.00709044797616 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_TECHNOLOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_TECHNOLOG - 0.00950206204879 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_TECHNOLOG - 0.00822882882758 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_TECHNOLOG - 0.01435754849847 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_TECHNOLOG - 0.13658314004334 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_TECHNOLOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_TECHNOLOG - 0.00176863130109 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00307390350034;
MPRINT(EM_DIAGRAM):   if not missing( T_TERMIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_TERMIN - 0.00311758921857 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_TERMIN - 0.00159508247743 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_TERMIN - 0.00044925341051 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_TERMIN - 0.06360446985446 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_TERMIN - 0.01348009259482 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_TERMIN - 0.00385609952674 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_TERMIN - 0.0033296604439 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_TERMIN - 0.0035975928833 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_TERMIN - 0.02881598200378 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_TERMIN - 0.03350588513257 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_TERMIN - 0.00139251893674 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_TERMIN - 0.01318225309925 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_TERMIN - 0.00057417266938 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00297309134992;
MPRINT(EM_DIAGRAM):   if not missing( T_TEST ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_TEST - 0.00807278569562 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_TEST - 0.01514293489051 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_TEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_TEST - 0.00042677448337 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_TEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_TEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_TEST - 0.00907608945217 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_TEST - 0.01319303191468 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_TEST - 0.01666452783799 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_TEST - 0.00861457589884 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_TEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_TEST - 0.01126928229188 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_TEST - 0.01345258889957 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_TEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_TEST - 0.00339122282487 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_TEST - 0.01436549585371 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_TEST - 0.01750343152782 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_TEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_TEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_TEST - 0.00026503738422 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00299203737115;
MPRINT(EM_DIAGRAM):   if not missing( T_THAT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_THAT - 0.03091958137754 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_THAT - 0.01398760688469 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_THAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_THAT - 0.01477198740213 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_THAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_THAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_THAT - 0.02292805356353 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_THAT - 0.03473691532418 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_THAT - 0.02448026262343 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_THAT - 0.02258497671334 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_THAT - 0.02157598499061 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_THAT - 0.04818946843212 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_THAT - 0.01140636642204 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_THAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_THAT - 0.006793691402 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_THAT - 0.02265763808689 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_THAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_THAT - 0.01127450980392 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_THAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_THAT - 0.01639993141228 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00801117666596;
MPRINT(EM_DIAGRAM):   if not missing( T_THU ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_THU - 0.02847396926992 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_THU - 0.0197224303747 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_THU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_THU - 0.00932630033135 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_THU - 0.02662037037037 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_THU - 0.01733228980322 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_THU - 0.03294550785726 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_THU - 0.01335173792289 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_THU - 0.00608465608465 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_THU - 0.03982754445001 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_THU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_THU - 0.01625661375661 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_THU - 0.01248039957696 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_THU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_THU - 0.01877457782196 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_THU - 0.01830786403126 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_THU - 0.05509164048359 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_THU - 0.01355109351432 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_THU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_THU - 0.02651850908729 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00595455629046;
MPRINT(EM_DIAGRAM):   if not missing( T_TIME ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_TIME - 0.02236466473496 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_TIME - 0.03874255577748 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_TIME - 0.02089114430886 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_TIME - 0.03360041855702 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_TIME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_TIME - 0.00359938469465 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_TIME - 0.02210702655005 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_TIME - 0.03717064926062 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_TIME - 0.02096924102294 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_TIME - 0.02071167398617 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_TIME - 0.01829782111472 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_TIME - 0.02103152272764 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_TIME - 0.05073962306209 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_TIME - 0.03909465020576 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_TIME - 0.02570196944795 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_TIME - 0.03458239791439 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_TIME - 0.03415113950737 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_TIME - 0.01577703288536 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_TIME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_TIME - 0.02807059255988 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00594474521637;
MPRINT(EM_DIAGRAM):   if not missing( T_TREATMENT ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_TREATMENT - 0.00185935243006 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_TREATMENT - 0.04189058463139 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_TREATMENT - 0.00158421036419 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_TREATMENT - 0.00884694712457 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_TREATMENT - 0.04110616920455 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_TREATMENT - 0.00030054275249 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_TREATMENT - 0.0125 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_TREATMENT - 0.00175224139066 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_TREATMENT - 0.02288647748819 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_TREATMENT - 0.00344828510427 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00309383652357;
MPRINT(EM_DIAGRAM):   if not missing( T_TRUE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_TRUE - 0.0085472203648 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_TRUE - 0.01028295527415 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_TRUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_TRUE - 0.00257448505934 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_TRUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_TRUE - 0.04450093348925 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_TRUE - 0.01505693236875 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_TRUE - 0.01027704892838 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_TRUE - 0.007212543554 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_TRUE - 0.00417586973085 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_TRUE - 0.04423076923076 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_TRUE - 0.00588690228309 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_TRUE - 0.0052100339317 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_TRUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_TRUE - 0.00722246363008 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_TRUE - 0.01406343797239 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_TRUE - 0.02293000023232 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_TRUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_TRUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_TRUE - 0.02663990701223 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00342821558826;
MPRINT(EM_DIAGRAM):   if not missing( T_TUE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_TUE - 0.03588993703034 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_TUE - 0.0429001276076 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_TUE - 0.07891270783828 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_TUE - 0.01211608800716 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_TUE - 0.02389705882352 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_TUE - 0.0047238372093 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_TUE - 0.02861905156804 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_TUE - 0.01574181854457 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_TUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_TUE - 0.07028017546509 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_TUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_TUE - 0.01802385329996 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_TUE - 0.01343950294347 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_TUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_TUE - 0.02476400877863 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_TUE - 0.02076944164019 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_TUE - 0.04105046111942 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_TUE - 0.02291502684927 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_TUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_TUE - 0.02565719530036 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00859116671322;
MPRINT(EM_DIAGRAM):   if not missing( T_TURKISH ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_TURKISH - 0.16446347282672 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_TURKISH - 0.0073772777959 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_TURKISH - 0.00083809523809 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_TURKISH - 0.00179553361014 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_TURKISH - 0.00105750165234 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_TURKISH - 0.01077441077441 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_TURKISH - 0.00452488687782 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_TURKISH - 0.00189539324205 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00313015511446;
MPRINT(EM_DIAGRAM):   if not missing( T_TYPE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_TYPE - 0.00788560080595 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_TYPE - 0.00803249370312 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_TYPE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_TYPE - 0.00055509159426 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_TYPE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_TYPE - 0.01196101412621 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_TYPE - 0.00496680824058 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_TYPE - 0.01041757841333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_TYPE - 0.0172095904725 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_TYPE - 0.01332025231055 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_TYPE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_TYPE - 0.00794495873005 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_TYPE - 0.01604004073765 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_TYPE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_TYPE - 0.00970054645344 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_TYPE - 0.00612440071901 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_TYPE - 0.0210909090909 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_TYPE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_TYPE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_TYPE - 0.00177557662004 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00182027955585;
MPRINT(EM_DIAGRAM):   if not missing( T_UNIV ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_UNIV - 0.00908554572271 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_UNIV - 0.02164538612748 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_UNIV - 0.01199200532978 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_UNIV - 0.00331267605633 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_UNIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_UNIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_UNIV - 0.00802631578947 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_UNIV - 0.00356560048516 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_UNIV - 0.29873189210441 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_UNIV - 0.01268754831644 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_UNIV - 0.03146853146853 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_UNIV - 0.03041140688065 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_UNIV - 0.01070984026018 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_UNIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_UNIV - 0.00668232553567 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_UNIV - 0.0047697307025 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_UNIV - 0.01212121212121 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_UNIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_UNIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_UNIV - 0.00262944983818 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00592342750402;
MPRINT(EM_DIAGRAM):   if not missing( T_UNIVERS ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_UNIVERS - 0.04967802365264 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_UNIVERS - 0.06148308736637 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_UNIVERS - 0.05925722167914 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_UNIVERS - 0.01223468962776 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_UNIVERS - 0.03317307692307 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_UNIVERS - 0.15014040293586 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_UNIVERS - 0.03699575953212 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_UNIVERS - 0.02756253196688 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_UNIVERS - 0.00077922077922 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_UNIVERS - 0.07951236565628 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_UNIVERS - 0.05038979103318 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_UNIVERS - 0.05676594656653 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_UNIVERS - 0.02232254576072 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_UNIVERS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_UNIVERS - 0.04607491616405 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_UNIVERS - 0.02935776447474 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_UNIVERS - 0.11920807132414 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_UNIVERS - 0.1312998323145 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_UNIVERS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_UNIVERS - 0.03781699837818 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00719594216449;
MPRINT(EM_DIAGRAM):   if not missing( T_UNIX ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_UNIX - 0.01167690029199 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_UNIX - 0.00646478687168 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_UNIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_UNIX - 0.00208333333333 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_UNIX - 0.40909950567816 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_UNIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_UNIX - 0.03276020407787 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_UNIX - 0.00571008139595 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_UNIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_UNIX - 0.00686640126174 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_UNIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_UNIX - 0.00259268861809 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_UNIX - 0.01635244067797 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_UNIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_UNIX - 0.00786788298733 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_UNIX - 0.00350188404658 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_UNIX - 0.00586510263929 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_UNIX - 0.01050420168067 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_UNIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_UNIX - 0.00200870132742 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00265671058408;
MPRINT(EM_DIAGRAM):   if not missing( T_USENET ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_USENET - 0.04068680534109 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_USENET - 0.03191664668399 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_USENET - 0.03251381684777 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_USENET - 0.02058779180727 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_USENET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_USENET - 0.0095719629226 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_USENET - 0.06568294360926 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_USENET - 0.01426718725249 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_USENET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_USENET - 0.08246642609506 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_USENET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_USENET - 0.00576252918202 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_USENET - 0.0111687927951 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_USENET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_USENET - 0.01607532109236 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_USENET - 0.02561945883798 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_USENET - 0.03723141793957 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_USENET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_USENET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_USENET - 0.01897457625104 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00732864598104;
MPRINT(EM_DIAGRAM):   if not missing( T_USER ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_USER - 0.00722662293458 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_USER - 0.00366132663484 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_USER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_USER - 0.00104502688172 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_USER - 0.0140625 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_USER - 0.0124498797113 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_USER - 0.02068118861747 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_USER - 0.00900762724292 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_USER - 0.00122448979591 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_USER - 0.0156480717012 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_USER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_USER - 0.0058442854814 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_USER - 0.01483158046319 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_USER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_USER - 0.03642768892559 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_USER - 0.00778361302118 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_USER - 0.0077922077922 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_USER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_USER - 0.11160714285714 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_USER - 0.00090449724443 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00268311839465;
MPRINT(EM_DIAGRAM):   if not missing( T_UTEXA ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_UTEXA - 0.03110047077152 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_UTEXA - 0.00014323220656 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_UTEXA - 0.001466873706 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_UTEXA - 0.00084432032214 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_UTEXA - 0.86160540239487 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_UTEXA - 0.00024961597542 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00277973983993;
MPRINT(EM_DIAGRAM):   if not missing( T_UUCP ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_UUCP - 0.00334610135164 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_UUCP - 0.00563054395256 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_UUCP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_UUCP - 0.08195818151491 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_UUCP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_UUCP - 0.01212947040458 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_UUCP - 0.01927840698793 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_UUCP - 0.00744518831623 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_UUCP - 0.01586416416159 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_UUCP - 0.01427622091111 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_UUCP - 0.02073104200763 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_UUCP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_UUCP - 0.01212846324683 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_UUCP - 0.76543888210554 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_UUCP - 0.01694223619059 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_UUCP - 0.00381983344864 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_UUCP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_UUCP - 0.05131078072254 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_UUCP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_UUCP - 0.01992830394691 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00562613382866;
MPRINT(EM_DIAGRAM):   if not missing( T_VERSION ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_VERSION - 0.03682090357083 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_VERSION - 0.01541000565014 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_VERSION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_VERSION - 0.00054643940885 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_VERSION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_VERSION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_VERSION - 0.0114109372845 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_VERSION - 0.01582576380658 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_VERSION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_VERSION - 0.02251935011391 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_VERSION - 0.06079854809437 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_VERSION - 0.014254985342 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_VERSION - 0.03487768747421 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_VERSION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_VERSION - 0.12226159703339 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_VERSION - 0.00986160262697 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_VERSION - 0.02748484499301 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_VERSION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_VERSION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_VERSION - 0.00052424437607 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00734158965988;
MPRINT(EM_DIAGRAM):   if not missing( T_VIRGINIA ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_VIRGINIA - 0.00187202178352 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_VIRGINIA - 0.00498581397132 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_VIRGINIA - 0.09638435110298 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_VIRGINIA - 0.00222672064777 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_VIRGINIA - 0.0026925352801 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_VIRGINIA - 0.00664519453392 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_VIRGINIA - 0.00389465727811 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_VIRGINIA - 0.00211946050096 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_VIRGINIA - 0.00661213260282 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_VIRGINIA - 0.0012637867647 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_VIRGINIA - 0.00367605186567 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00164735534843;
MPRINT(EM_DIAGRAM):   if not missing( T_VOLTAG ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_VOLTAG - 0.01994307003047 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_VOLTAG - 0.00244019138755 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_VOLTAG - 0.01304864005401 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_VOLTAG - 0.00416127161294 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_VOLTAG - 0.00633780184207 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_VOLTAG - 0.00685691100307 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_VOLTAG - 0.00171542521242 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_VOLTAG - 0.00666666666666 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00210511344856;
MPRINT(EM_DIAGRAM):   if not missing( T_WATER ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_WATER - 0.00691500308705 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_WATER - 0.00445594142213 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_WATER - 0.00003680336487 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_WATER - 0.01003472167569 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_WATER - 0.00574746008708 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_WATER - 0.0005 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_WATER - 0.00419618471142 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_WATER - 0.01342023184309 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_WATER - 0.01070588235294 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_WATER - 0.00823727279585 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00231973760625;
MPRINT(EM_DIAGRAM):   if not missing( T_WED ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_WED - 0.01689663310323 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_WED - 0.0137332701628 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_WED - 0.02859435173299 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_WED - 0.00365036187621 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_WED - 0.07570684523809 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_WED - 0.02325581395348 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_WED - 0.01109627343061 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_WED - 0.00792135094854 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_WED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_WED - 0.02513661591414 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_WED - 0.01057692307692 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_WED - 0.01561984824541 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_WED - 0.01148511790499 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_WED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_WED - 0.01148203543091 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_WED - 0.01156340684645 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_WED - 0.02502357234475 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_WED - 0.02481551760489 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_WED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_WED - 0.00702940643471 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00373891787652;
MPRINT(EM_DIAGRAM):   if not missing( T_WIDGET ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_WIDGET - 0.02130681818181 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_WIDGET - 0.00855361443502 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_WIDGET - 0.00243742160853 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_WIDGET - 0.02058205232539 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_WIDGET - 0.02523025702301 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_WIDGET - 0.01952150857189 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_WIDGET - 0.02545958359218 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_WIDGET - 0.00060085321156 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_WIDGET - 0.01580728853456 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00305772433842;
MPRINT(EM_DIAGRAM):   if not missing( T_WINDOW ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_WINDOW - 0.00910632577675 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_WINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_WINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_WINDOW - 0.000506249055 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_WINDOW - 0.0529353956078 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_WINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_WINDOW - 0.06666524573501 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_WINDOW - 0.00677641929857 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_WINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_WINDOW - 0.03720157626308 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_WINDOW - 0.00846521899153 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_WINDOW - 0.04598926259279 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_WINDOW - 0.07801219681172 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_WINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_WINDOW - 0.25787784402027 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_WINDOW - 0.00666743577152 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_WINDOW - 0.03927432015661 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_WINDOW - 0.009431312632 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_WINDOW - 0.48105466401486 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_WINDOW - 0.00085940497084 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00894373389346;
MPRINT(EM_DIAGRAM):   if not missing( T_WIRE ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_WIRE - 0.0030317928548 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_WIRE - 0.0009368495524 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_WIRE - 0.01712724021089 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_WIRE - 0.00149039812646 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_WIRE - 0.00108670112781 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_WIRE - 0.00369519857589 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_WIRE - 0.00033602150537 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_WIRE - 0.00064155916215 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_WIRE - 0.01140378140378 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_WIRE - 0.06246416138919 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00310011279429;
MPRINT(EM_DIAGRAM):   if not missing( T_WONDER ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_WONDER - 0.0744176230312 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_WONDER - 0.0112490892566 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_WONDER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_WONDER - 0.00009858044164 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_WONDER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_WONDER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_WONDER - 0.00851674641148 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_WONDER - 0.02029267835348 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_WONDER - 0.02495519809609 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_WONDER - 0.0075720981465 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_WONDER - 0.07211538461538 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_WONDER - 0.03851356851199 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_WONDER - 0.00098875732575 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_WONDER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_WONDER - 0.0102919646685 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_WONDER - 0.01747147378095 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_WONDER - 0.02288620470438 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_WONDER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_WONDER - 0.05541871921182 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_WONDER - 0.01474263109783 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00827537367685;
MPRINT(EM_DIAGRAM):   if not missing( T_WORK ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_WORK - 0.02695442085538 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_WORK - 0.01971563399969 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_WORK - 0.06474322924368 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_WORK - 0.03472278600639 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_WORK - 0.0295673076923 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_WORK - 0.01657766675631 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_WORK - 0.04901537453444 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_WORK - 0.04579928208174 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_WORK - 0.04004673361699 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_WORK - 0.02861689100874 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_WORK - 0.05023123251102 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_WORK - 0.02418681318229 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_WORK - 0.08640217646381 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_WORK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_WORK - 0.0454337715908 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_WORK - 0.03139844634233 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_WORK - 0.04482237547092 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_WORK - 0.03587179862459 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_WORK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_WORK - 0.01716691754011 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00771451112306;
MPRINT(EM_DIAGRAM):   if not missing( T_WORLD ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_WORLD - 0.01975047840273 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_WORLD - 0.01872868979655 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_WORLD - 0.03698435277382 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_WORLD - 0.08569245561256 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_WORLD - 0.17045032995553 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_WORLD - 0.02931731768144 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_WORLD - 0.01924627543483 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_WORLD - 0.02250578381912 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_WORLD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_WORLD - 0.00829105596658 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_WORLD - 0.09540598290598 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_WORLD - 0.27695248958427 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_WORLD - 0.03376319275602 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_WORLD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_WORLD - 0.01035467311693 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_WORLD - 0.01584061625013 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_WORLD - 0.02265962303879 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_WORLD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_WORLD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_WORLD - 0.02476818387139 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00889550468158;
MPRINT(EM_DIAGRAM):   if not missing( T_XLIB ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_XLIB - 0.00055467312104 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_XLIB - 0.00249009620826 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_XLIB - 0.00086239489897 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_XLIB - 0.00851439187252 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_XLIB - 0.00631810321171 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_XLIB - 0.00735324326718 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_XLIB - 0.03397138951538 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_XLIB - 0.0008078137622 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_XLIB - 0.00289855072463 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00148056818937;
MPRINT(EM_DIAGRAM):   if not missing( T_XTERM ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_XTERM - 0.00151090006475 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_XTERM - 0.01182432432432 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_XTERM - 0.01489354547376 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_XTERM - 0.00549756561931 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_XTERM - 0.00468574334364 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_XTERM - 0.00818494097208 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_XTERM - 0.03784293072215 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_XTERM - 0.00951812753017 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_XTERM - 0.00385674931129 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_XTERM - 0.0426944971537 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00316724119173;
MPRINT(EM_DIAGRAM):   if not missing( T_YEAR ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_YEAR - 0.01849039566278 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_YEAR - 0.03512664298007 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_YEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_YEAR - 0.04599799408713 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_YEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_YEAR - 0.01220066019127 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_YEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_YEAR - 0.04495779766442 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_YEAR - 0.05085040028513 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_YEAR - 0.01646136740509 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_YEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_YEAR - 0.02831666558009 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_YEAR - 0.00887095381529 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_YEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_YEAR - 0.00152560745034 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_YEAR - 0.03940014397307 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_YEAR - 0.0212371614875 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_YEAR - 0.03540669389943 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_YEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_YEAR - 0.07274247876841 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00946716453807;
MPRINT(EM_DIAGRAM):   if not missing( T_YOU ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_YOU - 0.01640251773323 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_YOU - 0.00853434867897 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_YOU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_YOU - 0.00265777945604 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [5] + ( T_YOU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [6] + ( T_YOU - 0.02329047583835 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [7] + ( T_YOU - 0.07959202392451 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [8] + ( T_YOU - 0.02252816794245 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [9] + ( T_YOU - 0.03383950900472 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [10] + ( T_YOU - 0.01242273644262 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [11] + ( T_YOU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [12] + ( T_YOU - 0.01233950271046 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [13] + ( T_YOU - 0.01433575003599 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [14] + ( T_YOU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [15] + ( T_YOU - 0.01523558403566 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [16] + ( T_YOU - 0.01137442126411 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [17] + ( T_YOU - 0.02067946403996 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [18] + ( T_YOU - 0.02351666560448 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [19] + ( T_YOU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [20] + ( T_YOU - 0.01211288195516 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0052221653489;
MPRINT(EM_DIAGRAM):   _vqnvar = 1.07541898032061 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 2.9464896926727E-11 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUS3vads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 20;
MPRINT(EM_DIAGRAM):   if CLUS3vads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUS3vads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (1.07541898032061 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUS3vlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus3: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 5 then _SEGMENT_LABEL_="Cluster5";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 6 then _SEGMENT_LABEL_="Cluster6";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 7 then _SEGMENT_LABEL_="Cluster7";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 8 then _SEGMENT_LABEL_="Cluster8";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 9 then _SEGMENT_LABEL_="Cluster9";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 10 then _SEGMENT_LABEL_="Cluster10";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 11 then _SEGMENT_LABEL_="Cluster11";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 12 then _SEGMENT_LABEL_="Cluster12";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 13 then _SEGMENT_LABEL_="Cluster13";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 14 then _SEGMENT_LABEL_="Cluster14";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 15 then _SEGMENT_LABEL_="Cluster15";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 16 then _SEGMENT_LABEL_="Cluster16";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 17 then _SEGMENT_LABEL_="Cluster17";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 18 then _SEGMENT_LABEL_="Cluster18";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 19 then _SEGMENT_LABEL_="Cluster19";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 20 then _SEGMENT_LABEL_="Cluster20";
29309      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS3.CLUS3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.IDS2_DATA.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
29310      quit;
29311      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
29312      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
29313      * Clus3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus3: Computing metadata for TRAIN data;
29314      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: Vista EMWS3.CLUS3_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS3.Clus3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS3.Clus3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS3.Clus3_TRAIN out=WORK.M3CX68O4 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CX68O4;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CX68O4(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CX68O4;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CX68O4;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3FWNDY6 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3FWNDY6;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FWNDY6;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M111AXR6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FWNDY6;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3FWNDY6;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FWNDY6;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3FWNDY6;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FWNDY6;
MPRINT(EMADVISECOLUMNS):   label NAME = "Nombre de la variable" TYPE = "Tipo" ROLE = "Rol" LEVEL= "Nivel de medida" ORDER= "Orden" CREATOR= "Creador" FORMATTYPE= "Tipo de formato" FAMILY= "Familia" DISTRIBUTION= "Distribución" PRICE= "Precio" LOWERLIMIT=
"Límite inferior" UPPERLIMIT= "Límite superior" REPORT= "Informe" COMMENT= "Comentario" INDEX= "Índice" INDEXTYPE= "TipoÍndice" LABEL= "Etiqueta" LENGTH= "Longitud";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS3.Ids2_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Ids2_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus3";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: Vista EMWS3.CLUS3_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16H52" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log del informe";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log del informe
Fecha:                13/12/20
Hora:                16H52
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O09_JJLK "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O09_JJLK new;
MPRINT(EM_DIAGRAM):   run;
29724      data WORK.M066GY4W;
MPRINT(EM_DIAGRAM):    data WORK.M066GY4W;
29725      set WORK.M066GY4W;
MPRINT(EM_DIAGRAM):   set WORK.M066GY4W;
29726      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
29727      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.M066GY4W.
NOTE: The data set WORK.M066GY4W has 241 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29728      data WORK.M066GY4W;
MPRINT(EM_DIAGRAM):    data WORK.M066GY4W;
29729      set WORK.M066GY4W end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M066GY4W end=_eof_ nobs=_nobs_;
29730      output;
MPRINT(EM_DIAGRAM):   output;
29731      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
29732      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
29733      ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
29734      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
29735      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
29736      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
29737      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
29738      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
29739      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
29740      output;
MPRINT(EM_DIAGRAM):   output;
29741      end;
MPRINT(EM_DIAGRAM):   end;
29742      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.M066GY4W.
NOTE: The data set WORK.M066GY4W has 242 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
29743      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
29744      * Clus3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Clus3: Create decision matrix;
29745      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29746      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29747      * Clus3: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Tree Variables Macro ;
29748      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29749      %macro EM_TREEVARS;
29750          ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC
29751         ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD
29752         BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
29753         COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT
29754         CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI
29755         DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL
29756         ENGIN ERROR EVENT EXPERI FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND
29757         FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND
29758         GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT
29759         INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD KILL KIND LEVEL
29760         LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON
29761         MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN
29762         OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
29763         POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR
29764         RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN
29765         SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL
29766         SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN
29767         SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE
29768         TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA
29769         VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
29770      %mend EM_TREEVARS;
29771      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29772      * Clus3: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Tree Targets Macro ;
29773      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29774      %macro EM_TREETARGETS;
29775          _SEGMENT_
29776      %mend EM_TREETARGETS;
29777      data EMWS3.EM_Clus3 / view=EMWS3.EM_Clus3;
MPRINT(EM_DIAGRAM):   data EMWS3.EM_Clus3 / view=EMWS3.EM_Clus3;
29778      set
29778    ! EMWS3.Clus3_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS3.Clus3_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
29779      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS3.EM_CLUS3.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS3_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus3: Inputs intervalo Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29780      *------------------------------------------------------------* ;
29781      * Clus3: Inputs intervalo Macro ;
29782      *------------------------------------------------------------* ;
29783      %macro INTINPUTS;
29784          ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC
29785         ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD
29786         BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
29787         COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT
29788         CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI
29789         DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL
29790         ENGIN ERROR EVENT EXPERI FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND
29791         FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND
29792         GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT
29793         INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD KILL KIND LEVEL
29794         LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON
29795         MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN
29796         OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
29797         POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR
29798         RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN
29799         SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL
29800         SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN
29801         SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE
29802         TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA
29803         VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
29804      %mend INTINPUTS;
29805      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29806      * Clus3: Inputs binarios y nominales Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Inputs binarios y nominales Macro ;
29807      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29808      %macro NOMINPUTS;
29809
29810      %mend NOMINPUTS;
29811      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29812      * Clus3: Inputs ordinales Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Inputs ordinales Macro ;
29813      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29814      %macro ORDINPUTS;
29815
29816      %mend ORDINPUTS;
29817      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29818      * Clus3: ejecutar procedimiento ARBOR;
MPRINT(EM_DIAGRAM):   * Clus3: ejecutar procedimiento ARBOR;
29819      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
29820      proc arbor data=EMWS3.EM_Clus3
29821      MAXSURRS=5
29822      ;
MPRINT(EM_DIAGRAM):    proc arbor data=EMWS3.EM_Clus3 MAXSURRS=5 ;
29823      ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
29824      input %INTINPUTS
MPRINT(INTINPUTS):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER
WORK WORLD XLIB XTERM YEAR YOU
29825      / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
29826      target _SEGMENT_ / level=NOMINAL
29827      Criterion=PROBCHISQ
29828      ;
MPRINT(EM_DIAGRAM):   target _SEGMENT_ / level=NOMINAL Criterion=PROBCHISQ ;
29829      ;
MPRINT(EM_DIAGRAM):   ;
29830      Performance DISK
29831      ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
29832      MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: 1478348 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 569761792 bytes.
NOTE: Passed training data 18 times.
NOTE: Training used 17801064 bytes of work memory.
NOTE: The subtree sequence contains 10 subtrees. The largest has 19 nodes and 10 leaves.
NOTE: Using subtree with 13 nodes and 7 leaves.
NOTE: Created macro variable NLEAVES equal to 7.
29833      save
29834      MODEL=EMWS3.Clus3_PLOTDS
29835      SEQUENCE=EMWS3.Clus3_OUTSEQ
29836      IMPORTANCE=EMWS3.Clus3_OUTIMPORT
29837      NODESTAT=EMWS3.Clus3_OUTNODES
29838      SUMMARY=WORK.OUTSUMMARY_TREE_22F6D7B
29839      STATSBYNODE=WORK.OUTSTATS_TREE_22F6D7B
29840      Pathlistnonmissing = WORK.OUTPATH_TREE_22F6D7B
29841      Rules = WORK.OUTRULES_TREE_22F6D7B
29842      ;
MPRINT(EM_DIAGRAM):   save MODEL=EMWS3.Clus3_PLOTDS SEQUENCE=EMWS3.Clus3_OUTSEQ IMPORTANCE=EMWS3.Clus3_OUTIMPORT NODESTAT=EMWS3.Clus3_OUTNODES SUMMARY=WORK.OUTSUMMARY_TREE_22F6D7B STATSBYNODE=WORK.OUTSTATS_TREE_22F6D7B Pathlistnonmissing =
WORK.OUTPATH_TREE_22F6D7B Rules = WORK.OUTRULES_TREE_22F6D7B ;
NOTE: The data set EMWS3.CLUS3_OUTIMPORT has 241 observations and 5 variables.
NOTE: The data set EMWS3.CLUS3_PLOTDS has 3330 observations and 4 variables.
NOTE: The data set EMWS3.CLUS3_OUTNODES has 13 observations and 56 variables.
NOTE: The data set WORK.OUTPATH_TREE_22F6D7B has 75 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_22F6D7B has 251 observations and 6 variables.
NOTE: The data set EMWS3.CLUS3_OUTSEQ has 10 observations and 11 variables.
NOTE: The data set WORK.OUTSTATS_TREE_22F6D7B has 286 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_22F6D7B has 84 observations and 23 variables.
29843      run;
MPRINT(EM_DIAGRAM):   run;
 
29844      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista EMWS3.EM_CLUS3.VIEW ha utilizado (Tiempo de proceso total):
      real time           1.66 seconds
      cpu time            1.65 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS3_TRAIN.
NOTE: There were 3000 observations read from the data set EMWS3.EM_CLUS3.
NOTE: The data set WORK._NAMEDAT has 20 observations and 5 variables.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           1.66 seconds
      cpu time            1.65 seconds
 
 
29845      data EMWS3.Clus3_OUTIMPORT;
MPRINT(EM_DIAGRAM):    data EMWS3.Clus3_OUTIMPORT;
29846      set EMWS3.Clus3_OUTIMPORT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus3_OUTIMPORT;
29847      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
29848         "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
29849      ;
MPRINT(EM_DIAGRAM):   label NAME = "Nombre de la variable" LABEL = "Etiqueta" NRULES = "Número de reglas de división" IMPORTANCE = "Importancia" NSURROGATES = "Número de reglas sustitutas" ;
29850      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set EMWS3.CLUS3_OUTIMPORT.
NOTE: The data set EMWS3.CLUS3_OUTIMPORT has 241 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29851      filename x "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
29852      data temp;
MPRINT(EM_DIAGRAM):    data temp;
29853      length varname $11;
MPRINT(EM_DIAGRAM):   length varname $11;
29854      retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
29855      set WORK.OUTPATH_TREE_22F6D7B;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_22F6D7B;
29856      if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
29857      else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
29858      output;
MPRINT(EM_DIAGRAM):   output;
29859      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 75 observations read from the data set WORK.OUTPATH_TREE_22F6D7B.
NOTE: The data set WORK.TEMP has 75 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29860      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
29861      by node;
MPRINT(EM_DIAGRAM):   by node;
29862      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 75 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 75 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
29863      proc sort data=EMWS3.Clus3_OUTNODES out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus3_OUTNODES out=outnodes;
29864      by node;
MPRINT(EM_DIAGRAM):   by node;
29865      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS3.CLUS3_OUTNODES.
NOTE: The data set WORK.OUTNODES has 13 observations and 56 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29866      data temp;
MPRINT(EM_DIAGRAM):   data temp;
29867      merge temp(in=_a) outnodes(keep= node
29868      NPRIORS
29869      P__SEGMENT_1
29870      P__SEGMENT_10
29871      P__SEGMENT_17
29872      P__SEGMENT_2
29873      P__SEGMENT_20
29874      P__SEGMENT_8
29875      P__SEGMENT_12
29876      P__SEGMENT_15
29877      P__SEGMENT_7
29878      P__SEGMENT_13
29879      P__SEGMENT_4
29880      P__SEGMENT_16
29881      P__SEGMENT_9
29882      P__SEGMENT_3
29883      P__SEGMENT_6
29884      P__SEGMENT_18
29885      P__SEGMENT_11
29886      P__SEGMENT_5
29887      P__SEGMENT_19
29888      P__SEGMENT_14
29889      );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P__SEGMENT_1 P__SEGMENT_10 P__SEGMENT_17 P__SEGMENT_2 P__SEGMENT_20 P__SEGMENT_8 P__SEGMENT_12 P__SEGMENT_15 P__SEGMENT_7 P__SEGMENT_13 P__SEGMENT_4 P__SEGMENT_16 P__SEGMENT_9
P__SEGMENT_3 P__SEGMENT_6 P__SEGMENT_18 P__SEGMENT_11 P__SEGMENT_5 P__SEGMENT_19 P__SEGMENT_14 );
29890      by node;
MPRINT(EM_DIAGRAM):   by node;
29891      if _a;
MPRINT(EM_DIAGRAM):   if _a;
29892      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 75 observations read from the data set WORK.TEMP.
NOTE: There were 13 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 75 observations and 29 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
29893      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
29894      by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
29895      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 75 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 75 observations and 29 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29896      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
29897      file x;
MPRINT(EM_DIAGRAM):   file x;
29898      set temp;
MPRINT(EM_DIAGRAM):   set temp;
29899      by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
29900      retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
29901      length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
29902      if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
29903      origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
29904      oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
29905      end;
MPRINT(EM_DIAGRAM):   end;
29906      if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
29907      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
29908      put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
29909      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
29910      end;
MPRINT(EM_DIAGRAM):   end;
29911      if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
29912      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
29913      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
29914      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
29915      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
29916      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
29917      end;
MPRINT(EM_DIAGRAM):   end;
29918      else do;
MPRINT(EM_DIAGRAM):   else do;
29919      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
29920      end;
MPRINT(EM_DIAGRAM):   end;
29921      end;
MPRINT(EM_DIAGRAM):   end;
29922      end;
MPRINT(EM_DIAGRAM):   end;
29923      else do;
MPRINT(EM_DIAGRAM):   else do;
29924      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
29925      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
29926      end;
MPRINT(EM_DIAGRAM):   end;
29927      else do;
MPRINT(EM_DIAGRAM):   else do;
29928      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
29929      end;
MPRINT(EM_DIAGRAM):   end;
29930      end;
MPRINT(EM_DIAGRAM):   end;
29931      end;
MPRINT(EM_DIAGRAM):   end;
29932      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
29933      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
29934      string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
29935      end;
MPRINT(EM_DIAGRAM):   end;
29936      else do;
MPRINT(EM_DIAGRAM):   else do;
29937      string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
29938      end;
MPRINT(EM_DIAGRAM):   end;
29939      end;
MPRINT(EM_DIAGRAM):   end;
29940      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
29941      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
29942      string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
29943      end;
MPRINT(EM_DIAGRAM):   end;
29944      else do;
MPRINT(EM_DIAGRAM):   else do;
29945      string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
29946      end;
MPRINT(EM_DIAGRAM):   end;
29947      end;
MPRINT(EM_DIAGRAM):   end;
29948      else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
29949      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
29950      string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
29951      end;
MPRINT(EM_DIAGRAM):   end;
29952      else do;
MPRINT(EM_DIAGRAM):   else do;
29953      string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
29954      end;
MPRINT(EM_DIAGRAM):   end;
29955      end;
MPRINT(EM_DIAGRAM):   end;
29956      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
29957      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
29958      end;
MPRINT(EM_DIAGRAM):   end;
29959      else do;
MPRINT(EM_DIAGRAM):   else do;
29960      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
29961      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
29962      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
29963      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
29964      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
29965      end;
MPRINT(EM_DIAGRAM):   end;
29966      end;
MPRINT(EM_DIAGRAM):   end;
29967      else do;
MPRINT(EM_DIAGRAM):   else do;
29968      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
29969      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
29970      end;
MPRINT(EM_DIAGRAM):   end;
29971      end;
MPRINT(EM_DIAGRAM):   end;
29972      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
29973      string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
29974      end;
MPRINT(EM_DIAGRAM):   end;
29975      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
29976      end;
MPRINT(EM_DIAGRAM):   end;
29977      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
29978      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
29979      end;
MPRINT(EM_DIAGRAM):   end;
29980      if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
29981      if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
29982      if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
29983      string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
29984      end;
MPRINT(EM_DIAGRAM):   end;
29985      end;
MPRINT(EM_DIAGRAM):   end;
29986      put string;
MPRINT(EM_DIAGRAM):   put string;
29987      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
29988      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
29989      end;
MPRINT(EM_DIAGRAM):   end;
29990      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
29991      put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
29992      put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
29993      put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
29994      put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
29995      put " Predicted: _SEGMENT_=10  = " P__SEGMENT_10;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=10  = " P__SEGMENT_10;
29996      put " Predicted: _SEGMENT_=17  = " P__SEGMENT_17;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=17  = " P__SEGMENT_17;
29997      put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
29998      put " Predicted: _SEGMENT_=20  = " P__SEGMENT_20;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=20  = " P__SEGMENT_20;
29999      put " Predicted: _SEGMENT_=8  = " P__SEGMENT_8;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=8  = " P__SEGMENT_8;
30000      put " Predicted: _SEGMENT_=12  = " P__SEGMENT_12;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=12  = " P__SEGMENT_12;
30001      put " Predicted: _SEGMENT_=15  = " P__SEGMENT_15;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=15  = " P__SEGMENT_15;
30002      put " Predicted: _SEGMENT_=7  = " P__SEGMENT_7;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=7  = " P__SEGMENT_7;
30003      put " Predicted: _SEGMENT_=13  = " P__SEGMENT_13;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=13  = " P__SEGMENT_13;
30004      put " Predicted: _SEGMENT_=4  = " P__SEGMENT_4;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=4  = " P__SEGMENT_4;
30005      put " Predicted: _SEGMENT_=16  = " P__SEGMENT_16;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=16  = " P__SEGMENT_16;
30006      put " Predicted: _SEGMENT_=9  = " P__SEGMENT_9;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=9  = " P__SEGMENT_9;
30007      put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
30008      put " Predicted: _SEGMENT_=6  = " P__SEGMENT_6;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=6  = " P__SEGMENT_6;
30009      put " Predicted: _SEGMENT_=18  = " P__SEGMENT_18;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=18  = " P__SEGMENT_18;
30010      put " Predicted: _SEGMENT_=11  = " P__SEGMENT_11;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=11  = " P__SEGMENT_11;
30011      put " Predicted: _SEGMENT_=5  = " P__SEGMENT_5;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=5  = " P__SEGMENT_5;
30012      put " Predicted: _SEGMENT_=19  = " P__SEGMENT_19;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=19  = " P__SEGMENT_19;
30013      put " Predicted: _SEGMENT_=14  = " P__SEGMENT_14;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=14  = " P__SEGMENT_14;
30014      put " ";
MPRINT(EM_DIAGRAM):   put " ";
30015      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
30016      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
30017      end;
MPRINT(EM_DIAGRAM):   end;
30018      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      29916:67    29919:66    29963:108   29964:72
NOTE: The file X is:
      Nombre archivo=C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,
      Tamaño de archivo (bytes)=0,
      Última modificación=13 de diciembre de 2020 16H52,
      Create Time=13 de diciembre de 2020 16H51
 
NOTE: 216 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 62.
NOTE: There were 75 observations read from the data set WORK.TEMP.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30019      filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
30020      /* belowtext */
30021      data templabel;
MPRINT(EM_DIAGRAM):    data templabel;
30022      set WORK.OUTRULES_TREE_22F6D7B;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_22F6D7B;
30023      if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
30024      rename character_value = belowtext;
MPRINT(EM_DIAGRAM):   rename character_value = belowtext;
30025      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
30026      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 251 observations read from the data set WORK.OUTRULES_TREE_22F6D7B.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30027      data tempvar;
MPRINT(EM_DIAGRAM):   data tempvar;
30028      set WORK.OUTRULES_TREE_22F6D7B;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_22F6D7B;
30029      if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
30030      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
30031      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 251 observations read from the data set WORK.OUTRULES_TREE_22F6D7B.
NOTE: The data set WORK.TEMPVAR has 6 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30032      proc sort data=templabel;
MPRINT(EM_DIAGRAM):   proc sort data=templabel;
30033      by node;
MPRINT(EM_DIAGRAM):   by node;
30034      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30035      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
30036      by node;
MPRINT(EM_DIAGRAM):   by node;
30037      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 6 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30038      data tempbelow;
MPRINT(EM_DIAGRAM):   data tempbelow;
30039      merge templabel tempvar;
MPRINT(EM_DIAGRAM):   merge templabel tempvar;
30040      by node;
MPRINT(EM_DIAGRAM):   by node;
30041      if missing(belowtext) then belowtext= character_value;
MPRINT(EM_DIAGRAM):   if missing(belowtext) then belowtext= character_value;
30042      keep node belowtext;
MPRINT(EM_DIAGRAM):   keep node belowtext;
30043      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TEMPLABEL.
NOTE: There were 6 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPBELOW has 6 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30044      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
30045      by node;
MPRINT(EM_DIAGRAM):   by node;
30046      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.TEMPBELOW has 6 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30047      /* abovetext */
30048      data tempoutrules;
MPRINT(EM_DIAGRAM):   data tempoutrules;
30049      set WORK.OUTRULES_TREE_22F6D7B;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_22F6D7B;
30050      if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
MPRINT(EM_DIAGRAM):   if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
30051      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 251 observations read from the data set WORK.OUTRULES_TREE_22F6D7B.
NOTE: The data set WORK.TEMPOUTRULES has 6 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30052      proc sort data=tempoutrules;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutrules;
30053      by node numeric_value;
MPRINT(EM_DIAGRAM):   by node numeric_value;
30054      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPOUTRULES has 6 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30055      data tempabove;
MPRINT(EM_DIAGRAM):   data tempabove;
30056      set tempoutrules(rename=(node=parent));
MPRINT(EM_DIAGRAM):   set tempoutrules(rename=(node=parent));
30057      by parent numeric_value;
MPRINT(EM_DIAGRAM):   by parent numeric_value;
30058      retain abovetext tempstring flag branch origval origchar;
MPRINT(EM_DIAGRAM):   retain abovetext tempstring flag branch origval origchar;
30059      *length abovetext tempstring origchar $45;
MPRINT(EM_DIAGRAM):   *length abovetext tempstring origchar $45;
30060      length abovetext $256;
MPRINT(EM_DIAGRAM):   length abovetext $256;
30061      length tempstring origchar $64;
MPRINT(EM_DIAGRAM):   length tempstring origchar $64;
30062      if STAT in ("INTERVAL", "ORDINAL") then do;
MPRINT(EM_DIAGRAM):   if STAT in ("INTERVAL", "ORDINAL") then do;
30063      if first.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent then do;
30064      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
30065      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
30066      abovetext = "< "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(NUMERIC_VALUE);
30067      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
30068      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
30069      output;
MPRINT(EM_DIAGRAM):   output;
30070      end;
MPRINT(EM_DIAGRAM):   end;
30071      else do;
MPRINT(EM_DIAGRAM):   else do;
30072      abovetext = "< "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(CHARACTER_VALUE);
30073      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
30074      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
30075      output;
MPRINT(EM_DIAGRAM):   output;
30076      end;
MPRINT(EM_DIAGRAM):   end;
30077      if first.parent AND last.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent AND last.parent then do;
30078      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
30079      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
30080      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
30081      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
30082      output;
MPRINT(EM_DIAGRAM):   output;
30083      end;
MPRINT(EM_DIAGRAM):   end;
30084      else do;
MPRINT(EM_DIAGRAM):   else do;
30085      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
30086      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
30087      output;
MPRINT(EM_DIAGRAM):   output;
30088      end;
MPRINT(EM_DIAGRAM):   end;
30089      end;
MPRINT(EM_DIAGRAM):   end;
30090      end;
MPRINT(EM_DIAGRAM):   end;
30091      else if last.parent then do;
MPRINT(EM_DIAGRAM):   else if last.parent then do;
30092      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
30093      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
30094      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
30095      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
30096      end;
MPRINT(EM_DIAGRAM):   end;
30097      else do;
MPRINT(EM_DIAGRAM):   else do;
30098      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
30099      end;
MPRINT(EM_DIAGRAM):   end;
30100      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
30101      output;
MPRINT(EM_DIAGRAM):   output;
30102      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
30103      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
30104      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
30105      end;
MPRINT(EM_DIAGRAM):   end;
30106      else do;
MPRINT(EM_DIAGRAM):   else do;
30107      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
30108      end;
MPRINT(EM_DIAGRAM):   end;
30109      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
30110      output;
MPRINT(EM_DIAGRAM):   output;
30111      end;
MPRINT(EM_DIAGRAM):   end;
30112      else do;
MPRINT(EM_DIAGRAM):   else do;
30113      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
30114      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
30115      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
30116      end;
MPRINT(EM_DIAGRAM):   end;
30117      else do;
MPRINT(EM_DIAGRAM):   else do;
30118      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
30119      end;
MPRINT(EM_DIAGRAM):   end;
30120      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
30121      output;
MPRINT(EM_DIAGRAM):   output;
30122      end;
MPRINT(EM_DIAGRAM):   end;
30123      end;
MPRINT(EM_DIAGRAM):   end;
30124      else do;
MPRINT(EM_DIAGRAM):   else do;
30125      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
30126      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
30127      numeric_value = round(numeric_value,0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value,0.0001);
30128      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
30129      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
30130      end;
MPRINT(EM_DIAGRAM):   end;
30131      else do;
MPRINT(EM_DIAGRAM):   else do;
30132      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
30133      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
30134      end;
MPRINT(EM_DIAGRAM):   end;
30135      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
30136      output;
MPRINT(EM_DIAGRAM):   output;
30137      end;
MPRINT(EM_DIAGRAM):   end;
30138      else do;
MPRINT(EM_DIAGRAM):   else do;
30139      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
30140      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
30141      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
30142      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
30143      end;
MPRINT(EM_DIAGRAM):   end;
30144      else do;
MPRINT(EM_DIAGRAM):   else do;
30145      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
30146      origval = character_value;
MPRINT(EM_DIAGRAM):   origval = character_value;
30147      end;
MPRINT(EM_DIAGRAM):   end;
30148      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
30149      output;
MPRINT(EM_DIAGRAM):   output;
30150      end;
MPRINT(EM_DIAGRAM):   end;
30151      end;
MPRINT(EM_DIAGRAM):   end;
30152      end;
MPRINT(EM_DIAGRAM):   end;
30153      else do;
MPRINT(EM_DIAGRAM):   else do;
30154      if first.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value then do;
30155      flag = 0;
MPRINT(EM_DIAGRAM):   flag = 0;
30156      abovetext = CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   abovetext = CHARACTER_VALUE;
30157      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
30158      if first.numeric_value AND last.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value AND last.numeric_value then do;
30159      output;
MPRINT(EM_DIAGRAM):   output;
30160      end;
MPRINT(EM_DIAGRAM):   end;
30161      end;
MPRINT(EM_DIAGRAM):   end;
30162      else if last.numeric_value then do;
MPRINT(EM_DIAGRAM):   else if last.numeric_value then do;
30163      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
30164      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
30165      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
30166      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
30167      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
30168      end;
MPRINT(EM_DIAGRAM):   end;
30169      else do;
MPRINT(EM_DIAGRAM):   else do;
30170      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
30171      flag = 1;
MPRINT(EM_DIAGRAM):   flag = 1;
30172      end;
MPRINT(EM_DIAGRAM):   end;
30173      end;
MPRINT(EM_DIAGRAM):   end;
30174      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
30175      output;
MPRINT(EM_DIAGRAM):   output;
30176      end;
MPRINT(EM_DIAGRAM):   end;
30177      else do;
MPRINT(EM_DIAGRAM):   else do;
30178      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
30179      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
30180      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
30181      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
30182      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
30183      end;
MPRINT(EM_DIAGRAM):   end;
30184      else do;
MPRINT(EM_DIAGRAM):   else do;
30185      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
30186      flag=1;
MPRINT(EM_DIAGRAM):   flag=1;
30187      end;
MPRINT(EM_DIAGRAM):   end;
30188      end;
MPRINT(EM_DIAGRAM):   end;
30189      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
30190      end;
MPRINT(EM_DIAGRAM):   end;
30191      end;
MPRINT(EM_DIAGRAM):   end;
30192      keep parent branch abovetext;
MPRINT(EM_DIAGRAM):   keep parent branch abovetext;
30193      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      30066:25   30081:26   30095:24   30095:47   30104:26   30115:26   30128:24   30128:47   30141:26
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      30146:11
NOTE: There were 6 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPABOVE has 12 observations and 3 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30194      /* MIssing value to abovetext */
30195      data tempmissing;
MPRINT(EM_DIAGRAM):   data tempmissing;
30196      set WORK.OUTRULES_TREE_22F6D7B;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_22F6D7B;
30197      if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
30198      rename node=parent numeric_value=branch character_value=misschar;
MPRINT(EM_DIAGRAM):   rename node=parent numeric_value=branch character_value=misschar;
30199      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 251 observations read from the data set WORK.OUTRULES_TREE_22F6D7B.
NOTE: The data set WORK.TEMPMISSING has 6 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30200      proc sort data=work.tempabove;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempabove;
30201      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
30202      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.TEMPABOVE.
NOTE: The data set WORK.TEMPABOVE has 12 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30203      proc sort data=EMWS3.Clus3_OUTNODES out=tempoutnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus3_OUTNODES out=tempoutnodes;
30204      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
30205      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS3.CLUS3_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 13 observations and 56 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30206      proc sort data=tempmissing;
MPRINT(EM_DIAGRAM):   proc sort data=tempmissing;
30207      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
30208      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 6 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30209      data WORK.Clus3_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus3_outnodes;
30210      merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
MPRINT(EM_DIAGRAM):   merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
30211      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
30212      length traintotal validtotal 8;
MPRINT(EM_DIAGRAM):   length traintotal validtotal 8;
30213      retain traintotal validtotal;
MPRINT(EM_DIAGRAM):   retain traintotal validtotal;
30214      if _a then do;
MPRINT(EM_DIAGRAM):   if _a then do;
30215      if ^MISSING(abovetext) then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(abovetext) then do;
30216      abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext= strip(abovetext)||" Falta Or";
30217      end;
MPRINT(EM_DIAGRAM):   end;
30218      else do;
MPRINT(EM_DIAGRAM):   else do;
30219      abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext = " Sólo valores ausentes";
30220      end;
MPRINT(EM_DIAGRAM):   end;
30221      end;
MPRINT(EM_DIAGRAM):   end;
30222      if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   if MISSING(abovetext) then abovetext="Valores no ausentes";
30223      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
30224      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
30225      validtotal=VN;
MPRINT(EM_DIAGRAM):   validtotal=VN;
30226      end;
MPRINT(EM_DIAGRAM):   end;
30227      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Total de entrenamiento";
30228      drop role rank stat misschar belowtext;
MPRINT(EM_DIAGRAM):   drop role rank stat misschar belowtext;
30229      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VN is uninitialized.
NOTE: There were 12 observations read from the data set WORK.TEMPABOVE.
NOTE: There were 13 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 6 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.CLUS3_OUTNODES has 13 observations and 58 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
30230      proc sort data=WORK.Clus3_outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus3_outnodes;
30231      by node;
MPRINT(EM_DIAGRAM):   by node;
30232      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.CLUS3_OUTNODES.
NOTE: The data set WORK.CLUS3_OUTNODES has 13 observations and 58 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30233      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
30234      by node;
MPRINT(EM_DIAGRAM):   by node;
30235      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30236      data WORK.Clus3_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus3_outnodes;
30237      merge WORK.Clus3_outnodes tempbelow;
MPRINT(EM_DIAGRAM):   merge WORK.Clus3_outnodes tempbelow;
30238      by node;
MPRINT(EM_DIAGRAM):   by node;
30239      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.CLUS3_OUTNODES.
NOTE: There were 6 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.CLUS3_OUTNODES has 13 observations and 59 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista EMWS3.EM_CLUS3.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.81 seconds
      cpu time            0.81 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS3_TRAIN.
30240      data tempoutstats;
MPRINT(EM_DIAGRAM):    data tempoutstats;
30241      set WORK.OUTSTATS_TREE_22F6D7B;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_22F6D7B;
30242      length tarlevel $8;
MPRINT(EM_DIAGRAM):   length tarlevel $8;
30243      tarlevel ="NOMINAL";
MPRINT(EM_DIAGRAM):   tarlevel ="NOMINAL";
30244      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 286 observations read from the data set WORK.OUTSTATS_TREE_22F6D7B.
NOTE: The data set WORK.TEMPOUTSTATS has 286 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30245      data EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS3.Clus3_TREE_PLOT;
30246      length NODETEXT TEXTALL $800 N NODECOLOR 8;
MPRINT(EM_DIAGRAM):   length NODETEXT TEXTALL $800 N NODECOLOR 8;
30247      set WORK.Clus3_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus3_outnodes;
30248      label parent = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentID_vlabel, noquote))" depth = "%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, noquote))" belowtext= "%sysfunc(sasmsg(sashelp.dmine, rpt_belowtext_vlabel, noquote))" abovetext =
30249         "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))" linkwidth = "%sysfunc(sasmsg(sashelp.dmine, rpt_linkwidth_vlabel, noquote))" nodetext = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodetext_vlabel, noquote))" textall =
30250         "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainn_vlabel, noquote))" nodecolor = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))" node =
30251         "%sysfunc(sasmsg(sashelp.dmine, rpt_node_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label parent = "Id padre" depth = "Profundidad" belowtext= "Por debajo del texto" abovetext = "Por encima del texto" linkwidth = "Anchura del enlace" nodetext = "Texto del nodo" textall = "Todo el texto" N = "Entrenar: número de
observaciones" nodecolor = "Color del nodo" node = "Nodo";
30252      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
30253      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TEXTALL is uninitialized.
NOTE: Variable NODECOLOR is uninitialized.
NOTE: There were 13 observations read from the data set WORK.CLUS3_OUTNODES.
NOTE: The data set EMWS3.CLUS3_TREE_PLOT has 13 observations and 10 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30254      proc sort data=EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus3_TREE_PLOT;
30255      by node;
MPRINT(EM_DIAGRAM):   by node;
30256      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS3.CLUS3_TREE_PLOT.
NOTE: The data set EMWS3.CLUS3_TREE_PLOT has 13 observations and 10 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30257      proc sort data=tempoutstats;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutstats;
30258      by node;
MPRINT(EM_DIAGRAM):   by node;
30259      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 286 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 286 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30260      data EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS3.Clus3_TREE_PLOT;
30261      merge EMWS3.Clus3_TREE_PLOT tempoutstats;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus3_TREE_PLOT tempoutstats;
30262      length text $800 _RASE_ P__SEGMENT_1 8;
MPRINT(EM_DIAGRAM):   length text $800 _RASE_ P__SEGMENT_1 8;
30263      retain P__SEGMENT_1 eventlevel;
MPRINT(EM_DIAGRAM):   retain P__SEGMENT_1 eventlevel;
30264      by node;
MPRINT(EM_DIAGRAM):   by node;
30265      if statname='N' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='N' then N=statvalue;
30266      if statname='NPRIORS' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='NPRIORS' then N=statvalue;
30267      if statname='PREDICTION' then eventlevel=category;
MPRINT(EM_DIAGRAM):   if statname='PREDICTION' then eventlevel=category;
30268      _RASE_ = .;
MPRINT(EM_DIAGRAM):   _RASE_ = .;
30269      if tarlevel ^= 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if tarlevel ^= 'INTERVAL' then do;
30270      if STATNAME = 'PROBABILITY' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PROBABILITY' then do;
30271      if CATEGORY=EVENTLEVEL then do;
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL then do;
30272      nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
30273      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
30274      P__SEGMENT_1 = round(STATVALUE, .01);
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = round(STATVALUE, .01);
30275      end;
MPRINT(EM_DIAGRAM):   end;
30276      else do;
MPRINT(EM_DIAGRAM):   else do;
30277      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
30278      end;
MPRINT(EM_DIAGRAM):   end;
30279      textall = strip(textall)||'0A'x||strip( text);
MPRINT(EM_DIAGRAM):   textall = strip(textall)||'0A'x||strip( text);
30280      end;
MPRINT(EM_DIAGRAM):   end;
30281      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
30282      nodetext = trim(nodetext)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext = trim(nodetext)||'0A'x||" Número:"|| put(N, 13.);
30283      textall = trim(textall)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   textall = trim(textall)||'0A'x||" Número:"|| put(N, 13.);
30284      output EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS3.Clus3_TREE_PLOT;
30285      end;
MPRINT(EM_DIAGRAM):   end;
30286      end;
MPRINT(EM_DIAGRAM):   end;
30287      else do;
MPRINT(EM_DIAGRAM):   else do;
30288      if statname='RASE' then _RASE_=statvalue;
MPRINT(EM_DIAGRAM):   if statname='RASE' then _RASE_=statvalue;
30289      label _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trase_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _RASE_ = "Entrenar: error cuadrado del promedio de la raíz";
30290      if STATNAME = 'PREDICTION' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PREDICTION' then do;
30291      nodetext= "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"|| put(STATVALUE, 13.4)||'0A'x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext= "Promedio"|| put(STATVALUE, 13.4)||'0A'x|| "Número:"|| put(N, 13.);
30292      textall = nodetext;
MPRINT(EM_DIAGRAM):   textall = nodetext;
30293      P__SEGMENT_1 = STATVALUE;
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = STATVALUE;
30294      ;
MPRINT(EM_DIAGRAM):   ;
30295      ;
MPRINT(EM_DIAGRAM):   ;
30296      end;
MPRINT(EM_DIAGRAM):   end;
30297      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
30298      output EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS3.Clus3_TREE_PLOT;
30299      end;
MPRINT(EM_DIAGRAM):   end;
30300      ;
MPRINT(EM_DIAGRAM):   ;
30301      end;
MPRINT(EM_DIAGRAM):   end;
30302      label P__SEGMENT_1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_predictedvar_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label P__SEGMENT_1 = "Variable predicha";
30303      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
30304      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS3.CLUS3_TREE_PLOT.
NOTE: There were 286 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set EMWS3.CLUS3_TREE_PLOT has 13 observations and 12 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30305      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
30306      set WORK.OUTSTATS_TREE_22F6D7B;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_22F6D7B;
30307      retain eventlevel;
MPRINT(EM_DIAGRAM):   retain eventlevel;
30308      if STATNAME='PREDICTION' then eventlevel=CATEGORY;
MPRINT(EM_DIAGRAM):   if STATNAME='PREDICTION' then eventlevel=CATEGORY;
30309      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 286 observations read from the data set WORK.OUTSTATS_TREE_22F6D7B.
NOTE: The data set WORK.TEMPCOLOR has 286 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30310      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
30311      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
30312      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
30313      if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
30314      end;
MPRINT(EM_DIAGRAM):   end;
30315      else do;
MPRINT(EM_DIAGRAM):   else do;
30316      if STATNAME="PREDICTION";
MPRINT(EM_DIAGRAM):   if STATNAME="PREDICTION";
30317      end;
MPRINT(EM_DIAGRAM):   end;
30318      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 286 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 13 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30319      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
30320      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
30321      length nodecolor 8;
MPRINT(EM_DIAGRAM):   length nodecolor 8;
30322      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
30323      nodecolor = round(100*(STATVALUE), .01);
MPRINT(EM_DIAGRAM):   nodecolor = round(100*(STATVALUE), .01);
30324      end;
MPRINT(EM_DIAGRAM):   end;
30325      else do;
MPRINT(EM_DIAGRAM):   else do;
30326      nodecolor=round(statvalue, .01);
MPRINT(EM_DIAGRAM):   nodecolor=round(statvalue, .01);
30327      end;
MPRINT(EM_DIAGRAM):   end;
30328      keep node nodecolor;
MPRINT(EM_DIAGRAM):   keep node nodecolor;
30329      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 13 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30330      proc sort data=EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus3_TREE_PLOT;
30331      by node;
MPRINT(EM_DIAGRAM):   by node;
30332      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS3.CLUS3_TREE_PLOT.
NOTE: The data set EMWS3.CLUS3_TREE_PLOT has 13 observations and 12 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30333      proc sort data=tempcolor;
MPRINT(EM_DIAGRAM):   proc sort data=tempcolor;
30334      by node;
MPRINT(EM_DIAGRAM):   by node;
30335      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 13 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30336      data EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_TREE_PLOT;
30337      merge EMWS3.Clus3_TREE_PLOT tempcolor;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus3_TREE_PLOT tempcolor;
30338      by node;
MPRINT(EM_DIAGRAM):   by node;
30339      length traintotal 8;
MPRINT(EM_DIAGRAM):   length traintotal 8;
30340      retain traintotal;
MPRINT(EM_DIAGRAM):   retain traintotal;
30341      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Total de entrenamiento";
30342      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
30343      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
30344      end;
MPRINT(EM_DIAGRAM):   end;
30345      if NODE eq . then delete;
MPRINT(EM_DIAGRAM):   if NODE eq . then delete;
30346      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS3.CLUS3_TREE_PLOT.
NOTE: There were 13 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set EMWS3.CLUS3_TREE_PLOT has 13 observations and 13 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30347      data EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_TREE_PLOT;
30348      set EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus3_TREE_PLOT;
30349      textall = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote, )):"|| put(Node, 13.)||'0A'x||trim(textall);
MPRINT(EM_DIAGRAM):   textall = "Id de nodo:"|| put(Node, 13.)||'0A'x||trim(textall);
30350      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS3.CLUS3_TREE_PLOT.
NOTE: The data set EMWS3.CLUS3_TREE_PLOT has 13 observations and 13 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30351      data tempout;
MPRINT(EM_DIAGRAM):   data tempout;
30352      set WORK.Clus3_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus3_outnodes;
30353      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.CLUS3_OUTNODES.
NOTE: The data set WORK.TEMPOUT has 13 observations and 59 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30354      proc sort data=tempout;
MPRINT(EM_DIAGRAM):   proc sort data=tempout;
30355      by descending P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   by descending P__SEGMENT_1;
30356      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TEMPOUT has 13 observations and 59 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30357      data tree_temp;
MPRINT(EM_DIAGRAM):   data tree_temp;
30358      set tempout;
MPRINT(EM_DIAGRAM):   set tempout;
30359      if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
30360      label index="%sysfunc(sasmsg(sashelp.dmine, rpt_leafindex_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label index= "Índice de hoja";
30361      label percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percevent_train = "Casos de porcentaje";
30362      label perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label perc_train = "Porcentaje de evento";
30363      label tprob="%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel  , NOQUOTE, %nrbquote()))";
MPRINT(EM_DIAGRAM):   label tprob= "Porcentaje de entrenamiento ";
30364      tprob = round(P__SEGMENT_1, .01);
MPRINT(EM_DIAGRAM):   tprob = round(P__SEGMENT_1, .01);
30365      percevent_train = round ( tprob*100, .01);
MPRINT(EM_DIAGRAM):   percevent_train = round ( tprob*100, .01);
30366      *perc_train =round( ( N / traintotal)*100, .001);
MPRINT(EM_DIAGRAM):   *perc_train =round( ( N / traintotal)*100, .001);
30367      perc_train =round( ( N / traintotal), .01);
MPRINT(EM_DIAGRAM):   perc_train =round( ( N / traintotal), .01);
30368      if missing(perc_train) then perc_train = round( linkwidth*100, .001);
MPRINT(EM_DIAGRAM):   if missing(perc_train) then perc_train = round( linkwidth*100, .001);
30369      index = _n_;
MPRINT(EM_DIAGRAM):   index = _n_;
30370      keep NODE index tprob perc_train percevent_train
30371      ;
MPRINT(EM_DIAGRAM):   keep NODE index tprob perc_train percevent_train ;
30372      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TREE_TEMP has 7 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30373      proc sort data=tree_temp;
MPRINT(EM_DIAGRAM):   proc sort data=tree_temp;
30374      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
30375      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set WORK.TREE_TEMP has 7 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30376      proc sort data=EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus3_TREE_PLOT;
30377      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
30378      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS3.CLUS3_TREE_PLOT.
NOTE: The data set EMWS3.CLUS3_TREE_PLOT has 13 observations and 13 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30379      data EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_TREE_PLOT;
30380      merge EMWS3.Clus3_TREE_PLOT tree_temp;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus3_TREE_PLOT tree_temp;
30381      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
30382      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS3.CLUS3_TREE_PLOT.
NOTE: There were 7 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set EMWS3.CLUS3_TREE_PLOT has 13 observations and 17 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30383      proc sort data=EMWS3.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus3_TREE_PLOT;
30384      by node index;
MPRINT(EM_DIAGRAM):   by node index;
30385      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS3.CLUS3_TREE_PLOT.
NOTE: The data set EMWS3.CLUS3_TREE_PLOT has 13 observations and 17 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30386      title9 ' ';
MPRINT(EM_DIAGRAM):    title9 ' ';
30387      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_VariableImportance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Importancia de la variable";
30388      proc print data=EMWS3.Clus3_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS3.Clus3_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
30389      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set EMWS3.CLUS3_OUTIMPORT.
Sistema SAS
 
      WHERE IMPORTANCE>0;
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30390      title10;
MPRINT(EM_DIAGRAM):   title10;
30391      data WORK.M1AS4RDH;
MPRINT(EM_DIAGRAM):    data WORK.M1AS4RDH;
30392      set WORK.M1AS4RDH;
MPRINT(EM_DIAGRAM):   set WORK.M1AS4RDH;
30393      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
30394      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 242 observations read from the data set WORK.M1AS4RDH.
NOTE: The data set WORK.M1AS4RDH has 242 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30395      proc sort data=EMWS3.Clus3_OUTIMPORT out=WORK.Clus3_GRAPHVARS(keep=NAME);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS3.Clus3_OUTIMPORT out=WORK.Clus3_GRAPHVARS(keep=NAME);
30396      where IMPORTANCE>0;
MPRINT(EM_DIAGRAM):   where IMPORTANCE>0;
30397      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30398      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set EMWS3.CLUS3_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The data set WORK.CLUS3_GRAPHVARS has 30 observations and 1 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30399      proc sort data = WORK.M1AS4RDH;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.M1AS4RDH;
30400      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30401      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 242 observations read from the data set WORK.M1AS4RDH.
NOTE: The data set WORK.M1AS4RDH has 242 observations and 21 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30402      data WORK.M1AS4RDH;
MPRINT(EM_DIAGRAM):   data WORK.M1AS4RDH;
30403      merge WORK.M1AS4RDH WORK.Clus3_GRAPHVARS(in=_b_);
MPRINT(EM_DIAGRAM):   merge WORK.M1AS4RDH WORK.Clus3_GRAPHVARS(in=_b_);
30404      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30405      if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
MPRINT(EM_DIAGRAM):   if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
30406      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 242 observations read from the data set WORK.M1AS4RDH.
NOTE: There were 30 observations read from the data set WORK.CLUS3_GRAPHVARS.
NOTE: The data set WORK.M1AS4RDH has 30 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30407      data WORK.M1AS4RDH;
MPRINT(EM_DIAGRAM):    data WORK.M1AS4RDH;
30408      set WORK.M1AS4RDH end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M1AS4RDH end=_eof_ nobs=_nobs_;
30409      output;
MPRINT(EM_DIAGRAM):   output;
30410      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
30411      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
30412      ROLE = 'BY';
MPRINT(EM_DIAGRAM):   ROLE = 'BY';
30413      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
30414      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
30415      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
30416      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
30417      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
30418      output;
MPRINT(EM_DIAGRAM):   output;
30419      end;
MPRINT(EM_DIAGRAM):   end;
30420      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set WORK.M1AS4RDH.
NOTE: The data set WORK.M1AS4RDH has 31 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30421      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
30422      * Clus3: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: STDIZE Variables Macro ;
30423      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
30424      %macro stdizevar;
30425          ANSWER ARGIC ARMENIA ARMENIAN BANK BRIAN CENTER DON ELECTR ENGIN FIND GEB
30426         GEORGIA GORDON MARK NEW NUMBER OPER PHONE PITT PITTSBURGH SCHOOL SERDAR STATE
30427         TURKISH TYPE UNIV UTEXA UUCP YOU
30428      %mend stdizevar;
30429      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30430      * Clus3: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Clus3: Computing Summary Statistics;
30431      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30432      proc stdize
30433      data = EMWS3.Clus3_TRAIN
30434      out=_null_
30435      outstat=WORK.Clus3_STAT
30436      add=0 fuzz=1E-14 initial=MAD
30437      vardef=df
30438      method=STD
30439      mult=1
30440      pctlmtd=ORD_STAT pctldef=2
30441      pctlpts=(
30442      0
30443      100
30444      )
30445      ;
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS3.Clus3_TRAIN out=_null_ outstat=WORK.Clus3_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 100 ) ;
MPRINT(EM_DIAGRAM):   var
30446      var %stdizevar;
MPRINT(STDIZEVAR):   ANSWER ARGIC ARMENIA ARMENIAN BANK BRIAN CENTER DON ELECTR ENGIN FIND GEB GEORGIA GORDON MARK NEW NUMBER OPER PHONE PITT PITTSBURGH SCHOOL SERDAR STATE TURKISH TYPE UNIV UTEXA UUCP YOU
MPRINT(EM_DIAGRAM):  ;
30447      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: Vista EMWS3.CLUS3_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.79 seconds
      cpu time            0.78 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS3_TRAIN.
NOTE: The data set WORK.CLUS3_STAT has 10 observations and 31 variables.
NOTE: PROCEDURE STDIZE ha utilizado (Tiempo de proceso total):
      real time           0.80 seconds
      cpu time            0.78 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
30448      quit;
 
30449      data WORK.Clus3_MINMAX;
MPRINT(EM_DIAGRAM):    data WORK.Clus3_MINMAX;
30450      set WORK.Clus3_STAT;
MPRINT(EM_DIAGRAM):   set WORK.Clus3_STAT;
30451      where _TYPE_ in('P0','P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('P0','P100');
30452      if _TYPE_='P0' then _TYPE_='MIN';
MPRINT(EM_DIAGRAM):   if _TYPE_='P0' then _TYPE_='MIN';
30453      else if _TYPE_='P100' then _TYPE_='MAX';
MPRINT(EM_DIAGRAM):   else if _TYPE_='P100' then _TYPE_='MAX';
30454      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS3_STAT.
      WHERE _TYPE_ in ('P0', 'P100');
NOTE: The data set WORK.CLUS3_MINMAX has 2 observations and 31 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30455      proc transpose data=WORK.Clus3_MINMAX out=WORK.Clus3_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Clus3_MINMAX out=WORK.Clus3_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
30456      id _TYPE_;
MPRINT(EM_DIAGRAM):   id _TYPE_;
30457      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 2 observations read from the data set WORK.CLUS3_MINMAX.
NOTE: The data set WORK.CLUS3_MINMAX has 30 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30458      data WORK.Clus3_UGRID;
MPRINT(EM_DIAGRAM):    data WORK.Clus3_UGRID;
30459      set WORK.Clus3_MINMAX;
MPRINT(EM_DIAGRAM):   set WORK.Clus3_MINMAX;
30460      B1 = MIN + (1-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B1 = MIN + (1-1)*(MAX-MIN)/8;
30461      B2 = MIN + (2-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B2 = MIN + (2-1)*(MAX-MIN)/8;
30462      B3 = MIN + (3-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B3 = MIN + (3-1)*(MAX-MIN)/8;
30463      B4 = MIN + (4-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B4 = MIN + (4-1)*(MAX-MIN)/8;
30464      B5 = MIN + (5-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B5 = MIN + (5-1)*(MAX-MIN)/8;
30465      B6 = MIN + (6-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B6 = MIN + (6-1)*(MAX-MIN)/8;
30466      B7 = MIN + (7-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B7 = MIN + (7-1)*(MAX-MIN)/8;
30467      B8 = MIN + (8-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B8 = MIN + (8-1)*(MAX-MIN)/8;
30468      B9 = MIN + (9-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B9 = MIN + (9-1)*(MAX-MIN)/8;
30469      drop MIN MAX;
MPRINT(EM_DIAGRAM):   drop MIN MAX;
30470      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set WORK.CLUS3_MINMAX.
NOTE: The data set WORK.CLUS3_UGRID has 30 observations and 10 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30471      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
30472      * Clus3: creando formatos para las variables de intervalo de agrupamiento;
MPRINT(EM_DIAGRAM):   * Clus3: creando formatos para las variables de intervalo de agrupamiento;
30473      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30474      proc format;
MPRINT(EM_DIAGRAM):   proc format;
30475      value F1_
30476      0-0.02688976614759 = "0:0.0269"
30477      0.02688976614759-0.05377953229518 = "0.0269:0.0538"
30478      0.05377953229518-0.08066929844277 = "0.0538:0.0807"
30479      0.08066929844277-0.10755906459036 = "0.0807:0.1076"
30480      0.10755906459036-0.13444883073796 = "0.1076:0.1344"
30481      0.13444883073796-0.16133859688555 = "0.1344:0.1613"
30482      0.16133859688555-0.18822836303314 = "0.1613:0.1882"
30483      0.18822836303314-0.21511812918073 = "0.1882:0.2151"
30484      ;
MPRINT(EM_DIAGRAM):   value F1_ 0-0.02688976614759 = "0:0.0269" 0.02688976614759-0.05377953229518 = "0.0269:0.0538" 0.05377953229518-0.08066929844277 = "0.0538:0.0807" 0.08066929844277-0.10755906459036 = "0.0807:0.1076" 0.10755906459036-0.13444883073796 =
"0.1076:0.1344" 0.13444883073796-0.16133859688555 = "0.1344:0.1613" 0.16133859688555-0.18822836303314 = "0.1613:0.1882" 0.18822836303314-0.21511812918073 = "0.1882:0.2151" ;
NOTE: Format F1_ has been output.
30485      value F2_
30486      0-0.0406252412429 = "0:0.0406"
30487      0.0406252412429-0.08125048248581 = "0.0406:0.0813"
30488      0.08125048248581-0.12187572372871 = "0.0813:0.1219"
30489      0.12187572372871-0.16250096497162 = "0.1219:0.1625"
30490      0.16250096497162-0.20312620621452 = "0.1625:0.2031"
30491      0.20312620621452-0.24375144745743 = "0.2031:0.2438"
30492      0.24375144745743-0.28437668870033 = "0.2438:0.2844"
30493      0.28437668870033-0.32500192994324 = "0.2844:0.325"
30494      ;
MPRINT(EM_DIAGRAM):   value F2_ 0-0.0406252412429 = "0:0.0406" 0.0406252412429-0.08125048248581 = "0.0406:0.0813" 0.08125048248581-0.12187572372871 = "0.0813:0.1219" 0.12187572372871-0.16250096497162 = "0.1219:0.1625" 0.16250096497162-0.20312620621452 =
"0.1625:0.2031" 0.20312620621452-0.24375144745743 = "0.2031:0.2438" 0.24375144745743-0.28437668870033 = "0.2438:0.2844" 0.28437668870033-0.32500192994324 = "0.2844:0.325" ;
NOTE: Format F2_ has been output.
30495      value F3_
30496      0-0.07250889098236 = "0:0.0725"
30497      0.07250889098236-0.14501778196472 = "0.0725:0.145"
30498      0.14501778196472-0.21752667294709 = "0.145:0.2175"
30499      0.21752667294709-0.29003556392945 = "0.2175:0.29"
30500      0.29003556392945-0.36254445491181 = "0.29:0.3625"
30501      0.36254445491181-0.43505334589418 = "0.3625:0.4351"
30502      0.43505334589418-0.50756223687654 = "0.4351:0.5076"
30503      0.50756223687654-0.58007112785891 = "0.5076:0.5801"
30504      ;
MPRINT(EM_DIAGRAM):   value F3_ 0-0.07250889098236 = "0:0.0725" 0.07250889098236-0.14501778196472 = "0.0725:0.145" 0.14501778196472-0.21752667294709 = "0.145:0.2175" 0.21752667294709-0.29003556392945 = "0.2175:0.29" 0.29003556392945-0.36254445491181 =
"0.29:0.3625" 0.36254445491181-0.43505334589418 = "0.3625:0.4351" 0.43505334589418-0.50756223687654 = "0.4351:0.5076" 0.50756223687654-0.58007112785891 = "0.5076:0.5801" ;
NOTE: Format F3_ has been output.
30505      value F4_
30506      0-0.02948806596317 = "0:0.0295"
30507      0.02948806596317-0.05897613192634 = "0.0295:0.059"
30508      0.05897613192634-0.08846419788951 = "0.059:0.0885"
30509      0.08846419788951-0.11795226385268 = "0.0885:0.118"
30510      0.11795226385268-0.14744032981586 = "0.118:0.1474"
30511      0.14744032981586-0.17692839577903 = "0.1474:0.1769"
30512      0.17692839577903-0.2064164617422 = "0.1769:0.2064"
30513      0.2064164617422-0.23590452770537 = "0.2064:0.2359"
30514      ;
MPRINT(EM_DIAGRAM):   value F4_ 0-0.02948806596317 = "0:0.0295" 0.02948806596317-0.05897613192634 = "0.0295:0.059" 0.05897613192634-0.08846419788951 = "0.059:0.0885" 0.08846419788951-0.11795226385268 = "0.0885:0.118" 0.11795226385268-0.14744032981586 =
"0.118:0.1474" 0.14744032981586-0.17692839577903 = "0.1474:0.1769" 0.17692839577903-0.2064164617422 = "0.1769:0.2064" 0.2064164617422-0.23590452770537 = "0.2064:0.2359" ;
NOTE: Format F4_ has been output.
30515      value F5_
30516      0-0.03413223476769 = "0:0.0341"
30517      0.03413223476769-0.06826446953539 = "0.0341:0.0683"
30518      0.06826446953539-0.10239670430309 = "0.0683:0.1024"
30519      0.10239670430309-0.13652893907078 = "0.1024:0.1365"
30520      0.13652893907078-0.17066117383848 = "0.1365:0.1707"
30521      0.17066117383848-0.20479340860618 = "0.1707:0.2048"
30522      0.20479340860618-0.23892564337387 = "0.2048:0.2389"
30523      0.23892564337387-0.27305787814157 = "0.2389:0.2731"
30524      ;
MPRINT(EM_DIAGRAM):   value F5_ 0-0.03413223476769 = "0:0.0341" 0.03413223476769-0.06826446953539 = "0.0341:0.0683" 0.06826446953539-0.10239670430309 = "0.0683:0.1024" 0.10239670430309-0.13652893907078 = "0.1024:0.1365" 0.13652893907078-0.17066117383848 =
"0.1365:0.1707" 0.17066117383848-0.20479340860618 = "0.1707:0.2048" 0.20479340860618-0.23892564337387 = "0.2048:0.2389" 0.23892564337387-0.27305787814157 = "0.2389:0.2731" ;
NOTE: Format F5_ has been output.
30525      value F6_
30526      0-0.06256827713879 = "0:0.0626"
30527      0.06256827713879-0.12513655427758 = "0.0626:0.1251"
30528      0.12513655427758-0.18770483141637 = "0.1251:0.1877"
30529      0.18770483141637-0.25027310855517 = "0.1877:0.2503"
30530      0.25027310855517-0.31284138569396 = "0.2503:0.3128"
30531      0.31284138569396-0.37540966283275 = "0.3128:0.3754"
30532      0.37540966283275-0.43797793997154 = "0.3754:0.438"
30533      0.43797793997154-0.50054621711034 = "0.438:0.5005"
30534      ;
MPRINT(EM_DIAGRAM):   value F6_ 0-0.06256827713879 = "0:0.0626" 0.06256827713879-0.12513655427758 = "0.0626:0.1251" 0.12513655427758-0.18770483141637 = "0.1251:0.1877" 0.18770483141637-0.25027310855517 = "0.1877:0.2503" 0.25027310855517-0.31284138569396 =
"0.2503:0.3128" 0.31284138569396-0.37540966283275 = "0.3128:0.3754" 0.37540966283275-0.43797793997154 = "0.3754:0.438" 0.43797793997154-0.50054621711034 = "0.438:0.5005" ;
NOTE: Format F6_ has been output.
30535      value F7_
30536      0-0.01955737793242 = "0:0.0196"
30537      0.01955737793242-0.03911475586484 = "0.0196:0.0391"
30538      0.03911475586484-0.05867213379726 = "0.0391:0.0587"
30539      0.05867213379726-0.07822951172968 = "0.0587:0.0782"
30540      0.07822951172968-0.0977868896621 = "0.0782:0.0978"
30541      0.0977868896621-0.11734426759453 = "0.0978:0.1173"
30542      0.11734426759453-0.13690164552695 = "0.1173:0.1369"
30543      0.13690164552695-0.15645902345937 = "0.1369:0.1565"
30544      ;
MPRINT(EM_DIAGRAM):   value F7_ 0-0.01955737793242 = "0:0.0196" 0.01955737793242-0.03911475586484 = "0.0196:0.0391" 0.03911475586484-0.05867213379726 = "0.0391:0.0587" 0.05867213379726-0.07822951172968 = "0.0587:0.0782" 0.07822951172968-0.0977868896621 =
"0.0782:0.0978" 0.0977868896621-0.11734426759453 = "0.0978:0.1173" 0.11734426759453-0.13690164552695 = "0.1173:0.1369" 0.13690164552695-0.15645902345937 = "0.1369:0.1565" ;
NOTE: Format F7_ has been output.
30545      value F8_
30546      0-0.01516289343396 = "0:0.0152"
30547      0.01516289343396-0.03032578686793 = "0.0152:0.0303"
30548      0.03032578686793-0.0454886803019 = "0.0303:0.0455"
30549      0.0454886803019-0.06065157373587 = "0.0455:0.0607"
30550      0.06065157373587-0.07581446716983 = "0.0607:0.0758"
30551      0.07581446716983-0.0909773606038 = "0.0758:0.091"
30552      0.0909773606038-0.10614025403777 = "0.091:0.1061"
30553      0.10614025403777-0.12130314747174 = "0.1061:0.1213"
30554      ;
MPRINT(EM_DIAGRAM):   value F8_ 0-0.01516289343396 = "0:0.0152" 0.01516289343396-0.03032578686793 = "0.0152:0.0303" 0.03032578686793-0.0454886803019 = "0.0303:0.0455" 0.0454886803019-0.06065157373587 = "0.0455:0.0607" 0.06065157373587-0.07581446716983 =
"0.0607:0.0758" 0.07581446716983-0.0909773606038 = "0.0758:0.091" 0.0909773606038-0.10614025403777 = "0.091:0.1061" 0.10614025403777-0.12130314747174 = "0.1061:0.1213" ;
NOTE: Format F8_ has been output.
30555      value F9_
30556      0-0.02811582275247 = "0:0.0281"
30557      0.02811582275247-0.05623164550494 = "0.0281:0.0562"
30558      0.05623164550494-0.08434746825742 = "0.0562:0.0843"
30559      0.08434746825742-0.11246329100989 = "0.0843:0.1125"
30560      0.11246329100989-0.14057911376237 = "0.1125:0.1406"
30561      0.14057911376237-0.16869493651484 = "0.1406:0.1687"
30562      0.16869493651484-0.19681075926731 = "0.1687:0.1968"
30563      0.19681075926731-0.22492658201979 = "0.1968:0.2249"
30564      ;
MPRINT(EM_DIAGRAM):   value F9_ 0-0.02811582275247 = "0:0.0281" 0.02811582275247-0.05623164550494 = "0.0281:0.0562" 0.05623164550494-0.08434746825742 = "0.0562:0.0843" 0.08434746825742-0.11246329100989 = "0.0843:0.1125" 0.11246329100989-0.14057911376237 =
"0.1125:0.1406" 0.14057911376237-0.16869493651484 = "0.1406:0.1687" 0.16869493651484-0.19681075926731 = "0.1687:0.1968" 0.19681075926731-0.22492658201979 = "0.1968:0.2249" ;
NOTE: Format F9_ has been output.
30565      value F10_
30566      0-0.01850023135892 = "0:0.0185"
30567      0.01850023135892-0.03700046271785 = "0.0185:0.037"
30568      0.03700046271785-0.05550069407677 = "0.037:0.0555"
30569      0.05550069407677-0.0740009254357 = "0.0555:0.074"
30570      0.0740009254357-0.09250115679463 = "0.074:0.0925"
30571      0.09250115679463-0.11100138815355 = "0.0925:0.111"
30572      0.11100138815355-0.12950161951248 = "0.111:0.1295"
30573      0.12950161951248-0.14800185087141 = "0.1295:0.148"
30574      ;
MPRINT(EM_DIAGRAM):   value F10_ 0-0.01850023135892 = "0:0.0185" 0.01850023135892-0.03700046271785 = "0.0185:0.037" 0.03700046271785-0.05550069407677 = "0.037:0.0555" 0.05550069407677-0.0740009254357 = "0.0555:0.074" 0.0740009254357-0.09250115679463 =
"0.074:0.0925" 0.09250115679463-0.11100138815355 = "0.0925:0.111" 0.11100138815355-0.12950161951248 = "0.111:0.1295" 0.12950161951248-0.14800185087141 = "0.1295:0.148" ;
NOTE: Format F10_ has been output.
30575      value F11_
30576      0-0.02150778849793 = "0:0.0215"
30577      0.02150778849793-0.04301557699586 = "0.0215:0.043"
30578      0.04301557699586-0.06452336549379 = "0.043:0.0645"
30579      0.06452336549379-0.08603115399172 = "0.0645:0.086"
30580      0.08603115399172-0.10753894248966 = "0.086:0.1075"
30581      0.10753894248966-0.12904673098759 = "0.1075:0.129"
30582      0.12904673098759-0.15055451948552 = "0.129:0.1506"
30583      0.15055451948552-0.17206230798345 = "0.1506:0.1721"
30584      ;
MPRINT(EM_DIAGRAM):   value F11_ 0-0.02150778849793 = "0:0.0215" 0.02150778849793-0.04301557699586 = "0.0215:0.043" 0.04301557699586-0.06452336549379 = "0.043:0.0645" 0.06452336549379-0.08603115399172 = "0.0645:0.086" 0.08603115399172-0.10753894248966 =
"0.086:0.1075" 0.10753894248966-0.12904673098759 = "0.1075:0.129" 0.12904673098759-0.15055451948552 = "0.129:0.1506" 0.15055451948552-0.17206230798345 = "0.1506:0.1721" ;
NOTE: Format F11_ has been output.
30585      value F12_
30586      0-0.02641714651848 = "0:0.0264"
30587      0.02641714651848-0.05283429303696 = "0.0264:0.0528"
30588      0.05283429303696-0.07925143955545 = "0.0528:0.0793"
30589      0.07925143955545-0.10566858607393 = "0.0793:0.1057"
30590      0.10566858607393-0.13208573259242 = "0.1057:0.1321"
30591      0.13208573259242-0.1585028791109 = "0.1321:0.1585"
30592      0.1585028791109-0.18492002562938 = "0.1585:0.1849"
30593      0.18492002562938-0.21133717214787 = "0.1849:0.2113"
30594      ;
MPRINT(EM_DIAGRAM):   value F12_ 0-0.02641714651848 = "0:0.0264" 0.02641714651848-0.05283429303696 = "0.0264:0.0528" 0.05283429303696-0.07925143955545 = "0.0528:0.0793" 0.07925143955545-0.10566858607393 = "0.0793:0.1057" 0.10566858607393-0.13208573259242
= "0.1057:0.1321" 0.13208573259242-0.1585028791109 = "0.1321:0.1585" 0.1585028791109-0.18492002562938 = "0.1585:0.1849" 0.18492002562938-0.21133717214787 = "0.1849:0.2113" ;
NOTE: Format F12_ has been output.
30595      value F13_
30596      0-0.06826220949881 = "0:0.0683"
30597      0.06826220949881-0.13652441899762 = "0.0683:0.1365"
30598      0.13652441899762-0.20478662849643 = "0.1365:0.2048"
30599      0.20478662849643-0.27304883799524 = "0.2048:0.273"
30600      0.27304883799524-0.34131104749405 = "0.273:0.3413"
30601      0.34131104749405-0.40957325699286 = "0.3413:0.4096"
30602      0.40957325699286-0.47783546649167 = "0.4096:0.4778"
30603      0.47783546649167-0.54609767599048 = "0.4778:0.5461"
30604      ;
MPRINT(EM_DIAGRAM):   value F13_ 0-0.06826220949881 = "0:0.0683" 0.06826220949881-0.13652441899762 = "0.0683:0.1365" 0.13652441899762-0.20478662849643 = "0.1365:0.2048" 0.20478662849643-0.27304883799524 = "0.2048:0.273" 0.27304883799524-0.34131104749405 =
"0.273:0.3413" 0.34131104749405-0.40957325699286 = "0.3413:0.4096" 0.40957325699286-0.47783546649167 = "0.4096:0.4778" 0.47783546649167-0.54609767599048 = "0.4778:0.5461" ;
NOTE: Format F13_ has been output.
30605      value F14_
30606      0-0.03599875352952 = "0:0.036"
30607      0.03599875352952-0.07199750705905 = "0.036:0.072"
30608      0.07199750705905-0.10799626058857 = "0.072:0.108"
30609      0.10799626058857-0.1439950141181 = "0.108:0.144"
30610      0.1439950141181-0.17999376764763 = "0.144:0.18"
30611      0.17999376764763-0.21599252117715 = "0.18:0.216"
30612      0.21599252117715-0.25199127470668 = "0.216:0.252"
30613      0.25199127470668-0.2879900282362 = "0.252:0.288"
30614      ;
MPRINT(EM_DIAGRAM):   value F14_ 0-0.03599875352952 = "0:0.036" 0.03599875352952-0.07199750705905 = "0.036:0.072" 0.07199750705905-0.10799626058857 = "0.072:0.108" 0.10799626058857-0.1439950141181 = "0.108:0.144" 0.1439950141181-0.17999376764763 =
"0.144:0.18" 0.17999376764763-0.21599252117715 = "0.18:0.216" 0.21599252117715-0.25199127470668 = "0.216:0.252" 0.25199127470668-0.2879900282362 = "0.252:0.288" ;
NOTE: Format F14_ has been output.
30615      value F15_
30616      0-0.04106700387166 = "0:0.0411"
30617      0.04106700387166-0.08213400774333 = "0.0411:0.0821"
30618      0.08213400774333-0.123201011615 = "0.0821:0.1232"
30619      0.123201011615-0.16426801548667 = "0.1232:0.1643"
30620      0.16426801548667-0.20533501935834 = "0.1643:0.2053"
30621      0.20533501935834-0.24640202323001 = "0.2053:0.2464"
30622      0.24640202323001-0.28746902710168 = "0.2464:0.2875"
30623      0.28746902710168-0.32853603097335 = "0.2875:0.3285"
30624      ;
MPRINT(EM_DIAGRAM):   value F15_ 0-0.04106700387166 = "0:0.0411" 0.04106700387166-0.08213400774333 = "0.0411:0.0821" 0.08213400774333-0.123201011615 = "0.0821:0.1232" 0.123201011615-0.16426801548667 = "0.1232:0.1643" 0.16426801548667-0.20533501935834 =
"0.1643:0.2053" 0.20533501935834-0.24640202323001 = "0.2053:0.2464" 0.24640202323001-0.28746902710168 = "0.2464:0.2875" 0.28746902710168-0.32853603097335 = "0.2875:0.3285" ;
NOTE: Format F15_ has been output.
30625      value F16_
30626      0-0.02364695921375 = "0:0.0236"
30627      0.02364695921375-0.04729391842751 = "0.0236:0.0473"
30628      0.04729391842751-0.07094087764127 = "0.0473:0.0709"
30629      0.07094087764127-0.09458783685503 = "0.0709:0.0946"
30630      0.09458783685503-0.11823479606878 = "0.0946:0.1182"
30631      0.11823479606878-0.14188175528254 = "0.1182:0.1419"
30632      0.14188175528254-0.1655287144963 = "0.1419:0.1655"
30633      0.1655287144963-0.18917567371006 = "0.1655:0.1892"
30634      ;
MPRINT(EM_DIAGRAM):   value F16_ 0-0.02364695921375 = "0:0.0236" 0.02364695921375-0.04729391842751 = "0.0236:0.0473" 0.04729391842751-0.07094087764127 = "0.0473:0.0709" 0.07094087764127-0.09458783685503 = "0.0709:0.0946" 0.09458783685503-0.11823479606878
= "0.0946:0.1182" 0.11823479606878-0.14188175528254 = "0.1182:0.1419" 0.14188175528254-0.1655287144963 = "0.1419:0.1655" 0.1655287144963-0.18917567371006 = "0.1655:0.1892" ;
NOTE: Format F16_ has been output.
30635      value F17_
30636      0-0.03711514687568 = "0:0.0371"
30637      0.03711514687568-0.07423029375136 = "0.0371:0.0742"
30638      0.07423029375136-0.11134544062704 = "0.0742:0.1113"
30639      0.11134544062704-0.14846058750273 = "0.1113:0.1485"
30640      0.14846058750273-0.18557573437841 = "0.1485:0.1856"
30641      0.18557573437841-0.22269088125409 = "0.1856:0.2227"
30642      0.22269088125409-0.25980602812977 = "0.2227:0.2598"
30643      0.25980602812977-0.29692117500546 = "0.2598:0.2969"
30644      ;
MPRINT(EM_DIAGRAM):   value F17_ 0-0.03711514687568 = "0:0.0371" 0.03711514687568-0.07423029375136 = "0.0371:0.0742" 0.07423029375136-0.11134544062704 = "0.0742:0.1113" 0.11134544062704-0.14846058750273 = "0.1113:0.1485" 0.14846058750273-0.18557573437841
= "0.1485:0.1856" 0.18557573437841-0.22269088125409 = "0.1856:0.2227" 0.22269088125409-0.25980602812977 = "0.2227:0.2598" 0.25980602812977-0.29692117500546 = "0.2598:0.2969" ;
NOTE: Format F17_ has been output.
30645      value F18_
30646      0-0.02815690270407 = "0:0.0282"
30647      0.02815690270407-0.05631380540814 = "0.0282:0.0563"
30648      0.05631380540814-0.08447070811222 = "0.0563:0.0845"
30649      0.08447070811222-0.11262761081629 = "0.0845:0.1126"
30650      0.11262761081629-0.14078451352037 = "0.1126:0.1408"
30651      0.14078451352037-0.16894141622444 = "0.1408:0.1689"
30652      0.16894141622444-0.19709831892852 = "0.1689:0.1971"
30653      0.19709831892852-0.22525522163259 = "0.1971:0.2253"
30654      ;
MPRINT(EM_DIAGRAM):   value F18_ 0-0.02815690270407 = "0:0.0282" 0.02815690270407-0.05631380540814 = "0.0282:0.0563" 0.05631380540814-0.08447070811222 = "0.0563:0.0845" 0.08447070811222-0.11262761081629 = "0.0845:0.1126" 0.11262761081629-0.14078451352037
= "0.1126:0.1408" 0.14078451352037-0.16894141622444 = "0.1408:0.1689" 0.16894141622444-0.19709831892852 = "0.1689:0.1971" 0.19709831892852-0.22525522163259 = "0.1971:0.2253" ;
NOTE: Format F18_ has been output.
30655      value F19_
30656      0-0.03647875297374 = "0:0.0365"
30657      0.03647875297374-0.07295750594749 = "0.0365:0.073"
30658      0.07295750594749-0.10943625892124 = "0.073:0.1094"
30659      0.10943625892124-0.14591501189498 = "0.1094:0.1459"
30660      0.14591501189498-0.18239376486873 = "0.1459:0.1824"
30661      0.18239376486873-0.21887251784248 = "0.1824:0.2189"
30662      0.21887251784248-0.25535127081622 = "0.2189:0.2554"
30663      0.25535127081622-0.29183002378997 = "0.2554:0.2918"
30664      ;
MPRINT(EM_DIAGRAM):   value F19_ 0-0.03647875297374 = "0:0.0365" 0.03647875297374-0.07295750594749 = "0.0365:0.073" 0.07295750594749-0.10943625892124 = "0.073:0.1094" 0.10943625892124-0.14591501189498 = "0.1094:0.1459" 0.14591501189498-0.18239376486873 =
"0.1459:0.1824" 0.18239376486873-0.21887251784248 = "0.1824:0.2189" 0.21887251784248-0.25535127081622 = "0.2189:0.2554" 0.25535127081622-0.29183002378997 = "0.2554:0.2918" ;
NOTE: Format F19_ has been output.
30665      value F20_
30666      0-0.04685348467595 = "0:0.0469"
30667      0.04685348467595-0.09370696935191 = "0.0469:0.0937"
30668      0.09370696935191-0.14056045402787 = "0.0937:0.1406"
30669      0.14056045402787-0.18741393870383 = "0.1406:0.1874"
30670      0.18741393870383-0.23426742337979 = "0.1874:0.2343"
30671      0.23426742337979-0.28112090805574 = "0.2343:0.2811"
30672      0.28112090805574-0.3279743927317 = "0.2811:0.328"
30673      0.3279743927317-0.37482787740766 = "0.328:0.3748"
30674      ;
MPRINT(EM_DIAGRAM):   value F20_ 0-0.04685348467595 = "0:0.0469" 0.04685348467595-0.09370696935191 = "0.0469:0.0937" 0.09370696935191-0.14056045402787 = "0.0937:0.1406" 0.14056045402787-0.18741393870383 = "0.1406:0.1874" 0.18741393870383-0.23426742337979
= "0.1874:0.2343" 0.23426742337979-0.28112090805574 = "0.2343:0.2811" 0.28112090805574-0.3279743927317 = "0.2811:0.328" 0.3279743927317-0.37482787740766 = "0.328:0.3748" ;
NOTE: Format F20_ has been output.
30675      value F21_
30676      0-0.0256592823541 = "0:0.0257"
30677      0.0256592823541-0.05131856470821 = "0.0257:0.0513"
30678      0.05131856470821-0.07697784706232 = "0.0513:0.077"
30679      0.07697784706232-0.10263712941643 = "0.077:0.1026"
30680      0.10263712941643-0.12829641177054 = "0.1026:0.1283"
30681      0.12829641177054-0.15395569412465 = "0.1283:0.154"
30682      0.15395569412465-0.17961497647876 = "0.154:0.1796"
30683      0.17961497647876-0.20527425883286 = "0.1796:0.2053"
30684      ;
MPRINT(EM_DIAGRAM):   value F21_ 0-0.0256592823541 = "0:0.0257" 0.0256592823541-0.05131856470821 = "0.0257:0.0513" 0.05131856470821-0.07697784706232 = "0.0513:0.077" 0.07697784706232-0.10263712941643 = "0.077:0.1026" 0.10263712941643-0.12829641177054 =
"0.1026:0.1283" 0.12829641177054-0.15395569412465 = "0.1283:0.154" 0.15395569412465-0.17961497647876 = "0.154:0.1796" 0.17961497647876-0.20527425883286 = "0.1796:0.2053" ;
NOTE: Format F21_ has been output.
30685      value F22_
30686      0-0.0230827133735 = "0:0.0231"
30687      0.0230827133735-0.046165426747 = "0.0231:0.0462"
30688      0.046165426747-0.0692481401205 = "0.0462:0.0692"
30689      0.0692481401205-0.092330853494 = "0.0692:0.0923"
30690      0.092330853494-0.11541356686751 = "0.0923:0.1154"
30691      0.11541356686751-0.13849628024101 = "0.1154:0.1385"
30692      0.13849628024101-0.16157899361451 = "0.1385:0.1616"
30693      0.16157899361451-0.18466170698801 = "0.1616:0.1847"
30694      ;
MPRINT(EM_DIAGRAM):   value F22_ 0-0.0230827133735 = "0:0.0231" 0.0230827133735-0.046165426747 = "0.0231:0.0462" 0.046165426747-0.0692481401205 = "0.0462:0.0692" 0.0692481401205-0.092330853494 = "0.0692:0.0923" 0.092330853494-0.11541356686751 =
"0.0923:0.1154" 0.11541356686751-0.13849628024101 = "0.1154:0.1385" 0.13849628024101-0.16157899361451 = "0.1385:0.1616" 0.16157899361451-0.18466170698801 = "0.1616:0.1847" ;
NOTE: Format F22_ has been output.
30695      value F23_
30696      0-0.05952747737836 = "0:0.0595"
30697      0.05952747737836-0.11905495475672 = "0.0595:0.1191"
30698      0.11905495475672-0.17858243213508 = "0.1191:0.1786"
30699      0.17858243213508-0.23810990951345 = "0.1786:0.2381"
30700      0.23810990951345-0.29763738689181 = "0.2381:0.2976"
30701      0.29763738689181-0.35716486427017 = "0.2976:0.3572"
30702      0.35716486427017-0.41669234164854 = "0.3572:0.4167"
30703      0.41669234164854-0.4762198190269 = "0.4167:0.4762"
30704      ;
MPRINT(EM_DIAGRAM):   value F23_ 0-0.05952747737836 = "0:0.0595" 0.05952747737836-0.11905495475672 = "0.0595:0.1191" 0.11905495475672-0.17858243213508 = "0.1191:0.1786" 0.17858243213508-0.23810990951345 = "0.1786:0.2381" 0.23810990951345-0.29763738689181
= "0.2381:0.2976" 0.29763738689181-0.35716486427017 = "0.2976:0.3572" 0.35716486427017-0.41669234164854 = "0.3572:0.4167" 0.41669234164854-0.4762198190269 = "0.4167:0.4762" ;
NOTE: Format F23_ has been output.
30705      value F24_
30706      0-0.02111249172423 = "0:0.0211"
30707      0.02111249172423-0.04222498344846 = "0.0211:0.0422"
30708      0.04222498344846-0.0633374751727 = "0.0422:0.0633"
30709      0.0633374751727-0.08444996689693 = "0.0633:0.0844"
30710      0.08444996689693-0.10556245862117 = "0.0844:0.1056"
30711      0.10556245862117-0.1266749503454 = "0.1056:0.1267"
30712      0.1266749503454-0.14778744206963 = "0.1267:0.1478"
30713      0.14778744206963-0.16889993379387 = "0.1478:0.1689"
30714      ;
MPRINT(EM_DIAGRAM):   value F24_ 0-0.02111249172423 = "0:0.0211" 0.02111249172423-0.04222498344846 = "0.0211:0.0422" 0.04222498344846-0.0633374751727 = "0.0422:0.0633" 0.0633374751727-0.08444996689693 = "0.0633:0.0844" 0.08444996689693-0.10556245862117 =
"0.0844:0.1056" 0.10556245862117-0.1266749503454 = "0.1056:0.1267" 0.1266749503454-0.14778744206963 = "0.1267:0.1478" 0.14778744206963-0.16889993379387 = "0.1478:0.1689" ;
NOTE: Format F24_ has been output.
30715      value F25_
30716      0-0.0457999023815 = "0:0.0458"
30717      0.0457999023815-0.09159980476301 = "0.0458:0.0916"
30718      0.09159980476301-0.13739970714451 = "0.0916:0.1374"
30719      0.13739970714451-0.18319960952602 = "0.1374:0.1832"
30720      0.18319960952602-0.22899951190753 = "0.1832:0.229"
30721      0.22899951190753-0.27479941428903 = "0.229:0.2748"
30722      0.27479941428903-0.32059931667054 = "0.2748:0.3206"
30723      0.32059931667054-0.36639921905205 = "0.3206:0.3664"
30724      ;
MPRINT(EM_DIAGRAM):   value F25_ 0-0.0457999023815 = "0:0.0458" 0.0457999023815-0.09159980476301 = "0.0458:0.0916" 0.09159980476301-0.13739970714451 = "0.0916:0.1374" 0.13739970714451-0.18319960952602 = "0.1374:0.1832" 0.18319960952602-0.22899951190753 =
"0.1832:0.229" 0.22899951190753-0.27479941428903 = "0.229:0.2748" 0.27479941428903-0.32059931667054 = "0.2748:0.3206" 0.32059931667054-0.36639921905205 = "0.3206:0.3664" ;
NOTE: Format F25_ has been output.
30725      value F26_
30726      0-0.040197586939 = "0:0.0402"
30727      0.040197586939-0.080395173878 = "0.0402:0.0804"
30728      0.080395173878-0.120592760817 = "0.0804:0.1206"
30729      0.120592760817-0.160790347756 = "0.1206:0.1608"
30730      0.160790347756-0.200987934695 = "0.1608:0.201"
30731      0.200987934695-0.241185521634 = "0.201:0.2412"
30732      0.241185521634-0.281383108573 = "0.2412:0.2814"
30733      0.281383108573-0.321580695512 = "0.2814:0.3216"
30734      ;
MPRINT(EM_DIAGRAM):   value F26_ 0-0.040197586939 = "0:0.0402" 0.040197586939-0.080395173878 = "0.0402:0.0804" 0.080395173878-0.120592760817 = "0.0804:0.1206" 0.120592760817-0.160790347756 = "0.1206:0.1608" 0.160790347756-0.200987934695 = "0.1608:0.201"
0.200987934695-0.241185521634 = "0.201:0.2412" 0.241185521634-0.281383108573 = "0.2412:0.2814" 0.281383108573-0.321580695512 = "0.2814:0.3216" ;
NOTE: Format F26_ has been output.
30735      value F27_
30736      0-0.02108718241718 = "0:0.0211"
30737      0.02108718241718-0.04217436483436 = "0.0211:0.0422"
30738      0.04217436483436-0.06326154725154 = "0.0422:0.0633"
30739      0.06326154725154-0.08434872966872 = "0.0633:0.0843"
30740      0.08434872966872-0.10543591208591 = "0.0843:0.1054"
30741      0.10543591208591-0.12652309450309 = "0.1054:0.1265"
30742      0.12652309450309-0.14761027692027 = "0.1265:0.1476"
30743      0.14761027692027-0.16869745933745 = "0.1476:0.1687"
30744      ;
MPRINT(EM_DIAGRAM):   value F27_ 0-0.02108718241718 = "0:0.0211" 0.02108718241718-0.04217436483436 = "0.0211:0.0422" 0.04217436483436-0.06326154725154 = "0.0422:0.0633" 0.06326154725154-0.08434872966872 = "0.0633:0.0843" 0.08434872966872-0.10543591208591
= "0.0843:0.1054" 0.10543591208591-0.12652309450309 = "0.1054:0.1265" 0.12652309450309-0.14761027692027 = "0.1265:0.1476" 0.14761027692027-0.16869745933745 = "0.1476:0.1687" ;
NOTE: Format F27_ has been output.
30745      value F28_
30746      0-0.09367064137925 = "0:0.0937"
30747      0.09367064137925-0.1873412827585 = "0.0937:0.1873"
30748      0.1873412827585-0.28101192413775 = "0.1873:0.281"
30749      0.28101192413775-0.374682565517 = "0.281:0.3747"
30750      0.374682565517-0.46835320689625 = "0.3747:0.4684"
30751      0.46835320689625-0.56202384827551 = "0.4684:0.562"
30752      0.56202384827551-0.65569448965476 = "0.562:0.6557"
30753      0.65569448965476-0.74936513103401 = "0.6557:0.7494"
30754      ;
MPRINT(EM_DIAGRAM):   value F28_ 0-0.09367064137925 = "0:0.0937" 0.09367064137925-0.1873412827585 = "0.0937:0.1873" 0.1873412827585-0.28101192413775 = "0.1873:0.281" 0.28101192413775-0.374682565517 = "0.281:0.3747" 0.374682565517-0.46835320689625 =
"0.3747:0.4684" 0.46835320689625-0.56202384827551 = "0.4684:0.562" 0.56202384827551-0.65569448965476 = "0.562:0.6557" 0.65569448965476-0.74936513103401 = "0.6557:0.7494" ;
NOTE: Format F28_ has been output.
30755      value F29_
30756      0-0.02428806042602 = "0:0.0243"
30757      0.02428806042602-0.04857612085205 = "0.0243:0.0486"
30758      0.04857612085205-0.07286418127807 = "0.0486:0.0729"
30759      0.07286418127807-0.0971522417041 = "0.0729:0.0972"
30760      0.0971522417041-0.12144030213013 = "0.0972:0.1214"
30761      0.12144030213013-0.14572836255615 = "0.1214:0.1457"
30762      0.14572836255615-0.17001642298218 = "0.1457:0.17"
30763      0.17001642298218-0.19430448340821 = "0.17:0.1943"
30764      ;
MPRINT(EM_DIAGRAM):   value F29_ 0-0.02428806042602 = "0:0.0243" 0.02428806042602-0.04857612085205 = "0.0243:0.0486" 0.04857612085205-0.07286418127807 = "0.0486:0.0729" 0.07286418127807-0.0971522417041 = "0.0729:0.0972" 0.0971522417041-0.12144030213013 =
"0.0972:0.1214" 0.12144030213013-0.14572836255615 = "0.1214:0.1457" 0.14572836255615-0.17001642298218 = "0.1457:0.17" 0.17001642298218-0.19430448340821 = "0.17:0.1943" ;
NOTE: Format F29_ has been output.
30765      value F30_
30766      0-0.02361015266115 = "0:0.0236"
30767      0.02361015266115-0.04722030532231 = "0.0236:0.0472"
30768      0.04722030532231-0.07083045798346 = "0.0472:0.0708"
30769      0.07083045798346-0.09444061064462 = "0.0708:0.0944"
30770      0.09444061064462-0.11805076330578 = "0.0944:0.1181"
30771      0.11805076330578-0.14166091596693 = "0.1181:0.1417"
30772      0.14166091596693-0.16527106862809 = "0.1417:0.1653"
30773      0.16527106862809-0.18888122128925 = "0.1653:0.1889"
30774      ;
MPRINT(EM_DIAGRAM):   value F30_ 0-0.02361015266115 = "0:0.0236" 0.02361015266115-0.04722030532231 = "0.0236:0.0472" 0.04722030532231-0.07083045798346 = "0.0472:0.0708" 0.07083045798346-0.09444061064462 = "0.0708:0.0944" 0.09444061064462-0.11805076330578
= "0.0944:0.1181" 0.11805076330578-0.14166091596693 = "0.1181:0.1417" 0.14166091596693-0.16527106862809 = "0.1417:0.1653" 0.16527106862809-0.18888122128925 = "0.1653:0.1889" ;
NOTE: Format F30_ has been output.
MPRINT(EM_DIAGRAM):   run;
30775      run;
 
NOTE: PROCEDURE FORMAT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30776      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
30777      ods output crosstabfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output crosstabfreqs=WORK.TEMPFREQ;
30778      proc freq data = EMWS3.Clus3_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS3.Clus3_TRAIN order=formatted addnames;
30779      table ANSWER * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ANSWER * _SEGMENT_ / missing;
30780      table ARGIC * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ARGIC * _SEGMENT_ / missing;
30781      table ARMENIA * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ARMENIA * _SEGMENT_ / missing;
30782      table ARMENIAN * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ARMENIAN * _SEGMENT_ / missing;
30783      table BANK * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table BANK * _SEGMENT_ / missing;
30784      table BRIAN * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table BRIAN * _SEGMENT_ / missing;
30785      table CENTER * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CENTER * _SEGMENT_ / missing;
30786      table DON * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table DON * _SEGMENT_ / missing;
30787      table ELECTR * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ELECTR * _SEGMENT_ / missing;
30788      table ENGIN * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ENGIN * _SEGMENT_ / missing;
30789      table FIND * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table FIND * _SEGMENT_ / missing;
30790      table GEB * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GEB * _SEGMENT_ / missing;
30791      table GEORGIA * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GEORGIA * _SEGMENT_ / missing;
30792      table GORDON * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GORDON * _SEGMENT_ / missing;
30793      table MARK * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MARK * _SEGMENT_ / missing;
30794      table NEW * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table NEW * _SEGMENT_ / missing;
30795      table NUMBER * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table NUMBER * _SEGMENT_ / missing;
30796      table OPER * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table OPER * _SEGMENT_ / missing;
30797      table PHONE * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PHONE * _SEGMENT_ / missing;
30798      table PITT * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PITT * _SEGMENT_ / missing;
30799      table PITTSBURGH * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PITTSBURGH * _SEGMENT_ / missing;
30800      table SCHOOL * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table SCHOOL * _SEGMENT_ / missing;
30801      table SERDAR * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table SERDAR * _SEGMENT_ / missing;
30802      table STATE * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table STATE * _SEGMENT_ / missing;
30803      table TURKISH * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table TURKISH * _SEGMENT_ / missing;
30804      table TYPE * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table TYPE * _SEGMENT_ / missing;
30805      table UNIV * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table UNIV * _SEGMENT_ / missing;
30806      table UTEXA * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table UTEXA * _SEGMENT_ / missing;
30807      table UUCP * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table UUCP * _SEGMENT_ / missing;
30808      table YOU * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table YOU * _SEGMENT_ / missing;
30809      format ANSWER F1_.;
MPRINT(EM_DIAGRAM):   format ANSWER F1_.;
30810      format ARGIC F2_.;
MPRINT(EM_DIAGRAM):   format ARGIC F2_.;
30811      format ARMENIA F3_.;
MPRINT(EM_DIAGRAM):   format ARMENIA F3_.;
30812      format ARMENIAN F4_.;
MPRINT(EM_DIAGRAM):   format ARMENIAN F4_.;
30813      format BANK F5_.;
MPRINT(EM_DIAGRAM):   format BANK F5_.;
30814      format BRIAN F6_.;
MPRINT(EM_DIAGRAM):   format BRIAN F6_.;
30815      format CENTER F7_.;
MPRINT(EM_DIAGRAM):   format CENTER F7_.;
30816      format DON F8_.;
MPRINT(EM_DIAGRAM):   format DON F8_.;
30817      format ELECTR F9_.;
MPRINT(EM_DIAGRAM):   format ELECTR F9_.;
30818      format ENGIN F10_.;
MPRINT(EM_DIAGRAM):   format ENGIN F10_.;
30819      format FIND F11_.;
MPRINT(EM_DIAGRAM):   format FIND F11_.;
30820      format GEB F12_.;
MPRINT(EM_DIAGRAM):   format GEB F12_.;
30821      format GEORGIA F13_.;
MPRINT(EM_DIAGRAM):   format GEORGIA F13_.;
30822      format GORDON F14_.;
MPRINT(EM_DIAGRAM):   format GORDON F14_.;
30823      format MARK F15_.;
MPRINT(EM_DIAGRAM):   format MARK F15_.;
30824      format NEW F16_.;
MPRINT(EM_DIAGRAM):   format NEW F16_.;
30825      format NUMBER F17_.;
MPRINT(EM_DIAGRAM):   format NUMBER F17_.;
30826      format OPER F18_.;
MPRINT(EM_DIAGRAM):   format OPER F18_.;
30827      format PHONE F19_.;
MPRINT(EM_DIAGRAM):   format PHONE F19_.;
30828      format PITT F20_.;
MPRINT(EM_DIAGRAM):   format PITT F20_.;
30829      format PITTSBURGH F21_.;
MPRINT(EM_DIAGRAM):   format PITTSBURGH F21_.;
30830      format SCHOOL F22_.;
MPRINT(EM_DIAGRAM):   format SCHOOL F22_.;
30831      format SERDAR F23_.;
MPRINT(EM_DIAGRAM):   format SERDAR F23_.;
30832      format STATE F24_.;
MPRINT(EM_DIAGRAM):   format STATE F24_.;
30833      format TURKISH F25_.;
MPRINT(EM_DIAGRAM):   format TURKISH F25_.;
30834      format TYPE F26_.;
MPRINT(EM_DIAGRAM):   format TYPE F26_.;
30835      format UNIV F27_.;
MPRINT(EM_DIAGRAM):   format UNIV F27_.;
30836      format UTEXA F28_.;
MPRINT(EM_DIAGRAM):   format UTEXA F28_.;
30837      format UUCP F29_.;
MPRINT(EM_DIAGRAM):   format UUCP F29_.;
30838      format YOU F30_.;
MPRINT(EM_DIAGRAM):   format YOU F30_.;
30839      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: Vista EMWS3.CLUS3_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.84 seconds
      cpu time            0.84 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: The data set WORK.TEMPFREQ has 5376 observations and 41 variables.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS3_TRAIN.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.87 seconds
      cpu time            0.87 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
30840      quit;
30841      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
30842      data EMWS3.Clus3_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data EMWS3.Clus3_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
30843      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" _SEGMENT_ = "Segment Variable" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
30844         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
30845         "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" _SEGMENT_ = "Segment Variable" Type = "Tipo" _X_ = "Valor numérico" _XLABEL_ = "Valor formateado" COUNT = "Número de ocurrencias" PERCENT = "Porcentaje";
30846      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
30847      varnum = varnum(dsid, 'ROWVARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'ROWVARIABLE');
30848      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
30849      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
30850      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
30851      bynum = varnum(dsid, "_SEGMENT_");
MPRINT(EM_DIAGRAM):   bynum = varnum(dsid, "_SEGMENT_");
30852      length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
MPRINT(EM_DIAGRAM):   length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
30853      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
30854      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
30855      percent = getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent = getvarn(dsid, pvarnum);
30856      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
30857      varblnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   varblnum = varnum(dsid, _VARIABLE_);
30858      _SEGMENT_ = getvarn(dsid, bynum);
MPRINT(EM_DIAGRAM):   _SEGMENT_ = getvarn(dsid, bynum);
30859      type = vartype(dsid, varblnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, varblnum);
30860      varformat = varfmt(dsid, varblnum);
MPRINT(EM_DIAGRAM):   varformat = varfmt(dsid, varblnum);
30861      if varformat eq '' then varformat = 'best12.';
MPRINT(EM_DIAGRAM):   if varformat eq '' then varformat = 'best12.';
30862      _X_=.;
MPRINT(EM_DIAGRAM):   _X_=.;
30863      if type = 'N' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
30864      _X_ = getvarn(dsid, varblnum);
MPRINT(EM_DIAGRAM):   _X_ = getvarn(dsid, varblnum);
30865      _XLABEL_ = left(putn(_X_, varformat));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(putn(_X_, varformat));
30866      end;
MPRINT(EM_DIAGRAM):   end;
30867      else _XLABEL_ = getvarc(dsid, varblnum);
MPRINT(EM_DIAGRAM):   else _XLABEL_ = getvarc(dsid, varblnum);
30868      if getvarc(dsid, typenum) = '11' then output;
MPRINT(EM_DIAGRAM):   if getvarc(dsid, typenum) = '11' then output;
30869      end;
MPRINT(EM_DIAGRAM):   end;
30870      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
30871      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS3.CLUS3_PROFILE has 4520 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
30872      proc sort data=EMWS3.Clus3_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus3_PROFILE NOTHREADS;
30873      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
30874      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4520 observations read from the data set EMWS3.CLUS3_PROFILE.
NOTE: The data set EMWS3.CLUS3_PROFILE has 4520 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30875      proc means data=EMWS3.Clus3_PROFILE noprint missing NWAY;
MPRINT(EM_DIAGRAM):   proc means data=EMWS3.Clus3_PROFILE noprint missing NWAY;
30876      class _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   class _VARIABLE_ _SEGMENT_;
30877      var COUNT;
MPRINT(EM_DIAGRAM):   var COUNT;
30878      output out=WORK.Clus3_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
MPRINT(EM_DIAGRAM):   output out=WORK.Clus3_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
30879      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4520 observations read from the data set EMWS3.CLUS3_PROFILE.
NOTE: The data set WORK.CLUS3_STATCOUNT has 600 observations and 3 variables.
NOTE: PROCEDURE MEANS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30880      proc sort data=WORK.Clus3_STATCOUNT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus3_STATCOUNT NOTHREADS;
30881      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
30882      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 600 observations read from the data set WORK.CLUS3_STATCOUNT.
NOTE: The data set WORK.CLUS3_STATCOUNT has 600 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30883      data EMWS3.Clus3_PROFILE(drop=SUM);
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_PROFILE(drop=SUM);
30884      label BYPERCENT= "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE, _SEGMENT_))";
MPRINT(EM_DIAGRAM):   label BYPERCENT= "Porcentaje";
30885      merge EMWS3.Clus3_PROFILE WORK.Clus3_STATCOUNT;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus3_PROFILE WORK.Clus3_STATCOUNT;
30886      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
30887      if SUM ne . then BYPERCENT = 100*COUNT/SUM;
MPRINT(EM_DIAGRAM):   if SUM ne . then BYPERCENT = 100*COUNT/SUM;
30888      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4520 observations read from the data set EMWS3.CLUS3_PROFILE.
NOTE: There were 600 observations read from the data set WORK.CLUS3_STATCOUNT.
NOTE: The data set EMWS3.CLUS3_PROFILE has 4520 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30889      proc sort data=EMWS3.Clus3_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS3.Clus3_PROFILE NOTHREADS;
30890      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
30891      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4520 observations read from the data set EMWS3.CLUS3_PROFILE.
NOTE: The data set EMWS3.CLUS3_PROFILE has 4520 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30892      proc sort data=WORK.M1AS4RDH;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1AS4RDH;
30893      by Name;
MPRINT(EM_DIAGRAM):   by Name;
30894      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 31 observations read from the data set WORK.M1AS4RDH.
NOTE: The data set WORK.M1AS4RDH has 31 observations and 21 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30895      data EMWS3.Clus3_PROFILE;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_PROFILE;
30896      merge EMWS3.Clus3_PROFILE(in=_a) WORK.M1AS4RDH(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus3_PROFILE(in=_a) WORK.M1AS4RDH(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
30897      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
30898      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Rol";
30899      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Etiqueta";
30900      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
30901      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 4520 observations read from the data set EMWS3.CLUS3_PROFILE.
NOTE: There were 31 observations read from the data set WORK.M1AS4RDH.
NOTE: The data set EMWS3.CLUS3_PROFILE has 4520 observations and 10 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30902      proc sort data=EMWS3.Clus3_PROFILE;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS3.Clus3_PROFILE;
30903      by _SEGMENT_ _VARIABLE_ _X_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_ _X_;
30904      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4520 observations read from the data set EMWS3.CLUS3_PROFILE.
NOTE: The data set EMWS3.CLUS3_PROFILE has 4520 observations and 10 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30905      data EMWS3.Clus3_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
30906      set EMWS3.Clus3_PROFILE;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus3_PROFILE;
30907      retain orderedValue 0;
MPRINT(EM_DIAGRAM):   retain orderedValue 0;
30908      label OrderedValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_OrderedValue_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedValue = "Valores ordenados";
30909      by _SEGMENT_ _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_;
30910      if first._variable_ then orderedValue=1;
MPRINT(EM_DIAGRAM):   if first._variable_ then orderedValue=1;
30911      else orderedValue+1;
MPRINT(EM_DIAGRAM):   else orderedValue+1;
30912      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4520 observations read from the data set EMWS3.CLUS3_PROFILE.
NOTE: The data set EMWS3.CLUS3_PROFILE has 4520 observations and 11 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30913      data WORK.Clus3_temp;
MPRINT(EM_DIAGRAM):    data WORK.Clus3_temp;
30914      set EMWS3.Clus3_OUTMEAN;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus3_OUTMEAN;
30915      _idvar_=left(put(_SEGMENT_,4.));
MPRINT(EM_DIAGRAM):   _idvar_=left(put(_SEGMENT_,4.));
30916      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS3.CLUS3_OUTMEAN.
NOTE: The data set WORK.CLUS3_TEMP has 20 observations and 251 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30917      proc distance data=WORK.Clus3_temp out=EMWS3.Clus3_DISTANCE method=l(2) shape=square;
MPRINT(EM_DIAGRAM):   proc distance data=WORK.Clus3_temp out=EMWS3.Clus3_DISTANCE method=l(2) shape=square;
30918      id _idvar_;
MPRINT(EM_DIAGRAM):   id _idvar_;
30919      var interval(%dmvqvars);
MPRINT(EM_DIAGRAM):   var interval(
MPRINT(DMVQVARS):  ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE COLOR
COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT FAX FEEL
FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD
KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND SOURC
STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK
WORLD XLIB XTERM YEAR YOU
MPRINT(EM_DIAGRAM):  );
30920      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS3.CLUS3_DISTANCE has 20 observations and 21 variables.
NOTE: PROCEDURE DISTANCE ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30921      proc mds data=EMWS3.Clus3_DISTANCE out=WORK.Clus3_mds level=absolute nohist shape=square dim=3;
MPRINT(EM_DIAGRAM):    proc mds data=EMWS3.Clus3_DISTANCE out=WORK.Clus3_mds level=absolute nohist shape=square dim=3;
30922      object _idvar_;
MPRINT(EM_DIAGRAM):   object _idvar_;
30923      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Convergence reached in 37 iterations.
NOTE: The data set WORK.CLUS3_MDS has 21 observations and 8 variables.
NOTE: PROCEDURE MDS ha utilizado (Tiempo de proceso total):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
30924      quit;
30925      data WORK.Clus3_mds;
MPRINT(EM_DIAGRAM):   data WORK.Clus3_mds;
30926      set WORK.Clus3_mds;
MPRINT(EM_DIAGRAM):   set WORK.Clus3_mds;
30927      if _type_ ne 'CONFIG' then delete;
MPRINT(EM_DIAGRAM):   if _type_ ne 'CONFIG' then delete;
30928      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.CLUS3_MDS.
NOTE: The data set WORK.CLUS3_MDS has 20 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30929      data WORK.Clus3_mds(label="&label" keep=_idvar_ _radius_ dim1 dim2 dim3);
WARNING: Apparent symbolic reference LABEL not resolved.
MPRINT(EM_DIAGRAM):   data WORK.Clus3_mds(label="&label" KEEP=_idvar_ _radius_ dim1 dim2 dim3);
30930      merge WORK.Clus3_temp WORK.Clus3_mds;
MPRINT(EM_DIAGRAM):   merge WORK.Clus3_temp WORK.Clus3_mds;
30931      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.CLUS3_TEMP.
NOTE: There were 20 observations read from the data set WORK.CLUS3_MDS.
NOTE: The data set WORK.CLUS3_MDS has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30932      goptions reset=all device=PNG;
MPRINT(EM_DIAGRAM):   goptions reset=all device=PNG;
30933      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
30934      title1 "%sysfunc(sasmsg(sashelp.dmine, rpt_ClusterDistance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title1 "Proximidades clúster";
30935      %plotit(data=WORK.Clus3_mds, datatype=mds, radii=_radius_, labelvar=_idvar_, symtype=circle, symbols='*', gout=WORK.Clus3, gname=DISTANCE, gopts2=nodisplay, gopts=device=GIF, gopplot=cback=white, titlecol=black, labelcol=black, tickcol=black,
MPRINT(EM_DIAGRAM):   *------debugging routine to dump out macro variables------;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):  *=========================== Macro Start =============================;
30936         framecol=black, post=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3440_MIIKYMEDIA_\Prc2\plotit.ps);
MPRINT(PLOTIT):   options nonotes;
MPRINT(PLOTIT):   options missing='.';
MPRINT(PLOTIT):   options noserror;
MPRINT(PLOTIT):   options serror;
MPRINT(PLOTIT):   *------store starting time, initialize a few variables-------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   length name $ 8 __debug value $ 500 glob $ 32767;
MPRINT(PLOTIT):   __time = datetime();
MPRINT(PLOTIT):   call symput('start',compress(put(__time,best15.)));
MPRINT(PLOTIT):   *------override parameters?-------;
MPRINT(PLOTIT):   glob = left(symget('plotitop'));
MPRINT(PLOTIT):   if glob ne ' ' then put 'Overridden Parameters:';
MPRINT(PLOTIT):   do while(glob ne ' ');
MPRINT(PLOTIT):   i = index(glob, '=');
MPRINT(PLOTIT):   name = substr(glob, 1, i - 1);
MPRINT(PLOTIT):   glob = left(substr(glob, i + 1));
MPRINT(PLOTIT):   i = index(glob, ',');
MPRINT(PLOTIT):   if i = 0 then i = length(glob) + 1;
MPRINT(PLOTIT):   value = substr(glob, 1, i);
MPRINT(PLOTIT):   value = translate(value, ' ', ',');
MPRINT(PLOTIT):   glob = left(substr(glob, i + 1));
MPRINT(PLOTIT):   put name +(-1) '=' value;
MPRINT(PLOTIT):   call symput(name, trim(value));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------debugging flags-------;
MPRINT(PLOTIT):   __debug = symget('debug');
MPRINT(PLOTIT):   call symput('dbyes' ,compress(put(index(__debug,'vars') ,3.)));
MPRINT(PLOTIT):   call symput('dbprint' ,compress(put(index(__debug,'dprint'),3.)));
MPRINT(PLOTIT):   call symput('dbtime' ,compress(put(index(__debug,'time') ,3.)));
MPRINT(PLOTIT):   call symput('dbmprint',compress(put(index(__debug,'mprint'),3.)));
MPRINT(PLOTIT):   if (sysprod('stat') + sysprod('graph')) ne 2 then do;
MPRINT(PLOTIT):   put 'ERROR: SAS/STAT and SAS/GRAPH must be licensed ' 'to run this macro.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if symget('style') ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: STYLE= is not supported in this release of the macro.' / '       Use OPTIONS NOGSTYLE to get the old appearance.' / '       Typically, you should set a style ' 'on the ODS destination.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   length s $ 20;
MPRINT(PLOTIT):   retain s ' ';
MPRINT(PLOTIT):   file print;
MPRINT(PLOTIT):   set sashelp.vdest;
MPRINT(PLOTIT):   notb = style ne ' ';
MPRINT(PLOTIT):   style = lowcase(style);
MPRINT(PLOTIT):   if style eq 'listing' and s eq ' ' then call symputx('style', style, 'L');
MPRINT(PLOTIT):   else if style ne 'listing' and notb then do;
MPRINT(PLOTIT):   if s eq ' ' then s = style;
MPRINT(PLOTIT):   else if style ne s then do;
MPRINT(PLOTIT):   file log;
MPRINT(PLOTIT):   put 'ERROR: Multiple non-listing destinations with ' 'multiple ' 'styles ' 'are ' 'open.';
MPRINT(PLOTIT):   call symput('abort', '2');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if s ne ' ' then call symputx('style', s, 'L');
MPRINT(PLOTIT):   if _error_ then call symput('abort', '1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   *------mention var names for ordinary SAS syntax check-------;
MPRINT(PLOTIT):   retain _idvar_ __junk 0;
MPRINT(PLOTIT):   array __1 _idvar_ __junk;
MPRINT(PLOTIT):   *------guard against silly n-literals------;
MPRINT(PLOTIT):   if length(symget('labelvar')) > 67 or length(symget('symvar')) > 67 or length(symget('typevar')) > 67 then do;
MPRINT(PLOTIT):   put 'ERROR: Your names are too long!';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store current linesize and pagesize to restore later------;
MPRINT(PLOTIT):   length __ls __ps __var sysscp $ 8 ;
MPRINT(PLOTIT):   __num = getoption('number');
MPRINT(PLOTIT):   __ls = getoption('linesize');
MPRINT(PLOTIT):   __ps = getoption('pagesize');
MPRINT(PLOTIT):   __lab = getoption('label');
MPRINT(PLOTIT):   __var = getoption('validvarname');
MPRINT(PLOTIT):   __page = input(__ps, 8.);
MPRINT(PLOTIT):   if __page < 200 then __logps = __page + 1;
MPRINT(PLOTIT):   else __logps = 200;
MPRINT(PLOTIT):   if __logps < 20 then __logps = 20;
MPRINT(PLOTIT):   call symput('v7' , put(index(__var, '6') eq 0, 1.));
MPRINT(PLOTIT):   call symput('restornum',compress(__num));
MPRINT(PLOTIT):   call symput('restorla', compress(__lab));
MPRINT(PLOTIT):   call symput('restorls', compress(__ls));
MPRINT(PLOTIT):   call symput('restorps', compress(__ps));
MPRINT(PLOTIT):   call symput('logps' , compress(put(__logps, best8.)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   options label;
MPRINT(PLOTIT):   *------start parameter checking, initialization------;
MPRINT(PLOTIT):   *------initialization------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length data f1-f11 $ 72 name $ 70 post opts datatype plotvars $ 500 filepref $ 32;
MPRINT(PLOTIT):   ok = 1;
MPRINT(PLOTIT):   *------change other options based on GSTYLE/NOGSTYLE------;
MPRINT(PLOTIT):   if upcase(symget('style')) ne ' ' then do;
MPRINT(PLOTIT):   if symget('font') eq ' ' then call symput('font', 'none');
MPRINT(PLOTIT):   if symget('tickaxes') eq ' ' then call symput('tickaxes', 'LBFh');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   if symget('font') eq ' ' then call symput('font', 'swiss');
MPRINT(PLOTIT):   if symget('tickaxes') eq ' ' then call symput('tickaxes', 'LRTBFlb');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   datatype = upcase(symget('datatype'));
MPRINT(PLOTIT):   *------start setting up background color, border------;
MPRINT(PLOTIT):   opts = lowcase(symget('options'));
MPRINT(PLOTIT):   call symput('noback', put(index(opts, 'noback') ge 1, 1.));
MPRINT(PLOTIT):   if symget('noback') eq '1' then call symput('cframe', ' ');
MPRINT(PLOTIT):   if index(opts, 'noborder') then b = '0';
MPRINT(PLOTIT):   else if index(opts, 'border') then b = '1';
MPRINT(PLOTIT):   else if upcase(symget('style')) eq ' ' then b = '0';
MPRINT(PLOTIT):   else b = '1';
MPRINT(PLOTIT):   call symput('border', b);
MPRINT(PLOTIT):   *------initialize some macro variables------;
MPRINT(PLOTIT):   call symput('onetype','1');
MPRINT(PLOTIT):   call symput('singular','1e-8');
MPRINT(PLOTIT):   call symput('allblank','1');
MPRINT(PLOTIT):   call symput('botblank','0');
MPRINT(PLOTIT):   call symput('nlines' ,'0');
MPRINT(PLOTIT):   call symput('symnumer','0');
MPRINT(PLOTIT):   call symput('typenum' ,'0');
MPRINT(PLOTIT):   call symput('search' ,' ');
MPRINT(PLOTIT):   call symput('actualls','-1');
MPRINT(PLOTIT):   call symput('symdummy','#');
MPRINT(PLOTIT):   call symput('paintcol',' ');
MPRINT(PLOTIT):   call symput('paintmin','.');
MPRINT(PLOTIT):   call symput('paintmax','.');
MPRINT(PLOTIT):   call symput('paintnum','0');
MPRINT(PLOTIT):   call symput('ncontour','0');
MPRINT(PLOTIT):   call symput('hcontour','0');
MPRINT(PLOTIT):   call symput('vcontour','0');
MPRINT(PLOTIT):   call symput('hcondir ','0');
MPRINT(PLOTIT):   call symput('vcondir ','0');
MPRINT(PLOTIT):   call symput('looklist','0');
MPRINT(PLOTIT):   call symput('sizsquar','1');
MPRINT(PLOTIT):   call symput('ntitles' ,'0');
MPRINT(PLOTIT):   call symput('device' ,symget('sysdevic'));
MPRINT(PLOTIT):   call symput('datatype',trim(datatype));
MPRINT(PLOTIT):   call symput('listtitl','*** Wrapped Listing of Point Locations ***');
MPRINT(PLOTIT):   *------set vector scale factor------;
MPRINT(PLOTIT):   name = ' ';
MPRINT(PLOTIT):   do i = 5 to 2 by -1;
MPRINT(PLOTIT):   if name = ' ' then name = scan(datatype,i,' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if name = ' ' or nmiss(input(name,?? 32.)) then name = '1';
MPRINT(PLOTIT):   call symput('biplot',trim(name));
MPRINT(PLOTIT):   *------make sure there are input data------;
MPRINT(PLOTIT):   data = left(upcase(symget('data')));
MPRINT(PLOTIT):   if data in (' ' '_LAST_') then do;
MPRINT(PLOTIT):   data = symget('syslast');
MPRINT(PLOTIT):   call symput('data',trim(data));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if data = '_NULL_' then do;
MPRINT(PLOTIT):   put 'ERROR: No input data set.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set default file name------;
MPRINT(PLOTIT):   post = symget('post');
MPRINT(PLOTIT):   if post = ' ' then do;
MPRINT(PLOTIT):   sysscp = symget('sysscp');
MPRINT(PLOTIT):   filepref = symget('filepref');
MPRINT(PLOTIT):   if filepref = ' ' then filepref = 'sasplot';
MPRINT(PLOTIT):   if sysscp = 'CMS' then post = trim(filepref) || ' ' || 'ps';
MPRINT(PLOTIT):   else if sysscp =: 'VMS' or sysscp = 'WIN' or sysscp = 'OS2' then post = trim(filepref) || '.' || 'ps';
MPRINT(PLOTIT):   else post = '.' || trim(filepref) || '.' || 'ps';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('post', trim(post));
MPRINT(PLOTIT):   *------some options cannot have null values------;
MPRINT(PLOTIT):   if symget('out') = ' ' then call symput('out' ,'anno');
MPRINT(PLOTIT):   if symget('tempdat1') = ' ' then call symput('tempdat1','tempdat1');
MPRINT(PLOTIT):   if symget('tempdat2') = ' ' then call symput('tempdat2','tempdat2');
MPRINT(PLOTIT):   if symget('tempdat3') = ' ' then call symput('tempdat3','tempdat3');
MPRINT(PLOTIT):   if symget('tempdat4') = ' ' then call symput('tempdat4','tempdat4');
MPRINT(PLOTIT):   if symget('tempdat5') = ' ' then call symput('tempdat5','tempdat5');
MPRINT(PLOTIT):   if symget('tempdat6') = ' ' then call symput('tempdat6','tempdat6');
MPRINT(PLOTIT):   if symget('regdat') = ' ' then call symput('regdat' ,'regdat');
MPRINT(PLOTIT):   if symget('preproc') = ' ' then call symput('preproc' ,'preproc');
MPRINT(PLOTIT):   if symget('extraobs') = ' ' then call symput('extraobs','extraobs');
MPRINT(PLOTIT):   if symget('radii') = ' ' then call symput('radii' ,'1, 2');
MPRINT(PLOTIT):   if symget('cirsegs') = ' ' then call symput('cirsegs' ,'.1');
MPRINT(PLOTIT):   if symget('cursegs') = ' ' then call symput('cursegs' ,'200');
MPRINT(PLOTIT):   if symget('maxiter') = ' ' then call symput('maxiter' ,'15');
MPRINT(PLOTIT):   if symget('lsinc') = ' ' then call symput('lsinc' ,'15');
MPRINT(PLOTIT):   if symget('place') = ' ' then call symput('place' ,'2 search');
MPRINT(PLOTIT):   if symget('symlen') = ' ' then call symput('symlen' ,'1');
MPRINT(PLOTIT):   if symget('ls') = ' ' then call symput('ls','compute search');
MPRINT(PLOTIT):   if symget('maxokpen') = ' ' then call symput('maxokpen','0');
MPRINT(PLOTIT):   if symget('ticklen') = ' ' then call symput('ticklen' ,'1.5');
MPRINT(PLOTIT):   if symget('tickfor') = ' ' then call symput('tickfor' ,'32.');
MPRINT(PLOTIT):   if symget('hnobs') = ' ' then call symput('hnobs' ,'0');
MPRINT(PLOTIT):   if symget('vnobs') = ' ' then call symput('vnobs' ,'0');
MPRINT(PLOTIT):   *------is radii a variable name?------;
MPRINT(PLOTIT):   name = upcase(substr(left(symget('radii')),1,1));
MPRINT(PLOTIT):   call symput('radname', put('A' <= name <= 'Z' or name = '_' or name = '"' or name = "'", 1.));
MPRINT(PLOTIT):   *------always use a formchar------;
MPRINT(PLOTIT):   call symput('procopts', trim(symget('procopts')) || " formchar='|----|+|---'");
MPRINT(PLOTIT):   *------was TYPES= specified?------;
MPRINT(PLOTIT):   call symput('typespec', put(symget('types') ne ' ',1.));
MPRINT(PLOTIT):   *------set default plotvars------;
MPRINT(PLOTIT):   plotvars = symget('plotvars');
MPRINT(PLOTIT):   if plotvars = ' ' then do;
MPRINT(PLOTIT):   if index(datatype,'MDS') or index(datatype,'MCA') or index(datatype,'ROW') or index(datatype,'COLUMN') or index(datatype,'CORRESP') then plotvars = 'Dim2 Dim1';
MPRINT(PLOTIT):   else if index(datatype,'MDPREF') or index(datatype,'VECTOR') or index(datatype,'IDEAL') then plotvars = 'Prin2 Prin1';
MPRINT(PLOTIT):   call symput('plotvars',trim(plotvars));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check for conflicting data set names------;
MPRINT(PLOTIT):   f1 = left(upcase(symget('data')));
MPRINT(PLOTIT):   f2 = left(upcase(symget('out')));
MPRINT(PLOTIT):   f3 = left(upcase(symget('tempdat1')));
MPRINT(PLOTIT):   f4 = left(upcase(symget('tempdat2')));
MPRINT(PLOTIT):   f5 = left(upcase(symget('tempdat3')));
MPRINT(PLOTIT):   f6 = left(upcase(symget('tempdat4')));
MPRINT(PLOTIT):   f7 = left(upcase(symget('tempdat5')));
MPRINT(PLOTIT):   f8 = left(upcase(symget('tempdat6')));
MPRINT(PLOTIT):   f9 = left(upcase(symget('preproc')));
MPRINT(PLOTIT):   f10 = left(upcase(symget('extraobs')));
MPRINT(PLOTIT):   f11 = left(upcase(symget('regdat')));
MPRINT(PLOTIT):   opts = 'DATA OUT TEMPDAT1 TEMPDAT2 TEMPDAT3 TEMPDAT4 TEMPDAT5 ' || 'TEMPDAT6 PREPROC EXTRAOBS REGDAT';
MPRINT(PLOTIT):   array f[11] f1-f11;
MPRINT(PLOTIT):   do i = 1 to 11;
MPRINT(PLOTIT):   if f[i] =: 'WORK.' then f[i] = substr(f[i],6);
MPRINT(PLOTIT):   __name = f[i];
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   f[i] = __name;
MPRINT(PLOTIT):   do j = 1 to (i - 1);
MPRINT(PLOTIT):   if f[i] = f[j] then do;
MPRINT(PLOTIT):   oi = scan(opts,i,' ');
MPRINT(PLOTIT):   oj = scan(opts,j,' ');
MPRINT(PLOTIT):   put 'ERROR: Data sets ' oi +(-1) '=' f[i] 'and ' oj +(-1) '=' f[j] 'must be different.';
MPRINT(PLOTIT):   if oj = 'DATA' then put 'WARNING: You may have not specified DATA=.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not ok or _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   norm: * Normalize name, upper case, strip n-literals. * Input: __name * Output: __name (updated) * Sample usage: * __name = '"a b"n';
MPRINT(PLOTIT):   * link norm;
MPRINT(PLOTIT):   * Creates: __name = 'A B';
MPRINT(PLOTIT):   __name = upcase(__name);
MPRINT(PLOTIT):   if substr(__name,1,1) in ("'", '"') then __name = dequote(__name);
MPRINT(PLOTIT):   drop __name;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------store input data set variable names------;
MPRINT(PLOTIT):   proc contents data=WORK.Clus3_mds noprint out=tempdat1;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sort data=tempdat1(keep=varnum type name);
MPRINT(PLOTIT):   by varnum;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------look for the type variable, plot variables------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length tvname vplotvar hplotvar upname vnormvar hnormvar pnormvar snormvar $ 70 __list plotvars __name $ 500 __c $ 1;
MPRINT(PLOTIT):   retain tvname vplotvar hplotvar hnormvar vnormvar pnormvar snormvar ' ' ok 1 vfound hfound pfound sfound 0;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   f = (index(symget('datatype'), 'FUNCTION') or index(upcase(symget('symtype')), 'FUNCTION'));
MPRINT(PLOTIT):   call symput('functype', put(f, 1.));
MPRINT(PLOTIT):   __name = symget('typevar');
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   tvname = __name;
MPRINT(PLOTIT):   __list = symget('plotvars');
MPRINT(PLOTIT):   __n = 1;
MPRINT(PLOTIT):   plotvars = __list;
MPRINT(PLOTIT):   link namescan;
MPRINT(PLOTIT):   vplotvar = __name;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   vnormvar = __name;
MPRINT(PLOTIT):   link namescan;
MPRINT(PLOTIT):   hplotvar = __name;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   hnormvar = __name;
MPRINT(PLOTIT):   __name = symget('labelvar');
MPRINT(PLOTIT):   pfound = (lowcase(__name) eq '_blank_' or __name eq ' ');
MPRINT(PLOTIT):   if not pfound then do;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   pnormvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __name = symget('symvar');
MPRINT(PLOTIT):   sfound = (lowcase(__name) eq '_symbol_' or __name eq ' ' or lowcase(__name) eq "'00'x" or lowcase(__name) eq '"00"x');
MPRINT(PLOTIT):   if not sfound then do;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   snormvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __list = symget('paint');
MPRINT(PLOTIT):   link namescan;
MPRINT(PLOTIT):   call symput('paintvar',trim(__name));
MPRINT(PLOTIT):   call symput('paint' ,trim(__list));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set tempdat1 end=eof;
MPRINT(PLOTIT):   upname = upcase(name);
MPRINT(PLOTIT):   if upname = tvname or (tvname = ' ' and upname = '_TYPE_') then do;
MPRINT(PLOTIT):   if tvname = ' ' then call symput('typevar','_type_');
MPRINT(PLOTIT):   if (type = 1) then call symput('typenum','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------plotting variables must be numeric------;
MPRINT(PLOTIT):   if (upname = hnormvar or upname = vnormvar) and type = 2 then do;
MPRINT(PLOTIT):   put 'ERROR: PLOTVARS=' plotvars 'must be numeric.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set default plotting variables if not set yet------;
MPRINT(PLOTIT):   if type = 1 then do;
MPRINT(PLOTIT):   if hplotvar = ' ' then do;
MPRINT(PLOTIT):   hplotvar = name;
MPRINT(PLOTIT):   hnormvar = upname;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if vplotvar = ' ' then do;
MPRINT(PLOTIT):   vplotvar = name;
MPRINT(PLOTIT):   vnormvar = upname;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------make sure axis variables are found------;
MPRINT(PLOTIT):   if upname = hnormvar then do;
MPRINT(PLOTIT):   hfound = 1;
MPRINT(PLOTIT):   __name = name;
MPRINT(PLOTIT):   link nliteral;
MPRINT(PLOTIT):   hplotvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if upname = vnormvar then do;
MPRINT(PLOTIT):   vfound = 1;
MPRINT(PLOTIT):   __name = name;
MPRINT(PLOTIT):   link nliteral;
MPRINT(PLOTIT):   vplotvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if upname = pnormvar then pfound = 1;
MPRINT(PLOTIT):   if upname = snormvar then sfound = 1;
MPRINT(PLOTIT):   *------at end, output results------;
MPRINT(PLOTIT):   if eof then do;
MPRINT(PLOTIT):   call symput('vplotvar',trim(vplotvar));
MPRINT(PLOTIT):   call symput('hplotvar',trim(hplotvar));
MPRINT(PLOTIT):   __list = trim(hplotvar) || ' ' || trim(vplotvar);
MPRINT(PLOTIT):   call symput('plotvars',trim(hplotvar) || ' ' || trim(vplotvar));
MPRINT(PLOTIT):   name = 'A' || vplotvar;
MPRINT(PLOTIT):   call symput('appvar1',trim(name));
MPRINT(PLOTIT):   if vplotvar = ' ' or hplotvar = ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: Not enough variables to plot.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not hfound then do;
MPRINT(PLOTIT):   put 'ERROR: Horizontal axis variable ' hplotvar 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not vfound then do;
MPRINT(PLOTIT):   put 'ERROR: Vertical axis variable ' vplotvar 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not pfound then do;
MPRINT(PLOTIT):   __name = symget('labelvar');
MPRINT(PLOTIT):   put 'ERROR: Label variable ' __name 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not sfound then do;
MPRINT(PLOTIT):   __name = symget('symvar');
MPRINT(PLOTIT):   put 'ERROR: Symbol variable ' __name 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if hnormvar = '_TYPE_' or vnormvar = '_TYPE_' then put 'WARNING: _TYPE_ is one of the axis variables.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not ok or _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   norm: * Normalize name, upper case, strip n-literals. * Input: __name * Output: __name (updated) * Sample usage: * __name = '"a b"n';
MPRINT(PLOTIT):   * link norm;
MPRINT(PLOTIT):   * Creates: __name = 'A B';
MPRINT(PLOTIT):   __name = upcase(__name);
MPRINT(PLOTIT):   if substr(__name,1,1) in ("'", '"') then __name = dequote(__name);
MPRINT(PLOTIT):   drop __name;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   nliteral: * Puts n-literal on name if necessary. * Input: __name * Output: __name (updated) * Sample usage: * __name = 'a b';
MPRINT(PLOTIT):   * link nliteral;
MPRINT(PLOTIT):   * Creates: __name = "'a b'n";
MPRINT(PLOTIT):   __v7 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789';
MPRINT(PLOTIT):   __len = length(__name);
MPRINT(PLOTIT):   if index(__name, ' ') < __len or '0' <= substr(__name, 1, 1) <= '9' or compress(upcase(__name), __v7) ne ' ' then do;
MPRINT(PLOTIT):   __k = 1;
MPRINT(PLOTIT):   do __i = 1 to length(__name);
MPRINT(PLOTIT):   if substr(__name, __k, 1) eq "'" then do;
MPRINT(PLOTIT):   substr(__name, __k + 1) = "'" || substr(__name, __k + 1);
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __name = "'" || trim(__name) || "'n";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   drop __name __i __k __v7 __len;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   namescan: * Returns nth name from a list. * Input: __list, __n * Output: __list, (trashed) * __name * Sample usage: * __list = 'a "b"n "C d"N d';
MPRINT(PLOTIT):   * __n = 2;
MPRINT(PLOTIT):   * link namescan;
MPRINT(PLOTIT):   * Creates: __name = '"b"n' * Notes: __name must have a length of at least 67. * a much longer length (say > 256) helps guard * against long, blank padded n-literals.;
MPRINT(PLOTIT):   __list = left(__list);
MPRINT(PLOTIT):   do __i = 1 to __n;
MPRINT(PLOTIT):   __c = substr(__list, 1, 1);
MPRINT(PLOTIT):   if trim(__c) in ("'", '"') then do;
MPRINT(PLOTIT):   __e = 0;
MPRINT(PLOTIT):   __len = length(__list);
MPRINT(PLOTIT):   do __k = 2 to __len until(__e);
MPRINT(PLOTIT):   if upcase(substr(__list, __k, 2)) in ("''", '""') then __k + 1;
MPRINT(PLOTIT):   else if upcase(substr(__list, __k, 2)) = compress(__c || 'N') then __e = __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else __e = index(__list, ' ') - 1;
MPRINT(PLOTIT):   if __e < 1 then __e = length(__list);
MPRINT(PLOTIT):   __name = substr(__list, 1, __e);
MPRINT(PLOTIT):   __list = left(substr(__list, __e + 2));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------guard against silly n-literals------;
MPRINT(PLOTIT):   if length(__name) > 67 then do;
MPRINT(PLOTIT):   put 'ERROR: Your names are too long!';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   drop __list __n __i __k __len __name __c __e;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------generate TYPES= list from data?------;
MPRINT(PLOTIT):   *------preliminary preprocessing that changes the data------;
MPRINT(PLOTIT):   data preproc;
MPRINT(PLOTIT):   set WORK.Clus3_mds;
MPRINT(PLOTIT):   if n(Dim2,Dim1) = 2;
MPRINT(PLOTIT):   *------eliminate anti-ideal points------;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------get colors from style------;
MPRINT(PLOTIT):   data tempdat5 tempdat4 tempdat3 tempdat2;
MPRINT(PLOTIT):   length w c $ 20 n 8;
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat6 tempdat6(memtype=view);
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   * Set defaults based on options (from the pre-style days);
MPRINT(PLOTIT):   data tempdat6;
MPRINT(PLOTIT):   length w c $ 20;
MPRINT(PLOTIT):   w = 'parent      ';
MPRINT(PLOTIT):   n = ._;
MPRINT(PLOTIT):   c = ' ';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gaxis       ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('framecol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gborderlines';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('color');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata      ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('color');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcfit       ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('curvecol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'glabel      ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('labelcol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gtext       ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('titlecol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gwalls      ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('cframe');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata1     ';
MPRINT(PLOTIT):   n = 1;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata2     ';
MPRINT(PLOTIT):   n = 2;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata3     ';
MPRINT(PLOTIT):   n = 3;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata4     ';
MPRINT(PLOTIT):   n = 4;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata5     ';
MPRINT(PLOTIT):   n = 5;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata6     ';
MPRINT(PLOTIT):   n = 6;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata7     ';
MPRINT(PLOTIT):   n = 7;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata8     ';
MPRINT(PLOTIT):   n = 8;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata9     ';
MPRINT(PLOTIT):   n = 9;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata10    ';
MPRINT(PLOTIT):   n = 10;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata11    ';
MPRINT(PLOTIT):   n = 11;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata12    ';
MPRINT(PLOTIT):   n = 12;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   * Get values from style and style parents up to four levels;
MPRINT(PLOTIT):   proc template;
MPRINT(PLOTIT):   source styles.listing / file="C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3440_MIIKYMEDIA_\Prc2\plotit.ps";
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat2(keep=w c n);
MPRINT(PLOTIT):   infile "C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3440_MIIKYMEDIA_\Prc2\plotit.ps" lrecl=80 pad;
MPRINT(PLOTIT):   input line $80.;
MPRINT(PLOTIT):   length w c $ 20;
MPRINT(PLOTIT):   if _n_ eq 1 then call symput('abort', '0');
MPRINT(PLOTIT):   line = lowcase(line);
MPRINT(PLOTIT):   w = scan(line, 1, '"'' =');
MPRINT(PLOTIT):   c = left(scan(line, 2, '=;'));
MPRINT(PLOTIT):   if index(c, '(') then c = ' ';
MPRINT(PLOTIT):   if (w eq 'gaxis') or (w eq 'gtext') or (w eq 'parent') or (w eq 'glabel') or (w eq 'gcfit') or (index(line, 'gwalls') and not index(line, 'olor')) or (index(line, 'gborderlines') and not index(line, 'olor')) or (index(line, 'gcdata') and
not index(line, 'contrast'));
MPRINT(PLOTIT):   line = left(translate(line, '  ', '''"'));
MPRINT(PLOTIT):   n = input(scan(line, 3, 'a '), ?? 3.);
MPRINT(PLOTIT):   if w = 'parent' then do;
MPRINT(PLOTIT):   call symputx('style', scan(c, 2, '.'), 'L');
MPRINT(PLOTIT):   n = ._;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sort;
MPRINT(PLOTIT):   by n w;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc template;
MPRINT(PLOTIT):   source styles.default / file="C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3440_MIIKYMEDIA_\Prc2\plotit.ps";
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat3(keep=w c n);
MPRINT(PLOTIT):   infile "C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3440_MIIKYMEDIA_\Prc2\plotit.ps" lrecl=80 pad;
MPRINT(PLOTIT):   input line $80.;
MPRINT(PLOTIT):   length w c $ 20;
MPRINT(PLOTIT):   if _n_ eq 1 then call symput('abort', '0');
MPRINT(PLOTIT):   line = lowcase(line);
MPRINT(PLOTIT):   w = scan(line, 1, '"'' =');
MPRINT(PLOTIT):   c = left(scan(line, 2, '=;'));
MPRINT(PLOTIT):   if index(c, '(') then c = ' ';
MPRINT(PLOTIT):   if (w eq 'gaxis') or (w eq 'gtext') or (w eq 'parent') or (w eq 'glabel') or (w eq 'gcfit') or (index(line, 'gwalls') and not index(line, 'olor')) or (index(line, 'gborderlines') and not index(line, 'olor')) or (index(line, 'gcdata') and
not index(line, 'contrast'));
MPRINT(PLOTIT):   line = left(translate(line, '  ', '''"'));
MPRINT(PLOTIT):   n = input(scan(line, 3, 'a '), ?? 3.);
MPRINT(PLOTIT):   if w = 'parent' then do;
MPRINT(PLOTIT):   call symputx('style', scan(c, 2, '.'), 'L');
MPRINT(PLOTIT):   n = ._;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sort;
MPRINT(PLOTIT):   by n w;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat3;
MPRINT(PLOTIT):   merge tempdat6 tempdat5 tempdat4 tempdat3 tempdat2;
MPRINT(PLOTIT):   by n w;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   length list $ 200;
MPRINT(PLOTIT):   retain list ' ';
MPRINT(PLOTIT):   set tempdat3 end=eof;
MPRINT(PLOTIT):   if w eq 'gaxis' then do;
MPRINT(PLOTIT):   if symget('framecol') eq ' ' then call symputx('framecol', c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if w eq 'gtext' then do;
MPRINT(PLOTIT):   if symget('titlecol') eq ' ' then call symputx('titlecol', c, 'L');
MPRINT(PLOTIT):   if symget('tickcol') eq ' ' then call symputx('tickcol' , c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if w eq 'glabel' then do;
MPRINT(PLOTIT):   if symget('labelcol') eq ' ' then call symputx('labelcol', c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if w eq 'gcfit' then do;
MPRINT(PLOTIT):   if symget('curvecol') eq ' ' then call symputx('curvecol', c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not 0 and w eq 'gwalls' and symget('cframe') eq ' ' and c ne '_undef_' then call symputx('cframe', c, 'L');
MPRINT(PLOTIT):   else if 1 and w eq 'gborderlines' then call symput('border', c);
MPRINT(PLOTIT):   if 1 and w =: 'gcdata' then do;
MPRINT(PLOTIT):   if n = 1 then n = .;
MPRINT(PLOTIT):   else if n = . then n = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(n);
MPRINT(PLOTIT):   list = trim(list) || ' ' || c;
MPRINT(PLOTIT):   list = compbl(list);
MPRINT(PLOTIT):   if eof then call symput('colors', compbl(list));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------more initializations------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length name symvar $ 70 color framecol titlecol labelcol tickcol curvecol monochro font size name1-name2 tsize $ 12 anele anele2 $ 16 word $ 24 list list2 datatype types colors symbols symcol symtype symfont symsize labcol labfont
labsize britypes rgbtypes exttypes $ 500;
MPRINT(PLOTIT):   *------finalize border, border color------;
MPRINT(PLOTIT):   word = symget('border');
MPRINT(PLOTIT):   if word eq '1' then word = "black";
MPRINT(PLOTIT):   else if word eq '0' then word = ' ';
MPRINT(PLOTIT):   call symput('border', trim(word));
MPRINT(PLOTIT):   *------set default symbol variable------;
MPRINT(PLOTIT):   symvar = symget('symvar');
MPRINT(PLOTIT):   *------list of valid DATATYPE= values------;
MPRINT(PLOTIT):   array dts[15] corresp mca row column mdpref mdpref2 vector ideal mds curve curve2 function contour square symbol;
MPRINT(PLOTIT):   *------22 lists, 10 lists of ntypes elements, 9 single-element lists 3 longer lists------;
MPRINT(PLOTIT):   listn = 22;
MPRINT(PLOTIT):   listm = 10;
MPRINT(PLOTIT):   listo = 19;
MPRINT(PLOTIT):   array vars[22] $ types colors symbols symcol symtype symfont symsize labcol labfont labsize color framecol titlecol labelcol tickcol curvecol monochro font cframe britypes rgbtypes exttypes;
MPRINT(PLOTIT):   ok = 1;
MPRINT(PLOTIT):   *------check method------;
MPRINT(PLOTIT):   name = symget('method');
MPRINT(PLOTIT):   word = lowcase(compress(name,' 2'));
MPRINT(PLOTIT):   if not (word in ('gplot' 'print' 'plot' 'none')) then do;
MPRINT(PLOTIT):   put 'ERROR: METHOD=' name 'is not valid.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   call symput('method',trim(word));
MPRINT(PLOTIT):   if word = 'plot' then call symput('looklist', '1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------convert binary options ------;
MPRINT(PLOTIT):   list = lowcase(symget('options'));
MPRINT(PLOTIT):   call symput('diag' ,put(index(list,'diag') > 0,1.));
MPRINT(PLOTIT):   call symput('expand' ,put(index(list,'expand') > 0,1.));
MPRINT(PLOTIT):   call symput('closebord',put(index(list,'close') > 0,1.));
MPRINT(PLOTIT):   call symput('center' ,put(index(list,'nocenter') = 0,1.));
MPRINT(PLOTIT):   call symput('clip' ,put(index(list,'noclip') = 0,1.));
MPRINT(PLOTIT):   call symput('delete' ,put(index(list,'nodelete') = 0,1.));
MPRINT(PLOTIT):   call symput('linetext' ,put(index(list,'textline') = 0,1.));
MPRINT(PLOTIT):   call symput('squarplt' ,put(index(list,'square') > 0,1.));
MPRINT(PLOTIT):   print = (index(list,'noprint') = 0);
MPRINT(PLOTIT):   call symput('legend' ,put(index(list,'nolegend') = 0 and print,1.));
MPRINT(PLOTIT):   call symput('history',put(index(list,'nohistory') = 0 and print,1.));
MPRINT(PLOTIT):   call symput('code' ,put(index(list,'nocode') = 0 and print,1.));
MPRINT(PLOTIT):   *------make sure all options are recognized------;
MPRINT(PLOTIT):   list2 = 'noborder border close diag expand noclip nocode nodelete ' || 'nocenter noback nohistory nolegend noprint square textline';
MPRINT(PLOTIT):   do i = 1 to 13;
MPRINT(PLOTIT):   word = scan(list2,i);
MPRINT(PLOTIT):   j = index(list,trim(word));
MPRINT(PLOTIT):   if j then substr(list,j,length(word)) = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if list ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: The following options are not recognized: ' list +(-1) '.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check INTERPOL=------;
MPRINT(PLOTIT):   list = lowcase(symget('interpol'));
MPRINT(PLOTIT):   call symput('intrtick',put((index(list,'tick') or not (index(list,'ls') or index(list,'no'))),1.));
MPRINT(PLOTIT):   call symput('intrls' ,put((index(list,'ls') or not index(list,'no')),1.));
MPRINT(PLOTIT):   call symput('hlogscal',put((index(list,'hlog') > 0),1.));
MPRINT(PLOTIT):   call symput('vlogscal',put((index(list,'vlog') > 0),1.));
MPRINT(PLOTIT):   *------parse the DATATYPE= option------;
MPRINT(PLOTIT):   datatype = symget('datatype');
MPRINT(PLOTIT):   list = datatype;
MPRINT(PLOTIT):   do i = 1 to 15;
MPRINT(PLOTIT):   call vname(dts[i],name);
MPRINT(PLOTIT):   j = index(datatype,trim(upcase(name)));
MPRINT(PLOTIT):   if j then substr(list,j,length(name)) = ' ';
MPRINT(PLOTIT):   dts[i] = (j ne 0);
MPRINT(PLOTIT):   call symput(name,compress(put(dts[i],1.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   list = compress(list,'0123456789.e+-');
MPRINT(PLOTIT):   if list ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: Invalid DATATYPE=' datatype +(-1) '.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------get the lists that must be quoted------;
MPRINT(PLOTIT):   do i = 1 to listn;
MPRINT(PLOTIT):   call vname(vars[i],name);
MPRINT(PLOTIT):   vars[i] = symget(name);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   symtype = lowcase(symtype);
MPRINT(PLOTIT):   britypes = lowcase(britypes);
MPRINT(PLOTIT):   rgbtypes = lowcase(rgbtypes);
MPRINT(PLOTIT):   exttypes = lowcase(exttypes);
MPRINT(PLOTIT):   *-----make sure these are set------;
MPRINT(PLOTIT):   if font = ' ' then font = 'swiss';
MPRINT(PLOTIT):   tsize = symget('tsize');
MPRINT(PLOTIT):   if tsize = ' ' then do;
MPRINT(PLOTIT):   tsize = '1';
MPRINT(PLOTIT):   call symput('tsize','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------process DATATYPE= option------;
MPRINT(PLOTIT):   if datatype ne ' ' then do;
MPRINT(PLOTIT):   if contour then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' contour';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' 1';
MPRINT(PLOTIT):   symfont = trim(symfont) || ' solid';
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   rgbtypes = trim(rgbtypes) || ' contour';
MPRINT(PLOTIT):   exttypes = trim(exttypes) || ' contour';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if square then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || ' U';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' square';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' 1';
MPRINT(PLOTIT):   symfont = trim(symfont) || ' marker';
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   rgbtypes = trim(rgbtypes) || ' square';
MPRINT(PLOTIT):   exttypes = trim(exttypes) || ' square';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if function then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' function';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' 1';
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ';
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   exttypes = trim(exttypes) || ' function';
MPRINT(PLOTIT):   name = symget('labelvar');
MPRINT(PLOTIT):   if name = ' ' then call symput('labelvar','_blank_');
MPRINT(PLOTIT):   if symvar = ' ' then put 'WARNING: Null symbol variable ' 'specified with ' 'DATATYPE=function.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mdpref or vector or ideal then types = trim(types) || ' SCORE';
MPRINT(PLOTIT):   if mdpref or vector or ideal or symbol then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || ' *';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || font;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if corresp or row or mca or column then do;
MPRINT(PLOTIT):   types = trim(types) || ' VAR OBS SUPVAR SUPOBS';
MPRINT(PLOTIT):   if row then do;
MPRINT(PLOTIT):   symtype = trim(symtype) || ' vector symbol symbol symbol';
MPRINT(PLOTIT):   symbols = trim(symbols) || " '' * * *";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if column then do;
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol vector symbol symbol';
MPRINT(PLOTIT):   symbols = trim(symbols) || " * '' * *";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol symbol symbol symbol';
MPRINT(PLOTIT):   symbols = trim(symbols) || ' * * * *';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   symsize = trim(symsize) || repeat(' ' || trim(tsize),3);
MPRINT(PLOTIT):   symfont = trim(symfont) || repeat(' ' || trim(font) ,3);
MPRINT(PLOTIT):   labsize = trim(labsize) || repeat(' ' || trim(tsize),3);
MPRINT(PLOTIT):   labfont = trim(labfont) || repeat(' ' || trim(font) ,3);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mdpref then do;
MPRINT(PLOTIT):   types = trim(types) || ' CORR';
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' vector';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   if lowcase(font) eq 'none' then do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font);
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mdpref2 then labsize = trim(labsize) || ' ' || compress(put(input(tsize, ?? 32.) * 0.75, best8.));
MPRINT(PLOTIT):   else labsize = trim(labsize) || ' 0';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   size = compress(put(input(tsize,?? 32.) * 1.5, best8.));
MPRINT(PLOTIT):   if vector then do;
MPRINT(PLOTIT):   types = trim(types) || ' MCOEFFI';
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' vector';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || size;
MPRINT(PLOTIT):   if lowcase(font) eq 'none' then do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font);
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if ideal then do;
MPRINT(PLOTIT):   types = trim(types) || ' MPOINT';
MPRINT(PLOTIT):   symbols = trim(symbols) || ' +';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' circle';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || size;
MPRINT(PLOTIT):   if lowcase(font) eq 'none' then do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font);
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mds then do;
MPRINT(PLOTIT):   types = trim(types) || ' CONFIG';
MPRINT(PLOTIT):   symbols = trim(symbols) || ' *';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || font;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if (mds or corresp or mca or row or column or mdpref or mdpref2 or vector or ideal) and symget('label') = ' ' then call symput('label','typical');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------ in case these were only specified in the symtype------;
MPRINT(PLOTIT):   if index(symtype, 'contour' ) then call symput('contour' , '1');
MPRINT(PLOTIT):   if index(symtype, 'square' ) then call symput('square' , '1');
MPRINT(PLOTIT):   *------set colors, other defaults------;
MPRINT(PLOTIT):   if color = ' ' then color = 'black';
MPRINT(PLOTIT):   if colors = ' ' then colors = color;
MPRINT(PLOTIT):   if framecol = ' ' then framecol = color;
MPRINT(PLOTIT):   if titlecol = ' ' then titlecol = color;
MPRINT(PLOTIT):   if labelcol = ' ' then labelcol = color;
MPRINT(PLOTIT):   if tickcol = ' ' then tickcol = color;
MPRINT(PLOTIT):   if curvecol = ' ' then curvecol = color;
MPRINT(PLOTIT):   if symtype = ' ' then symtype = 'symbol';
MPRINT(PLOTIT):   if symsize = ' ' then symsize = tsize;
MPRINT(PLOTIT):   if symfont = ' ' then symfont = font;
MPRINT(PLOTIT):   if labsize = ' ' then labsize = tsize;
MPRINT(PLOTIT):   if labfont = ' ' then labfont = font;
MPRINT(PLOTIT):   if exttypes = ' ' then exttypes = "''";
MPRINT(PLOTIT):   if rgbtypes = ' ' then rgbtypes = "''";
MPRINT(PLOTIT):   labcol = trim(labcol) || ' ' || colors;
MPRINT(PLOTIT):   symcol = trim(symcol) || ' ' || colors;
MPRINT(PLOTIT):   *------default symbols when unspecified------;
MPRINT(PLOTIT):   if index(symtype, 'symbol') and symvar eq '_symbol_' and symbols = ' ' then do;
MPRINT(PLOTIT):   word = scan(symtype, 1, ' ');
MPRINT(PLOTIT):   do i = 1 to 500 while(word ne ' ');
MPRINT(PLOTIT):   if index(word, 'symbol') then symbols = trim(symbols) || ' *';
MPRINT(PLOTIT):   else symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   word = scan(symtype, i + 1, ' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if symbols = ' ' then symbols = "''";
MPRINT(PLOTIT):   *------count the number of types------;
MPRINT(PLOTIT):   if types = ' ' then types = "''";
MPRINT(PLOTIT):   do until(word eq ' ');
MPRINT(PLOTIT):   ntypes + 1;
MPRINT(PLOTIT):   word = scan(types, ntypes + 1, ' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   holdntyp = ntypes;
MPRINT(PLOTIT):   *------output number of observation types------;
MPRINT(PLOTIT):   call symput('ntypes',compress(put(ntypes,3.)));
MPRINT(PLOTIT):   *------output lists, make sure they are quoted------;
MPRINT(PLOTIT):   do i = 1 to listn;
MPRINT(PLOTIT):   if i > listm then ntypes = 1;
MPRINT(PLOTIT):   if i > listo then ntypes = 200;
MPRINT(PLOTIT):   link qlist;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   ntypes = holdntyp;
MPRINT(PLOTIT):   *------output sizes for squares------;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   word = scan(symtype, i, ' ');
MPRINT(PLOTIT):   if index(word, 'square') then call symput('sizsquar', compress(scan(symsize, i, ' '), " '"||'"'));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check for constant symvar with vectors------;
MPRINT(PLOTIT):   symcon = (symvar = ' ' or (compress(symvar,"'"||'"') ne symvar));
MPRINT(PLOTIT):   if symcon then do;
MPRINT(PLOTIT):   i = length(symvar);
MPRINT(PLOTIT):   if i > 3 then do;
MPRINT(PLOTIT):   word = upcase(substr(symvar, i - 1));
MPRINT(PLOTIT):   if word in ('"N', "'N") then symcon = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('symcon',put(symcon,1.));
MPRINT(PLOTIT):   if symcon and index(symtype,'vector') then do;
MPRINT(PLOTIT):   put 'ERROR: Constant SYMVAR= is not allowed with vectors.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------parse RGBROUND= option------;
MPRINT(PLOTIT):   list = symget('rgbround');
MPRINT(PLOTIT):   list2 = ' ';
MPRINT(PLOTIT):   do i = 1 to 4;
MPRINT(PLOTIT):   name = scan(list, i, ' ');
MPRINT(PLOTIT):   num = input(name, ?? 32.);
MPRINT(PLOTIT):   if nmiss(num) then num = .;
MPRINT(PLOTIT):   if i > 1 and num <= 0 then num = 1;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || compress(put(num,best8.));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('rgbround',trim(left(list2)));
MPRINT(PLOTIT):   *------anything specified for the BRIGHT= option?------;
MPRINT(PLOTIT):   if symget('bright') = ' ' then do;
MPRINT(PLOTIT):   britypes = ' ';
MPRINT(PLOTIT):   call symput('britypes', compress(britypes));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------anything specified for the PAINT= option?------;
MPRINT(PLOTIT):   list = left(symget('paint'));
MPRINT(PLOTIT):   if symget('paintvar') = ' ' then do;
MPRINT(PLOTIT):   rgbtypes = ' ';
MPRINT(PLOTIT):   call symput('rgbtypes', compress(rgbtypes));
MPRINT(PLOTIT):   if contour then put 'WARNING: PAINT= was not specified ' 'with a contour plot.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------parse PAINT= option------;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   *------count list elements------;
MPRINT(PLOTIT):   do n = 1 to 500 until(name2 = ' ');
MPRINT(PLOTIT):   name2 = scan(list,n,' ');
MPRINT(PLOTIT):   if n(input(name2,?? 32.)) then name2 = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   n = n - 1;
MPRINT(PLOTIT):   *------set default, when only a variable name is specified------;
MPRINT(PLOTIT):   if n < 1 then do;
MPRINT(PLOTIT):   n = 3;
MPRINT(PLOTIT):   list = 'blue magenta red';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if n < 2 then do;
MPRINT(PLOTIT):   n = 2;
MPRINT(PLOTIT):   name2 = scan(list,1,' ');
MPRINT(PLOTIT):   list = compress(name2) || ' ' || compress(name2);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('paintcol', trim(list));
MPRINT(PLOTIT):   *------store, check number of list elements------;
MPRINT(PLOTIT):   call symput('paintnum',compress(put(n,3.)));
MPRINT(PLOTIT):   *------table of recognized colors and their hex rgb------;
MPRINT(PLOTIT):   allcols = 'BLACK--BLUE---BROWN--GRAY---GREEN--OLIVE--ORANGE-' || 'PINK---PURPLE-RED----VIOLET-WHITE--YELLOW-MAGENTA' || 'CYAN---';
MPRINT(PLOTIT):   hexcols = '000000 0000ff a05000 808080 00ff00 2a8307 ff8000 ' || 'ff0080 703070 ff0000 b090d0 ffffff ffff00 ff00ff ' || '00ffff ';
MPRINT(PLOTIT):   list2 = ' ';
MPRINT(PLOTIT):   *------construct list of (decimal) RGB values------;
MPRINT(PLOTIT):   do j = 1 to 3;
MPRINT(PLOTIT):   do i = 1 to n;
MPRINT(PLOTIT):   color = upcase(scan(list, i, ' '));
MPRINT(PLOTIT):   k = index(allcols,trim(color));
MPRINT(PLOTIT):   *------grab hex code for name, or parse CXrrggbb------;
MPRINT(PLOTIT):   if k then name1 = substr(hexcols,k + (j - 1) * 2,2);
MPRINT(PLOTIT):   else name1 = substr(color ,(j - 1) * 2 + 3,2);
MPRINT(PLOTIT):   *------check for validity------;
MPRINT(PLOTIT):   num = input(name1,?? hex2.);
MPRINT(PLOTIT):   if nmiss(num) then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= color of ' color 'is not valid.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   j = 4;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   name1 = compress(put(num,3.));
MPRINT(PLOTIT):   if length(list2) + length(name1) + 1 > 500 then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= list is too long.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   j = 3;
MPRINT(PLOTIT):   i = n;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------build list------;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || trim(name1);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store line segment end points in list if specified------;
MPRINT(PLOTIT):   list2 = left(list2);
MPRINT(PLOTIT):   name1 = scan(list,n + 1,' ');
MPRINT(PLOTIT):   if name1 ne ' ' then do;
MPRINT(PLOTIT):   do i = 1 to n;
MPRINT(PLOTIT):   name1 = scan(list,n + i,' ');
MPRINT(PLOTIT):   if nmiss(input(name1,?? 32.)) then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= data value of ' name1 'is not valid.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if length(list2) + length(name1) + 1 > 500 then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= list is too long.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   i = n;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || name1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   name1 = scan(list,2 * n + 1,' ');
MPRINT(PLOTIT):   if name1 ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= data value list is too long.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store processed PAINT= list------;
MPRINT(PLOTIT):   call symput('paint',trim(list2));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if input(symget('legend'), ?? 32.) then do;
MPRINT(PLOTIT):   awidth = 9;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   anele = scan(types, i, ' ');
MPRINT(PLOTIT):   awidth = max(awidth, length(anele) + 1);
MPRINT(PLOTIT):   awidth = max(awidth, length(scan(symbols, i, ' ')) + 1);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   cols = min(15 + awidth * ntypes, 256);
MPRINT(PLOTIT):   cols = 15 + floor((cols - 15) / awidth) * awidth;
MPRINT(PLOTIT):   m = floor((256 - cols) / 2);
MPRINT(PLOTIT):   cols = cols - 1;
MPRINT(PLOTIT):   put / +m 'Types Legend  |' @@;
MPRINT(PLOTIT):   list = types;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   list = repeat('-', cols);
MPRINT(PLOTIT):   substr(list, 15, 1) = '+';
MPRINT(PLOTIT):   put +m list;
MPRINT(PLOTIT):   put +m 'Symbol Types  |' @@;
MPRINT(PLOTIT):   list = symtype;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Symbols       |' @@;
MPRINT(PLOTIT):   list = symbols;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Symbol Colors |' @@;
MPRINT(PLOTIT):   list = symcol;
MPRINT(PLOTIT):   link legendc;
MPRINT(PLOTIT):   put +m 'Label  Colors |' @@;
MPRINT(PLOTIT):   list = labcol;
MPRINT(PLOTIT):   link legendc;
MPRINT(PLOTIT):   put +m 'Symbol Sizes  |' @@;
MPRINT(PLOTIT):   list = symsize;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Label  Sizes  |' @@;
MPRINT(PLOTIT):   list = labsize;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Symbol Fonts  |' @@;
MPRINT(PLOTIT):   list = symfont;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Label  Fonts  |' @@;
MPRINT(PLOTIT):   list = labfont;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   list = repeat('-', cols);
MPRINT(PLOTIT):   put +m list;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ or not ok then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   legend: *------print legend------;
MPRINT(PLOTIT):   j = 0;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   anele = compress(scan(list, i, ' '), "'"||'"');
MPRINT(PLOTIT):   link printele;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   put;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   legendc: *------print legend for colors------;
MPRINT(PLOTIT):   j = 0;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   anele2 = scan(symtype, i, ' ');
MPRINT(PLOTIT):   if index(rgbtypes, trim(anele2)) or index(britypes, trim(anele2)) then anele = ' ';
MPRINT(PLOTIT):   else anele = compress(scan(list, i, ' '), "'"||'"');
MPRINT(PLOTIT):   link printele;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   put;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   printele: *------print one table element------;
MPRINT(PLOTIT):   j = j + 1;
MPRINT(PLOTIT):   if (15 + awidth * j) > 256 then do;
MPRINT(PLOTIT):   put / +(m+14) '|' @@;
MPRINT(PLOTIT):   j = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   put @(m + 17 + (j - 1) * awidth) anele $ @@;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   qlist: *------quote the elements of a list------;
MPRINT(PLOTIT):   call vname(vars[i],name);
MPRINT(PLOTIT):   list2 = ' ';
MPRINT(PLOTIT):   list = vars[i];
MPRINT(PLOTIT):   charv = not index(upcase(name),'SIZE');
MPRINT(PLOTIT):   word = scan(list,1,' ');
MPRINT(PLOTIT):   do n = 1 to ntypes while(word ne ' ');
MPRINT(PLOTIT):   if charv then do;
MPRINT(PLOTIT):   word = compress("'" || compress(word,"'"||'"') || "'");
MPRINT(PLOTIT):   if not index(substr(word,2),"'") then do;
MPRINT(PLOTIT):   put 'ERROR: The list element ' name +(-1) '=' word 'is too long.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if (length(list2) + length(word)) >= 500 then do;
MPRINT(PLOTIT):   put 'ERROR: The list ' name +(-1) '=' list2 'is too long.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || word;
MPRINT(PLOTIT):   word = scan(list,n + 1,' ');
MPRINT(PLOTIT):   if word = ' ' and i <= listm then word = scan(list2,1,' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput(name,trim(left(list2)));
MPRINT(PLOTIT):   vars[i] = list2;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
 
                                                                                                                    Types Legend  | CONFIG
                                                                                                                    --------------+---------
                                                                                                                    Symbol Types  | circle
                                                                                                                    Symbols       | *
                                                                                                                    Symbol Colors | cx000000
                                                                                                                    Label  Colors | cx000000
                                                                                                                    Symbol Sizes  | 1
                                                                                                                    Label  Sizes  | 1
                                                                                                                    Symbol Fonts  | none
                                                                                                                    Label  Fonts  | none
                                                                                                                    ------------------------
MPRINT(PLOTIT):   *------inertias for correspondence analysis variable labels------;
MPRINT(PLOTIT):   *------check, set remaining variables------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   set tempdat1 end=eof;
MPRINT(PLOTIT):   length __name setl labelvar tvname symvar paintvar upname $ 70;
MPRINT(PLOTIT):   retain setl labelvar tvname symvar paintvar ' ' paintfou typefoun 0 ok 1;
MPRINT(PLOTIT):   upname = upcase(name);
MPRINT(PLOTIT):   *------get current names------;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   tvname = dequote(symget('typevar'));
MPRINT(PLOTIT):   labelvar = dequote(symget('labelvar'));
MPRINT(PLOTIT):   paintvar = dequote(symget('paintvar'));
MPRINT(PLOTIT):   if 0 then symvar = _symbol_;
MPRINT(PLOTIT):   else symvar = dequote(symget('symvar'));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------is the symbol variable numeric or character?------;
MPRINT(PLOTIT):   if not 0 and upname = upcase(symvar) and type = 1 then call symput('symnumer','1');
MPRINT(PLOTIT):   *------find _type_ variable------;
MPRINT(PLOTIT):   if upname = upcase(tvname) then typefoun = 1;
MPRINT(PLOTIT):   *------find PAINT= variable------;
MPRINT(PLOTIT):   if upname = upcase(paintvar) and type = 1 then paintfou = 1;
MPRINT(PLOTIT):   *------find default label variable name------;
MPRINT(PLOTIT):   else if type = 2 and (setl = ' ' or upname ne '_TYPE_') then setl = name;
MPRINT(PLOTIT):   *------at end, output results------;
MPRINT(PLOTIT):   if eof then do;
MPRINT(PLOTIT):   if labelvar = ' ' and setl ne ' ' then labelvar = setl;
MPRINT(PLOTIT):   if labelvar = ' ' then labelvar = '_blank_';
MPRINT(PLOTIT):   __name = labelvar;
MPRINT(PLOTIT):   link nliteral;
MPRINT(PLOTIT):   call symput('labelvar', trim(__name));
MPRINT(PLOTIT):   *------assorted error checking------;
MPRINT(PLOTIT):   if not typefoun and tvname ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: TYPEVAR=' tvname 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not typefoun and input(symget('typespec'), ?? 32.) then do;
MPRINT(PLOTIT):   put 'ERROR: A type variable must be available ' 'when TYPES= ' 'is specified.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not (paintvar = ' ' or paintfou) then do;
MPRINT(PLOTIT):   put 'ERROR: A numeric PAINT=' paintvar 'variable was not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not ok or _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   nliteral: * Puts n-literal on name if necessary. * Input: __name * Output: __name (updated) * Sample usage: * __name = 'a b';
MPRINT(PLOTIT):   * link nliteral;
MPRINT(PLOTIT):   * Creates: __name = "'a b'n";
MPRINT(PLOTIT):   __v7 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789';
MPRINT(PLOTIT):   __len = length(__name);
MPRINT(PLOTIT):   if index(__name, ' ') < __len or '0' <= substr(__name, 1, 1) <= '9' or compress(upcase(__name), __v7) ne ' ' then do;
MPRINT(PLOTIT):   __k = 1;
MPRINT(PLOTIT):   do __i = 1 to __len;
MPRINT(PLOTIT):   if substr(__name, __k, 1) eq "'" then do;
MPRINT(PLOTIT):   substr(__name, __k + 1) = "'" || substr(__name, __k + 1);
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __name = "'" || trim(__name) || "'n";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   drop __name __i __k __v7 __len;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------find minima, maxima------;
MPRINT(PLOTIT):   proc means data=preproc noprint;
MPRINT(PLOTIT):   output out=tempdat1 max(Dim2 Dim1 )=vmax hmax min(Dim2 Dim1 )=vmin hmin;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------set goptions------;
MPRINT(PLOTIT):   goptions nodisplay device=PNG cback=white device=GIF;
MPRINT(PLOTIT):   *------check some parameters for valid values, set up others------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length c $ 1 vplotvar hplotvar labelvar $ 70 opt $ 8 str place vecheadr vecheadw tinc device $ 12 outward search vechead ls $ 32 label plotreq plotopts upopts pl list labely labelx label $ 500 ind1 ind2 $ 35;
MPRINT(PLOTIT):   ok = 1;
MPRINT(PLOTIT):   call symput('somedata','0');
MPRINT(PLOTIT):   set tempdat1(drop=_type_);
MPRINT(PLOTIT):   call symput('somedata','1');
MPRINT(PLOTIT):   call symput('vinter', '.');
MPRINT(PLOTIT):   call symput('hinter', '.');
MPRINT(PLOTIT):   call symput('hslope', '.');
MPRINT(PLOTIT):   call symput('vslope', '.');
MPRINT(PLOTIT):   *------check missings------;
MPRINT(PLOTIT):   if n(vmin,hmin,vmax,hmax) < 4 then do;
MPRINT(PLOTIT):   put 'ERROR: At least one variable is all missing.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check for nonpositive data with log scales------;
MPRINT(PLOTIT):   if (vmin <= 0 and 0) or (hmin <= 0 and 0) then do;
MPRINT(PLOTIT):   put "ERROR: Nonpositive data with INTERPOL=yes.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store extend values------;
MPRINT(PLOTIT):   list = symget('extend');
MPRINT(PLOTIT):   call symput('close',compress(put(index(list,'close'),best3.)));
MPRINT(PLOTIT):   if nmiss(input(scan(list,1,' '),?? 32.)) then call symput('extendl',' ');
MPRINT(PLOTIT):   else call symput('extendl',scan(list,1,' '));
MPRINT(PLOTIT):   if nmiss(input(scan(list,2,' '),?? 32.)) then call symput('extendr',' ');
MPRINT(PLOTIT):   else call symput('extendr',scan(list,2,' '));
MPRINT(PLOTIT):   if nmiss(input(scan(list,3,' '),?? 32.)) then call symput('extendt',' ');
MPRINT(PLOTIT):   else call symput('extendt',scan(list,3,' '));
MPRINT(PLOTIT):   if nmiss(input(scan(list,4,' '),?? 32.)) then call symput('extendb',' ');
MPRINT(PLOTIT):   else call symput('extendb',scan(list,4,' '));
MPRINT(PLOTIT):   *------make sure PAINT= minimum, maximum are stored------;
MPRINT(PLOTIT):   call symput('rgbround', trim(symget('rgbround')) || ' .');
MPRINT(PLOTIT):   *------compute (possibly adjusted) range------;
MPRINT(PLOTIT):   isavec = index(symget('symtype'),'vector');
MPRINT(PLOTIT):   if isavec then do;
MPRINT(PLOTIT):   vmin = min(0,vmin);
MPRINT(PLOTIT):   hmin = min(0,hmin);
MPRINT(PLOTIT):   vmax = max(0,vmax);
MPRINT(PLOTIT):   hmax = max(0,hmax);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   vmax = max(vmax,hmax);
MPRINT(PLOTIT):   hmax = vmax;
MPRINT(PLOTIT):   vmin = min(vmin,hmin);
MPRINT(PLOTIT):   hmin = vmin;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if 0 and not 0 then range = vmax - vmin;
MPRINT(PLOTIT):   else if 0 and not 0 then range = hmax - hmin;
MPRINT(PLOTIT):   else range = max(vmax - vmin, hmax - hmin);
MPRINT(PLOTIT):   range = max(1e4 * 1e-8,range);
MPRINT(PLOTIT):   *------default increment, minima, maxima------;
MPRINT(PLOTIT):   inc = input(symget('inc'),?? 32.);
MPRINT(PLOTIT):   if n(inc) = 0 then do;
MPRINT(PLOTIT):   inc = 10 ** ceil(log10(range) - 1.0);
MPRINT(PLOTIT):   if range / inc >= 7.5 then inc = inc * 2;
MPRINT(PLOTIT):   if range / inc <= 2.5 then inc = inc / 2;
MPRINT(PLOTIT):   if range / inc <= 2.5 then inc = inc / 2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   tinc = compress(put(inc,best12.));
MPRINT(PLOTIT):   if n(inc) = 0 then do;
MPRINT(PLOTIT):   put 'ERROR: Input data set is empty, constant, or corrupt.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('inc' ,trim(tinc));
MPRINT(PLOTIT):   call symput('hmax',compress(put(hmax,best15.)));
MPRINT(PLOTIT):   call symput('hmin',compress(put(hmin,best15.)));
MPRINT(PLOTIT):   call symput('vmax',compress(put(vmax,best15.)));
MPRINT(PLOTIT):   call symput('vmin',compress(put(vmin,best15.)));
MPRINT(PLOTIT):   *------construct plot request------;
MPRINT(PLOTIT):   vplotvar = symget('vplotvar');
MPRINT(PLOTIT):   hplotvar = symget('hplotvar');
MPRINT(PLOTIT):   plotopts = symget('plotopts');
MPRINT(PLOTIT):   labelvar = symget('labelvar');
MPRINT(PLOTIT):   upopts = upcase(plotopts);
MPRINT(PLOTIT):   plotreq = trim(vplotvar) || ' * ' || trim(hplotvar) || ' $ ' || trim(labelvar) || ' = _symbol_';
MPRINT(PLOTIT):   *------check for HREF= VREF= options------;
MPRINT(PLOTIT):   if index(upopts,'HREF') or index(upopts,'VREF') then put 'WARNING: HREF= and VREF= PLOT options are ignored.  ' 'Specify ' 'them as ' 'macro options ' 'instead.';
MPRINT(PLOTIT):   *------see if we need to generate a placement list------;
MPRINT(PLOTIT):   pl = ' ';
MPRINT(PLOTIT):   i = index(upopts,'PLACE');
MPRINT(PLOTIT):   if i then do;
MPRINT(PLOTIT):   pl = substr(plotopts,i);
MPRINT(PLOTIT):   if i > 1 then plotopts = substr(plotopts,1,i - 1);
MPRINT(PLOTIT):   else plotopts = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle horizontal ticks if not already specified------;
MPRINT(PLOTIT):   c = 'h';
MPRINT(PLOTIT):   maxim = hmax;
MPRINT(PLOTIT):   minim = hmin;
MPRINT(PLOTIT):   logscal = 0;
MPRINT(PLOTIT):   link maketick;
MPRINT(PLOTIT):   *------handle vertical ticks if not already specified------;
MPRINT(PLOTIT):   c = 'v';
MPRINT(PLOTIT):   maxim = vmax;
MPRINT(PLOTIT):   minim = vmin;
MPRINT(PLOTIT):   logscal = 0;
MPRINT(PLOTIT):   link maketick;
MPRINT(PLOTIT):   *------outward option------;
MPRINT(PLOTIT):   outward = symget('outward');
MPRINT(PLOTIT):   if outward ne 'none' then do;
MPRINT(PLOTIT):   if outward = ' ' and isavec then outward = symget('symdummy');
MPRINT(PLOTIT):   if outward ne ' ' then plotopts = trim(plotopts) || ' outward="' || compress(outward,"'"||'" ') || '"';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------box option------;
MPRINT(PLOTIT):   plotopts = trim(left(plotopts)) || ' box';
MPRINT(PLOTIT):   *------reference lines------;
MPRINT(PLOTIT):   list = symget('href');
MPRINT(PLOTIT):   if list ne ' ' then plotopts = trim(plotopts) || ' href=' || list;
MPRINT(PLOTIT):   list = symget('vref');
MPRINT(PLOTIT):   if list ne ' ' then plotopts = trim(plotopts) || ' vref=' || list;
MPRINT(PLOTIT):   *------set up vector heads------;
MPRINT(PLOTIT):   vechead = symget('vechead');
MPRINT(PLOTIT):   vecheadr = scan(vechead,1,' ');
MPRINT(PLOTIT):   vecheadw = scan(vechead,2,' ');
MPRINT(PLOTIT):   if vecheadw = ' ' then vecheadr = ' ';
MPRINT(PLOTIT):   *------determine graphics area------;
MPRINT(PLOTIT):   rc1 = ginit();
MPRINT(PLOTIT):   call gask('maxdisp',units,xmax,ymax,xpix,ypix,rc2);
MPRINT(PLOTIT):   call gask('device',device,rc3);
MPRINT(PLOTIT):   rc4 = gterm();
MPRINT(PLOTIT):   if rc1 or rc2 or rc3 or rc4 then do;
MPRINT(PLOTIT):   put 'ERROR: GASK call for XMAX= and YMAX= failed.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   xmax = xmax * 100;
MPRINT(PLOTIT):   ymax = ymax * 100;
MPRINT(PLOTIT):   if symget('unit') = 'in' then do;
MPRINT(PLOTIT):   xmax = xmax / 2.54;
MPRINT(PLOTIT):   ymax = ymax / 2.54;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   xmax = floor(xmax * 100) / 100;
MPRINT(PLOTIT):   ymax = floor(ymax * 100) / 100;
MPRINT(PLOTIT):   *------max horizontal graph size------;
MPRINT(PLOTIT):   if symget('xmax') = ' ' then call symput('xmax',compress(put(xmax,9.2)));
MPRINT(PLOTIT):   *-------max vertical graph size------;
MPRINT(PLOTIT):   if symget('ymax') = ' ' then call symput('ymax',compress(put(ymax,9.2)));
MPRINT(PLOTIT):   *------construct typical label------;
MPRINT(PLOTIT):   label = symget('label');
MPRINT(PLOTIT):   if label = 'typical' then do;
MPRINT(PLOTIT):   ind1 = substr(vplotvar,length(vplotvar),1);
MPRINT(PLOTIT):   ind2 = substr(hplotvar,length(hplotvar),1);
MPRINT(PLOTIT):   if not ('1' <= ind1 <= '9' and '1' <= ind2 <= '9') then label = ' ';
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   do i = length(vplotvar) to 1 by -1;
MPRINT(PLOTIT):   x = substr(vplotvar,i,1);
MPRINT(PLOTIT):   if not ('1' <= x <= '9') then do;
MPRINT(PLOTIT):   ind1 = substr(vplotvar, i + 1);
MPRINT(PLOTIT):   i = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   do i = length(hplotvar) to 1 by -1;
MPRINT(PLOTIT):   x = substr(hplotvar,i,1);
MPRINT(PLOTIT):   if not ('1' <= x <= '9') then do;
MPRINT(PLOTIT):   ind2 = substr(hplotvar, i + 1);
MPRINT(PLOTIT):   i = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------for correspondence analysis, ------;
MPRINT(PLOTIT):   *------put inertia percentages in labels------;
MPRINT(PLOTIT):   if labelx = ' ' then do;
MPRINT(PLOTIT):   labely = "Dimension " || compress(ind1);
MPRINT(PLOTIT):   labelx = "Dimension " || compress(ind2);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   label = 'label ' || symget('vplotvar') || " = '" || trim(labely) || "' " || symget('hplotvar') || " = '" || trim(labelx) || "'";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------simple, imperfect, label statement check------;
MPRINT(PLOTIT):   label = left(label);
MPRINT(PLOTIT):   if label ne ' ' and compress(label,"'"||'="') = label then do;
MPRINT(PLOTIT):   put 'ERROR: Invalid LABEL statement, LABEL=' label +(-1) '.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   str = upcase(scan(label,1));
MPRINT(PLOTIT):   if str ne 'LABEL' and str ne ' ' then label = 'label ' || label;
MPRINT(PLOTIT):   call symput('label' ,trim(label));
MPRINT(PLOTIT):   *------make sure we have britypes with BRIGHT= specified------;
MPRINT(PLOTIT):   if symget('bright') ne ' ' and symget('britypes') = ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: Null BRITYPES= is not ' 'permitted ' 'with ' "BRIGHT=.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set up search parameters------;
MPRINT(PLOTIT):   ls = symget('ls');
MPRINT(PLOTIT):   if index(ls,'search') then do;
MPRINT(PLOTIT):   ls = scan(ls,1,' ');
MPRINT(PLOTIT):   if ls = 'compute' then search = 'compute';
MPRINT(PLOTIT):   else search = 'ls';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if ls = ' ' or ls = 'compute' then ls = '.';
MPRINT(PLOTIT):   if pl = ' ' then place = symget('place');
MPRINT(PLOTIT):   else place = '.';
MPRINT(PLOTIT):   if index(place,'search') then do;
MPRINT(PLOTIT):   search = trim(search) || ' place';
MPRINT(PLOTIT):   place = scan(place,1,' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if place = ' ' then place = '.';
MPRINT(PLOTIT):   *------see if we should store device------;
MPRINT(PLOTIT):   list = upcase(symget('gopprint'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   list = upcase(symget('gopplot'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   list = upcase(symget('gopts2'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   list = upcase(symget('gopts'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   *------output generated macro variables------;
MPRINT(PLOTIT):   call symput('search' ,trim(search));
MPRINT(PLOTIT):   call symput('ls' ,trim(ls));
MPRINT(PLOTIT):   call symput('place' ,trim(place));
MPRINT(PLOTIT):   call symput('plotopts',trim(plotopts));
MPRINT(PLOTIT):   call symput('plotreq' ,trim(plotreq));
MPRINT(PLOTIT):   call symput('pl' ,trim(pl));
MPRINT(PLOTIT):   call symput('vecheadr',trim(vecheadr));
MPRINT(PLOTIT):   call symput('vecheadw',trim(vecheadw));
MPRINT(PLOTIT):   call symput('device' ,trim(device));
MPRINT(PLOTIT):   *------check some parameters for valid values------;
MPRINT(PLOTIT):   opt='VECHEAD';
MPRINT(PLOTIT):   str=vecheadr;
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VECHEAD';
MPRINT(PLOTIT):   str=vecheadw;
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='INC';
MPRINT(PLOTIT):   str=tinc;
MPRINT(PLOTIT):   min=1e-8;
MPRINT(PLOTIT):   max=1e35;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='HNOBS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max=1e35;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VNOBS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max=1e35;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='BIPLOT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min=1e-8;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='SYMLEN';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 22;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='OFFSET';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 1;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='TSIZE';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='TICKLEN';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -10;
MPRINT(PLOTIT):   max= 10;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='ANTIIDEA';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -2;
MPRINT(PLOTIT):   max= 2;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='CIRSEGS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min=1e-4;
MPRINT(PLOTIT):   max= 500;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='CURSEGS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 20;
MPRINT(PLOTIT):   max= 500;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VTOH';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 3;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='MAKEFIT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -10;
MPRINT(PLOTIT):   max= 10;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='HSIZE';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VSIZE';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='XMAX';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='YMAX';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='HPOS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VPOS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='PS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 15;
MPRINT(PLOTIT):   max= 200;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='MAXITER';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='MAXOKPEN';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 1e9;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='BRIGHT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 5;
MPRINT(PLOTIT):   max= 250;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDL';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDR';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDB';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='LSINC';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 200;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='LS';
MPRINT(PLOTIT):   str=ls;
MPRINT(PLOTIT):   min= 64;
MPRINT(PLOTIT):   max= 200;
MPRINT(PLOTIT):   if ls ne '.' then link checkit;
MPRINT(PLOTIT):   opt='PLACE';
MPRINT(PLOTIT):   str=place;
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 13;
MPRINT(PLOTIT):   if place ne '.' then link checkit;
MPRINT(PLOTIT):   list = compress(symget('tickaxes'));
MPRINT(PLOTIT):   call symput('tickaxes',trim(list));
MPRINT(PLOTIT):   if compress(list,'LRTBlrtbFh') ne ' ' then do;
MPRINT(PLOTIT):   put "ERROR: TICKAXES=LBFh is not valid.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('frame',put(indexc(list,'RTrtF') > 0,1.));
MPRINT(PLOTIT):   if not (symget('unit') in ('in' 'cm')) then do;
MPRINT(PLOTIT):   put "ERROR: UNIT=in is not valid.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if scan(symget('lsizes'),5,' ') = ' ' then do;
MPRINT(PLOTIT):   put "ERROR: LSIZES=1 1 1 1 1 must specify five sizes.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ or not ok then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   checkit: *------check parameter range------;
MPRINT(PLOTIT):   if str ne ' ' then do;
MPRINT(PLOTIT):   param = input(str,?? 32.);
MPRINT(PLOTIT):   if not (min <= param <= max) then do;
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   put 'ERROR: ' opt +(-1) '=' str 'is not valid.  ' 'The valid range is ' min '<= ' opt '<= ' max +(-1) '.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   maketick: *------handle ticks if not already specified------;
MPRINT(PLOTIT):   minor = input(symget(c ||'minor'),?? 32.);
MPRINT(PLOTIT):   if index(upopts,upcase(c) || 'AXIS') = 0 then do;
MPRINT(PLOTIT):   if maxim > 0 then logmax = ceil(log10(maxim));
MPRINT(PLOTIT):   else logmax = .;
MPRINT(PLOTIT):   if minim > 0 then logmin = floor(log10(minim));
MPRINT(PLOTIT):   else logmin = .;
MPRINT(PLOTIT):   *------major ticks for log scale------;
MPRINT(PLOTIT):   if logscal and n(logmin) then do;
MPRINT(PLOTIT):   plotopts = trim(plotopts) || ' ' || c || 'axis=';
MPRINT(PLOTIT):   do i = logmin to logmax;
MPRINT(PLOTIT):   plotopts = trim(plotopts) || '1e' || compress(put(i,4.)) || ',';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   plotopts = substr(plotopts,1,length(plotopts) - 1);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------ordinary major ticks------;
MPRINT(PLOTIT):   else plotopts = trim(plotopts) || ' ' || c || 'axis=by ' || tinc;
MPRINT(PLOTIT):   *------minor ticks------;
MPRINT(PLOTIT):   if minor >= 1 then do;
MPRINT(PLOTIT):   if n(logmax) then do;
MPRINT(PLOTIT):   if logscal then do;
MPRINT(PLOTIT):   maxim = logmax;
MPRINT(PLOTIT):   minim = logmin;
MPRINT(PLOTIT):   i = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else i = inc;
MPRINT(PLOTIT):   maxim = ceil(2 + maxim / i) * i;
MPRINT(PLOTIT):   minim = floor(minim / i - 2) * i;
MPRINT(PLOTIT):   call symput(c || 'minor', compress(put(minim,best12.)) || ' to ' || compress(put(maxim,best12.)) || ' by ' || compress(put(i / (minor + 1),best12.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else call symput(c||'minor',' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------number of minor ticks only allowed with inc is known------;
MPRINT(PLOTIT):   else if n(minor) then do;
MPRINT(PLOTIT):   put 'WARNING: Minor ticks are suppressed when HAXIS= ' 'or VAXIS= ' 'is specified ' 'on PLOTOPTS=.';
MPRINT(PLOTIT):   call symput(c||'minor',' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *========================preprocessing of data========================;
MPRINT(PLOTIT):   *------preprocess the input data set------;
MPRINT(PLOTIT):   data preproc;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length _symbol_ $ 1 __symbol $ 1 __lfont __lcolor __sfont __scolor __stype __color $ 12 __otype $ 16 __temp $ 60 __excols $ 64;
MPRINT(PLOTIT):   retain __nblank __bblank 0 __oldx __oldy . __color __excols ' ';
MPRINT(PLOTIT):   drop __nblank __bblank __dummy __mrkwrn __nconto __oldx __oldy __excols;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   *------set the variable labels------;
MPRINT(PLOTIT):   label Dim2 = 'Dimension 2' Dim1 = 'Dimension 1';
MPRINT(PLOTIT):   call label(Dim2, __temp);
MPRINT(PLOTIT):   call symput('labely',trim(__temp));
MPRINT(PLOTIT):   call label(Dim1, __temp);
MPRINT(PLOTIT):   call symput('labelx',trim(__temp));
MPRINT(PLOTIT):   drop __temp;
MPRINT(PLOTIT):   *------output x coordinates for the curve------;
MPRINT(PLOTIT):   *------computed colors------;
MPRINT(PLOTIT):   *------excluded colors------;
MPRINT(PLOTIT):   __excols = lowcase(symget('excolors'));
MPRINT(PLOTIT):   drop __roupai __roured __rougre __roublu;
MPRINT(PLOTIT):   retain __roupai __roured __rougre __roublu;
MPRINT(PLOTIT):   array __rou[5] __dummy __roured __rougre __roublu __roupai (-240 1 1 1 .);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set up observation type variable------;
MPRINT(PLOTIT):   _type_ = repeat(' ',7);
MPRINT(PLOTIT):   *------preprocess raw data------;
MPRINT(PLOTIT):   set preproc;
MPRINT(PLOTIT):   *------store label/symbol colors, sizes, fonts, types------;
MPRINT(PLOTIT):   array a__ty[1] $ 15 _temporary_ ('CONFIG');
MPRINT(PLOTIT):   __li = 1;
MPRINT(PLOTIT):   drop __li __i;
MPRINT(PLOTIT):   do __i = 1 to 1;
MPRINT(PLOTIT):   _type_ = compress(_type_);
MPRINT(PLOTIT):   __otype = _type_;
MPRINT(PLOTIT):   if _type_ = a__ty[__i] then do;
MPRINT(PLOTIT):   __li = __i;
MPRINT(PLOTIT):   __i = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   array a__ls[1] _temporary_ (1);
MPRINT(PLOTIT):   array a__ss[1] _temporary_ (1);
MPRINT(PLOTIT):   array a__lf[1] $ 12 _temporary_ ('none');
MPRINT(PLOTIT):   array a__lc[1] $ 12 _temporary_ ('cx000000');
MPRINT(PLOTIT):   array a__sf[1] $ 12 _temporary_ ('none');
MPRINT(PLOTIT):   array a__sc[1] $ 12 _temporary_ ('cx000000');
MPRINT(PLOTIT):   array a__st[1] $ 12 _temporary_ ('circle');
MPRINT(PLOTIT):   array a__sy[1] $ 1 _temporary_ ('*');
MPRINT(PLOTIT):   __lsize = a__ls[__li];
MPRINT(PLOTIT):   __ssize = a__ss[__li];
MPRINT(PLOTIT):   __lfont = a__lf[__li];
MPRINT(PLOTIT):   __lcolor = a__lc[__li];
MPRINT(PLOTIT):   __sfont = a__sf[__li];
MPRINT(PLOTIT):   __scolor = a__sc[__li];
MPRINT(PLOTIT):   __stype = a__st[__li];
MPRINT(PLOTIT):   __symbol = a__sy[__li];
MPRINT(PLOTIT):   if upcase(__sfont) = 'MARKER' and upcase(__stype) = 'CONTOUR' then do;
MPRINT(PLOTIT):   __mrkwrn + 1;
MPRINT(PLOTIT):   __sfont = 'solid';
MPRINT(PLOTIT):   if __mrkwrn = 1 then put 'WARNING: The marker font is obsolete ' 'for contour ' 'plots.  The ' 'SOLID font ' 'will be ' 'used instead.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------assign specialized symbols------;
MPRINT(PLOTIT):   if symget('symvar') = '_symbol_' then do;
MPRINT(PLOTIT):   _symbol_ = __symbol;
MPRINT(PLOTIT):   if __stype in ('vector' 'circle') and _symbol_ = ' ' then _symbol_ = "#";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   _symbol_ = _symbol_;
MPRINT(PLOTIT):   __symbol = _symbol_;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------blank out labels?------;
MPRINT(PLOTIT):   if __lsize = 0 or symget('labelvar') = '_blank_' then _idvar_ = ' ';
MPRINT(PLOTIT):   *------stretch vectors------;
MPRINT(PLOTIT):   *------computed colors------;
MPRINT(PLOTIT):   *-------count contour observations, determine directions------;
MPRINT(PLOTIT):   if __stype = 'contour' then do;
MPRINT(PLOTIT):   __nconto + 1;
MPRINT(PLOTIT):   if __nconto = 1 then do;
MPRINT(PLOTIT):   __oldx = Dim1;
MPRINT(PLOTIT):   __oldy = Dim2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if __nconto = 2 then do;
MPRINT(PLOTIT):   call symput('hcondir',compress(put(Dim1-__oldx,best8.)));
MPRINT(PLOTIT):   call symput('vcondir',compress(put(Dim2-__oldy,best8.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('ncontour',compress(put(__nconto,best12.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------exclude observations in excluded color list------;
MPRINT(PLOTIT):   if __color eq ' ' or index(__excols, trim(lowcase(__color))) = 0;
MPRINT(PLOTIT):   *------adjustments to preprocessed data------;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):   __xvar = Dim1;
MPRINT(PLOTIT):   __yvar = Dim2;
MPRINT(PLOTIT):   *------are labels all blank?------;
MPRINT(PLOTIT):   if not __nblank then do;
MPRINT(PLOTIT):   if _idvar_ ne ' ' then do;
MPRINT(PLOTIT):   __nblank = 1;
MPRINT(PLOTIT):   call symput('allblank','0');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------are there obs with both label and symbol blank?------;
MPRINT(PLOTIT):   if not __bblank then do;
MPRINT(PLOTIT):   if _idvar_ = ' ' and _symbol_ = ' ' then do;
MPRINT(PLOTIT):   __bblank = 1;
MPRINT(PLOTIT):   call symput('botblank','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   output preproc;
MPRINT(PLOTIT):   *------create regression data set for curve fitting------;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------separate out obs that will not go through PROC PLOT------;
MPRINT(PLOTIT):   data preproc extraobs;
MPRINT(PLOTIT):   retain __listit 0;
MPRINT(PLOTIT):   length __stype $ 12;
MPRINT(PLOTIT):   *------make sure PROC PLOT scales axes based on min, max------;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   __stype = 'dummy';
MPRINT(PLOTIT):   output extraobs;
MPRINT(PLOTIT):   do Dim1 = -0.679771675032, 0.2215200008226;
MPRINT(PLOTIT):   do Dim2 = -0.535808663651, 0.1482521441345;
MPRINT(PLOTIT):   output preproc;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __stype = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set preproc;
MPRINT(PLOTIT):   if "gplot" = "plot" then output preproc;
MPRINT(PLOTIT):   else if _idvar_ = ' ' and __stype in ('vector') then output extraobs;
MPRINT(PLOTIT):   else if _idvar_ ne ' ' or not (0 or (0 and (_symbol_ = ' ' and _idvar_ = ' '))) then do;
MPRINT(PLOTIT):   if __listit = 0 then do;
MPRINT(PLOTIT):   call symput('looklist','1');
MPRINT(PLOTIT):   __listit = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   output preproc;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else output extraobs;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------find regression function------;
MPRINT(PLOTIT):   *------see if there is anything more than corners in preproc------;
MPRINT(PLOTIT):   *------initpen=0 when nothing to plot, otherwise missing ------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   if _n_ = 0 then set preproc nobs=__nobs;
MPRINT(PLOTIT):   call symput('initpen', scan('0 .', (__nobs > 4) + 1, ' '));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------set up iteration parameters------;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *=========================create printer plot=========================;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length pl $ 200 search $ 24;
MPRINT(PLOTIT):   iternum = 0 + 1;
MPRINT(PLOTIT):   place = 2;
MPRINT(PLOTIT):   ls = .;
MPRINT(PLOTIT):   search = symget('search');
MPRINT(PLOTIT):   ispl = index(search,'place');
MPRINT(PLOTIT):   isls = index(search,'ls');
MPRINT(PLOTIT):   isco = index(search,'compute');
MPRINT(PLOTIT):   *------adjust placement list, line size------;
MPRINT(PLOTIT):   if iternum > 1 then do;
MPRINT(PLOTIT):   if ispl then place = place + 1;
MPRINT(PLOTIT):   if isls then ls = ls + 15;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if isco then ls = round(36 + 29 * iternum - 20 * log(iternum),5);
MPRINT(PLOTIT):   isls = (isls or isco);
MPRINT(PLOTIT):   *------last iteration if we cannot increment------;
MPRINT(PLOTIT):   *------the parameters any more. ------;
MPRINT(PLOTIT):   if (isls and ispl and ls >= 200 and place >= 13) or (isls and not ispl and ls >= 200) or (ispl and not isls and place >= 13) or (not ispl and not isls and not isco) then maxiter = iternum;
MPRINT(PLOTIT):   else maxiter = 15;
MPRINT(PLOTIT):   if ls > 200 then ls = 200;
MPRINT(PLOTIT):   if ls < 64 then ls = 64;
MPRINT(PLOTIT):   actualps = input(symget('ps'),?? 32.);
MPRINT(PLOTIT):   if n(actualps) = 0 then do;
MPRINT(PLOTIT):   vtoh = input(symget('vtoh'),?? 32.);
MPRINT(PLOTIT):   if nmiss(vtoh) then do;
MPRINT(PLOTIT):   hsize = input(symget('hsize'),?? 32.);
MPRINT(PLOTIT):   vsize = input(symget('vsize'),?? 32.);
MPRINT(PLOTIT):   if nmiss(hsize) then hsize = 8.33;
MPRINT(PLOTIT):   if nmiss(vsize) then vsize = 6.24;
MPRINT(PLOTIT):   actualps = round(ls * (vsize / (hsize * 2)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else actualps = round(10 + ls / vtoh,5);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if actualps > 200 then actualps = 200;
MPRINT(PLOTIT):   *------construct placement list------;
MPRINT(PLOTIT):   if n(place) then do;
MPRINT(PLOTIT):   if place > 13 then place = 13;
MPRINT(PLOTIT):   if place = 0 then pl = '(s=center)';
MPRINT(PLOTIT):   else pl = '(h=2 -2 : s=right left)';
MPRINT(PLOTIT):   if place = 1 then pl = trim(pl) || ' (v=1 * h=0 -1 to -2 by alt)';
MPRINT(PLOTIT):   else if place = 2 then pl = trim(pl) || ' (v=1 -1 * h=0 -1 to -5 by alt)';
MPRINT(PLOTIT):   else if place > 2 then pl = trim(pl) || ' (v=1 to 2 by alt * h=0 -1 to -10 by alt)';
MPRINT(PLOTIT):   if place > 3 then do;
MPRINT(PLOTIT):   pl = trim(pl) || ' (s=center right left * v=0 1 to ' || compress(put(place - 2,5.)) || ' by alt * h=0 -1 to ' || compress(put(-3 * (place - 2),5.)) || ' by alt * l= 1 to ' || compress(put(2 + (place - 3.5) / 3,5.)) || ')';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   pl = 'placement=(' || trim(pl) || ')';
MPRINT(PLOTIT):   if place > 4 then do;
MPRINT(PLOTIT):   pl = trim(pl) || ' penalty(7)=' || compress(put(1.5 * place,5.));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('maxiter' ,compress(put(maxiter,5.)));
MPRINT(PLOTIT):   call symput('iternum' ,compress(put(iternum,5.)));
MPRINT(PLOTIT):   call symput('place' ,compress(put(place,5.)));
MPRINT(PLOTIT):   call symput('ls' ,compress(put(ls,5.)));
MPRINT(PLOTIT):   call symput('actualps',compress(put(actualps,5.)));
MPRINT(PLOTIT):   if pl ne ' ' then call symput('pl',trim(pl));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------initialize data sets because they might not be created------;
MPRINT(PLOTIT):   data tempdat3;
MPRINT(PLOTIT):   value = .;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat4;
MPRINT(PLOTIT):   retain label symbol startposition ' ' vaxis haxis penalty lines vshift hshift length n vposition hposition 0;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   options nonumber ls=65 ps=45;
Sistema SAS
 
MPRINT(PLOTIT):   ods exclude all;
MPRINT(PLOTIT):   proc plot nolegend formchar='|----|+|---'
data=preproc vtoh=2;
MPRINT(PLOTIT):   ods output LocateFacts(nowarn)=tempdat3
Locate(nowarn)=tempdat4 Plot=tempdat5;
MPRINT(PLOTIT):   plot Dim2 * Dim1 $ _idvar_ = _symbol_ /
haxis=by 0.2 vaxis=by 0.2 box placement=((h=2 -2 : s=right left)
(v=1 -1 * h=0 -1 to -5 by alt)) list=-1;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):   label Dim2 = '#' Dim1 = '#';
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   quit;
MPRINT(PLOTIT):   ods exclude none;
MPRINT(PLOTIT):   ods output close;
MPRINT(PLOTIT):   options NONUMBER ls=256 ps=10000;
MPRINT(PLOTIT):   *------look at the total penalty------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   done = '0';
MPRINT(PLOTIT):   set tempdat3(obs=1 rename=(value=penalty));
MPRINT(PLOTIT):   if n(penalty) & penalty <= 0 then done = '1';
MPRINT(PLOTIT):   iternum = 1;
MPRINT(PLOTIT):   *------print iteration history line------;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   place = 2;
MPRINT(PLOTIT):   ls = 65;
MPRINT(PLOTIT):   actualps = 45;
MPRINT(PLOTIT):   m = floor((256 - 55) / 2);
MPRINT(PLOTIT):   if iternum = 1 then do;
MPRINT(PLOTIT):   put / +m +5 'Iterative Scatter Plot of Labeled Points Macro' /;
MPRINT(PLOTIT):   put +m 'Iteration' +4 'Place' +4 'Line Size' +4 'Page Size' +4 'Penalty';
MPRINT(PLOTIT):   put +m '-------------------------------------------------------';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   m = m - 4;
MPRINT(PLOTIT):   put +m iternum 9. place 11. ls 11. actualps 13. penalty 13.;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if iternum >= 15 then done = '1';
MPRINT(PLOTIT):   call symput('done',compress(done));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
 
                                                                                                         Iterative Scatter Plot of Labeled Points Macro
 
                                                                                                    Iteration    Place    Line Size    Page Size    Penalty
                                                                                                    -------------------------------------------------------
                                                                                                        1          2         65           45            0
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *======================post-process plot, step 1======================;
MPRINT(PLOTIT):   *------put titles, footnotes in plot------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat6;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sql;
MPRINT(PLOTIT):   create view tempdat6 as select * from dictionary.titles;
MPRINT(PLOTIT):   quit;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   set tempdat6 end=eof;
MPRINT(PLOTIT):   if type = 'T' then ntitles + 1;
MPRINT(PLOTIT):   if eof then call symput('ntitles', trim(put(ntitles, 2. -L)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat5(keep=batch);
MPRINT(PLOTIT):   length batch $ 256;
MPRINT(PLOTIT):   if 0 then set tempdat5;
MPRINT(PLOTIT):   set tempdat6(where=(type='T') rename=(text=batch)) tempdat5 tempdat6(where=(type='F') rename=(text=batch));
MPRINT(PLOTIT):   if type = 'F' or type = 'T' then do;
MPRINT(PLOTIT):   i = round((65 - length(batch)) / 2);
MPRINT(PLOTIT):   if i > 1 then do;
MPRINT(PLOTIT):   substr(batch, i) = batch;
MPRINT(PLOTIT):   substr(batch, 1, i - 1) = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not (batch = ' ' and lag(batch) = ' ') then output;
MPRINT(PLOTIT):   if type = 'T' and number = 1 then do;
MPRINT(PLOTIT):   batch = ' ';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------start storing locations of lines------;
MPRINT(PLOTIT):   data anno(keep=tx ty comment);
MPRINT(PLOTIT):   length c $ 1 line title $ 256 comment $ 80;
MPRINT(PLOTIT):   retain coln top bottom afterbot nlines xlabline 0 topn botn topextra botextra past 0 vtick1 vtick2 htick1 htick2 . counttop 1 right left col1 labcolum 65 title ' ';
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   *------skip leading blank lines------;
MPRINT(PLOTIT):   if _n_ = 1 then do while(line = ' ');
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------skip note lines and subsequent blanks lines------;
MPRINT(PLOTIT):   if xlabline and _n_ > xlabline and not past then do;
MPRINT(PLOTIT):   if line =: 'NOTE:' then line = ' ';
MPRINT(PLOTIT):   if _n_ > xlabline + 1 then do;
MPRINT(PLOTIT):   do while((line =: 'NOTE:' or line = ' ') and not eof);
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------initialize------;
MPRINT(PLOTIT):   length = length(line);
MPRINT(PLOTIT):   if line = ' ' then length = 0;
MPRINT(PLOTIT):   comment = 'frame, tick';
MPRINT(PLOTIT):   *------store first title line------;
MPRINT(PLOTIT):   if title = ' ' then title = line;
MPRINT(PLOTIT):   *------find frame location------;
MPRINT(PLOTIT):   if left(line) =: '-' and index(line,'-+-') and substr(line,length,1) = '-' then do;
MPRINT(PLOTIT):   bottom = _n_;
MPRINT(PLOTIT):   if top = 0 then do;
MPRINT(PLOTIT):   top = _n_;
MPRINT(PLOTIT):   left = index(line,'-');
MPRINT(PLOTIT):   right = length;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------flag lines after the bottom line of the plot------;
MPRINT(PLOTIT):   c = substr(line,left,1);
MPRINT(PLOTIT):   if _n_ > top and afterbot = 0 and c = '-' and substr(line,right,1) = '-' then afterbot = 1;
MPRINT(PLOTIT):   else if afterbot then afterbot = afterbot + 1;
MPRINT(PLOTIT):   *------can we drop extra top of the plot lines?------;
MPRINT(PLOTIT):   if top and _n_ > top and not afterbot then do;
MPRINT(PLOTIT):   botn = botn + 1;
MPRINT(PLOTIT):   if c = '+' then do;
MPRINT(PLOTIT):   counttop = 0;
MPRINT(PLOTIT):   botextra = 0;
MPRINT(PLOTIT):   botn = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   if counttop then topn = topn + 1;
MPRINT(PLOTIT):   if compress(line,'| ') = ' ' then do;
MPRINT(PLOTIT):   if abs(_n_ - top - 1 - topextra) < 1e-8 then topextra = topextra + 1;
MPRINT(PLOTIT):   botextra = botextra + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------output horizontal axis tick mark coordinates------;
MPRINT(PLOTIT):   if afterbot = 1 then do;
MPRINT(PLOTIT):   ty = .;
MPRINT(PLOTIT):   do i = left to right;
MPRINT(PLOTIT):   if substr(line,i,1) = '+' then do;
MPRINT(PLOTIT):   tx = i;
MPRINT(PLOTIT):   if nmiss(htick1) then htick1 = tx;
MPRINT(PLOTIT):   else if nmiss(htick2) then htick2 = tx;
MPRINT(PLOTIT):   output anno;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------find last line in plot region------;
MPRINT(PLOTIT):   if afterbot > 2 and not past then do;
MPRINT(PLOTIT):   past = (index(line,"*** Wrapped Listing of Point Locations ***") or index(line,title));
MPRINT(PLOTIT):   if length and not past then do;
MPRINT(PLOTIT):   nlines = _n_;
MPRINT(PLOTIT):   *------find x-axis label line------;
MPRINT(PLOTIT):   if compress(line) = '#' then do;
MPRINT(PLOTIT):   xlabline = _n_;
MPRINT(PLOTIT):   *------check for vertically printing ticks------;
MPRINT(PLOTIT):   if not (afterbot = 3 or afterbot = 4) then do;
MPRINT(PLOTIT):   put 'WARNING: Ticks may be printing vertically.  ' 'The plot may be wrong.';
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   call symput('intrls' ,'1');
MPRINT(PLOTIT):   call symput('intrtick','0');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------first, last nonblank column, label column------;
MPRINT(PLOTIT):   if nlines = 0 and length then do;
MPRINT(PLOTIT):   coln = max(coln,length);
MPRINT(PLOTIT):   i = length + 1 - length(left(line));
MPRINT(PLOTIT):   col1 = min(col1,i);
MPRINT(PLOTIT):   if top then labcolum = min(labcolum,i);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------output vertical axis tick mark coordinates------;
MPRINT(PLOTIT):   if top and substr(line,left,1) = '+' then do;
MPRINT(PLOTIT):   tx = .;
MPRINT(PLOTIT):   ty = _n_;
MPRINT(PLOTIT):   if nmiss(vtick1) then vtick1 = ty;
MPRINT(PLOTIT):   else if nmiss(vtick2) then vtick2 = ty;
MPRINT(PLOTIT):   output anno;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------on last observation, output results to macro variables------;
MPRINT(PLOTIT):   if past or eof then do;
MPRINT(PLOTIT):   *------check VTOH=------;
MPRINT(PLOTIT):   vtoh = input(symget('vtoh'),?? 32.);
MPRINT(PLOTIT):   if nmiss(vtoh) then vtoh = 2;
MPRINT(PLOTIT):   else if n(htick1,htick2,vtick1,vtick2) = 4 then do;
MPRINT(PLOTIT):   vtoh = vtick2 - vtick1;
MPRINT(PLOTIT):   if vtoh > 1e-8 then vtoh = (htick2 - htick1) / vtoh;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   * put vtoh= vtick2= vtick1= htick2= htick1=;
MPRINT(PLOTIT):   call symput('vtoh',compress(put(vtoh,best15.)));
MPRINT(PLOTIT):   *------size of plot parameters------;
MPRINT(PLOTIT):   ls = coln - col1 + 1;
MPRINT(PLOTIT):   left = left - col1 + 1;
MPRINT(PLOTIT):   right = right - col1 + 1;
MPRINT(PLOTIT):   labcolum = labcolum - col1 + 1;
MPRINT(PLOTIT):   hpos = ls + 0.5 * (1.0 + abs(1.5));
MPRINT(PLOTIT):   vpos = nlines + 1;
MPRINT(PLOTIT):   uhpos = input(symget('hpos'),?? 32.);
MPRINT(PLOTIT):   if n(uhpos) then do;
MPRINT(PLOTIT):   if uhpos < hpos then do;
MPRINT(PLOTIT):   put "ERROR: HPOS= is too small.  " 'The default ' 'minimum for ' 'this plot is ' hpos +(-1) '.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else hpos = uhpos;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   uvpos = input(symget('vpos'),?? 32.);
MPRINT(PLOTIT):   if n(uvpos) then do;
MPRINT(PLOTIT):   if uvpos < vpos then do;
MPRINT(PLOTIT):   put "ERROR: VPOS= is too small.  " 'The electronics' 'minimum for ' 'this plot is ' vpos +(-1) '.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else vpos = uvpos;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   hpos = ceil(hpos);
MPRINT(PLOTIT):   vpos = ceil(vpos);
MPRINT(PLOTIT):   *------scale plot to use MAKEFIT= proportion of area------;
MPRINT(PLOTIT):   makefit1 = input(symget('makefit'),?? 32.);
MPRINT(PLOTIT):   makefit = makefit1;
MPRINT(PLOTIT):   *------makefit value can be changed inside this loop------;
MPRINT(PLOTIT):   do until(itfits);
MPRINT(PLOTIT):   itfits = 1;
MPRINT(PLOTIT):   *------determine hsize and vsize------;
MPRINT(PLOTIT):   hsize = input(symget('hsize'),?? 32.);
MPRINT(PLOTIT):   vsize = input(symget('vsize'),?? 32.);
MPRINT(PLOTIT):   if n(vsize) and nmiss(hsize) then hsize = hpos * vsize / (vpos * vtoh);
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   if n(hsize) = 0 then hsize = 8.33;
MPRINT(PLOTIT):   if n(vsize) = 0 then vsize = (vpos / hpos) * hsize * vtoh;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *-------scale sizes so plot fits in specified area------;
MPRINT(PLOTIT):   if n(makefit) then do;
MPRINT(PLOTIT):   scale = max(hsize / (abs(makefit) * (8.33)), vsize / (abs(makefit) * (6.24)));
MPRINT(PLOTIT):   if scale > 1.0 then do;
MPRINT(PLOTIT):   hsize = hsize / scale;
MPRINT(PLOTIT):   vsize = vsize / scale;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------add extra positions to center plot, extend axes------;
MPRINT(PLOTIT):   extendl = input(symget('extendl'),?? 32.);
MPRINT(PLOTIT):   extendr = input(symget('extendr'),?? 32.);
MPRINT(PLOTIT):   extendt = input(symget('extendt'),?? 32.);
MPRINT(PLOTIT):   extendb = input(symget('extendb'),?? 32.);
MPRINT(PLOTIT):   setlr = (nmiss(extendl,extendr) = 2 and not 0);
MPRINT(PLOTIT):   settb = (nmiss(extendt,extendb) = 2 and not 0);
MPRINT(PLOTIT):   *------centering, compute horizontal, vertical offsets------;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   hposoff = max(0.5 * ((8.33) - hsize) / (hsize / hpos), 0);
MPRINT(PLOTIT):   vposoff = max(0.5 * ((6.24) - vsize) / (vsize / vpos), 0);
MPRINT(PLOTIT):   hsize = 8.33;
MPRINT(PLOTIT):   vsize = 6.24;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   vposoff = 0;
MPRINT(PLOTIT):   hposoff = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------can we extend the left and right axes a little?------;
MPRINT(PLOTIT):   if setlr then do;
MPRINT(PLOTIT):   extendl = max(min(hposoff - 2.5, 2), 0);
MPRINT(PLOTIT):   extendr = extendl;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------even the top and bottom extra positions------;
MPRINT(PLOTIT):   if settb and topn > botn then do;
MPRINT(PLOTIT):   i = topn - botn;
MPRINT(PLOTIT):   if i <= topextra then extendt = -i;
MPRINT(PLOTIT):   else extendb = i;
MPRINT(PLOTIT):   i = -0.5 * sum(extendb,extendt);
MPRINT(PLOTIT):   if i > 0 then do;
MPRINT(PLOTIT):   extendb = sum(extendb,i);
MPRINT(PLOTIT):   extendt = sum(extendt,i);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set the extend variables if not set yet------;
MPRINT(PLOTIT):   if nmiss(extendt) then extendt = 0;
MPRINT(PLOTIT):   if nmiss(extendl) then extendl = 0;
MPRINT(PLOTIT):   if nmiss(extendr) then extendr = 0;
MPRINT(PLOTIT):   if nmiss(extendb) then extendb = 0;
MPRINT(PLOTIT):   *------make the plot square------;
MPRINT(PLOTIT):   if 0 and not 0 then do;
MPRINT(PLOTIT):   *------first try to adjust the left and right------;
MPRINT(PLOTIT):   if setlr then do;
MPRINT(PLOTIT):   setlr = ((right - left + extendr + extendl) - (vtoh * (bottom - top + extendt + extendb))) / 2;
MPRINT(PLOTIT):   extendl = extendl - setlr;
MPRINT(PLOTIT):   extendl = max(min(extendl,hposoff - 2.5),0);
MPRINT(PLOTIT):   extendr = extendl;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------next try to adjust the top and bottom------;
MPRINT(PLOTIT):   if settb then do;
MPRINT(PLOTIT):   settb = ((right - left + extendr + extendl) - (vtoh * (bottom - top + extendt + extendb))) / (-2 * vtoh);
MPRINT(PLOTIT):   extendt = extendt - settb;
MPRINT(PLOTIT):   extendb = extendb - settb;
MPRINT(PLOTIT):   if -extendt > topextra then extendt = -topextra;
MPRINT(PLOTIT):   if -extendb > botextra then extendb = -botextra;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check to see if we succeeded, should be zero------;
MPRINT(PLOTIT):   setlr = (right - left + extendr + extendl) - vtoh * (bottom - top + extendt + extendb);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------see if the plot fits, otherwise try again------;
MPRINT(PLOTIT):   if n(makefit) and makefit < 0 and not 0 and ((0 and abs(setlr) > (1e-8 * hpos)) or (1 and (((extendl + extendr) > (2 * hposoff - 2.5)) or ((extendt + extendb) > (2 * vposoff - 0.25))))) and makefit <= 0.75 * makefit1 then do;
MPRINT(PLOTIT):   makefit = makefit * 0.99;
MPRINT(PLOTIT):   itfits = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------warn if we changed MAKEFIT= to make the plot square------;
MPRINT(PLOTIT):   if n(makefit) and abs(makefit - makefit1) > 1e-8 then put 'WARNING: MAKEFIT=' makefit 'was used ' 'to make ' 'the plot ' 'fit.';
MPRINT(PLOTIT):   * put extendt= extendb= extendl= extendr= vtoh= hposoff= vposoff=;
MPRINT(PLOTIT):   *------override electronics positions------;
MPRINT(PLOTIT):   if n(uhpos) then hposoff = 0;
MPRINT(PLOTIT):   else hpos = ceil(hpos + 2.0 * hposoff);
MPRINT(PLOTIT):   if n(uvpos) then vposoff = 0;
MPRINT(PLOTIT):   else vpos = ceil(vpos + 2.0 * vposoff);
MPRINT(PLOTIT):   *------output plot size parameters------;
MPRINT(PLOTIT):   call symput('col1', compress(put(col1,5.0)));
MPRINT(PLOTIT):   call symput('actualls', compress(put(ls,5.0)));
MPRINT(PLOTIT):   call symput('nlines', compress(put(nlines,5.0)));
MPRINT(PLOTIT):   call symput('top', compress(put(top,5.0)));
MPRINT(PLOTIT):   call symput('bottom', compress(put(bottom,5.0)));
MPRINT(PLOTIT):   call symput('left', compress(put(left,5.0)));
MPRINT(PLOTIT):   call symput('right', compress(put(right,5.0)));
MPRINT(PLOTIT):   call symput('labcolum', compress(put(labcolum,5.0)));
MPRINT(PLOTIT):   call symput('xlabline', compress(put(xlabline,5.0)));
MPRINT(PLOTIT):   call symput('hposoff', compress(put(hposoff,7.1)));
MPRINT(PLOTIT):   call symput('vposoff', compress(put(vposoff,7.1)));
MPRINT(PLOTIT):   call symput('hpos', compress(put(hpos,9.0)));
MPRINT(PLOTIT):   call symput('vpos', compress(put(vpos,9.0)));
MPRINT(PLOTIT):   call symput('hsize', compress(put(hsize,9.2)));
MPRINT(PLOTIT):   call symput('vsize', compress(put(vsize,9.2)));
MPRINT(PLOTIT):   call symput('extendl', compress(put(extendl,9.2)));
MPRINT(PLOTIT):   call symput('extendr', compress(put(extendr,9.2)));
MPRINT(PLOTIT):   call symput('extendt', compress(put(extendt,9.2)));
MPRINT(PLOTIT):   call symput('extendb', compress(put(extendb,9.2)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   getline: set tempdat5(keep=batch rename=(batch=line)) end=eof;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *=======================post-process plot, step 2======================;
MPRINT(PLOTIT):   data tempdat1(keep=function x y text angle position comment color size style n __xvar __yvar __otype) tempdat2(keep=tx ty comment _radius_ color size style n __xvar __yvar);
MPRINT(PLOTIT):   length text line label $ 256 function color style $ 8 position symbol $ 1 comment $ 80;
MPRINT(PLOTIT):   retain style ' ';
MPRINT(PLOTIT):   function = 'LABEL';
MPRINT(PLOTIT):   color = ' ';
MPRINT(PLOTIT):   size = .;
MPRINT(PLOTIT):   *------read the plot------;
MPRINT(PLOTIT):   if _n_ <= 29 then do;
MPRINT(PLOTIT):   comment = 'text';
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   *------skip leading blank lines------;
MPRINT(PLOTIT):   if _n_ = 1 then do while(line = ' ');
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------skip note lines and subsequent blanks lines------;
MPRINT(PLOTIT):   if _n_ > 27 then do;
MPRINT(PLOTIT):   if line =: 'NOTE:' then line = ' ';
MPRINT(PLOTIT):   if _n_ > 27 + 1 then do;
MPRINT(PLOTIT):   do while((line =: 'NOTE:' or line = ' ') and not eof);
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   line = substr(line, 2, 62);
MPRINT(PLOTIT):   *------is this an axis line?------;
MPRINT(PLOTIT):   istop = (_n_ = 3);
MPRINT(PLOTIT):   isbot = (_n_ = 24);
MPRINT(PLOTIT):   *------set the y-axis label------;
MPRINT(PLOTIT):   if 3 <= _n_ <= 24 and substr(line,1,1) = '#' then substr(line,1,1) = ' ';
MPRINT(PLOTIT):   if _n_ = 29 then do;
MPRINT(PLOTIT):   y = ((2 * 29) - 3 - 24) / 2;
MPRINT(PLOTIT):   x = 1;
MPRINT(PLOTIT):   text = symget('labely');
MPRINT(PLOTIT):   if 10.2 > 1 then x = x - 0.5;
MPRINT(PLOTIT):   if length(text) > 1 then angle = 90;
MPRINT(PLOTIT):   comment = 'text, y label';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   angle = 0;
MPRINT(PLOTIT):   *------remove stuff in the plot------;
MPRINT(PLOTIT):   if 3 <= _n_ <= 24 then substr(line,8,62 - 8 + 1) = ' ';
MPRINT(PLOTIT):   *------output ticks, titles, and so on------;
MPRINT(PLOTIT):   y = 29 - _n_;
MPRINT(PLOTIT):   do iwhile = 1 to 65 while(line ne ' ');
MPRINT(PLOTIT):   i = length(line) - length(left(line)) + 1;
MPRINT(PLOTIT):   text = substr(line,i,1);
MPRINT(PLOTIT):   *------isolate and process one label------;
MPRINT(PLOTIT):   if text ne ' ' then do;
MPRINT(PLOTIT):   position = '+';
MPRINT(PLOTIT):   x = i;
MPRINT(PLOTIT):   *------special handling of title lines, xaxis label------;
MPRINT(PLOTIT):   if _n_ < 3 or _n_ >= 27 then do;
MPRINT(PLOTIT):   text = left(line);
MPRINT(PLOTIT):   i = 62 + 1;
MPRINT(PLOTIT):   line = ' ';
MPRINT(PLOTIT):   x = (8 + 62) / 2.0;
MPRINT(PLOTIT):   *------special handling of title lines------;
MPRINT(PLOTIT):   if _n_ < 3 then do;
MPRINT(PLOTIT):   comment = 'text, title';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------footnotes------;
MPRINT(PLOTIT):   else if _n_ > 27 then do;
MPRINT(PLOTIT):   comment = 'text, footnote';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle x-axis label------;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   text = symget('labelx');
MPRINT(PLOTIT):   comment = 'text, x label';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle label outside the plot, not title------;
MPRINT(PLOTIT):   else if i < 8 or _n_ > 24 then do;
MPRINT(PLOTIT):   do j = i + 1 to 62 until(done);
MPRINT(PLOTIT):   done = substr(line,j,1) = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   text = substr(line,i,j - i + 1);
MPRINT(PLOTIT):   substr(line,i,j - i + 1) = ' ';
MPRINT(PLOTIT):   *------handle ticks------;
MPRINT(PLOTIT):   position = '<';
MPRINT(PLOTIT):   x = i + length(text) - 1;
MPRINT(PLOTIT):   if j < 8 then comment = 'text, y tick';
MPRINT(PLOTIT):   else if _n_ < 27 then do;
MPRINT(PLOTIT):   comment = 'text, x tick';
MPRINT(PLOTIT):   *------tweak the placement a tad with new options------;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else comment = 'text, other';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   * put i= text= position=;
MPRINT(PLOTIT):   *------output label------;
MPRINT(PLOTIT):   if text ne ' ' then output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if iwhile >= 65 and symget('abort') ne '1' then do;
MPRINT(PLOTIT):   put 'ERROR: The frame location algorithm is confused.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------read the labels------;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   *------bring in the extra observations------;
MPRINT(PLOTIT):   eofextra = 0;
MPRINT(PLOTIT):   p = '+';
MPRINT(PLOTIT):   tx = .;
MPRINT(PLOTIT):   ty = .;
MPRINT(PLOTIT):   vshift = .;
MPRINT(PLOTIT):   hshift = .;
MPRINT(PLOTIT):   text = ' ';
MPRINT(PLOTIT):   n = 0;
MPRINT(PLOTIT):   lines = 0;
MPRINT(PLOTIT):   do while(not eofextra);
MPRINT(PLOTIT):   set extraobs(keep=__: _radius_) end=eofextra;
MPRINT(PLOTIT):   comment = 'extra,';
MPRINT(PLOTIT):   if n(__xvar,__yvar) = 2 then link process;
MPRINT(PLOTIT):   n = n + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------determine point count------;
MPRINT(PLOTIT):   set tempdat3(firstobs=2 rename=(value=npoints));
MPRINT(PLOTIT):   if nmiss(npoints) then do;
MPRINT(PLOTIT):   npoints = 0;
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   sumh = 0;
MPRINT(PLOTIT):   sumv = 0;
MPRINT(PLOTIT):   sumx = 0;
MPRINT(PLOTIT):   sumy = 0;
MPRINT(PLOTIT):   sumx2 = 0;
MPRINT(PLOTIT):   sumy2 = 0;
MPRINT(PLOTIT):   sumxh = 0;
MPRINT(PLOTIT):   sumyv = 0;
MPRINT(PLOTIT):   nobs = 0;
MPRINT(PLOTIT):   midh = 62 / 2;
MPRINT(PLOTIT):   midv = 45 / 2;
MPRINT(PLOTIT):   midx = (0.2215200008226 + -0.679771675032) / 2;
MPRINT(PLOTIT):   midy = (0.1482521441345 + -0.535808663651) / 2;
MPRINT(PLOTIT):   *------read the labels------;
MPRINT(PLOTIT):   do pointn = 1 to npoints;
MPRINT(PLOTIT):   link getlabel;
MPRINT(PLOTIT):   ty = vpositio;
MPRINT(PLOTIT):   tx = hpositio;
MPRINT(PLOTIT):   comment = 'list,';
MPRINT(PLOTIT):   if _error_ = 1 then put _all_;
MPRINT(PLOTIT):   if startpos = 'Center' then p = '+';
MPRINT(PLOTIT):   else if startpos = 'Left' then p = '<';
MPRINT(PLOTIT):   else p = '>';
MPRINT(PLOTIT):   text = symbol;
MPRINT(PLOTIT):   i = n;
MPRINT(PLOTIT):   set preproc(keep=__: _radius_) point=i;
MPRINT(PLOTIT):   link process;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------least-squares slope and intercept------;
MPRINT(PLOTIT):   b = .;
MPRINT(PLOTIT):   a = .;
MPRINT(PLOTIT):   if nobs > 0 then do;
MPRINT(PLOTIT):   d = sumx - nobs * midx;
MPRINT(PLOTIT):   b = nobs * sumx2 - d * d;
MPRINT(PLOTIT):   if abs(b) < 1e-8 then b = 0;
MPRINT(PLOTIT):   else b = (nobs * sumxh - d * (sumh - nobs * midh)) / b;
MPRINT(PLOTIT):   a = sumh / nobs - b * sumx / nobs;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('hslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('hinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   if nobs > 0 then do;
MPRINT(PLOTIT):   d = (sumy - nobs * midy);
MPRINT(PLOTIT):   b = (nobs * sumy2 - d * d);
MPRINT(PLOTIT):   if abs(b) < 1e-8 then b = 0;
MPRINT(PLOTIT):   else b = (nobs * sumyv - d * (sumv - nobs * midv)) / b;
MPRINT(PLOTIT):   a = sumv / nobs - b * sumy / nobs;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('vslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('vinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   process: *------handle a point in the plot------;
MPRINT(PLOTIT):   type = __stype;
MPRINT(PLOTIT):   if n(tx) then do;
MPRINT(PLOTIT):   tx = tx + 8 + 1;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(ty) then do;
MPRINT(PLOTIT):   ty = ty + 1 + 29 - 24;
MPRINT(PLOTIT):   y = ty;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   colorset = 0;
MPRINT(PLOTIT):   *------random colors------;
MPRINT(PLOTIT):   *------store full label------;
MPRINT(PLOTIT):   if lines then do;
MPRINT(PLOTIT):   line = label;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   line = compress('('||type||',') || ' ' || compress(put(n,5.)||')');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set colors, sizes, and so on for symbols------;
MPRINT(PLOTIT):   if not colorset then color = __scolor;
MPRINT(PLOTIT):   size = __ssize;
MPRINT(PLOTIT):   style = __sfont;
MPRINT(PLOTIT):   if text = 'NONE' then text = ' ';
MPRINT(PLOTIT):   if __symbol ne '00'x then text = __symbol;
MPRINT(PLOTIT):   if type = 'contour' then function = 'BAR';
MPRINT(PLOTIT):   else if type = 'square' then function = 'SYMBOL';
MPRINT(PLOTIT):   else function = 'LABEL';
MPRINT(PLOTIT):   *------output list info to lines data set------;
MPRINT(PLOTIT):   if type =: 'vector' or type =: 'circle' then do;
MPRINT(PLOTIT):   comment = trim(comment) || ' ' || trim(type) || ', ' || line;
MPRINT(PLOTIT):   output tempdat2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------output list info to text data set------;
MPRINT(PLOTIT):   if (text ne ' ' and type ne 'dummy') or type = 'contour' or type = 'function' then do;
MPRINT(PLOTIT):   position = '+';
MPRINT(PLOTIT):   comment = trim(scan(comment,1,' ')) || ' text, ' || trim(type) || ', ' || line;
MPRINT(PLOTIT):   output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------intermediate results for slope, intercept------;
MPRINT(PLOTIT):   if n(tx,ty,__xvar,__yvar) = 4 then do;
MPRINT(PLOTIT):   sumh = sumh + tx;
MPRINT(PLOTIT):   sumv = sumv + ty;
MPRINT(PLOTIT):   sumx = sumx + __xvar;
MPRINT(PLOTIT):   sumy = sumy + __yvar;
MPRINT(PLOTIT):   d = __xvar - midx;
MPRINT(PLOTIT):   sumx2 = sumx2 + d * d;
MPRINT(PLOTIT):   sumxh = sumxh + (tx - midh) * d;
MPRINT(PLOTIT):   d = __yvar - midy;
MPRINT(PLOTIT):   sumy2 = sumy2 + d * d;
MPRINT(PLOTIT):   sumyv = sumyv + (ty - midv) * d;
MPRINT(PLOTIT):   nobs = nobs + 1;
MPRINT(PLOTIT):   * put sumh= tx= sumv= ty= sumx= __xvar= sumy= __yvar= midx= sumx2= sumxh= midy= sumy2= sumyv= nobs=;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle the label fragments------;
MPRINT(PLOTIT):   if lines then do;
MPRINT(PLOTIT):   if not colorset then color = __lcolor;
MPRINT(PLOTIT):   size = __lsize;
MPRINT(PLOTIT):   style = __lfont;
MPRINT(PLOTIT):   function = 'LABEL';
MPRINT(PLOTIT):   position = p;
MPRINT(PLOTIT):   comment = trim(scan(comment,1,' ')) || ' text, label, ' || trim(type) || ', ' || line;
MPRINT(PLOTIT):   shift = floor(1e-8 + (lines - 1) / 2);
MPRINT(PLOTIT):   do i = 1 to lines;
MPRINT(PLOTIT):   if lines > 1 then link getlabel;
MPRINT(PLOTIT):   text = label;
MPRINT(PLOTIT):   if text ne ' ' and type ne 'dummy' then do;
MPRINT(PLOTIT):   x = tx + hshift;
MPRINT(PLOTIT):   y = 1 + ty + vshift + shift - i;
MPRINT(PLOTIT):   output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   getline: set tempdat5(keep=batch rename=(batch=line)) end=eof;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   getlabel: set tempdat4(keep=lines symbol n label vshift hshift vposition hposition startposition rename=(startposition=startpos vposition=vpositio hposition=hpositio));
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------delete intermediate data sets------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete extraobs;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------tick mark based slope and intercept------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   merge anno(where=(index(substr(comment,1,12),'tick')) keep=ty tx comment) tempdat1(where=(index(comment,'tick')) keep=text comment);
MPRINT(PLOTIT):   if n(ty) then ty = 29 - ty;
MPRINT(PLOTIT):   data = input(text,?? 32.);
MPRINT(PLOTIT):   if (0 and n(tx)) or (0 and n(ty)) then do;
MPRINT(PLOTIT):   if data > 0 then data = log10(data);
MPRINT(PLOTIT):   else data = .;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   oldty = lag(ty);
MPRINT(PLOTIT):   oldtx = lag(tx);
MPRINT(PLOTIT):   olddata = lag(data);
MPRINT(PLOTIT):   if n(data,olddata) = 2 then do;
MPRINT(PLOTIT):   den = data - olddata;
MPRINT(PLOTIT):   if abs(den) > 1e-8 then do;
MPRINT(PLOTIT):   if n(oldty,ty) = 2 then do;
MPRINT(PLOTIT):   b = (ty - oldty) / den;
MPRINT(PLOTIT):   a = ty - b * data;
MPRINT(PLOTIT):   call symput('vslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('vinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(oldtx,tx) = 2 then do;
MPRINT(PLOTIT):   b = (tx - oldtx) / den;
MPRINT(PLOTIT):   a = tx - b * data - 2 + 1;
MPRINT(PLOTIT):   call symput('hslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('hinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------switch top and bottom to annotate coordinates------;
MPRINT(PLOTIT):   *------make goptions statement------;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *=================create annotate data set with lines=================;
MPRINT(PLOTIT):   data anno(keep=function x y comment color size style n);
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length text $ 256 comment $ 100 function color style $ 8;
MPRINT(PLOTIT):   retain curven -1 tickaxes "LBFh" vtoh 2 vinter 19 hinter 43 hslope 40 vslope 20 hmax 0.2215200008226 vmax 0.1482521441345 vmin -0.535808663651 hmin -0.679771675032 singular 1e-8 left 8 right 62 top 26 bottom 5;
MPRINT(PLOTIT):   array lsizes[5] _temporary_ (1 1 1 1 1);
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   *------check slope, intercept------;
MPRINT(PLOTIT):   if n(hinter,vinter,hslope,vslope) ne 4 then do;
MPRINT(PLOTIT):   put 'ERROR: Plot algorithm failed.  ' 'Coordinates could ' 'not be ' 'computed.  ' 'Vertically printing ' 'ticks is a ' 'possible cause.  ' 'Another ' 'explanation ' 'is no locate list ' 'was available.  ' 'Look ' 'at the ' 'printer plot
' 'to check.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------how far should plot be extended?------;
MPRINT(PLOTIT):   extendl = input(symget('extendl'), ?? 32.);
MPRINT(PLOTIT):   extendr = input(symget('extendr'), ?? 32.);
MPRINT(PLOTIT):   extendt = input(symget('extendt'), ?? 32.);
MPRINT(PLOTIT):   extendb = input(symget('extendb'), ?? 32.);
MPRINT(PLOTIT):   *------rectangle sizes for contour plots------;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   nobs = 0;
MPRINT(PLOTIT):   if nobs <= 0 and 0 > singular then nobs = sqrt(0);
MPRINT(PLOTIT):   nobs = nobs - 1;
MPRINT(PLOTIT):   if nobs > singular then vcontour = abs(vslope) * (vmax - vmin) / nobs;
MPRINT(PLOTIT):   else vcontour = .;
MPRINT(PLOTIT):   call symput('vcontour',compress(put(vcontour,best15.)));
MPRINT(PLOTIT):   nobs = 0;
MPRINT(PLOTIT):   if nobs <= 0 and 0 > singular then nobs = sqrt(0);
MPRINT(PLOTIT):   nobs = nobs - 1;
MPRINT(PLOTIT):   if nobs > singular then hcontour = abs(hslope) * (hmax - hmin) / nobs;
MPRINT(PLOTIT):   else hcontour = .;
MPRINT(PLOTIT):   call symput('hcontour',compress(put(hcontour,best15.)));
MPRINT(PLOTIT):   *------optionally close up all white space------;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   if n(hcontour) then do;
MPRINT(PLOTIT):   extendl = extendl + left - (hinter + hslope * hmin - 0.5 * hcontour);
MPRINT(PLOTIT):   extendr = extendr + (hinter + hslope * hmax + 0.5 * hcontour) - right;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(vcontour) then do;
MPRINT(PLOTIT):   extendt = extendt + (vinter + vslope * vmax + 0.5 * vcontour) - top;
MPRINT(PLOTIT):   extendb = extendb + bottom - (vinter + vslope * vmin - 0.5 * vcontour);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------optionally close up white space with square contours------;
MPRINT(PLOTIT):   if 0 and 0 and not 0 then do;
MPRINT(PLOTIT):   contour = 1 * 0.5;
MPRINT(PLOTIT):   extendl = extendl + left - (hinter + hslope * hmin) + vtoh * contour;
MPRINT(PLOTIT):   extendr = extendr + (hinter + hslope * hmax) - right + vtoh * contour;
MPRINT(PLOTIT):   extendt = extendt + (vinter + vslope * vmax) - top + contour;
MPRINT(PLOTIT):   extendb = extendb + bottom - (vinter + vslope * vmin) + contour;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   call symput('extendl',compress(put(extendl,best15.)));
MPRINT(PLOTIT):   call symput('extendr',compress(put(extendr,best15.)));
MPRINT(PLOTIT):   call symput('extendt',compress(put(extendt,best15.)));
MPRINT(PLOTIT):   call symput('extendb',compress(put(extendb,best15.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------final locations of the axes------;
MPRINT(PLOTIT):   left = left - extendl;
MPRINT(PLOTIT):   right = right + extendr;
MPRINT(PLOTIT):   top = top + extendt;
MPRINT(PLOTIT):   bottom = bottom - extendb;
MPRINT(PLOTIT):   *------frame background color------;
MPRINT(PLOTIT):   color = 'cxffffff';
MPRINT(PLOTIT):   size = 1;
MPRINT(PLOTIT):   style = 'msolid';
MPRINT(PLOTIT):   function = 'POLY';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   comment = 'frame, background, left top start';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   function = 'POLYCONT';
MPRINT(PLOTIT):   comment = 'frame, background, left bottom';
MPRINT(PLOTIT):   y = bottom;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, background, right bottom';
MPRINT(PLOTIT):   x = right;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, background, right top';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, background, left top';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   style = ' ';
MPRINT(PLOTIT):   *------draw frame------;
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   size = lsizes[1];
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   comment = 'frame, box, left top start';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   comment = 'frame, box, left bottom';
MPRINT(PLOTIT):   y = bottom;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, box, right bottom';
MPRINT(PLOTIT):   x = right;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   comment = 'frame, box, right top';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, box, left top';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------diagonal reference line------;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   comment = 'frame, diag, left bottom';
MPRINT(PLOTIT):   y = bottom;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, diag, right top';
MPRINT(PLOTIT):   x = right;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------vertical axis reference lines------;
MPRINT(PLOTIT):   *------horizontal axis reference lines------;
MPRINT(PLOTIT):   *------vertical axis minor tick marks------;
MPRINT(PLOTIT):   *------horizontal axis minor tick marks------;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set anno tempdat2(in=td2);
MPRINT(PLOTIT):   *------uncategorize symbol locations------;
MPRINT(PLOTIT):   i = (1 or 1) and td2 and not (comment =: 'frame');
MPRINT(PLOTIT):   if i or (nmiss(tx) and n(__xvar)) then tx = hinter + hslope * __xvar;
MPRINT(PLOTIT):   if i or (nmiss(ty) and n(__yvar)) then ty = vinter + vslope * __yvar;
MPRINT(PLOTIT):   *------figure out curve coordinates------;
MPRINT(PLOTIT):   if comment = 'frame, tick' then do;
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   size = lsizes[2];
MPRINT(PLOTIT):   halftick = 0.5 * abs(1.5);
MPRINT(PLOTIT):   ticklen = (1 + (1.5 > 0)) * halftick;
MPRINT(PLOTIT):   if index(tickaxes,'h') then ticklen = ticklen / 2;
MPRINT(PLOTIT):   *------adjust for blank cols------;
MPRINT(PLOTIT):   if n(tx) then tx = tx - 2 + 1;
MPRINT(PLOTIT):   *------draw y-axis tick marks------;
MPRINT(PLOTIT):   if nmiss(tx) then do;
MPRINT(PLOTIT):   y = 29 - ty;
MPRINT(PLOTIT):   if bottom <= y <= top then do;
MPRINT(PLOTIT):   if index(tickaxes,'L') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, left';
MPRINT(PLOTIT):   x = left - halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x + ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if index(tickaxes,'R') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, right';
MPRINT(PLOTIT):   x = right + halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x - ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw x-axis tick marks------;
MPRINT(PLOTIT):   else if nmiss(ty) then do;
MPRINT(PLOTIT):   halftick = halftick / vtoh;
MPRINT(PLOTIT):   ticklen = ticklen / vtoh;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   if left <= x <= right then do;
MPRINT(PLOTIT):   if index(tickaxes,'T') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, top';
MPRINT(PLOTIT):   y = top + halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   y = y - ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if index(tickaxes,'B') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, bottom';
MPRINT(PLOTIT):   y = bottom - halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   y = y + ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw vectors------;
MPRINT(PLOTIT):   else if index(substr(comment,1,13),'vector') then do;
MPRINT(PLOTIT):   size = lsizes[3];
MPRINT(PLOTIT):   x = hinter;
MPRINT(PLOTIT):   y = vinter;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   y = ty;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   r = index(comment,'vector');
MPRINT(PLOTIT):   comment = substr(comment,1,r + 7) || 'head,' || substr(comment,r + 7);
MPRINT(PLOTIT):   *------compute slope of vector------;
MPRINT(PLOTIT):   vecslope = tx - hinter;
MPRINT(PLOTIT):   if abs(vecslope) > singular then vecslope = (ty - vinter) / (vecslope / vtoh);
MPRINT(PLOTIT):   else vecslope = .;
MPRINT(PLOTIT):   *------find point on vector vecheadr distance from end------;
MPRINT(PLOTIT):   r = -0.1;
MPRINT(PLOTIT):   fromx = tx;
MPRINT(PLOTIT):   fromy = ty;
MPRINT(PLOTIT):   link linept;
MPRINT(PLOTIT):   fromx = tox;
MPRINT(PLOTIT):   fromy = toy;
MPRINT(PLOTIT):   *------slope of line perpendicular to vector------;
MPRINT(PLOTIT):   if nmiss(vecslope) then vecslope = 0;
MPRINT(PLOTIT):   else if abs(vecslope) > singular then vecslope = -1.0 / vecslope;
MPRINT(PLOTIT):   else vecslope = .;
MPRINT(PLOTIT):   *------draw vector head------;
MPRINT(PLOTIT):   r = -0.025;
MPRINT(PLOTIT):   link linept;
MPRINT(PLOTIT):   x = tox;
MPRINT(PLOTIT):   y = toy;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   r = 0.025;
MPRINT(PLOTIT):   link linept;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   y = ty;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = tox;
MPRINT(PLOTIT):   y = toy;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw circles------;
MPRINT(PLOTIT):   else if index(substr(comment,1,13),'circle') then do;
MPRINT(PLOTIT):   size = lsizes[4];
MPRINT(PLOTIT):   comsplit = 15 + (comment =: 'extra');
MPRINT(PLOTIT):   holdcom = comment;
MPRINT(PLOTIT):   pi = 3.1415926536;
MPRINT(PLOTIT):   do rad = _radius_;
MPRINT(PLOTIT):   radius = max(rad, 0) * hslope;
MPRINT(PLOTIT):   comment = substr(holdcom,1,comsplit - 1) || compress(put(rad,best5.) || ',') || ' ' || compress('(' || put(__xvar,best5.) || ',' || put(__yvar,best5.) || '),') || ' ' || substr(holdcom,comsplit);
MPRINT(PLOTIT):   i = (8.33) / (85);
MPRINT(PLOTIT):   if "in" = 'cm' then i = i / 2.54;
MPRINT(PLOTIT):   inc = 2.0 * pi / ceil(20 + (2.0 * pi * radius * i / .1) ** 0.8);
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   seg0 = (inc * singular) ** 2;
MPRINT(PLOTIT):   do i = -pi + inc to pi by inc;
MPRINT(PLOTIT):   x1 = tx + cos(i - inc) * radius;
MPRINT(PLOTIT):   y1 = ty + sin(i - inc) * radius / vtoh;
MPRINT(PLOTIT):   x2 = tx + cos(i) * radius;
MPRINT(PLOTIT):   y2 = ty + sin(i) * radius / vtoh;
MPRINT(PLOTIT):   link clipline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   linept: *------find a point (tox,toy) r distance from ------;
MPRINT(PLOTIT):   *------(fromx,fromy) on a line with slope vecslope------;
MPRINT(PLOTIT):   *------negative r means toward origin ------;
MPRINT(PLOTIT):   r = r * (85) / (8.33);
MPRINT(PLOTIT):   if "in" = 'cm' then r = r * 2.54;
MPRINT(PLOTIT):   vecdir = -sign(r);
MPRINT(PLOTIT):   if n(vecslope) then do;
MPRINT(PLOTIT):   vecm2 = sqrt(r * r / (1.0 + vecslope * vecslope));
MPRINT(PLOTIT):   if fromx > hinter then vecm2 = -vecm2;
MPRINT(PLOTIT):   tox = vecdir * vecm2 + fromx;
MPRINT(PLOTIT):   toy = vecdir * vecslope * vecm2 / vtoh + fromy;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   tox = fromx;
MPRINT(PLOTIT):   if fromy > vinter then vecdir = -vecdir;
MPRINT(PLOTIT):   toy = vecdir * abs(r) / vtoh + fromy;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   clipline: *------clip a line that crosses an edge------;
MPRINT(PLOTIT):   *------find where line crosses edges------;
MPRINT(PLOTIT):   b = (x2 - x1);
MPRINT(PLOTIT):   bi = (y2 - y1);
MPRINT(PLOTIT):   xtop = .;
MPRINT(PLOTIT):   xbottom = .;
MPRINT(PLOTIT):   yleft = .;
MPRINT(PLOTIT):   yright = .;
MPRINT(PLOTIT):   if abs(b) > singular then do;
MPRINT(PLOTIT):   b = (y2 - y1) / b;
MPRINT(PLOTIT):   a = y1 - b * x1;
MPRINT(PLOTIT):   yleft = b * left + a;
MPRINT(PLOTIT):   yright = b * right + a;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if abs(bi) > singular then do;
MPRINT(PLOTIT):   bi = (x2 - x1) / bi;
MPRINT(PLOTIT):   xtop = (top - y1) * bi + x1;
MPRINT(PLOTIT):   xbottom = (bottom - y1) * bi + x1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------adjust coordinates when line crosses edges------;
MPRINT(PLOTIT):   if x1 < left then do;
MPRINT(PLOTIT):   x1 = left;
MPRINT(PLOTIT):   y1 = yleft;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if x1 > right then do;
MPRINT(PLOTIT):   x1 = right;
MPRINT(PLOTIT):   y1 = yright;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y1 < bottom then do;
MPRINT(PLOTIT):   y1 = bottom;
MPRINT(PLOTIT):   x1 = xbottom;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y1 > top then do;
MPRINT(PLOTIT):   y1 = top;
MPRINT(PLOTIT):   x1 = xtop;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if x2 < left then do;
MPRINT(PLOTIT):   x2 = left;
MPRINT(PLOTIT):   y2 = yleft;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if x2 > right then do;
MPRINT(PLOTIT):   x2 = right;
MPRINT(PLOTIT):   y2 = yright;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y2 < bottom then do;
MPRINT(PLOTIT):   y2 = bottom;
MPRINT(PLOTIT):   x2 = xbottom;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y2 > top then do;
MPRINT(PLOTIT):   y2 = top;
MPRINT(PLOTIT):   x2 = xtop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------see if segment should be output------;
MPRINT(PLOTIT):   if n(x1,x2,y1,y2) = 4 and ((x2 - x1) ** 2 + (y2 - y1) ** 2) > seg0 then do;
MPRINT(PLOTIT):   *------draw line------;
MPRINT(PLOTIT):   if not justdraw then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   justdraw = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else justdraw = 0;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *------delete intermediate data sets------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat2 regdat;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *======================combine annotate data sets======================;
MPRINT(PLOTIT):   data anno;
MPRINT(PLOTIT):   keep color style function comment x y size text position angle n obstype;
MPRINT(PLOTIT):   length color style function $ 8 comment $ 100 x y size 8 text $ 62 position $ 1 angle n 8 obstype $ 12 excolors $ 64;
MPRINT(PLOTIT):   retain left right top bottom contok conoldx conoldy excolors;
MPRINT(PLOTIT):   array lsizes[5] _temporary_ (1 1 1 1 1);
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   left = 8 - 2.00;
MPRINT(PLOTIT):   right = 62 + 2.00;
MPRINT(PLOTIT):   top = 26 + -0.50;
MPRINT(PLOTIT):   bottom = 5 - 0.50;
MPRINT(PLOTIT):   contok = (n(0,0) = 2);
MPRINT(PLOTIT):   excolors = lowcase(symget('excolors'));
MPRINT(PLOTIT):   *------store goptions with annotate data set------;
MPRINT(PLOTIT):   if not 0 then do;
MPRINT(PLOTIT):   comment = symget('gopts');
MPRINT(PLOTIT):   n = 0;
MPRINT(PLOTIT):   function = 'COMMENT';
MPRINT(PLOTIT):   nobs + 1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw border------;
MPRINT(PLOTIT):   if "cx000000" ne ' ' then do;
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   size = lsizes[1];
MPRINT(PLOTIT):   position = '+';
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   y = 32 - 0.001;
MPRINT(PLOTIT):   if 0 and -0.50 < 0 then y = y + -0.50;
MPRINT(PLOTIT):   comment = 'border, box, left top start';
MPRINT(PLOTIT):   x = 0;
MPRINT(PLOTIT):   if 0 and 2.00 < 0 then x = x - 2.00;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   comment = 'border, box, left bottom';
MPRINT(PLOTIT):   y = 0;
MPRINT(PLOTIT):   if 0 and 0.50 < 0 then y = y - 0.50;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'border, box, right bottom';
MPRINT(PLOTIT):   x = 85 - 0.001;
MPRINT(PLOTIT):   if 0 and 2.00 < 0 then x = x + 2.00;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'border, box, right top';
MPRINT(PLOTIT):   y = 32 - 0.001;
MPRINT(PLOTIT):   if 0 and -0.50 < 0 then y = y + -0.50;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'border, box, left top';
MPRINT(PLOTIT):   x = 0;
MPRINT(PLOTIT):   if 0 and 2.00 < 0 then x = x - 2.00;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set anno tempdat1(in=td1 rename=(text=text2));
MPRINT(PLOTIT):   text = text2;
MPRINT(PLOTIT):   if comment = 'text, y label' then x = x - 2.00;
MPRINT(PLOTIT):   if comment = 'text, title' then y = y + -0.50;
MPRINT(PLOTIT):   if comment = 'text, x label' then y = y - 0.50;
MPRINT(PLOTIT):   if comment = 'text, y tick' then x = x - 2.00;
MPRINT(PLOTIT):   if comment = 'text, x tick' then y = y - 0.50;
MPRINT(PLOTIT):   obstype = __otype;
MPRINT(PLOTIT):   len = length(text);
MPRINT(PLOTIT):   *------discard clipped ticks if necessary------;
MPRINT(PLOTIT):   if comment = 'text, y tick' then do;
MPRINT(PLOTIT):   if not (bottom <= y <= top) then return;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if comment = 'text, x tick' then do;
MPRINT(PLOTIT):   d = right + floor(1e-8 + len / 2);
MPRINT(PLOTIT):   if not (left <= x <= d) then return;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------uncategorize symbol locations------;
MPRINT(PLOTIT):   i = (1 or 1) and td1 and (comment =: 'list' or comment =: 'extra') and not (index(substr(comment,1,18),', text, label'));
MPRINT(PLOTIT):   if i or (nmiss(x) and n(__xvar)) then x = 43 + 40 * __xvar;
MPRINT(PLOTIT):   if i or (nmiss(y) and n(__yvar)) then y = 19 + 20 * __yvar;
MPRINT(PLOTIT):   *------all angles are zero, except the y-axis label------;
MPRINT(PLOTIT):   if nmiss(angle) then angle = 0;
MPRINT(PLOTIT):   *------set position if not yet set------;
MPRINT(PLOTIT):   if position = ' ' then position = '+';
MPRINT(PLOTIT):   *------flag contour observations------;
MPRINT(PLOTIT):   contour = (function = 'BAR' and style = 'solid');
MPRINT(PLOTIT):   *------clip if necessary------;
MPRINT(PLOTIT):   if comment =: 'extra, text' or comment =: 'list, text' and text ne ' ' and not contour then do;
MPRINT(PLOTIT):   if y >= top or y <= bottom then return;
MPRINT(PLOTIT):   if position = '<' then d = x - len + 1 - left;
MPRINT(PLOTIT):   else if position = '>' then d = x - left;
MPRINT(PLOTIT):   else d = x - len / 2 - left;
MPRINT(PLOTIT):   d = floor(d);
MPRINT(PLOTIT):   if d <= 0 then do;
MPRINT(PLOTIT):   if (len + d) > 0 then text = substr(text, 1, len + d);
MPRINT(PLOTIT):   else text = ' ';
MPRINT(PLOTIT):   len = length(text);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if position = '<' then d = right - x;
MPRINT(PLOTIT):   else if position = '>' then d = right - (x + len - 1);
MPRINT(PLOTIT):   else d = right - (x + len / 2);
MPRINT(PLOTIT):   d = floor(d);
MPRINT(PLOTIT):   if d <= 0 then do;
MPRINT(PLOTIT):   if (len + d) > 0 then text = substr(text, 1, len + d);
MPRINT(PLOTIT):   else text = ' ';
MPRINT(PLOTIT):   len = length(text);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------adjust justifications------;
MPRINT(PLOTIT):   if position = '<' then x = x + 0.5;
MPRINT(PLOTIT):   else if position = '>' then x = x - 0.5;
MPRINT(PLOTIT):   *------set line, text sizes------;
MPRINT(PLOTIT):   if nmiss(size) then do;
MPRINT(PLOTIT):   if function = 'LABEL' then size = 1;
MPRINT(PLOTIT):   else size = lsizes[1];
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set font------;
MPRINT(PLOTIT):   if style = ' ' and not (comment =: 'list, text' or comment =: 'extra, text') then style = 'none';
MPRINT(PLOTIT):   *------if color is still not set, set it------;
MPRINT(PLOTIT):   if color = ' ' then color = 'black';
MPRINT(PLOTIT):   *------offset (jitter) coincident symbols but not ptr symbols------;
MPRINT(PLOTIT):   length lastpos $ 1;
MPRINT(PLOTIT):   retain oldx oldy 0 offsetn 1 lastpos '+';
MPRINT(PLOTIT):   if comment =: 'list, text, symbol' or comment =: 'extra, text, symbol' then do;
MPRINT(PLOTIT):   if abs(oldx - x) < 1e-8 and abs(oldy - y) < 1e-8 then do;
MPRINT(PLOTIT):   *------usually go center, right, left, but skip right------;
MPRINT(PLOTIT):   *------on second symbol if last label was right ------;
MPRINT(PLOTIT):   offsetn + 1 + (offsetn = 1 and lastpos = '>');
MPRINT(PLOTIT):   x = x + (mod(offsetn,3) - 1) * (0.25);
MPRINT(PLOTIT):   d = mod(floor((offsetn - 1) / 3) + 1, 3) - 1;
MPRINT(PLOTIT):   y = y + d * (0.25) / (2);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   offsetn = 1;
MPRINT(PLOTIT):   oldx = x;
MPRINT(PLOTIT):   oldy = y;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   lastpos = position;
MPRINT(PLOTIT):   *------override colors for monochrome device------;
MPRINT(PLOTIT):   *------exclude observations in excluded color list------;
MPRINT(PLOTIT):   if index(excolors, trim(lowcase(color))) = 0;
MPRINT(PLOTIT):   *------add offsets to center plot ------;
MPRINT(PLOTIT):   *------adjust y so bottom line has coordinate 0.5------;
MPRINT(PLOTIT):   x = x + 10.2;
MPRINT(PLOTIT):   y = y + 0.8 + 0.5;
MPRINT(PLOTIT):   *------set ID variable for sort for functions------;
MPRINT(PLOTIT):   *------create rectangles for contour plots------;
MPRINT(PLOTIT):   if contour and contok then do;
MPRINT(PLOTIT):   text = ' ';
MPRINT(PLOTIT):   epsh = size * 0;
MPRINT(PLOTIT):   epsv = size * 0;
MPRINT(PLOTIT):   x1 = x - epsh / 2;
MPRINT(PLOTIT):   x2 = x1 + epsh;
MPRINT(PLOTIT):   epsh = epsh * 0.1;
MPRINT(PLOTIT):   y1 = y - epsv / 2;
MPRINT(PLOTIT):   y2 = y1 + epsv;
MPRINT(PLOTIT):   epsv = epsv * 0.1;
MPRINT(PLOTIT):   if abs(x1 - conoldx) < epsh and abs(y1 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if abs(x2 - conoldx) < epsh and abs(y1 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if abs(x2 - conoldx) < epsh and abs(y2 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if abs(x1 - conoldx) < epsh and abs(y2 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   nobs + 1;
MPRINT(PLOTIT):   if (abs(0) < epsh and 0 > 0) or (abs(0) < epsv and 0 > 0) then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   function = 'BAR';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   conoldx = x;
MPRINT(PLOTIT):   conoldy = y;
MPRINT(PLOTIT):   *------final adjustments------;
MPRINT(PLOTIT):   if text = '*' and function = 'LABEL' then do;
MPRINT(PLOTIT):   style = ' ';
MPRINT(PLOTIT):   text = 'star';
MPRINT(PLOTIT):   function = 'SYMBOL';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):  ;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):   nobs + 1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   call symput('nobs',compress(put(nobs,5.)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------delete intermediate data sets------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat1 tempdat3 tempdat4 tempdat5 tempdat6(memtype=view);
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------post-processing for functions------;
MPRINT(PLOTIT):   *------post-processing for expand------;
MPRINT(PLOTIT):   *------make sure that the frame is never covered------;
MPRINT(PLOTIT):   data anno;
MPRINT(PLOTIT):   set anno anno(where=(comment =: 'frame, box'));
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *===========set up for and produce the graphical scatter plot==========;
MPRINT(PLOTIT):   goptions nodisplay hpos=85 vpos=32 hsize=8.33in vsize=6.24in cback=white device=GIF;
MPRINT(PLOTIT):  ;
MPRINT(PLOTIT):   *------print final plot request------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length string $ 500;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   put / 'The following code will create the ' @@;
MPRINT(PLOTIT):   if not 1 then put '(empty) ' @@;
MPRINT(PLOTIT):   put 'printer plot ' 'on which ' 'the ' 'graphical ' 'plot is ' 'based:' /;
MPRINT(PLOTIT):   string = "options nonumber ls=65 ps=45;";
MPRINT(PLOTIT):   indent1 = 0;
MPRINT(PLOTIT):   indent2 = 8;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = symget('procopts');
MPRINT(PLOTIT):   indent2 = 10;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = 'plot ' || trim(symget('plotreq')) || ' /';
MPRINT(PLOTIT):   indent1 = 3;
MPRINT(PLOTIT):   indent2 = 8;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('plotopts')) || ' list=1';
MPRINT(PLOTIT):   indent1 = 8;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('pl')) || ';';
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('label')) || ';';
MPRINT(PLOTIT):   indent1 = 3;
MPRINT(PLOTIT):   indent2 = 9;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('adjust2')) || ';';
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = 'label ' || symget('vplotvar') || " = '#' " || symget('hplotvar') || " = '#';";
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   put +3 'run; quit;' /;
MPRINT(PLOTIT):   put 'The plot was created with the following goptions:' /;
MPRINT(PLOTIT):   string = 'goptions ' || symget('gopts') || ';';
MPRINT(PLOTIT):   indent1 = 0;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   put / "The OUT=anno Annotate data set has 111 observations.";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if symget('method') = 'print' then put "The graphics stream file name is C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3440_MIIKYMEDIA_\Prc2\plotit.ps.";
MPRINT(PLOTIT):   if 1 and upcase(getoption("STIMER")) eq "STIMER" and getoption('stimer') eq 'STIMER' then do;
MPRINT(PLOTIT):   time = datetime();
MPRINT(PLOTIT):   cum = put(time - 1923497563.837,6.1);
MPRINT(PLOTIT):   put 'The PLOTIT macro used ' cum "seconds to create OUT=anno.";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   wrap: *------print a line, wrapped and indented------;
MPRINT(PLOTIT):   nlit = index(upcase(string), "'N");
MPRINT(PLOTIT):   if nlit = 0 then nlit = index(upcase(string), '"N');
MPRINT(PLOTIT):   string = left(string);
MPRINT(PLOTIT):   len = length(string);
MPRINT(PLOTIT):   if len < 2 or string = ' ' or string = ';' then return;
MPRINT(PLOTIT):   i = index(string,' '||' ');
MPRINT(PLOTIT):   do while(i < (len - 1) and not nlit);
MPRINT(PLOTIT):   string = substr(string,1,i - 1) || substr(string,i + 1);
MPRINT(PLOTIT):   len = length(string);
MPRINT(PLOTIT):   i = index(string,' '||' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   i = index(string,' ;');
MPRINT(PLOTIT):   if i then string = substr(string,1,i - 1) || substr(string,i + 1);
MPRINT(PLOTIT):   len = 1;
MPRINT(PLOTIT):   end = 0;
MPRINT(PLOTIT):   indent = indent1 + 1;
MPRINT(PLOTIT):   do while(len > end);
MPRINT(PLOTIT):   string = left(substr(string,end + 1));
MPRINT(PLOTIT):   len = length(string);
MPRINT(PLOTIT):   nlit = index(upcase(string), "'N");
MPRINT(PLOTIT):   if nlit = 0 then nlit = index(upcase(string), '"N');
MPRINT(PLOTIT):   maxlen = 256 - indent;
MPRINT(PLOTIT):   if len > maxlen and not nlit then do;
MPRINT(PLOTIT):   end = maxlen;
MPRINT(PLOTIT):   do while(end > 0 and not (substr(string,end,1) in (' ' ',')));
MPRINT(PLOTIT):   end = end - 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if len > maxlen then do;
MPRINT(PLOTIT):   end = maxlen;
MPRINT(PLOTIT):   if nlit then end = nlit + 2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else end = len;
MPRINT(PLOTIT):   str = substr(string,1,end);
MPRINT(PLOTIT):   put @indent str;
MPRINT(PLOTIT):   indent = indent2 + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
 
The following code will create the printer plot on which the graphical plot is based:
 
options nonumber ls=65 ps=45;
proc plot nolegend formchar='|----|+|---' data=preproc vtoh=2;
   plot Dim2 * Dim1 $ _idvar_ = _symbol_ /
        haxis=by 0.2 vaxis=by 0.2 box list=1
        placement=((h=2 -2 : s=right left) (v=1 -1 * h=0 -1 to -5 by alt));
   label Dim2 = 'Dimension 2' Dim1 = 'Dimension 1';
   label Dim2 = '#' Dim1 = '#';
   run; quit;
 
The plot was created with the following goptions:
 
goptions nodisplay hpos=85 vpos=32 hsize=8.33in vsize=6.24in cback=white device=GIF;
 
The OUT=anno Annotate data set has 111 observations.
The PLOTIT macro used 0.6 seconds to create OUT=anno.
MPRINT(PLOTIT):   *------produce the plot------;
MPRINT(PLOTIT):   proc ganno annotate=anno gout=WORK.Clus3 name="DISTANCE";
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   options LABEL;
Sistema SAS
 
MPRINT(PLOTIT):   *------restore options, quit------;
MPRINT(PLOTIT):   options NOTES missing=".";
MPRINT(EM_DIAGRAM):  ;
30937      goptions display;
MPRINT(EM_DIAGRAM):   goptions display;
30938      title;
MPRINT(EM_DIAGRAM):   title;
30939      filename gsasfile
30939    ! "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\GRAP
30939    ! H\Distance.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\GRAPH\Distance.
gif";
30940      goptions reset=all device=PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions reset=all device=PNG display gaccess= gsasfile gsfmode= replace
cback= white;
30941      proc greplay igout=WORK.Clus3 nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.Clus3 nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
30942      replay DISTANCE;
MPRINT(EM_DIAGRAM):   replay DISTANCE;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this
      session.
NOTE: 28612 bytes written to
      C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus3\GRAPH\Dist
      ance.gif.
30943      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY ha utilizado (Tiempo de proceso total):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
30944      goptions reset=all;
MPRINT(EM_DIAGRAM):   goptions reset=all;
30945      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
30946      proc datasets lib=EMWS3 nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS3 nolist;
30947      modify Clus3_DISTANCE;
MPRINT(EM_DIAGRAM):   modify Clus3_DISTANCE;
30948      rename _idvar_=_SEGMENT_;
MPRINT(EM_DIAGRAM):   rename _idvar_=_SEGMENT_;
NOTE: Renaming variable _idvar_ to _SEGMENT_.
MPRINT(EM_DIAGRAM):   run;
30949      run;
 
NOTE: MODIFY was successful for EMWS3.CLUS3_DISTANCE.DATA.
30950      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
Sistema SAS
 
 
 
30951      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
30952      * Clus3: creando conjunto de datos para el informe Input de la media;
MPRINT(EM_DIAGRAM):   * Clus3: creando conjunto de datos para el informe Input de la media;
30953      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30954      data temp(drop=_type_ over_all);
MPRINT(EM_DIAGRAM):   data temp(drop=_type_ over_all);
30955      set EMWS3.Clus3_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus3_OUTSTAT;
30956      where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
MPRINT(EM_DIAGRAM):   where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
30957      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS3_OUTSTAT.
      WHERE _type_ in ('CLUS_MEAN', 'DMDB_MEAN');
NOTE: The data set WORK.TEMP has 21 observations and 242 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30958      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
30959      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
30960      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 21 observations and 242 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30961      proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
MPRINT(EM_DIAGRAM):   proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
30962      var ACCESS--YOU;
MPRINT(EM_DIAGRAM):   var ACCESS--YOU;
30963      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.STDTEMP has 21 observations and 242 variables.
NOTE: The data set WORK.STAT has 10 observations and 242 variables.
NOTE: PROCEDURE STDIZE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30964      proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
MPRINT(EM_DIAGRAM):   proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN
COL4=MAX));
30965      where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
Sistema SAS
 
MPRINT(EM_DIAGRAM):   where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
30966      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STAT.
      WHERE _type_ in ('LOCATION', 'P0', 'P100', 'SCALE');
NOTE: The data set WORK.TSTAT has 241 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30967      data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
MPRINT(EM_DIAGRAM):   data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
30968      set tstat;
MPRINT(EM_DIAGRAM):   set tstat;
30969      if std ^in (0, .) then do;
MPRINT(EM_DIAGRAM):   if std ^in (0, .) then do;
30970      stdmin = abs((min-mean)/std);
MPRINT(EM_DIAGRAM):   stdmin = abs((min-mean)/std);
30971      stdmax = abs((max-mean)/std);
MPRINT(EM_DIAGRAM):   stdmax = abs((max-mean)/std);
30972      end;
MPRINT(EM_DIAGRAM):   end;
30973      if mean ^in(0, .) then cv = std/mean;
MPRINT(EM_DIAGRAM):   if mean ^in(0, .) then cv = std/mean;
30974      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 241 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30975      proc sort data=tstat;
MPRINT(EM_DIAGRAM):   proc sort data=tstat;
30976      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30977      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 241 observations and 4 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30978      proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
MPRINT(EM_DIAGRAM):   proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL
COL1=MEAN));
30979      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
30980      run;
MPRINT(EM_DIAGRAM):   run;
 
Sistema SAS
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 21 observations read from the data set WORK.STDTEMP.
NOTE: The data set WORK.TSTDTEMP has 5061 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30981      proc sort data=tstdtemp;
MPRINT(EM_DIAGRAM):   proc sort data=tstdtemp;
30982      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30983      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5061 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set WORK.TSTDTEMP has 5061 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30984      data tstdtemp;
MPRINT(EM_DIAGRAM):   data tstdtemp;
30985      merge tstdtemp tstat;
MPRINT(EM_DIAGRAM):   merge tstdtemp tstat;
30986      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30987      STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
MPRINT(EM_DIAGRAM):   STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
30988      drop stdmin stdmax mean;
MPRINT(EM_DIAGRAM):   drop stdmin stdmax mean;
30989      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5061 observations read from the data set WORK.TSTDTEMP.
NOTE: There were 241 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTDTEMP has 5061 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30990      proc transpose data=EMWS3.Clus3_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME
30990    ! VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS3.Clus3_OUTVAR out=tempVar(drop=_LABEL_ rename=(
_NAME_=NAME VARIABLE=INPUT));
30991      var ACCESS--YOU;
MPRINT(EM_DIAGRAM):   var ACCESS--YOU;
30992      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
30993      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
30994      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set EMWS3.CLUS3_OUTVAR.
Sistema SAS
 
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 241 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30995      proc sort data=tempVar;
MPRINT(EM_DIAGRAM):   proc sort data=tempVar;
30996      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30997      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 241 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30998      data EMWS3.Clus3_INPUTMEAN(rename=(NAME=VARIABLE));
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_INPUTMEAN(rename=(NAME=VARIABLE));
30999      Length _SEGMENT_CHAR_ $7;
MPRINT(EM_DIAGRAM):   Length _SEGMENT_CHAR_ $7;
31000      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))"
31000    ! _SEGMENT_CHAR_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentId_vlabel,    NOQUOTE))"
31000    ! NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))" INPUT =
31001         "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel,        NOQUOTE))" LABEL =
31001    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_label_vlabel,        NOQUOTE))" CV =
31001    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,           NOQUOTE))" STDMEAN =
31002         "%sysfunc(sasmsg(sashelp.dmine, rpt_normmean_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Nombre del segmento" _SEGMENT_CHAR_ = "Id de segmento"
NAME = "Variable" INPUT = "Input" LABEL = "Etiqueta" CV = "Coeficiente de variación" STDMEAN =
"Media normalizada";
31003      merge tempvar tstdtemp;
MPRINT(EM_DIAGRAM):   merge tempvar tstdtemp;
31004      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31005      if LABEL='' then LABEL=NAME;
MPRINT(EM_DIAGRAM):   if LABEL='' then LABEL=NAME;
31006      _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
MPRINT(EM_DIAGRAM):   _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
31007      if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
31008      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.TEMPVAR.
NOTE: There were 5061 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set EMWS3.CLUS3_INPUTMEAN has 5061 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
31009      proc sort data=EMWS3.Clus3_INPUTMEAN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus3_INPUTMEAN;
Sistema SAS
 
31010      by descending cv;
MPRINT(EM_DIAGRAM):   by descending cv;
31011      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5061 observations read from the data set EMWS3.CLUS3_INPUTMEAN.
NOTE: The data set EMWS3.CLUS3_INPUTMEAN has 5061 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31012      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
31013      * Clus3: determinando las variables importantes;
MPRINT(EM_DIAGRAM):   * Clus3: determinando las variables importantes;
31014      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
31015      %let _nobs = 0;
31016      data keepvars(rename=(NAME=INPUT));
MPRINT(EM_DIAGRAM):    data keepvars(rename=(NAME=INPUT));
31017      set EMWS3.Clus3_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus3_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
31018      if eof then call symput('_nobs', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_nobs', strip(put(_N_, best.)));
31019      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS3.CLUS3_OUTIMPORT.
      WHERE IMPORTANCE>0.5;
NOTE: The data set WORK.KEEPVARS has 18 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31020      proc transpose data=EMWS3.Clus3_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME
31020    ! VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS3.Clus3_OUTVAR out=tempVar(drop=_LABEL_ rename=(
_NAME_=NAME VARIABLE=INPUT));
31021      var ACCESS--YOU;
MPRINT(EM_DIAGRAM):   var ACCESS--YOU;
31022      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
31023      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
31024      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set EMWS3.CLUS3_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 241 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
Sistema SAS
 
 
31025      proc sort data=keepvars;
MPRINT(EM_DIAGRAM):   proc sort data=keepvars;
31026      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
31027      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.KEEPVARS has 18 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31028      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
31029      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
31030      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 241 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31031      data vars;
MPRINT(EM_DIAGRAM):   data vars;
31032      merge tempvar keepvars(in=b);
MPRINT(EM_DIAGRAM):   merge tempvar keepvars(in=b);
31033      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
31034      if b then output;
MPRINT(EM_DIAGRAM):   if b then output;
31035      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUT by input data sets. This might
         cause unexpected results.
NOTE: There were 241 observations read from the data set WORK.TEMPVAR.
NOTE: There were 18 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.VARS has 18 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31036      proc sort data=vars;
MPRINT(EM_DIAGRAM):   proc sort data=vars;
31037      by descending importance;
MPRINT(EM_DIAGRAM):   by descending importance;
31038      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.VARS.
Sistema SAS
 
NOTE: The data set WORK.VARS has 18 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31039      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
31040      set vars;
MPRINT(EM_DIAGRAM):   set vars;
31041      if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
31042      else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
MPRINT(EM_DIAGRAM):   else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
31043      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.VARS.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * mergeVarMeansandClusLabel;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31044      *------------------------------------------------------------*;
31045      * mergeVarMeansandClusLabel;
31046      *------------------------------------------------------------*;
31047      data temp(keep=_SEGMENT_ &CLUS_PROFVARS);
MPRINT(EM_DIAGRAM):   data temp(keep=_SEGMENT_ SERDAR ARMENIAN ARMENIA TURKISH ARGIC CENTER GORDON
BANK GEB PITT PITTSBURGH UNIV ENGIN ELECTR ANSWER BRIAN OPER TYPE);
31048      length _SEGMENT_ &CLUS_PROFVARS 8;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ SERDAR ARMENIAN ARMENIA TURKISH ARGIC CENTER GORDON BANK
GEB PITT PITTSBURGH UNIV ENGIN ELECTR ANSWER BRIAN OPER TYPE 8;
31049      set EMWS3.Clus3_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus3_OUTSTAT;
31050      where _type_ ='CLUS_MEAN';
MPRINT(EM_DIAGRAM):   where _type_ ='CLUS_MEAN';
31051      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS3.CLUS3_OUTSTAT.
      WHERE _type_='CLUS_MEAN';
NOTE: The data set WORK.TEMP has 20 observations and 19 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31052      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
31053      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
31054      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.TEMP.
Sistema SAS
 
NOTE: The data set WORK.TEMP has 20 observations and 19 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31055      data EMWS3.Clus3_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus3_LABEL;
31056      merge EMWS3.Clus3_LABEL(keep=_SEGMENT_ LABEL) temp;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus3_LABEL(keep=_SEGMENT_ LABEL) temp;
31057      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
31058      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS3.CLUS3_LABEL.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS3.CLUS3_LABEL has 20 observations and 20 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
