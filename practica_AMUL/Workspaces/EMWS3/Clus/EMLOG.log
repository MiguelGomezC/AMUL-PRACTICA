*------------------------------------------------------------*
Usuario:                Admin
Fecha:                23/11/20
Hora:                20H02
Sitio:                70161230
Plataforma:            X64_10HOME
Versión de mantenimiento: 9.04.01M6P111518
Versión de EM:          15.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "23/11/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20H02" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de entrenamiento";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de entrenamiento
Fecha:                23/11/20
Hora:                20H02
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O066_5_B "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O066_5_B new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "23/11/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20H02" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Sitio:                70161230";
MPRINT(EM_DIAGRAM):   put "Plataforma:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "Versión de mantenimiento: 9.04.01M6P111518";
MPRINT(EM_DIAGRAM):   put "Versión de EM:          15.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "23/11/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20H02" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de entrenamiento";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de puntuación";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida del informe";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
18276      proc freq data=EMWS3.Clus_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS3.Clus_VariableSet noprint;
18277      table ROLE*LEVEL/out=WORK.ClusMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ClusMETA;
18278      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1205 observations read from the data set EMWS3.CLUS_VARIABLESET.
NOTE: The data set WORK.CLUSMETA has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
18279      proc print data=WORK.ClusMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ClusMETA label noobs;
18280      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
18281      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Rol" LEVEL = "Nivel de medida" COUNT = "Número de ocurrencias";
18282      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
18283      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Resumen de variables";
MPRINT(EM_DIAGRAM):   run;
18284      run;
 
NOTE: There were 2 observations read from the data set WORK.CLUSMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
18285      title10;
MPRINT(EM_DIAGRAM):   title10;
18286      data WORK.M1Q778XN;
MPRINT(EM_DIAGRAM):    data WORK.M1Q778XN;
18287      set WORK.M1Q778XN;
MPRINT(EM_DIAGRAM):   set WORK.M1Q778XN;
18288      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
18289      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1204 observations read from the data set WORK.M1Q778XN.
NOTE: The data set WORK.M1Q778XN has 1204 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: preparando metadatos para el entrenamiento;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1Q778XN;
MPRINT(EM_DIAGRAM):   set WORK.M1Q778XN;
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
18298      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
18299      * Clus: entrenamiento;
MPRINT(EM_DIAGRAM):   * Clus: entrenamiento;
18300      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18301      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18302      * Create DMDB macros;
MPRINT(EM_DIAGRAM):   * Create DMDB macros;
18303      %let _sns = %sysfunc(getoption(SOURCE));
18304      options nosource;
MPRINT(EM_DIAGRAM):   options nosource;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   options SOURCE;
MPRINT(EM_DIAGRAM):   * End DMDB macros generation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18419      * End DMDB macros generation;
18420      *------------------------------------------------------------*;
18421      *------------------------------------------------------------*;
18422      * Clus: Create DMDB;
18423      *------------------------------------------------------------*;
18424      proc dmdb batch data=EMWS3.Ids_DATA
18425      dmdbcat=WORK.Clus_DMDB
18426      maxlevel = 513
18427      out=WORK.Clus_DMDB
18428      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS3.Ids_DATA dmdbcat=WORK.Clus_DMDB maxlevel = 513 out=WORK.Clus_DMDB ;
MPRINT(EM_DIAGRAM):   var
18429      var %DMDBVar;
MPRINT(DMDBVAR):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW
ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN ATHENA ATTACH ATTACK
ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL
CHARACT CHARG CHASTITI CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN COLOR
COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT
CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD
DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG
DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI
FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND
FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD HUMAN HUNTSVIL ICON IDEA
IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB
LABEL LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG LONGER LOOK LOOP LOST
LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD
METHODOLOG MICHAEL MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR
NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM OMRAN OPEN
OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE
PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID
PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST
RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH
RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC
SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK
SPOT STAI STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS SURGERI
SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK
THOMA THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN
UNDERSTAND UNIT UNIV UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(EM_DIAGRAM):  ;
18430      run;
MPRINT(EM_DIAGRAM):   run;
 
Note: Large memory request: 606816
NOTE: Records processed = 3000   Memory used = 511K.
NOTE: Vista EMWS3.IDS_DATA.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.17 seconds
      cpu time            0.12 seconds
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: The data set WORK.CLUS_DMDB has 3000 observations and 1204 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.18 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
18431      quit;
18432      *--- end code ---*;
 
Note: Large memory request: 606816
18433      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
18434      * Clus: Inputs intervalo Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Inputs intervalo Macro ;
18435      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
18436      %macro DMVQINTERVAL;
18437          ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT
18438         ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI
18439         ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW
18440         ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI
18441         APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA
18442         ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN
18443         ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
18444         BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER
18445         BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON
18446         BOUGHT BOULDER BOX BRAD BRAIN BRAND BREAK BRIAN BRING BRITISH BROWN BTW BUFFER
18447         BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN
18448         CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
18449         CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI
18450         CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI
18451         CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR
18452         CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN
18453         COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
18454         COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET
18455         CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT
18456         CONTACT CONTENT CONTEXT CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP
18457         CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN
18458         CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL
18459         DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT
18460         DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL
18461         DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO
18462         DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS
18463         DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON
18464         DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
18465         EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
18466         ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP
18467         ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT
18468         EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE
18469         FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
18470         FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU
18471         FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE
18472         FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND FULL FUNCTION FUTUR GAIN GAME
18473         GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI
18474         GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG
18475         GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
18476         HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT
18477         HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER
18478         HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD
18479         HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT
18480         IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT
18481         INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC
18482         INTERGRAPH INTERN INTERNET INTERVIEW INVENT INVOLV IRAN IRVIN ISLAM ISLAND ISN
18483         ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH
18484         JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD
18485         KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL
18486         LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV
18487         LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT
18488         LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
18489         LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN
18490         MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR
18491         MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON
18492         MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL MIDDL MIGRAIN
18493         MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL
18494         MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG
18495         MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI
18496         NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW
18497         NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER
18498         OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
18499         OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL
18500         OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN
18501         PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD
18502         PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL
18503         PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT
18504         POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER
18505         POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU
18506         PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM
18507         PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC
18508         PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST RADAR
18509         RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
18510         RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL
18511         RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR
18512         RESEARCH RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN
18513         REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST
18514         RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE
18515         SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU
18516         SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT
18517         SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME
18518         SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT SHOULDN SHOW SICK SIDE SIGN
18519         SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN
18520         SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC
18521         SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI
18522         STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN
18523         STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB
18524         SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS
18525         SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL
18526         TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL
18527         TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE
18528         THEORI THERAPI THERE THEY THINK THOMA THOUGHT THREAD THROW THU TIM TIME TIMER
18529         TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE
18530         TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
18531         TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV
18532         UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL
18533         VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG
18534         WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
18535         WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON
18536         WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
18537         XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG
18538         ZIONISM ZIONIST ZUMA
18539      %mend DMVQINTERVAL;
18540      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18541      * Clus: ejecutar procedimiento DMVQ;
MPRINT(EM_DIAGRAM):   * Clus: ejecutar procedimiento DMVQ;
18542      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18543      title;
MPRINT(EM_DIAGRAM):   title;
18544      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
18545      proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=RANGE nominal=GLM ordinal=RANK
18546      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=RANGE nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS_DMDB.DATA has 1204 variable(s).
Note: Large memory request: 606816
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
18547      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI
ANDREW ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN ATHENA ATTACH ATTACK
ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL
CHARACT CHARG CHASTITI CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN COLOR
COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT
CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD
DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG
DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI
FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND
FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD HUMAN HUNTSVIL ICON IDEA
IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB
LABEL LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG LONGER LOOK LOOP LOST
LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD
METHODOLOG MICHAEL MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR
NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM OMRAN OPEN
OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE
PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID
PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST
RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH
RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC
SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK
SPOT STAI STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS SURGERI
SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK
THOMA THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN
UNDERSTAND UNIT UNIV UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 1204 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
18548      VQ maxc = 4 clusname=_SEGMENT_ CLUSLABEL="Id de segmento" DISTLABEL="Distancia";
MPRINT(EM_DIAGRAM):   VQ maxc = 4 clusname=_SEGMENT_ CLUSLABEL="Id de segmento" DISTLABEL="Distancia";
NOTE: A maximum of 4 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
18549      MAKE outvar=EMWS3.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS3.Clus_OUTVAR;
 
NOTE: 1204 input variable(s).
NOTE: Number of cases=3000
NOTE: Sum of frequencies=3000
NOTE: Sum of weights=3000
NOTE: VARDEF=DF
NOTE: Maximum number of categories=0
NOTE: The total number of variables is 1204 with dimensionality 1204.
NOTE: 1204 variables will be used for clustering.
NOTE: Open output data set EMWS3.CLUS_OUTVAR.DATA with 1205 variables.
NOTE: The data set EMWS3.CLUS_OUTVAR has 4 observations and 1205 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
18550      INITIAL radius=0
18551      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 ;
NOTE: 4 semillas seleccionadas del conjunto de datos WORK.CLUS_DMDB.DATA usando el algoritmo SEPARATE.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
18552      TRAIN tech=FORGY
18553      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
NOTE: F-Convergence criterion is satisfied.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
18554      SAVE outstat=EMWS3.Clus_OUTSTAT outmean=EMWS3.Clus_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=EMWS3.Clus_OUTSTAT outmean=EMWS3.Clus_OUTMEAN;
NOTE: The data set EMWS3.CLUS_OUTSTAT has 40 observations and 1207 variables.
NOTE: The data set EMWS3.CLUS_OUTMEAN has 4 observations and 1213 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
18555      code file="C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\DMVQSCORECODE.sas"
18556      group=Clus
18557      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\DMVQSCORECODE.sas" group=Clus ;
NOTE: External file C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
18558      run;
MPRINT(EM_DIAGRAM):   run;
 
18559      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 3000 observations read from the data set WORK.CLUS_DMDB.
NOTE: PROCEDURE DMVQ ha utilizado (Tiempo de proceso total):
      real time           0.81 seconds
      cpu time            0.70 seconds
 
 
18560      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
WARNING: Libref _SPDSLIB is not assigned.
18561      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
18562      * Clus: Cluster Label;
MPRINT(EM_DIAGRAM):   * Clus: Cluster Label;
18563      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18564      data EMWS3.Clus_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_LABEL;
18565      length _SEGMENT_ 8 Label $80;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ 8 Label $80;
18566      format _SEGMENT_ 4.;
MPRINT(EM_DIAGRAM):   format _SEGMENT_ 4.;
18567      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Nombre del segmento";
18568      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentLabel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Etiqueta del segmento";
18569      _SEGMENT_= 1;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 1;
18570      Label='Cluster1';
MPRINT(EM_DIAGRAM):   Label='Cluster1';
18571      output;
MPRINT(EM_DIAGRAM):   output;
18572      _SEGMENT_= 2;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 2;
18573      Label='Cluster2';
MPRINT(EM_DIAGRAM):   Label='Cluster2';
18574      output;
MPRINT(EM_DIAGRAM):   output;
18575      _SEGMENT_= 3;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 3;
18576      Label='Cluster3';
MPRINT(EM_DIAGRAM):   Label='Cluster3';
18577      output;
MPRINT(EM_DIAGRAM):   output;
18578      _SEGMENT_= 4;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 4;
18579      Label='Cluster4';
MPRINT(EM_DIAGRAM):   Label='Cluster4';
18580      output;
MPRINT(EM_DIAGRAM):   output;
18581      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS3.CLUS_LABEL has 4 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "23/11/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20H02" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de puntuación";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de puntuación
Fecha:                23/11/20
Hora:                20H02
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1MDUTS7 "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1MDUTS7 new;
MPRINT(EM_DIAGRAM):   run;
18683      proc transpose data=EMWS3.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS3.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
18684      var ABSOLUT--ZUMA;
MPRINT(EM_DIAGRAM):   var ABSOLUT--ZUMA;
18685      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
18686      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS3.CLUS_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
18687      proc sort data=WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_OUTVAR;
18688      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
18689      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18690      proc sort data=EMWS3.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
18691      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
18692      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1205 observations read from the data set EMWS3.CLUS_VARIABLESET.
NOTE: The data set WORK.CLUS_SORTEDVARS has 1205 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
18693      data WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus_OUTVAR;
18694      merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
18695      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
18696      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
18697      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS_OUTVAR.
NOTE: There were 1205 observations read from the data set WORK.CLUS_SORTEDVARS.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
18698      filename emflow "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18699      *------------------------------------------------------------*;
18700      * Clus: Scoring DATA data;
18701      *------------------------------------------------------------*;
18702      data EMWS3.Clus_TRAIN
18703      / view=EMWS3.Clus_TRAIN
18704      ;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_TRAIN / view=EMWS3.Clus_TRAIN ;
18705      set EMWS3.Ids_DATA
18706      ;
MPRINT(EM_DIAGRAM):   set EMWS3.Ids_DATA ;
18707      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize ABSOLUT ;
MPRINT(EM_DIAGRAM):   drop T_ABSOLUT ;
MPRINT(EM_DIAGRAM):   if missing( ABSOLUT ) then T_ABSOLUT = .;
MPRINT(EM_DIAGRAM):   else T_ABSOLUT = (ABSOLUT - 0) * 7.36746200826675;
MPRINT(EM_DIAGRAM):   *** Standardize ACCELER ;
MPRINT(EM_DIAGRAM):   drop T_ACCELER ;
MPRINT(EM_DIAGRAM):   if missing( ACCELER ) then T_ACCELER = .;
MPRINT(EM_DIAGRAM):   else T_ACCELER = (ACCELER - 0) * 2.18036020098035;
MPRINT(EM_DIAGRAM):   *** Standardize ACCEPT ;
MPRINT(EM_DIAGRAM):   drop T_ACCEPT ;
MPRINT(EM_DIAGRAM):   if missing( ACCEPT ) then T_ACCEPT = .;
MPRINT(EM_DIAGRAM):   else T_ACCEPT = (ACCEPT - 0) * 7.28652943485197;
MPRINT(EM_DIAGRAM):   *** Standardize ACCESS ;
MPRINT(EM_DIAGRAM):   drop T_ACCESS ;
MPRINT(EM_DIAGRAM):   if missing( ACCESS ) then T_ACCESS = .;
MPRINT(EM_DIAGRAM):   else T_ACCESS = (ACCESS - 0) * 4.09763448766634;
MPRINT(EM_DIAGRAM):   *** Standardize ACCOUNT ;
MPRINT(EM_DIAGRAM):   drop T_ACCOUNT ;
MPRINT(EM_DIAGRAM):   if missing( ACCOUNT ) then T_ACCOUNT = .;
MPRINT(EM_DIAGRAM):   else T_ACCOUNT = (ACCOUNT - 0) * 7.54143334651851;
MPRINT(EM_DIAGRAM):   *** Standardize ACCUR ;
MPRINT(EM_DIAGRAM):   drop T_ACCUR ;
MPRINT(EM_DIAGRAM):   if missing( ACCUR ) then T_ACCUR = .;
MPRINT(EM_DIAGRAM):   else T_ACCUR = (ACCUR - 0) * 5.5013280447714;
MPRINT(EM_DIAGRAM):   *** Standardize ACID ;
MPRINT(EM_DIAGRAM):   drop T_ACID ;
MPRINT(EM_DIAGRAM):   if missing( ACID ) then T_ACID = .;
MPRINT(EM_DIAGRAM):   else T_ACID = (ACID - 0) * 2.71279946770263;
MPRINT(EM_DIAGRAM):   *** Standardize ACTION ;
MPRINT(EM_DIAGRAM):   drop T_ACTION ;
MPRINT(EM_DIAGRAM):   if missing( ACTION ) then T_ACTION = .;
MPRINT(EM_DIAGRAM):   else T_ACTION = (ACTION - 0) * 7.37639414849267;
MPRINT(EM_DIAGRAM):   *** Standardize ACTIV ;
MPRINT(EM_DIAGRAM):   drop T_ACTIV ;
MPRINT(EM_DIAGRAM):   if missing( ACTIV ) then T_ACTIV = .;
MPRINT(EM_DIAGRAM):   else T_ACTIV = (ACTIV - 0) * 5.41178333760056;
MPRINT(EM_DIAGRAM):   *** Standardize ADAM ;
MPRINT(EM_DIAGRAM):   drop T_ADAM ;
MPRINT(EM_DIAGRAM):   if missing( ADAM ) then T_ADAM = .;
MPRINT(EM_DIAGRAM):   else T_ADAM = (ADAM - 0) * 2.42841107703564;
MPRINT(EM_DIAGRAM):   *** Standardize ADCOM ;
MPRINT(EM_DIAGRAM):   drop T_ADCOM ;
MPRINT(EM_DIAGRAM):   if missing( ADCOM ) then T_ADCOM = .;
MPRINT(EM_DIAGRAM):   else T_ADCOM = (ADCOM - 0) * 2.09504205698695;
MPRINT(EM_DIAGRAM):   *** Standardize ADDIT ;
MPRINT(EM_DIAGRAM):   drop T_ADDIT ;
MPRINT(EM_DIAGRAM):   if missing( ADDIT ) then T_ADDIT = .;
MPRINT(EM_DIAGRAM):   else T_ADDIT = (ADDIT - 0) * 5.97355746544366;
MPRINT(EM_DIAGRAM):   *** Standardize ADDRESS ;
MPRINT(EM_DIAGRAM):   drop T_ADDRESS ;
MPRINT(EM_DIAGRAM):   if missing( ADDRESS ) then T_ADDRESS = .;
MPRINT(EM_DIAGRAM):   else T_ADDRESS = (ADDRESS - 0) * 2.42063863061201;
MPRINT(EM_DIAGRAM):   *** Standardize ADMIN ;
MPRINT(EM_DIAGRAM):   drop T_ADMIN ;
MPRINT(EM_DIAGRAM):   if missing( ADMIN ) then T_ADMIN = .;
MPRINT(EM_DIAGRAM):   else T_ADMIN = (ADMIN - 0) * 5.9527989552591;
MPRINT(EM_DIAGRAM):   *** Standardize ADMINISTR ;
MPRINT(EM_DIAGRAM):   drop T_ADMINISTR ;
MPRINT(EM_DIAGRAM):   if missing( ADMINISTR ) then T_ADMINISTR = .;
MPRINT(EM_DIAGRAM):   else T_ADMINISTR = (ADMINISTR - 0) * 4.97067947647689;
MPRINT(EM_DIAGRAM):   *** Standardize ADRIAN ;
MPRINT(EM_DIAGRAM):   drop T_ADRIAN ;
MPRINT(EM_DIAGRAM):   if missing( ADRIAN ) then T_ADRIAN = .;
MPRINT(EM_DIAGRAM):   else T_ADRIAN = (ADRIAN - 0) * 1.11787836624041;
MPRINT(EM_DIAGRAM):   *** Standardize ADVANC ;
MPRINT(EM_DIAGRAM):   drop T_ADVANC ;
MPRINT(EM_DIAGRAM):   if missing( ADVANC ) then T_ADVANC = .;
MPRINT(EM_DIAGRAM):   else T_ADVANC = (ADVANC - 0) * 6.14512436517837;
MPRINT(EM_DIAGRAM):   *** Standardize ADVIC ;
MPRINT(EM_DIAGRAM):   drop T_ADVIC ;
MPRINT(EM_DIAGRAM):   if missing( ADVIC ) then T_ADVIC = .;
MPRINT(EM_DIAGRAM):   else T_ADVIC = (ADVIC - 0) * 6.30195906862952;
MPRINT(EM_DIAGRAM):   *** Standardize AFFECT ;
MPRINT(EM_DIAGRAM):   drop T_AFFECT ;
MPRINT(EM_DIAGRAM):   if missing( AFFECT ) then T_AFFECT = .;
MPRINT(EM_DIAGRAM):   else T_AFFECT = (AFFECT - 0) * 7.6983694350636;
MPRINT(EM_DIAGRAM):   *** Standardize AGRE ;
MPRINT(EM_DIAGRAM):   drop T_AGRE ;
MPRINT(EM_DIAGRAM):   if missing( AGRE ) then T_AGRE = .;
MPRINT(EM_DIAGRAM):   else T_AGRE = (AGRE - 0) * 7.64334098899129;
MPRINT(EM_DIAGRAM):   *** Standardize AID ;
MPRINT(EM_DIAGRAM):   drop T_AID ;
MPRINT(EM_DIAGRAM):   if missing( AID ) then T_AID = .;
MPRINT(EM_DIAGRAM):   else T_AID = (AID - 0) * 1.97281274204166;
MPRINT(EM_DIAGRAM):   *** Standardize ALAN ;
MPRINT(EM_DIAGRAM):   drop T_ALAN ;
MPRINT(EM_DIAGRAM):   if missing( ALAN ) then T_ALAN = .;
MPRINT(EM_DIAGRAM):   else T_ALAN = (ALAN - 0) * 2.7506640223857;
MPRINT(EM_DIAGRAM):   *** Standardize ALLERG ;
MPRINT(EM_DIAGRAM):   drop T_ALLERG ;
MPRINT(EM_DIAGRAM):   if missing( ALLERG ) then T_ALLERG = .;
MPRINT(EM_DIAGRAM):   else T_ALLERG = (ALLERG - 0) * 3.27843008333793;
MPRINT(EM_DIAGRAM):   *** Standardize ALLERGI ;
MPRINT(EM_DIAGRAM):   drop T_ALLERGI ;
MPRINT(EM_DIAGRAM):   if missing( ALLERGI ) then T_ALLERGI = .;
MPRINT(EM_DIAGRAM):   else T_ALLERGI = (ALLERGI - 0) * 3.00986022990186;
MPRINT(EM_DIAGRAM):   *** Standardize ALLOC ;
MPRINT(EM_DIAGRAM):   drop T_ALLOC ;
MPRINT(EM_DIAGRAM):   if missing( ALLOC ) then T_ALLOC = .;
MPRINT(EM_DIAGRAM):   else T_ALLOC = (ALLOC - 0) * 2.53283429626748;
MPRINT(EM_DIAGRAM):   *** Standardize ALLOW ;
MPRINT(EM_DIAGRAM):   drop T_ALLOW ;
MPRINT(EM_DIAGRAM):   if missing( ALLOW ) then T_ALLOW = .;
MPRINT(EM_DIAGRAM):   else T_ALLOW = (ALLOW - 0) * 13.3081178829821;
MPRINT(EM_DIAGRAM):   *** Standardize ALTERN ;
MPRINT(EM_DIAGRAM):   drop T_ALTERN ;
MPRINT(EM_DIAGRAM):   if missing( ALTERN ) then T_ALTERN = .;
MPRINT(EM_DIAGRAM):   else T_ALTERN = (ALTERN - 0) * 5.82808899446787;
MPRINT(EM_DIAGRAM):   *** Standardize AMATEUR ;
MPRINT(EM_DIAGRAM):   drop T_AMATEUR ;
MPRINT(EM_DIAGRAM):   if missing( AMATEUR ) then T_AMATEUR = .;
MPRINT(EM_DIAGRAM):   else T_AMATEUR = (AMATEUR - 0) * 4.0706556112662;
MPRINT(EM_DIAGRAM):   *** Standardize AMERICAN ;
MPRINT(EM_DIAGRAM):   drop T_AMERICAN ;
MPRINT(EM_DIAGRAM):   if missing( AMERICAN ) then T_AMERICAN = .;
MPRINT(EM_DIAGRAM):   else T_AMERICAN = (AMERICAN - 0) * 5.95482088127584;
MPRINT(EM_DIAGRAM):   *** Standardize AMOUNT ;
MPRINT(EM_DIAGRAM):   drop T_AMOUNT ;
MPRINT(EM_DIAGRAM):   if missing( AMOUNT ) then T_AMOUNT = .;
MPRINT(EM_DIAGRAM):   else T_AMOUNT = (AMOUNT - 0) * 7.03327539379202;
MPRINT(EM_DIAGRAM):   *** Standardize AMP ;
MPRINT(EM_DIAGRAM):   drop T_AMP ;
MPRINT(EM_DIAGRAM):   if missing( AMP ) then T_AMP = .;
MPRINT(EM_DIAGRAM):   else T_AMP = (AMP - 0) * 4.93203185510415;
MPRINT(EM_DIAGRAM):   *** Standardize AMPLIFI ;
MPRINT(EM_DIAGRAM):   drop T_AMPLIFI ;
MPRINT(EM_DIAGRAM):   if missing( AMPLIFI ) then T_AMPLIFI = .;
MPRINT(EM_DIAGRAM):   else T_AMPLIFI = (AMPLIFI - 0) * 2.4457110975567;
MPRINT(EM_DIAGRAM):   *** Standardize ANA ;
MPRINT(EM_DIAGRAM):   drop T_ANA ;
MPRINT(EM_DIAGRAM):   if missing( ANA ) then T_ANA = .;
MPRINT(EM_DIAGRAM):   else T_ANA = (ANA - 0) * 3.89639999376975;
MPRINT(EM_DIAGRAM):   *** Standardize ANALOG ;
MPRINT(EM_DIAGRAM):   drop T_ANALOG ;
MPRINT(EM_DIAGRAM):   if missing( ANALOG ) then T_ANALOG = .;
MPRINT(EM_DIAGRAM):   else T_ANALOG = (ANALOG - 0) * 2.9521290176225;
MPRINT(EM_DIAGRAM):   *** Standardize ANDI ;
MPRINT(EM_DIAGRAM):   drop T_ANDI ;
MPRINT(EM_DIAGRAM):   if missing( ANDI ) then T_ANDI = .;
MPRINT(EM_DIAGRAM):   else T_ANDI = (ANDI - 0) * 1.65547339804832;
MPRINT(EM_DIAGRAM):   *** Standardize ANDREW ;
MPRINT(EM_DIAGRAM):   drop T_ANDREW ;
MPRINT(EM_DIAGRAM):   if missing( ANDREW ) then T_ANDREW = .;
MPRINT(EM_DIAGRAM):   else T_ANDREW = (ANDREW - 0) * 2.15528576550455;
MPRINT(EM_DIAGRAM):   *** Standardize ANGEL ;
MPRINT(EM_DIAGRAM):   drop T_ANGEL ;
MPRINT(EM_DIAGRAM):   if missing( ANGEL ) then T_ANGEL = .;
MPRINT(EM_DIAGRAM):   else T_ANGEL = (ANGEL - 0) * 3.94562548408332;
MPRINT(EM_DIAGRAM):   *** Standardize ANIM ;
MPRINT(EM_DIAGRAM):   drop T_ANIM ;
MPRINT(EM_DIAGRAM):   if missing( ANIM ) then T_ANIM = .;
MPRINT(EM_DIAGRAM):   else T_ANIM = (ANIM - 0) * 3.13154010917841;
MPRINT(EM_DIAGRAM):   *** Standardize ANNOUNC ;
MPRINT(EM_DIAGRAM):   drop T_ANNOUNC ;
MPRINT(EM_DIAGRAM):   if missing( ANNOUNC ) then T_ANNOUNC = .;
MPRINT(EM_DIAGRAM):   else T_ANNOUNC = (ANNOUNC - 0) * 3.3263503698203;
MPRINT(EM_DIAGRAM):   *** Standardize ANSWER ;
MPRINT(EM_DIAGRAM):   drop T_ANSWER ;
MPRINT(EM_DIAGRAM):   if missing( ANSWER ) then T_ANSWER = .;
MPRINT(EM_DIAGRAM):   else T_ANSWER = (ANSWER - 0) * 4.64860866821607;
MPRINT(EM_DIAGRAM):   *** Standardize ANTENNA ;
MPRINT(EM_DIAGRAM):   drop T_ANTENNA ;
MPRINT(EM_DIAGRAM):   if missing( ANTENNA ) then T_ANTENNA = .;
MPRINT(EM_DIAGRAM):   else T_ANTENNA = (ANTENNA - 0) * 2.34630847557003;
MPRINT(EM_DIAGRAM):   *** Standardize ANTI ;
MPRINT(EM_DIAGRAM):   drop T_ANTI ;
MPRINT(EM_DIAGRAM):   if missing( ANTI ) then T_ANTI = .;
MPRINT(EM_DIAGRAM):   else T_ANTI = (ANTI - 0) * 5.20845646317312;
MPRINT(EM_DIAGRAM):   *** Standardize ANTIBIOT ;
MPRINT(EM_DIAGRAM):   drop T_ANTIBIOT ;
MPRINT(EM_DIAGRAM):   if missing( ANTIBIOT ) then T_ANTIBIOT = .;
MPRINT(EM_DIAGRAM):   else T_ANTIBIOT = (ANTIBIOT - 0) * 1.65175256519004;
MPRINT(EM_DIAGRAM):   *** Standardize APP ;
MPRINT(EM_DIAGRAM):   drop T_APP ;
MPRINT(EM_DIAGRAM):   if missing( APP ) then T_APP = .;
MPRINT(EM_DIAGRAM):   else T_APP = (APP - 0) * 2.40715317006713;
MPRINT(EM_DIAGRAM):   *** Standardize APPAR ;
MPRINT(EM_DIAGRAM):   drop T_APPAR ;
MPRINT(EM_DIAGRAM):   if missing( APPAR ) then T_APPAR = .;
MPRINT(EM_DIAGRAM):   else T_APPAR = (APPAR - 0) * 3.27188469302459;
MPRINT(EM_DIAGRAM):   *** Standardize APPEAR ;
MPRINT(EM_DIAGRAM):   drop T_APPEAR ;
MPRINT(EM_DIAGRAM):   if missing( APPEAR ) then T_APPEAR = .;
MPRINT(EM_DIAGRAM):   else T_APPEAR = (APPEAR - 0) * 3.48726180519449;
MPRINT(EM_DIAGRAM):   *** Standardize APPL ;
MPRINT(EM_DIAGRAM):   drop T_APPL ;
MPRINT(EM_DIAGRAM):   if missing( APPL ) then T_APPL = .;
MPRINT(EM_DIAGRAM):   else T_APPL = (APPL - 0) * 4.5779356146602;
MPRINT(EM_DIAGRAM):   *** Standardize APPLI ;
MPRINT(EM_DIAGRAM):   drop T_APPLI ;
MPRINT(EM_DIAGRAM):   if missing( APPLI ) then T_APPLI = .;
MPRINT(EM_DIAGRAM):   else T_APPLI = (APPLI - 0) * 9.11256308516512;
MPRINT(EM_DIAGRAM):   *** Standardize APPLIC ;
MPRINT(EM_DIAGRAM):   drop T_APPLIC ;
MPRINT(EM_DIAGRAM):   if missing( APPLIC ) then T_APPLIC = .;
MPRINT(EM_DIAGRAM):   else T_APPLIC = (APPLIC - 0) * 3.9853350155139;
MPRINT(EM_DIAGRAM):   *** Standardize APPRECI ;
MPRINT(EM_DIAGRAM):   drop T_APPRECI ;
MPRINT(EM_DIAGRAM):   if missing( APPRECI ) then T_APPRECI = .;
MPRINT(EM_DIAGRAM):   else T_APPRECI = (APPRECI - 0) * 4.61159422033839;
MPRINT(EM_DIAGRAM):   *** Standardize APPROACH ;
MPRINT(EM_DIAGRAM):   drop T_APPROACH ;
MPRINT(EM_DIAGRAM):   if missing( APPROACH ) then T_APPROACH = .;
MPRINT(EM_DIAGRAM):   else T_APPROACH = (APPROACH - 0) * 7.95967583213043;
MPRINT(EM_DIAGRAM):   *** Standardize APRIL ;
MPRINT(EM_DIAGRAM):   drop T_APRIL ;
MPRINT(EM_DIAGRAM):   if missing( APRIL ) then T_APRIL = .;
MPRINT(EM_DIAGRAM):   else T_APRIL = (APRIL - 0) * 5.4864570216978;
MPRINT(EM_DIAGRAM):   *** Standardize ARAB ;
MPRINT(EM_DIAGRAM):   drop T_ARAB ;
MPRINT(EM_DIAGRAM):   if missing( ARAB ) then T_ARAB = .;
MPRINT(EM_DIAGRAM):   else T_ARAB = (ARAB - 0) * 4.52418448919517;
MPRINT(EM_DIAGRAM):   *** Standardize ARCAD ;
MPRINT(EM_DIAGRAM):   drop T_ARCAD ;
MPRINT(EM_DIAGRAM):   if missing( ARCAD ) then T_ARCAD = .;
MPRINT(EM_DIAGRAM):   else T_ARCAD = (ARCAD - 0) * 1.7996962708709;
MPRINT(EM_DIAGRAM):   *** Standardize AREA ;
MPRINT(EM_DIAGRAM):   drop T_AREA ;
MPRINT(EM_DIAGRAM):   if missing( AREA ) then T_AREA = .;
MPRINT(EM_DIAGRAM):   else T_AREA = (AREA - 0) * 6.43887367010951;
MPRINT(EM_DIAGRAM):   *** Standardize AREN ;
MPRINT(EM_DIAGRAM):   drop T_AREN ;
MPRINT(EM_DIAGRAM):   if missing( AREN ) then T_AREN = .;
MPRINT(EM_DIAGRAM):   else T_AREN = (AREN - 0) * 4.56186846973105;
MPRINT(EM_DIAGRAM):   *** Standardize ARGIC ;
MPRINT(EM_DIAGRAM):   drop T_ARGIC ;
MPRINT(EM_DIAGRAM):   if missing( ARGIC ) then T_ARGIC = .;
MPRINT(EM_DIAGRAM):   else T_ARGIC = (ARGIC - 0) * 3.07690480537955;
MPRINT(EM_DIAGRAM):   *** Standardize ARGUMENT ;
MPRINT(EM_DIAGRAM):   drop T_ARGUMENT ;
MPRINT(EM_DIAGRAM):   if missing( ARGUMENT ) then T_ARGUMENT = .;
MPRINT(EM_DIAGRAM):   else T_ARGUMENT = (ARGUMENT - 0) * 3.77564209625377;
MPRINT(EM_DIAGRAM):   *** Standardize ARM ;
MPRINT(EM_DIAGRAM):   drop T_ARM ;
MPRINT(EM_DIAGRAM):   if missing( ARM ) then T_ARM = .;
MPRINT(EM_DIAGRAM):   else T_ARM = (ARM - 0) * 9.86377621728567;
MPRINT(EM_DIAGRAM):   *** Standardize ARMENIA ;
MPRINT(EM_DIAGRAM):   drop T_ARMENIA ;
MPRINT(EM_DIAGRAM):   if missing( ARMENIA ) then T_ARMENIA = .;
MPRINT(EM_DIAGRAM):   else T_ARMENIA = (ARMENIA - 0) * 1.72392651861691;
MPRINT(EM_DIAGRAM):   *** Standardize ARMENIAN ;
MPRINT(EM_DIAGRAM):   drop T_ARMENIAN ;
MPRINT(EM_DIAGRAM):   if missing( ARMENIAN ) then T_ARMENIAN = .;
MPRINT(EM_DIAGRAM):   else T_ARMENIAN = (ARMENIAN - 0) * 4.23900299721636;
MPRINT(EM_DIAGRAM):   *** Standardize ARMI ;
MPRINT(EM_DIAGRAM):   drop T_ARMI ;
MPRINT(EM_DIAGRAM):   if missing( ARMI ) then T_ARMI = .;
MPRINT(EM_DIAGRAM):   else T_ARMI = (ARMI - 0) * 7.74842529695147;
MPRINT(EM_DIAGRAM):   *** Standardize ARTICL ;
MPRINT(EM_DIAGRAM):   drop T_ARTICL ;
MPRINT(EM_DIAGRAM):   if missing( ARTICL ) then T_ARTICL = .;
MPRINT(EM_DIAGRAM):   else T_ARTICL = (ARTICL - 0) * 4.08092837103589;
MPRINT(EM_DIAGRAM):   *** Standardize ARTIFICI ;
MPRINT(EM_DIAGRAM):   drop T_ARTIFICI ;
MPRINT(EM_DIAGRAM):   if missing( ARTIFICI ) then T_ARTIFICI = .;
MPRINT(EM_DIAGRAM):   else T_ARTIFICI = (ARTIFICI - 0) * 2.64663566657778;
MPRINT(EM_DIAGRAM):   *** Standardize ASK ;
MPRINT(EM_DIAGRAM):   drop T_ASK ;
MPRINT(EM_DIAGRAM):   if missing( ASK ) then T_ASK = .;
MPRINT(EM_DIAGRAM):   else T_ASK = (ASK - 0) * 4.17199071594207;
MPRINT(EM_DIAGRAM):   *** Standardize ASSEMBL ;
MPRINT(EM_DIAGRAM):   drop T_ASSEMBL ;
MPRINT(EM_DIAGRAM):   if missing( ASSEMBL ) then T_ASSEMBL = .;
MPRINT(EM_DIAGRAM):   else T_ASSEMBL = (ASSEMBL - 0) * 2.99205823643672;
MPRINT(EM_DIAGRAM):   *** Standardize ASSIST ;
MPRINT(EM_DIAGRAM):   drop T_ASSIST ;
MPRINT(EM_DIAGRAM):   if missing( ASSIST ) then T_ASSIST = .;
MPRINT(EM_DIAGRAM):   else T_ASSIST = (ASSIST - 0) * 4.8795305522727;
MPRINT(EM_DIAGRAM):   *** Standardize ASSOCI ;
MPRINT(EM_DIAGRAM):   drop T_ASSOCI ;
MPRINT(EM_DIAGRAM):   if missing( ASSOCI ) then T_ASSOCI = .;
MPRINT(EM_DIAGRAM):   else T_ASSOCI = (ASSOCI - 0) * 3.65964791420452;
MPRINT(EM_DIAGRAM):   *** Standardize ASSUM ;
MPRINT(EM_DIAGRAM):   drop T_ASSUM ;
MPRINT(EM_DIAGRAM):   if missing( ASSUM ) then T_ASSUM = .;
MPRINT(EM_DIAGRAM):   else T_ASSUM = (ASSUM - 0) * 8.21416513503794;
MPRINT(EM_DIAGRAM):   *** Standardize ATARI ;
MPRINT(EM_DIAGRAM):   drop T_ATARI ;
MPRINT(EM_DIAGRAM):   if missing( ATARI ) then T_ATARI = .;
MPRINT(EM_DIAGRAM):   else T_ATARI = (ATARI - 0) * 1.58472551561367;
MPRINT(EM_DIAGRAM):   *** Standardize ATHEN ;
MPRINT(EM_DIAGRAM):   drop T_ATHEN ;
MPRINT(EM_DIAGRAM):   if missing( ATHEN ) then T_ATHEN = .;
MPRINT(EM_DIAGRAM):   else T_ATHEN = (ATHEN - 0) * 3.85408931877677;
MPRINT(EM_DIAGRAM):   *** Standardize ATHENA ;
MPRINT(EM_DIAGRAM):   drop T_ATHENA ;
MPRINT(EM_DIAGRAM):   if missing( ATHENA ) then T_ATHENA = .;
MPRINT(EM_DIAGRAM):   else T_ATHENA = (ATHENA - 0) * 2.13434247745952;
MPRINT(EM_DIAGRAM):   *** Standardize ATTACH ;
MPRINT(EM_DIAGRAM):   drop T_ATTACH ;
MPRINT(EM_DIAGRAM):   if missing( ATTACH ) then T_ATTACH = .;
MPRINT(EM_DIAGRAM):   else T_ATTACH = (ATTACH - 0) * 4.84532747842673;
MPRINT(EM_DIAGRAM):   *** Standardize ATTACK ;
MPRINT(EM_DIAGRAM):   drop T_ATTACK ;
MPRINT(EM_DIAGRAM):   if missing( ATTACK ) then T_ATTACK = .;
MPRINT(EM_DIAGRAM):   else T_ATTACK = (ATTACK - 0) * 6.01910247519059;
MPRINT(EM_DIAGRAM):   *** Standardize ATTEMPT ;
MPRINT(EM_DIAGRAM):   drop T_ATTEMPT ;
MPRINT(EM_DIAGRAM):   if missing( ATTEMPT ) then T_ATTEMPT = .;
MPRINT(EM_DIAGRAM):   else T_ATTEMPT = (ATTEMPT - 0) * 5.6367262914559;
MPRINT(EM_DIAGRAM):   *** Standardize ATTRIBUT ;
MPRINT(EM_DIAGRAM):   drop T_ATTRIBUT ;
MPRINT(EM_DIAGRAM):   if missing( ATTRIBUT ) then T_ATTRIBUT = .;
MPRINT(EM_DIAGRAM):   else T_ATTRIBUT = (ATTRIBUT - 0) * 2.9451163324984;
MPRINT(EM_DIAGRAM):   *** Standardize AUDIO ;
MPRINT(EM_DIAGRAM):   drop T_AUDIO ;
MPRINT(EM_DIAGRAM):   if missing( AUDIO ) then T_AUDIO = .;
MPRINT(EM_DIAGRAM):   else T_AUDIO = (AUDIO - 0) * 2.78083660347682;
MPRINT(EM_DIAGRAM):   *** Standardize AUSTIN ;
MPRINT(EM_DIAGRAM):   drop T_AUSTIN ;
MPRINT(EM_DIAGRAM):   if missing( AUSTIN ) then T_AUSTIN = .;
MPRINT(EM_DIAGRAM):   else T_AUSTIN = (AUSTIN - 0) * 3.10430922042007;
MPRINT(EM_DIAGRAM):   *** Standardize AUSTRALIA ;
MPRINT(EM_DIAGRAM):   drop T_AUSTRALIA ;
MPRINT(EM_DIAGRAM):   if missing( AUSTRALIA ) then T_AUSTRALIA = .;
MPRINT(EM_DIAGRAM):   else T_AUSTRALIA = (AUSTRALIA - 0) * 2.94452460155334;
MPRINT(EM_DIAGRAM):   *** Standardize AUTHOR ;
MPRINT(EM_DIAGRAM):   drop T_AUTHOR ;
MPRINT(EM_DIAGRAM):   if missing( AUTHOR ) then T_AUTHOR = .;
MPRINT(EM_DIAGRAM):   else T_AUTHOR = (AUTHOR - 0) * 6.64797982128583;
MPRINT(EM_DIAGRAM):   *** Standardize AVOID ;
MPRINT(EM_DIAGRAM):   drop T_AVOID ;
MPRINT(EM_DIAGRAM):   if missing( AVOID ) then T_AVOID = .;
MPRINT(EM_DIAGRAM):   else T_AVOID = (AVOID - 0) * 2.83192182399712;
MPRINT(EM_DIAGRAM):   *** Standardize AZERI ;
MPRINT(EM_DIAGRAM):   drop T_AZERI ;
MPRINT(EM_DIAGRAM):   if missing( AZERI ) then T_AZERI = .;
MPRINT(EM_DIAGRAM):   else T_AZERI = (AZERI - 0) * 4.42110477579833;
MPRINT(EM_DIAGRAM):   *** Standardize BACKGROUND ;
MPRINT(EM_DIAGRAM):   drop T_BACKGROUND ;
MPRINT(EM_DIAGRAM):   if missing( BACKGROUND ) then T_BACKGROUND = .;
MPRINT(EM_DIAGRAM):   else T_BACKGROUND = (BACKGROUND - 0) * 3.35110522480913;
MPRINT(EM_DIAGRAM):   *** Standardize BAND ;
MPRINT(EM_DIAGRAM):   drop T_BAND ;
MPRINT(EM_DIAGRAM):   if missing( BAND ) then T_BAND = .;
MPRINT(EM_DIAGRAM):   else T_BAND = (BAND - 0) * 3.86925164451045;
MPRINT(EM_DIAGRAM):   *** Standardize BANK ;
MPRINT(EM_DIAGRAM):   drop T_BANK ;
MPRINT(EM_DIAGRAM):   if missing( BANK ) then T_BANK = .;
MPRINT(EM_DIAGRAM):   else T_BANK = (BANK - 0) * 3.66222724209961;
MPRINT(EM_DIAGRAM):   *** Standardize BARBECU ;
MPRINT(EM_DIAGRAM):   drop T_BARBECU ;
MPRINT(EM_DIAGRAM):   if missing( BARBECU ) then T_BARBECU = .;
MPRINT(EM_DIAGRAM):   else T_BARBECU = (BARBECU - 0) * 2.48563447878415;
MPRINT(EM_DIAGRAM):   *** Standardize BASE ;
MPRINT(EM_DIAGRAM):   drop T_BASE ;
MPRINT(EM_DIAGRAM):   if missing( BASE ) then T_BASE = .;
MPRINT(EM_DIAGRAM):   else T_BASE = (BASE - 0) * 7.43743258447749;
MPRINT(EM_DIAGRAM):   *** Standardize BASIC ;
MPRINT(EM_DIAGRAM):   drop T_BASIC ;
MPRINT(EM_DIAGRAM):   if missing( BASIC ) then T_BASIC = .;
MPRINT(EM_DIAGRAM):   else T_BASIC = (BASIC - 0) * 7.40971443736761;
MPRINT(EM_DIAGRAM):   *** Standardize BATTERI ;
MPRINT(EM_DIAGRAM):   drop T_BATTERI ;
MPRINT(EM_DIAGRAM):   if missing( BATTERI ) then T_BATTERI = .;
MPRINT(EM_DIAGRAM):   else T_BATTERI = (BATTERI - 0) * 2.30059996771798;
MPRINT(EM_DIAGRAM):   *** Standardize BECK ;
MPRINT(EM_DIAGRAM):   drop T_BECK ;
MPRINT(EM_DIAGRAM):   if missing( BECK ) then T_BECK = .;
MPRINT(EM_DIAGRAM):   else T_BECK = (BECK - 0) * 2.03445342220064;
MPRINT(EM_DIAGRAM):   *** Standardize BELL ;
MPRINT(EM_DIAGRAM):   drop T_BELL ;
MPRINT(EM_DIAGRAM):   if missing( BELL ) then T_BELL = .;
MPRINT(EM_DIAGRAM):   else T_BELL = (BELL - 0) * 2.85734349852437;
MPRINT(EM_DIAGRAM):   *** Standardize BENSON ;
MPRINT(EM_DIAGRAM):   drop T_BENSON ;
MPRINT(EM_DIAGRAM):   if missing( BENSON ) then T_BENSON = .;
MPRINT(EM_DIAGRAM):   else T_BENSON = (BENSON - 0) * 2.31792176488648;
MPRINT(EM_DIAGRAM):   *** Standardize BERKELEI ;
MPRINT(EM_DIAGRAM):   drop T_BERKELEI ;
MPRINT(EM_DIAGRAM):   if missing( BERKELEI ) then T_BERKELEI = .;
MPRINT(EM_DIAGRAM):   else T_BERKELEI = (BERKELEI - 0) * 2.5795010963403;
MPRINT(EM_DIAGRAM):   *** Standardize BEYER ;
MPRINT(EM_DIAGRAM):   drop T_BEYER ;
MPRINT(EM_DIAGRAM):   if missing( BEYER ) then T_BEYER = .;
MPRINT(EM_DIAGRAM):   else T_BEYER = (BEYER - 0) * 3.19329635502749;
MPRINT(EM_DIAGRAM):   *** Standardize BILL ;
MPRINT(EM_DIAGRAM):   drop T_BILL ;
MPRINT(EM_DIAGRAM):   if missing( BILL ) then T_BILL = .;
MPRINT(EM_DIAGRAM):   else T_BILL = (BILL - 0) * 2.31716773502006;
MPRINT(EM_DIAGRAM):   *** Standardize BIRTHDAI ;
MPRINT(EM_DIAGRAM):   drop T_BIRTHDAI ;
MPRINT(EM_DIAGRAM):   if missing( BIRTHDAI ) then T_BIRTHDAI = .;
MPRINT(EM_DIAGRAM):   else T_BIRTHDAI = (BIRTHDAI - 0) * 1.37831714275457;
MPRINT(EM_DIAGRAM):   *** Standardize BIT ;
MPRINT(EM_DIAGRAM):   drop T_BIT ;
MPRINT(EM_DIAGRAM):   if missing( BIT ) then T_BIT = .;
MPRINT(EM_DIAGRAM):   else T_BIT = (BIT - 0) * 3.15313515809297;
MPRINT(EM_DIAGRAM):   *** Standardize BITMAP ;
MPRINT(EM_DIAGRAM):   drop T_BITMAP ;
MPRINT(EM_DIAGRAM):   if missing( BITMAP ) then T_BITMAP = .;
MPRINT(EM_DIAGRAM):   else T_BITMAP = (BITMAP - 0) * 2.00892541318523;
MPRINT(EM_DIAGRAM):   *** Standardize BLACK ;
MPRINT(EM_DIAGRAM):   drop T_BLACK ;
MPRINT(EM_DIAGRAM):   if missing( BLACK ) then T_BLACK = .;
MPRINT(EM_DIAGRAM):   else T_BLACK = (BLACK - 0) * 5.20596618712873;
MPRINT(EM_DIAGRAM):   *** Standardize BLOOD ;
MPRINT(EM_DIAGRAM):   drop T_BLOOD ;
MPRINT(EM_DIAGRAM):   if missing( BLOOD ) then T_BLOOD = .;
MPRINT(EM_DIAGRAM):   else T_BLOOD = (BLOOD - 0) * 4.20207088912872;
MPRINT(EM_DIAGRAM):   *** Standardize BLUE ;
MPRINT(EM_DIAGRAM):   drop T_BLUE ;
MPRINT(EM_DIAGRAM):   if missing( BLUE ) then T_BLUE = .;
MPRINT(EM_DIAGRAM):   else T_BLUE = (BLUE - 0) * 2.98701877403932;
MPRINT(EM_DIAGRAM):   *** Standardize BOARD ;
MPRINT(EM_DIAGRAM):   drop T_BOARD ;
MPRINT(EM_DIAGRAM):   if missing( BOARD ) then T_BOARD = .;
MPRINT(EM_DIAGRAM):   else T_BOARD = (BOARD - 0) * 3.64368977177738;
MPRINT(EM_DIAGRAM):   *** Standardize BODI ;
MPRINT(EM_DIAGRAM):   drop T_BODI ;
MPRINT(EM_DIAGRAM):   if missing( BODI ) then T_BODI = .;
MPRINT(EM_DIAGRAM):   else T_BODI = (BODI - 0) * 4.38677730183768;
MPRINT(EM_DIAGRAM):   *** Standardize BOMB ;
MPRINT(EM_DIAGRAM):   drop T_BOMB ;
MPRINT(EM_DIAGRAM):   if missing( BOMB ) then T_BOMB = .;
MPRINT(EM_DIAGRAM):   else T_BOMB = (BOMB - 0) * 6.66779361185627;
MPRINT(EM_DIAGRAM):   *** Standardize BOOK ;
MPRINT(EM_DIAGRAM):   drop T_BOOK ;
MPRINT(EM_DIAGRAM):   if missing( BOOK ) then T_BOOK = .;
MPRINT(EM_DIAGRAM):   else T_BOOK = (BOOK - 0) * 4.04342989591831;
MPRINT(EM_DIAGRAM):   *** Standardize BORDER ;
MPRINT(EM_DIAGRAM):   drop T_BORDER ;
MPRINT(EM_DIAGRAM):   if missing( BORDER ) then T_BORDER = .;
MPRINT(EM_DIAGRAM):   else T_BORDER = (BORDER - 0) * 4.3645080874093;
MPRINT(EM_DIAGRAM):   *** Standardize BOSTON ;
MPRINT(EM_DIAGRAM):   drop T_BOSTON ;
MPRINT(EM_DIAGRAM):   if missing( BOSTON ) then T_BOSTON = .;
MPRINT(EM_DIAGRAM):   else T_BOSTON = (BOSTON - 0) * 3.78122442224652;
MPRINT(EM_DIAGRAM):   *** Standardize BOUGHT ;
MPRINT(EM_DIAGRAM):   drop T_BOUGHT ;
MPRINT(EM_DIAGRAM):   if missing( BOUGHT ) then T_BOUGHT = .;
MPRINT(EM_DIAGRAM):   else T_BOUGHT = (BOUGHT - 0) * 6.64617768451861;
MPRINT(EM_DIAGRAM):   *** Standardize BOULDER ;
MPRINT(EM_DIAGRAM):   drop T_BOULDER ;
MPRINT(EM_DIAGRAM):   if missing( BOULDER ) then T_BOULDER = .;
MPRINT(EM_DIAGRAM):   else T_BOULDER = (BOULDER - 0) * 3.52637414066315;
MPRINT(EM_DIAGRAM):   *** Standardize BOX ;
MPRINT(EM_DIAGRAM):   drop T_BOX ;
MPRINT(EM_DIAGRAM):   if missing( BOX ) then T_BOX = .;
MPRINT(EM_DIAGRAM):   else T_BOX = (BOX - 0) * 4.08092837103589;
MPRINT(EM_DIAGRAM):   *** Standardize BRAD ;
MPRINT(EM_DIAGRAM):   drop T_BRAD ;
MPRINT(EM_DIAGRAM):   if missing( BRAD ) then T_BRAD = .;
MPRINT(EM_DIAGRAM):   else T_BRAD = (BRAD - 0) * 2.59118164936694;
MPRINT(EM_DIAGRAM):   *** Standardize BRAIN ;
MPRINT(EM_DIAGRAM):   drop T_BRAIN ;
MPRINT(EM_DIAGRAM):   if missing( BRAIN ) then T_BRAIN = .;
MPRINT(EM_DIAGRAM):   else T_BRAIN = (BRAIN - 0) * 3.4585828348183;
MPRINT(EM_DIAGRAM):   *** Standardize BRAND ;
MPRINT(EM_DIAGRAM):   drop T_BRAND ;
MPRINT(EM_DIAGRAM):   if missing( BRAND ) then T_BRAND = .;
MPRINT(EM_DIAGRAM):   else T_BRAND = (BRAND - 0) * 2.19366648639456;
MPRINT(EM_DIAGRAM):   *** Standardize BREAK ;
MPRINT(EM_DIAGRAM):   drop T_BREAK ;
MPRINT(EM_DIAGRAM):   if missing( BREAK ) then T_BREAK = .;
MPRINT(EM_DIAGRAM):   else T_BREAK = (BREAK - 0) * 3.41441388347465;
MPRINT(EM_DIAGRAM):   *** Standardize BRIAN ;
MPRINT(EM_DIAGRAM):   drop T_BRIAN ;
MPRINT(EM_DIAGRAM):   if missing( BRIAN ) then T_BRIAN = .;
MPRINT(EM_DIAGRAM):   else T_BRIAN = (BRIAN - 0) * 1.99781751577907;
MPRINT(EM_DIAGRAM):   *** Standardize BRING ;
MPRINT(EM_DIAGRAM):   drop T_BRING ;
MPRINT(EM_DIAGRAM):   if missing( BRING ) then T_BRING = .;
MPRINT(EM_DIAGRAM):   else T_BRING = (BRING - 0) * 8.47347651687134;
MPRINT(EM_DIAGRAM):   *** Standardize BRITISH ;
MPRINT(EM_DIAGRAM):   drop T_BRITISH ;
MPRINT(EM_DIAGRAM):   if missing( BRITISH ) then T_BRITISH = .;
MPRINT(EM_DIAGRAM):   else T_BRITISH = (BRITISH - 0) * 5.43586184496138;
MPRINT(EM_DIAGRAM):   *** Standardize BROWN ;
MPRINT(EM_DIAGRAM):   drop T_BROWN ;
MPRINT(EM_DIAGRAM):   if missing( BROWN ) then T_BROWN = .;
MPRINT(EM_DIAGRAM):   else T_BROWN = (BROWN - 0) * 2.88206121407683;
MPRINT(EM_DIAGRAM):   *** Standardize BTW ;
MPRINT(EM_DIAGRAM):   drop T_BTW ;
MPRINT(EM_DIAGRAM):   if missing( BTW ) then T_BTW = .;
MPRINT(EM_DIAGRAM):   else T_BTW = (BTW - 0) * 6.68966647654012;
MPRINT(EM_DIAGRAM):   *** Standardize BUFFER ;
MPRINT(EM_DIAGRAM):   drop T_BUFFER ;
MPRINT(EM_DIAGRAM):   if missing( BUFFER ) then T_BUFFER = .;
MPRINT(EM_DIAGRAM):   else T_BUFFER = (BUFFER - 0) * 3.88916198410261;
MPRINT(EM_DIAGRAM):   *** Standardize BUILD ;
MPRINT(EM_DIAGRAM):   drop T_BUILD ;
MPRINT(EM_DIAGRAM):   if missing( BUILD ) then T_BUILD = .;
MPRINT(EM_DIAGRAM):   else T_BUILD = (BUILD - 0) * 4.49635319685497;
MPRINT(EM_DIAGRAM):   *** Standardize BUILT ;
MPRINT(EM_DIAGRAM):   drop T_BUILT ;
MPRINT(EM_DIAGRAM):   if missing( BUILT ) then T_BUILT = .;
MPRINT(EM_DIAGRAM):   else T_BUILT = (BUILT - 0) * 6.09412005584689;
MPRINT(EM_DIAGRAM):   *** Standardize BULB ;
MPRINT(EM_DIAGRAM):   drop T_BULB ;
MPRINT(EM_DIAGRAM):   if missing( BULB ) then T_BULB = .;
MPRINT(EM_DIAGRAM):   else T_BULB = (BULB - 0) * 1.93305661648195;
MPRINT(EM_DIAGRAM):   *** Standardize BUNCH ;
MPRINT(EM_DIAGRAM):   drop T_BUNCH ;
MPRINT(EM_DIAGRAM):   if missing( BUNCH ) then T_BUNCH = .;
MPRINT(EM_DIAGRAM):   else T_BUNCH = (BUNCH - 0) * 4.47567739436109;
MPRINT(EM_DIAGRAM):   *** Standardize BUSH ;
MPRINT(EM_DIAGRAM):   drop T_BUSH ;
MPRINT(EM_DIAGRAM):   if missing( BUSH ) then T_BUSH = .;
MPRINT(EM_DIAGRAM):   else T_BUSH = (BUSH - 0) * 6.35022275357528;
MPRINT(EM_DIAGRAM):   *** Standardize BUSI ;
MPRINT(EM_DIAGRAM):   drop T_BUSI ;
MPRINT(EM_DIAGRAM):   if missing( BUSI ) then T_BUSI = .;
MPRINT(EM_DIAGRAM):   else T_BUSI = (BUSI - 0) * 4.86637438342267;
MPRINT(EM_DIAGRAM):   *** Standardize BUTTON ;
MPRINT(EM_DIAGRAM):   drop T_BUTTON ;
MPRINT(EM_DIAGRAM):   if missing( BUTTON ) then T_BUTTON = .;
MPRINT(EM_DIAGRAM):   else T_BUTTON = (BUTTON - 0) * 2.10801097276364;
MPRINT(EM_DIAGRAM):   *** Standardize CABL ;
MPRINT(EM_DIAGRAM):   drop T_CABL ;
MPRINT(EM_DIAGRAM):   if missing( CABL ) then T_CABL = .;
MPRINT(EM_DIAGRAM):   else T_CABL = (CABL - 0) * 2.68643519362745;
MPRINT(EM_DIAGRAM):   *** Standardize CALIFORNIA ;
MPRINT(EM_DIAGRAM):   drop T_CALIFORNIA ;
MPRINT(EM_DIAGRAM):   if missing( CALIFORNIA ) then T_CALIFORNIA = .;
MPRINT(EM_DIAGRAM):   else T_CALIFORNIA = (CALIFORNIA - 0) * 4.43833320661117;
MPRINT(EM_DIAGRAM):   *** Standardize CALL ;
MPRINT(EM_DIAGRAM):   drop T_CALL ;
MPRINT(EM_DIAGRAM):   if missing( CALL ) then T_CALL = .;
MPRINT(EM_DIAGRAM):   else T_CALL = (CALL - 0) * 4.479518170049;
MPRINT(EM_DIAGRAM):   *** Standardize CAMBRIDG ;
MPRINT(EM_DIAGRAM):   drop T_CAMBRIDG ;
MPRINT(EM_DIAGRAM):   if missing( CAMBRIDG ) then T_CAMBRIDG = .;
MPRINT(EM_DIAGRAM):   else T_CAMBRIDG = (CAMBRIDG - 0) * 7.18617268496141;
MPRINT(EM_DIAGRAM):   *** Standardize CAN ;
MPRINT(EM_DIAGRAM):   drop T_CAN ;
MPRINT(EM_DIAGRAM):   if missing( CAN ) then T_CAN = .;
MPRINT(EM_DIAGRAM):   else T_CAN = (CAN - 0) * 7.10913523262021;
MPRINT(EM_DIAGRAM):   *** Standardize CANADA ;
MPRINT(EM_DIAGRAM):   drop T_CANADA ;
MPRINT(EM_DIAGRAM):   if missing( CANADA ) then T_CANADA = .;
MPRINT(EM_DIAGRAM):   else T_CANADA = (CANADA - 0) * 4.32675272757753;
MPRINT(EM_DIAGRAM):   *** Standardize CANCER ;
MPRINT(EM_DIAGRAM):   drop T_CANCER ;
MPRINT(EM_DIAGRAM):   if missing( CANCER ) then T_CANCER = .;
MPRINT(EM_DIAGRAM):   else T_CANCER = (CANCER - 0) * 1.86553204288897;
MPRINT(EM_DIAGRAM):   *** Standardize CANDIDA ;
MPRINT(EM_DIAGRAM):   drop T_CANDIDA ;
MPRINT(EM_DIAGRAM):   if missing( CANDIDA ) then T_CANDIDA = .;
MPRINT(EM_DIAGRAM):   else T_CANDIDA = (CANDIDA - 0) * 3.80979133136582;
MPRINT(EM_DIAGRAM):   *** Standardize CAPABL ;
MPRINT(EM_DIAGRAM):   drop T_CAPABL ;
MPRINT(EM_DIAGRAM):   if missing( CAPABL ) then T_CAPABL = .;
MPRINT(EM_DIAGRAM):   else T_CAPABL = (CAPABL - 0) * 5.15061558295452;
MPRINT(EM_DIAGRAM):   *** Standardize CAPACITOR ;
MPRINT(EM_DIAGRAM):   drop T_CAPACITOR ;
MPRINT(EM_DIAGRAM):   if missing( CAPACITOR ) then T_CAPACITOR = .;
MPRINT(EM_DIAGRAM):   else T_CAPACITOR = (CAPACITOR - 0) * 2.86591911932193;
MPRINT(EM_DIAGRAM):   *** Standardize CAPIT ;
MPRINT(EM_DIAGRAM):   drop T_CAPIT ;
MPRINT(EM_DIAGRAM):   if missing( CAPIT ) then T_CAPIT = .;
MPRINT(EM_DIAGRAM):   else T_CAPIT = (CAPIT - 0) * 6.44190105148308;
MPRINT(EM_DIAGRAM):   *** Standardize CAR ;
MPRINT(EM_DIAGRAM):   drop T_CAR ;
MPRINT(EM_DIAGRAM):   if missing( CAR ) then T_CAR = .;
MPRINT(EM_DIAGRAM):   else T_CAR = (CAR - 0) * 3.28008138048546;
MPRINT(EM_DIAGRAM):   *** Standardize CARD ;
MPRINT(EM_DIAGRAM):   drop T_CARD ;
MPRINT(EM_DIAGRAM):   if missing( CARD ) then T_CARD = .;
MPRINT(EM_DIAGRAM):   else T_CARD = (CARD - 0) * 2.30717651411815;
MPRINT(EM_DIAGRAM):   *** Standardize CARE ;
MPRINT(EM_DIAGRAM):   drop T_CARE ;
MPRINT(EM_DIAGRAM):   if missing( CARE ) then T_CARE = .;
MPRINT(EM_DIAGRAM):   else T_CARE = (CARE - 0) * 8.88601150591704;
MPRINT(EM_DIAGRAM):   *** Standardize CARNEGI ;
MPRINT(EM_DIAGRAM):   drop T_CARNEGI ;
MPRINT(EM_DIAGRAM):   if missing( CARNEGI ) then T_CARNEGI = .;
MPRINT(EM_DIAGRAM):   else T_CARNEGI = (CARNEGI - 0) * 4.09514416335075;
MPRINT(EM_DIAGRAM):   *** Standardize CARRI ;
MPRINT(EM_DIAGRAM):   drop T_CARRI ;
MPRINT(EM_DIAGRAM):   if missing( CARRI ) then T_CARRI = .;
MPRINT(EM_DIAGRAM):   else T_CARRI = (CARRI - 0) * 11.7007869158868;
MPRINT(EM_DIAGRAM):   *** Standardize CARTER ;
MPRINT(EM_DIAGRAM):   drop T_CARTER ;
MPRINT(EM_DIAGRAM):   if missing( CARTER ) then T_CARTER = .;
MPRINT(EM_DIAGRAM):   else T_CARTER = (CARTER - 0) * 4.52145898346636;
MPRINT(EM_DIAGRAM):   *** Standardize CASE ;
MPRINT(EM_DIAGRAM):   drop T_CASE ;
MPRINT(EM_DIAGRAM):   if missing( CASE ) then T_CASE = .;
MPRINT(EM_DIAGRAM):   else T_CASE = (CASE - 0) * 7.55808831887078;
MPRINT(EM_DIAGRAM):   *** Standardize CATALOG ;
MPRINT(EM_DIAGRAM):   drop T_CATALOG ;
MPRINT(EM_DIAGRAM):   if missing( CATALOG ) then T_CATALOG = .;
MPRINT(EM_DIAGRAM):   else T_CATALOG = (CATALOG - 0) * 3.44896585023657;
MPRINT(EM_DIAGRAM):   *** Standardize CAUS ;
MPRINT(EM_DIAGRAM):   drop T_CAUS ;
MPRINT(EM_DIAGRAM):   if missing( CAUS ) then T_CAUS = .;
MPRINT(EM_DIAGRAM):   else T_CAUS = (CAUS - 0) * 6.35230384999176;
MPRINT(EM_DIAGRAM):   *** Standardize CELL ;
MPRINT(EM_DIAGRAM):   drop T_CELL ;
MPRINT(EM_DIAGRAM):   if missing( CELL ) then T_CELL = .;
MPRINT(EM_DIAGRAM):   else T_CELL = (CELL - 0) * 2.33151948722316;
MPRINT(EM_DIAGRAM):   *** Standardize CENTER ;
MPRINT(EM_DIAGRAM):   drop T_CENTER ;
MPRINT(EM_DIAGRAM):   if missing( CENTER ) then T_CENTER = .;
MPRINT(EM_DIAGRAM):   else T_CENTER = (CENTER - 0) * 6.39144983708563;
MPRINT(EM_DIAGRAM):   *** Standardize CENTR ;
MPRINT(EM_DIAGRAM):   drop T_CENTR ;
MPRINT(EM_DIAGRAM):   if missing( CENTR ) then T_CENTR = .;
MPRINT(EM_DIAGRAM):   else T_CENTR = (CENTR - 0) * 4.68838157756831;
MPRINT(EM_DIAGRAM):   *** Standardize CHANC ;
MPRINT(EM_DIAGRAM):   drop T_CHANC ;
MPRINT(EM_DIAGRAM):   if missing( CHANC ) then T_CHANC = .;
MPRINT(EM_DIAGRAM):   else T_CHANC = (CHANC - 0) * 6.60051043814384;
MPRINT(EM_DIAGRAM):   *** Standardize CHANG ;
MPRINT(EM_DIAGRAM):   drop T_CHANG ;
MPRINT(EM_DIAGRAM):   if missing( CHANG ) then T_CHANG = .;
MPRINT(EM_DIAGRAM):   else T_CHANG = (CHANG - 0) * 3.76385580310905;
MPRINT(EM_DIAGRAM):   *** Standardize CHANNEL ;
MPRINT(EM_DIAGRAM):   drop T_CHANNEL ;
MPRINT(EM_DIAGRAM):   if missing( CHANNEL ) then T_CHANNEL = .;
MPRINT(EM_DIAGRAM):   else T_CHANNEL = (CHANNEL - 0) * 3.51826903580999;
MPRINT(EM_DIAGRAM):   *** Standardize CHARACT ;
MPRINT(EM_DIAGRAM):   drop T_CHARACT ;
MPRINT(EM_DIAGRAM):   if missing( CHARACT ) then T_CHARACT = .;
MPRINT(EM_DIAGRAM):   else T_CHARACT = (CHARACT - 0) * 2.3147691793138;
MPRINT(EM_DIAGRAM):   *** Standardize CHARG ;
MPRINT(EM_DIAGRAM):   drop T_CHARG ;
MPRINT(EM_DIAGRAM):   if missing( CHARG ) then T_CHARG = .;
MPRINT(EM_DIAGRAM):   else T_CHARG = (CHARG - 0) * 8.02897426913119;
MPRINT(EM_DIAGRAM):   *** Standardize CHASTITI ;
MPRINT(EM_DIAGRAM):   drop T_CHASTITI ;
MPRINT(EM_DIAGRAM):   if missing( CHASTITI ) then T_CHASTITI = .;
MPRINT(EM_DIAGRAM):   else T_CHASTITI = (CHASTITI - 0) * 8.85955781421373;
MPRINT(EM_DIAGRAM):   *** Standardize CHEAP ;
MPRINT(EM_DIAGRAM):   drop T_CHEAP ;
MPRINT(EM_DIAGRAM):   if missing( CHEAP ) then T_CHEAP = .;
MPRINT(EM_DIAGRAM):   else T_CHEAP = (CHEAP - 0) * 5.09424152621056;
MPRINT(EM_DIAGRAM):   *** Standardize CHECK ;
MPRINT(EM_DIAGRAM):   drop T_CHECK ;
MPRINT(EM_DIAGRAM):   if missing( CHECK ) then T_CHECK = .;
MPRINT(EM_DIAGRAM):   else T_CHECK = (CHECK - 0) * 6.14879229378452;
MPRINT(EM_DIAGRAM):   *** Standardize CHEER ;
MPRINT(EM_DIAGRAM):   drop T_CHEER ;
MPRINT(EM_DIAGRAM):   if missing( CHEER ) then T_CHEER = .;
MPRINT(EM_DIAGRAM):   else T_CHEER = (CHEER - 0) * 4.87743055085456;
MPRINT(EM_DIAGRAM):   *** Standardize CHEMIC ;
MPRINT(EM_DIAGRAM):   drop T_CHEMIC ;
MPRINT(EM_DIAGRAM):   if missing( CHEMIC ) then T_CHEMIC = .;
MPRINT(EM_DIAGRAM):   else T_CHEMIC = (CHEMIC - 0) * 2.42819093556527;
MPRINT(EM_DIAGRAM):   *** Standardize CHICAGO ;
MPRINT(EM_DIAGRAM):   drop T_CHICAGO ;
MPRINT(EM_DIAGRAM):   if missing( CHICAGO ) then T_CHICAGO = .;
MPRINT(EM_DIAGRAM):   else T_CHICAGO = (CHICAGO - 0) * 3.47424233849575;
MPRINT(EM_DIAGRAM):   *** Standardize CHILD ;
MPRINT(EM_DIAGRAM):   drop T_CHILD ;
MPRINT(EM_DIAGRAM):   if missing( CHILD ) then T_CHILD = .;
MPRINT(EM_DIAGRAM):   else T_CHILD = (CHILD - 0) * 3.35542999396284;
MPRINT(EM_DIAGRAM):   *** Standardize CHILDREN ;
MPRINT(EM_DIAGRAM):   drop T_CHILDREN ;
MPRINT(EM_DIAGRAM):   if missing( CHILDREN ) then T_CHILDREN = .;
MPRINT(EM_DIAGRAM):   else T_CHILDREN = (CHILDREN - 0) * 5.59619795744146;
MPRINT(EM_DIAGRAM):   *** Standardize CHINES ;
MPRINT(EM_DIAGRAM):   drop T_CHINES ;
MPRINT(EM_DIAGRAM):   if missing( CHINES ) then T_CHINES = .;
MPRINT(EM_DIAGRAM):   else T_CHINES = (CHINES - 0) * 4.3883520801072;
MPRINT(EM_DIAGRAM):   *** Standardize CHIP ;
MPRINT(EM_DIAGRAM):   drop T_CHIP ;
MPRINT(EM_DIAGRAM):   if missing( CHIP ) then T_CHIP = .;
MPRINT(EM_DIAGRAM):   else T_CHIP = (CHIP - 0) * 3.39398033352704;
MPRINT(EM_DIAGRAM):   *** Standardize CHOIC ;
MPRINT(EM_DIAGRAM):   drop T_CHOIC ;
MPRINT(EM_DIAGRAM):   if missing( CHOIC ) then T_CHOIC = .;
MPRINT(EM_DIAGRAM):   else T_CHOIC = (CHOIC - 0) * 7.9527899841906;
MPRINT(EM_DIAGRAM):   *** Standardize CHRI ;
MPRINT(EM_DIAGRAM):   drop T_CHRI ;
MPRINT(EM_DIAGRAM):   if missing( CHRI ) then T_CHRI = .;
MPRINT(EM_DIAGRAM):   else T_CHRI = (CHRI - 0) * 4.0899554981653;
MPRINT(EM_DIAGRAM):   *** Standardize CHRISTIAN ;
MPRINT(EM_DIAGRAM):   drop T_CHRISTIAN ;
MPRINT(EM_DIAGRAM):   if missing( CHRISTIAN ) then T_CHRISTIAN = .;
MPRINT(EM_DIAGRAM):   else T_CHRISTIAN = (CHRISTIAN - 0) * 4.70878083737757;
MPRINT(EM_DIAGRAM):   *** Standardize CHRISTOPH ;
MPRINT(EM_DIAGRAM):   drop T_CHRISTOPH ;
MPRINT(EM_DIAGRAM):   if missing( CHRISTOPH ) then T_CHRISTOPH = .;
MPRINT(EM_DIAGRAM):   else T_CHRISTOPH = (CHRISTOPH - 0) * 3.98139015881323;
MPRINT(EM_DIAGRAM):   *** Standardize CIRCUIT ;
MPRINT(EM_DIAGRAM):   drop T_CIRCUIT ;
MPRINT(EM_DIAGRAM):   if missing( CIRCUIT ) then T_CIRCUIT = .;
MPRINT(EM_DIAGRAM):   else T_CIRCUIT = (CIRCUIT - 0) * 3.95296855266446;
MPRINT(EM_DIAGRAM):   *** Standardize CITI ;
MPRINT(EM_DIAGRAM):   drop T_CITI ;
MPRINT(EM_DIAGRAM):   if missing( CITI ) then T_CITI = .;
MPRINT(EM_DIAGRAM):   else T_CITI = (CITI - 0) * 3.8070408421231;
MPRINT(EM_DIAGRAM):   *** Standardize CITIZEN ;
MPRINT(EM_DIAGRAM):   drop T_CITIZEN ;
MPRINT(EM_DIAGRAM):   if missing( CITIZEN ) then T_CITIZEN = .;
MPRINT(EM_DIAGRAM):   else T_CITIZEN = (CITIZEN - 0) * 4.15582861348756;
MPRINT(EM_DIAGRAM):   *** Standardize CIVIL ;
MPRINT(EM_DIAGRAM):   drop T_CIVIL ;
MPRINT(EM_DIAGRAM):   if missing( CIVIL ) then T_CIVIL = .;
MPRINT(EM_DIAGRAM):   else T_CIVIL = (CIVIL - 0) * 1.73256537527299;
MPRINT(EM_DIAGRAM):   *** Standardize CIVILIAN ;
MPRINT(EM_DIAGRAM):   drop T_CIVILIAN ;
MPRINT(EM_DIAGRAM):   if missing( CIVILIAN ) then T_CIVILIAN = .;
MPRINT(EM_DIAGRAM):   else T_CIVILIAN = (CIVILIAN - 0) * 3.82608187039452;
MPRINT(EM_DIAGRAM):   *** Standardize CLAIM ;
MPRINT(EM_DIAGRAM):   drop T_CLAIM ;
MPRINT(EM_DIAGRAM):   if missing( CLAIM ) then T_CLAIM = .;
MPRINT(EM_DIAGRAM):   else T_CLAIM = (CLAIM - 0) * 6.76820681975522;
MPRINT(EM_DIAGRAM):   *** Standardize CLASS ;
MPRINT(EM_DIAGRAM):   drop T_CLASS ;
MPRINT(EM_DIAGRAM):   if missing( CLASS ) then T_CLASS = .;
MPRINT(EM_DIAGRAM):   else T_CLASS = (CLASS - 0) * 6.45182373022724;
MPRINT(EM_DIAGRAM):   *** Standardize CLEAR ;
MPRINT(EM_DIAGRAM):   drop T_CLEAR ;
MPRINT(EM_DIAGRAM):   if missing( CLEAR ) then T_CLEAR = .;
MPRINT(EM_DIAGRAM):   else T_CLEAR = (CLEAR - 0) * 6.09752489253073;
MPRINT(EM_DIAGRAM):   *** Standardize CLEVELAND ;
MPRINT(EM_DIAGRAM):   drop T_CLEVELAND ;
MPRINT(EM_DIAGRAM):   if missing( CLEVELAND ) then T_CLEVELAND = .;
MPRINT(EM_DIAGRAM):   else T_CLEVELAND = (CLEVELAND - 0) * 2.77090076021061;
MPRINT(EM_DIAGRAM):   *** Standardize CLIENT ;
MPRINT(EM_DIAGRAM):   drop T_CLIENT ;
MPRINT(EM_DIAGRAM):   if missing( CLIENT ) then T_CLIENT = .;
MPRINT(EM_DIAGRAM):   else T_CLIENT = (CLIENT - 0) * 3.56978003030981;
MPRINT(EM_DIAGRAM):   *** Standardize CLINIC ;
MPRINT(EM_DIAGRAM):   drop T_CLINIC ;
MPRINT(EM_DIAGRAM):   if missing( CLINIC ) then T_CLINIC = .;
MPRINT(EM_DIAGRAM):   else T_CLINIC = (CLINIC - 0) * 3.8264476672145;
MPRINT(EM_DIAGRAM):   *** Standardize CLINTON ;
MPRINT(EM_DIAGRAM):   drop T_CLINTON ;
MPRINT(EM_DIAGRAM):   if missing( CLINTON ) then T_CLINTON = .;
MPRINT(EM_DIAGRAM):   else T_CLINTON = (CLINTON - 0) * 2.52723568749996;
MPRINT(EM_DIAGRAM):   *** Standardize CLOCK ;
MPRINT(EM_DIAGRAM):   drop T_CLOCK ;
MPRINT(EM_DIAGRAM):   if missing( CLOCK ) then T_CLOCK = .;
MPRINT(EM_DIAGRAM):   else T_CLOCK = (CLOCK - 0) * 5.26100413043712;
MPRINT(EM_DIAGRAM):   *** Standardize CLOSE ;
MPRINT(EM_DIAGRAM):   drop T_CLOSE ;
MPRINT(EM_DIAGRAM):   if missing( CLOSE ) then T_CLOSE = .;
MPRINT(EM_DIAGRAM):   else T_CLOSE = (CLOSE - 0) * 6.98170828250011;
MPRINT(EM_DIAGRAM):   *** Standardize CLUB ;
MPRINT(EM_DIAGRAM):   drop T_CLUB ;
MPRINT(EM_DIAGRAM):   if missing( CLUB ) then T_CLUB = .;
MPRINT(EM_DIAGRAM):   else T_CLUB = (CLUB - 0) * 2.02295112369645;
MPRINT(EM_DIAGRAM):   *** Standardize CMU ;
MPRINT(EM_DIAGRAM):   drop T_CMU ;
MPRINT(EM_DIAGRAM):   if missing( CMU ) then T_CMU = .;
MPRINT(EM_DIAGRAM):   else T_CMU = (CMU - 0) * 4.95788840971507;
MPRINT(EM_DIAGRAM):   *** Standardize CODE ;
MPRINT(EM_DIAGRAM):   drop T_CODE ;
MPRINT(EM_DIAGRAM):   if missing( CODE ) then T_CODE = .;
MPRINT(EM_DIAGRAM):   else T_CODE = (CODE - 0) * 3.98645548043578;
MPRINT(EM_DIAGRAM):   *** Standardize COLD ;
MPRINT(EM_DIAGRAM):   drop T_COLD ;
MPRINT(EM_DIAGRAM):   if missing( COLD ) then T_COLD = .;
MPRINT(EM_DIAGRAM):   else T_COLD = (COLD - 0) * 6.78229617323955;
MPRINT(EM_DIAGRAM):   *** Standardize COLLEG ;
MPRINT(EM_DIAGRAM):   drop T_COLLEG ;
MPRINT(EM_DIAGRAM):   if missing( COLLEG ) then T_COLLEG = .;
MPRINT(EM_DIAGRAM):   else T_COLLEG = (COLLEG - 0) * 7.32756382427756;
MPRINT(EM_DIAGRAM):   *** Standardize COLLIN ;
MPRINT(EM_DIAGRAM):   drop T_COLLIN ;
MPRINT(EM_DIAGRAM):   if missing( COLLIN ) then T_COLLIN = .;
MPRINT(EM_DIAGRAM):   else T_COLLIN = (COLLIN - 0) * 2.26486998981305;
MPRINT(EM_DIAGRAM):   *** Standardize COLOR ;
MPRINT(EM_DIAGRAM):   drop T_COLOR ;
MPRINT(EM_DIAGRAM):   if missing( COLOR ) then T_COLOR = .;
MPRINT(EM_DIAGRAM):   else T_COLOR = (COLOR - 0) * 2.27872473230825;
MPRINT(EM_DIAGRAM):   *** Standardize COLORADO ;
MPRINT(EM_DIAGRAM):   drop T_COLORADO ;
MPRINT(EM_DIAGRAM):   if missing( COLORADO ) then T_COLORADO = .;
MPRINT(EM_DIAGRAM):   else T_COLORADO = (COLORADO - 0) * 3.82983454263901;
MPRINT(EM_DIAGRAM):   *** Standardize COLORMAP ;
MPRINT(EM_DIAGRAM):   drop T_COLORMAP ;
MPRINT(EM_DIAGRAM):   if missing( COLORMAP ) then T_COLORMAP = .;
MPRINT(EM_DIAGRAM):   else T_COLORMAP = (COLORMAP - 0) * 1.63063905523976;
MPRINT(EM_DIAGRAM):   *** Standardize COLUMBIA ;
MPRINT(EM_DIAGRAM):   drop T_COLUMBIA ;
MPRINT(EM_DIAGRAM):   if missing( COLUMBIA ) then T_COLUMBIA = .;
MPRINT(EM_DIAGRAM):   else T_COLUMBIA = (COLUMBIA - 0) * 5.41344101049814;
MPRINT(EM_DIAGRAM):   *** Standardize COMBIN ;
MPRINT(EM_DIAGRAM):   drop T_COMBIN ;
MPRINT(EM_DIAGRAM):   if missing( COMBIN ) then T_COMBIN = .;
MPRINT(EM_DIAGRAM):   else T_COMBIN = (COMBIN - 0) * 7.3069269214163;
MPRINT(EM_DIAGRAM):   *** Standardize COMMAND ;
MPRINT(EM_DIAGRAM):   drop T_COMMAND ;
MPRINT(EM_DIAGRAM):   if missing( COMMAND ) then T_COMMAND = .;
MPRINT(EM_DIAGRAM):   else T_COMMAND = (COMMAND - 0) * 3.36137253930724;
MPRINT(EM_DIAGRAM):   *** Standardize COMMENT ;
MPRINT(EM_DIAGRAM):   drop T_COMMENT ;
MPRINT(EM_DIAGRAM):   if missing( COMMENT ) then T_COMMENT = .;
MPRINT(EM_DIAGRAM):   else T_COMMENT = (COMMENT - 0) * 8.05640955548622;
MPRINT(EM_DIAGRAM):   *** Standardize COMMERCI ;
MPRINT(EM_DIAGRAM):   drop T_COMMERCI ;
MPRINT(EM_DIAGRAM):   if missing( COMMERCI ) then T_COMMERCI = .;
MPRINT(EM_DIAGRAM):   else T_COMMERCI = (COMMERCI - 0) * 5.75715155084723;
MPRINT(EM_DIAGRAM):   *** Standardize COMMIT ;
MPRINT(EM_DIAGRAM):   drop T_COMMIT ;
MPRINT(EM_DIAGRAM):   if missing( COMMIT ) then T_COMMIT = .;
MPRINT(EM_DIAGRAM):   else T_COMMIT = (COMMIT - 0) * 9.19853714530586;
MPRINT(EM_DIAGRAM):   *** Standardize COMMON ;
MPRINT(EM_DIAGRAM):   drop T_COMMON ;
MPRINT(EM_DIAGRAM):   if missing( COMMON ) then T_COMMON = .;
MPRINT(EM_DIAGRAM):   else T_COMMON = (COMMON - 0) * 7.61032031850079;
MPRINT(EM_DIAGRAM):   *** Standardize COMMUN ;
MPRINT(EM_DIAGRAM):   drop T_COMMUN ;
MPRINT(EM_DIAGRAM):   if missing( COMMUN ) then T_COMMUN = .;
MPRINT(EM_DIAGRAM):   else T_COMMUN = (COMMUN - 0) * 6.34525155997964;
MPRINT(EM_DIAGRAM):   *** Standardize COMP ;
MPRINT(EM_DIAGRAM):   drop T_COMP ;
MPRINT(EM_DIAGRAM):   if missing( COMP ) then T_COMP = .;
MPRINT(EM_DIAGRAM):   else T_COMP = (COMP - 0) * 4.34484145200034;
MPRINT(EM_DIAGRAM):   *** Standardize COMPANI ;
MPRINT(EM_DIAGRAM):   drop T_COMPANI ;
MPRINT(EM_DIAGRAM):   if missing( COMPANI ) then T_COMPANI = .;
MPRINT(EM_DIAGRAM):   else T_COMPANI = (COMPANI - 0) * 4.4440297471331;
MPRINT(EM_DIAGRAM):   *** Standardize COMPAR ;
MPRINT(EM_DIAGRAM):   drop T_COMPAR ;
MPRINT(EM_DIAGRAM):   if missing( COMPAR ) then T_COMPAR = .;
MPRINT(EM_DIAGRAM):   else T_COMPAR = (COMPAR - 0) * 3.73923645059922;
MPRINT(EM_DIAGRAM):   *** Standardize COMPAT ;
MPRINT(EM_DIAGRAM):   drop T_COMPAT ;
MPRINT(EM_DIAGRAM):   if missing( COMPAT ) then T_COMPAT = .;
MPRINT(EM_DIAGRAM):   else T_COMPAT = (COMPAT - 0) * 3.14480389224811;
MPRINT(EM_DIAGRAM):   *** Standardize COMPIL ;
MPRINT(EM_DIAGRAM):   drop T_COMPIL ;
MPRINT(EM_DIAGRAM):   if missing( COMPIL ) then T_COMPIL = .;
MPRINT(EM_DIAGRAM):   else T_COMPIL = (COMPIL - 0) * 2.21826483650506;
MPRINT(EM_DIAGRAM):   *** Standardize COMPLET ;
MPRINT(EM_DIAGRAM):   drop T_COMPLET ;
MPRINT(EM_DIAGRAM):   if missing( COMPLET ) then T_COMPLET = .;
MPRINT(EM_DIAGRAM):   else T_COMPLET = (COMPLET - 0) * 11.8454160287831;
MPRINT(EM_DIAGRAM):   *** Standardize COMPON ;
MPRINT(EM_DIAGRAM):   drop T_COMPON ;
MPRINT(EM_DIAGRAM):   if missing( COMPON ) then T_COMPON = .;
MPRINT(EM_DIAGRAM):   else T_COMPON = (COMPON - 0) * 3.58214823679817;
MPRINT(EM_DIAGRAM):   *** Standardize COMPUT ;
MPRINT(EM_DIAGRAM):   drop T_COMPUT ;
MPRINT(EM_DIAGRAM):   if missing( COMPUT ) then T_COMPUT = .;
MPRINT(EM_DIAGRAM):   else T_COMPUT = (COMPUT - 0) * 5.40785388374868;
MPRINT(EM_DIAGRAM):   *** Standardize CONCERN ;
MPRINT(EM_DIAGRAM):   drop T_CONCERN ;
MPRINT(EM_DIAGRAM):   if missing( CONCERN ) then T_CONCERN = .;
MPRINT(EM_DIAGRAM):   else T_CONCERN = (CONCERN - 0) * 5.42983200949332;
MPRINT(EM_DIAGRAM):   *** Standardize CONCRET ;
MPRINT(EM_DIAGRAM):   drop T_CONCRET ;
MPRINT(EM_DIAGRAM):   if missing( CONCRET ) then T_CONCRET = .;
MPRINT(EM_DIAGRAM):   else T_CONCRET = (CONCRET - 0) * 3.61606574373341;
MPRINT(EM_DIAGRAM):   *** Standardize CONDIT ;
MPRINT(EM_DIAGRAM):   drop T_CONDIT ;
MPRINT(EM_DIAGRAM):   if missing( CONDIT ) then T_CONDIT = .;
MPRINT(EM_DIAGRAM):   else T_CONDIT = (CONDIT - 0) * 4.76711807725721;
MPRINT(EM_DIAGRAM):   *** Standardize CONFER ;
MPRINT(EM_DIAGRAM):   drop T_CONFER ;
MPRINT(EM_DIAGRAM):   if missing( CONFER ) then T_CONFER = .;
MPRINT(EM_DIAGRAM):   else T_CONFER = (CONFER - 0) * 3.41017976702822;
MPRINT(EM_DIAGRAM):   *** Standardize CONFIGUR ;
MPRINT(EM_DIAGRAM):   drop T_CONFIGUR ;
MPRINT(EM_DIAGRAM):   if missing( CONFIGUR ) then T_CONFIGUR = .;
MPRINT(EM_DIAGRAM):   else T_CONFIGUR = (CONFIGUR - 0) * 5.23846308062801;
MPRINT(EM_DIAGRAM):   *** Standardize CONFLICT ;
MPRINT(EM_DIAGRAM):   drop T_CONFLICT ;
MPRINT(EM_DIAGRAM):   if missing( CONFLICT ) then T_CONFLICT = .;
MPRINT(EM_DIAGRAM):   else T_CONFLICT = (CONFLICT - 0) * 9.16756223465224;
MPRINT(EM_DIAGRAM):   *** Standardize CONFUS ;
MPRINT(EM_DIAGRAM):   drop T_CONFUS ;
MPRINT(EM_DIAGRAM):   if missing( CONFUS ) then T_CONFUS = .;
MPRINT(EM_DIAGRAM):   else T_CONFUS = (CONFUS - 0) * 5.48019519106222;
MPRINT(EM_DIAGRAM):   *** Standardize CONNECT ;
MPRINT(EM_DIAGRAM):   drop T_CONNECT ;
MPRINT(EM_DIAGRAM):   if missing( CONNECT ) then T_CONNECT = .;
MPRINT(EM_DIAGRAM):   else T_CONNECT = (CONNECT - 0) * 4.63257715030811;
MPRINT(EM_DIAGRAM):   *** Standardize CONSID ;
MPRINT(EM_DIAGRAM):   drop T_CONSID ;
MPRINT(EM_DIAGRAM):   if missing( CONSID ) then T_CONSID = .;
MPRINT(EM_DIAGRAM):   else T_CONSID = (CONSID - 0) * 8.2296855325467;
MPRINT(EM_DIAGRAM):   *** Standardize CONSIST ;
MPRINT(EM_DIAGRAM):   drop T_CONSIST ;
MPRINT(EM_DIAGRAM):   if missing( CONSIST ) then T_CONSIST = .;
MPRINT(EM_DIAGRAM):   else T_CONSIST = (CONSIST - 0) * 5.57487099715506;
MPRINT(EM_DIAGRAM):   *** Standardize CONSTRUCT ;
MPRINT(EM_DIAGRAM):   drop T_CONSTRUCT ;
MPRINT(EM_DIAGRAM):   if missing( CONSTRUCT ) then T_CONSTRUCT = .;
MPRINT(EM_DIAGRAM):   else T_CONSTRUCT = (CONSTRUCT - 0) * 6.00144877611426;
MPRINT(EM_DIAGRAM):   *** Standardize CONSULT ;
MPRINT(EM_DIAGRAM):   drop T_CONSULT ;
MPRINT(EM_DIAGRAM):   if missing( CONSULT ) then T_CONSULT = .;
MPRINT(EM_DIAGRAM):   else T_CONSULT = (CONSULT - 0) * 6.67437864853782;
MPRINT(EM_DIAGRAM):   *** Standardize CONTACT ;
MPRINT(EM_DIAGRAM):   drop T_CONTACT ;
MPRINT(EM_DIAGRAM):   if missing( CONTACT ) then T_CONTACT = .;
MPRINT(EM_DIAGRAM):   else T_CONTACT = (CONTACT - 0) * 5.26100413043712;
MPRINT(EM_DIAGRAM):   *** Standardize CONTENT ;
MPRINT(EM_DIAGRAM):   drop T_CONTENT ;
MPRINT(EM_DIAGRAM):   if missing( CONTENT ) then T_CONTENT = .;
MPRINT(EM_DIAGRAM):   else T_CONTENT = (CONTENT - 0) * 9.03982951311004;
MPRINT(EM_DIAGRAM):   *** Standardize CONTEXT ;
MPRINT(EM_DIAGRAM):   drop T_CONTEXT ;
MPRINT(EM_DIAGRAM):   if missing( CONTEXT ) then T_CONTEXT = .;
MPRINT(EM_DIAGRAM):   else T_CONTEXT = (CONTEXT - 0) * 2.486233504967;
MPRINT(EM_DIAGRAM):   *** Standardize CONTINU ;
MPRINT(EM_DIAGRAM):   drop T_CONTINU ;
MPRINT(EM_DIAGRAM):   if missing( CONTINU ) then T_CONTINU = .;
MPRINT(EM_DIAGRAM):   else T_CONTINU = (CONTINU - 0) * 9.02551316053194;
MPRINT(EM_DIAGRAM):   *** Standardize CONTROL ;
MPRINT(EM_DIAGRAM):   drop T_CONTROL ;
MPRINT(EM_DIAGRAM):   if missing( CONTROL ) then T_CONTROL = .;
MPRINT(EM_DIAGRAM):   else T_CONTROL = (CONTROL - 0) * 6.21979205590598;
MPRINT(EM_DIAGRAM):   *** Standardize CONVENT ;
MPRINT(EM_DIAGRAM):   drop T_CONVENT ;
MPRINT(EM_DIAGRAM):   if missing( CONVENT ) then T_CONVENT = .;
MPRINT(EM_DIAGRAM):   else T_CONVENT = (CONVENT - 0) * 6.31904272736892;
MPRINT(EM_DIAGRAM):   *** Standardize CONVERT ;
MPRINT(EM_DIAGRAM):   drop T_CONVERT ;
MPRINT(EM_DIAGRAM):   if missing( CONVERT ) then T_CONVERT = .;
MPRINT(EM_DIAGRAM):   else T_CONVERT = (CONVERT - 0) * 3.5368045882311;
MPRINT(EM_DIAGRAM):   *** Standardize COOL ;
MPRINT(EM_DIAGRAM):   drop T_COOL ;
MPRINT(EM_DIAGRAM):   if missing( COOL ) then T_COOL = .;
MPRINT(EM_DIAGRAM):   else T_COOL = (COOL - 0) * 2.90193873338284;
MPRINT(EM_DIAGRAM):   *** Standardize COPI ;
MPRINT(EM_DIAGRAM):   drop T_COPI ;
MPRINT(EM_DIAGRAM):   if missing( COPI ) then T_COPI = .;
MPRINT(EM_DIAGRAM):   else T_COPI = (COPI - 0) * 3.62407904166108;
MPRINT(EM_DIAGRAM):   *** Standardize CORN ;
MPRINT(EM_DIAGRAM):   drop T_CORN ;
MPRINT(EM_DIAGRAM):   if missing( CORN ) then T_CORN = .;
MPRINT(EM_DIAGRAM):   else T_CORN = (CORN - 0) * 2.41632077060244;
MPRINT(EM_DIAGRAM):   *** Standardize CORP ;
MPRINT(EM_DIAGRAM):   drop T_CORP ;
MPRINT(EM_DIAGRAM):   if missing( CORP ) then T_CORP = .;
MPRINT(EM_DIAGRAM):   else T_CORP = (CORP - 0) * 4.76455478200072;
MPRINT(EM_DIAGRAM):   *** Standardize CORPOR ;
MPRINT(EM_DIAGRAM):   drop T_CORPOR ;
MPRINT(EM_DIAGRAM):   if missing( CORPOR ) then T_CORPOR = .;
MPRINT(EM_DIAGRAM):   else T_CORPOR = (CORPOR - 0) * 4.67577108638705;
MPRINT(EM_DIAGRAM):   *** Standardize CORRECT ;
MPRINT(EM_DIAGRAM):   drop T_CORRECT ;
MPRINT(EM_DIAGRAM):   if missing( CORRECT ) then T_CORRECT = .;
MPRINT(EM_DIAGRAM):   else T_CORRECT = (CORRECT - 0) * 4.41662116784113;
MPRINT(EM_DIAGRAM):   *** Standardize COST ;
MPRINT(EM_DIAGRAM):   drop T_COST ;
MPRINT(EM_DIAGRAM):   if missing( COST ) then T_COST = .;
MPRINT(EM_DIAGRAM):   else T_COST = (COST - 0) * 2.70801271766779;
MPRINT(EM_DIAGRAM):   *** Standardize COULDN ;
MPRINT(EM_DIAGRAM):   drop T_COULDN ;
MPRINT(EM_DIAGRAM):   if missing( COULDN ) then T_COULDN = .;
MPRINT(EM_DIAGRAM):   else T_COULDN = (COULDN - 0) * 8.03540401165337;
MPRINT(EM_DIAGRAM):   *** Standardize COUNT ;
MPRINT(EM_DIAGRAM):   drop T_COUNT ;
MPRINT(EM_DIAGRAM):   if missing( COUNT ) then T_COUNT = .;
MPRINT(EM_DIAGRAM):   else T_COUNT = (COUNT - 0) * 4.7386403475818;
MPRINT(EM_DIAGRAM):   *** Standardize COUNTRI ;
MPRINT(EM_DIAGRAM):   drop T_COUNTRI ;
MPRINT(EM_DIAGRAM):   if missing( COUNTRI ) then T_COUNTRI = .;
MPRINT(EM_DIAGRAM):   else T_COUNTRI = (COUNTRI - 0) * 4.06837336725185;
MPRINT(EM_DIAGRAM):   *** Standardize COUPL ;
MPRINT(EM_DIAGRAM):   drop T_COUPL ;
MPRINT(EM_DIAGRAM):   if missing( COUPL ) then T_COUPL = .;
MPRINT(EM_DIAGRAM):   else T_COUPL = (COUPL - 0) * 6.70581286226606;
MPRINT(EM_DIAGRAM):   *** Standardize COVER ;
MPRINT(EM_DIAGRAM):   drop T_COVER ;
MPRINT(EM_DIAGRAM):   if missing( COVER ) then T_COVER = .;
MPRINT(EM_DIAGRAM):   else T_COVER = (COVER - 0) * 8.08178214842089;
MPRINT(EM_DIAGRAM):   *** Standardize COVINGTON ;
MPRINT(EM_DIAGRAM):   drop T_COVINGTON ;
MPRINT(EM_DIAGRAM):   if missing( COVINGTON ) then T_COVINGTON = .;
MPRINT(EM_DIAGRAM):   else T_COVINGTON = (COVINGTON - 0) * 3.85408931877677;
MPRINT(EM_DIAGRAM):   *** Standardize CPR ;
MPRINT(EM_DIAGRAM):   drop T_CPR ;
MPRINT(EM_DIAGRAM):   if missing( CPR ) then T_CPR = .;
MPRINT(EM_DIAGRAM):   else T_CPR = (CPR - 0) * 3.37581493656427;
MPRINT(EM_DIAGRAM):   *** Standardize CREAT ;
MPRINT(EM_DIAGRAM):   drop T_CREAT ;
MPRINT(EM_DIAGRAM):   if missing( CREAT ) then T_CREAT = .;
MPRINT(EM_DIAGRAM):   else T_CREAT = (CREAT - 0) * 6.18435445164465;
MPRINT(EM_DIAGRAM):   *** Standardize CROHN ;
MPRINT(EM_DIAGRAM):   drop T_CROHN ;
MPRINT(EM_DIAGRAM):   if missing( CROHN ) then T_CROHN = .;
MPRINT(EM_DIAGRAM):   else T_CROHN = (CROHN - 0) * 2.94040990454308;
MPRINT(EM_DIAGRAM):   *** Standardize CROSS ;
MPRINT(EM_DIAGRAM):   drop T_CROSS ;
MPRINT(EM_DIAGRAM):   if missing( CROSS ) then T_CROSS = .;
MPRINT(EM_DIAGRAM):   else T_CROSS = (CROSS - 0) * 3.13990207185164;
MPRINT(EM_DIAGRAM):   *** Standardize CURE ;
MPRINT(EM_DIAGRAM):   drop T_CURE ;
MPRINT(EM_DIAGRAM):   if missing( CURE ) then T_CURE = .;
MPRINT(EM_DIAGRAM):   else T_CURE = (CURE - 0) * 4.42824618992635;
MPRINT(EM_DIAGRAM):   *** Standardize CURRENT ;
MPRINT(EM_DIAGRAM):   drop T_CURRENT ;
MPRINT(EM_DIAGRAM):   if missing( CURRENT ) then T_CURRENT = .;
MPRINT(EM_DIAGRAM):   else T_CURRENT = (CURRENT - 0) * 4.80677628507551;
MPRINT(EM_DIAGRAM):   *** Standardize CURSOR ;
MPRINT(EM_DIAGRAM):   drop T_CURSOR ;
MPRINT(EM_DIAGRAM):   if missing( CURSOR ) then T_CURSOR = .;
MPRINT(EM_DIAGRAM):   else T_CURSOR = (CURSOR - 0) * 1.66215393216742;
MPRINT(EM_DIAGRAM):   *** Standardize CUSTOM ;
MPRINT(EM_DIAGRAM):   drop T_CUSTOM ;
MPRINT(EM_DIAGRAM):   if missing( CUSTOM ) then T_CUSTOM = .;
MPRINT(EM_DIAGRAM):   else T_CUSTOM = (CUSTOM - 0) * 6.15701599076972;
MPRINT(EM_DIAGRAM):   *** Standardize CUTE ;
MPRINT(EM_DIAGRAM):   drop T_CUTE ;
MPRINT(EM_DIAGRAM):   if missing( CUTE ) then T_CUTE = .;
MPRINT(EM_DIAGRAM):   else T_CUTE = (CUTE - 0) * 2.31966793977834;
MPRINT(EM_DIAGRAM):   *** Standardize CYCL ;
MPRINT(EM_DIAGRAM):   drop T_CYCL ;
MPRINT(EM_DIAGRAM):   if missing( CYCL ) then T_CYCL = .;
MPRINT(EM_DIAGRAM):   else T_CYCL = (CYCL - 0) * 2.59118164936694;
MPRINT(EM_DIAGRAM):   *** Standardize DAI ;
MPRINT(EM_DIAGRAM):   drop T_DAI ;
MPRINT(EM_DIAGRAM):   if missing( DAI ) then T_DAI = .;
MPRINT(EM_DIAGRAM):   else T_DAI = (DAI - 0) * 3.872164787462;
MPRINT(EM_DIAGRAM):   *** Standardize DAILI ;
MPRINT(EM_DIAGRAM):   drop T_DAILI ;
MPRINT(EM_DIAGRAM):   if missing( DAILI ) then T_DAILI = .;
MPRINT(EM_DIAGRAM):   else T_DAILI = (DAILI - 0) * 6.25742350225503;
MPRINT(EM_DIAGRAM):   *** Standardize DALE ;
MPRINT(EM_DIAGRAM):   drop T_DALE ;
MPRINT(EM_DIAGRAM):   if missing( DALE ) then T_DALE = .;
MPRINT(EM_DIAGRAM):   else T_DALE = (DALE - 0) * 1.25117002791032;
MPRINT(EM_DIAGRAM):   *** Standardize DAMAG ;
MPRINT(EM_DIAGRAM):   drop T_DAMAG ;
MPRINT(EM_DIAGRAM):   if missing( DAMAG ) then T_DAMAG = .;
MPRINT(EM_DIAGRAM):   else T_DAMAG = (DAMAG - 0) * 6.00144877611426;
MPRINT(EM_DIAGRAM):   *** Standardize DANGER ;
MPRINT(EM_DIAGRAM):   drop T_DANGER ;
MPRINT(EM_DIAGRAM):   if missing( DANGER ) then T_DANGER = .;
MPRINT(EM_DIAGRAM):   else T_DANGER = (DANGER - 0) * 3.74233389253611;
MPRINT(EM_DIAGRAM):   *** Standardize DANIEL ;
MPRINT(EM_DIAGRAM):   drop T_DANIEL ;
MPRINT(EM_DIAGRAM):   if missing( DANIEL ) then T_DANIEL = .;
MPRINT(EM_DIAGRAM):   else T_DANIEL = (DANIEL - 0) * 3.71015221318154;
MPRINT(EM_DIAGRAM):   *** Standardize DANNI ;
MPRINT(EM_DIAGRAM):   drop T_DANNI ;
MPRINT(EM_DIAGRAM):   if missing( DANNI ) then T_DANNI = .;
MPRINT(EM_DIAGRAM):   else T_DANNI = (DANNI - 0) * 2.69245138309165;
MPRINT(EM_DIAGRAM):   *** Standardize DATA ;
MPRINT(EM_DIAGRAM):   drop T_DATA ;
MPRINT(EM_DIAGRAM):   if missing( DATA ) then T_DATA = .;
MPRINT(EM_DIAGRAM):   else T_DATA = (DATA - 0) * 3.37502336487597;
MPRINT(EM_DIAGRAM):   *** Standardize DAVE ;
MPRINT(EM_DIAGRAM):   drop T_DAVE ;
MPRINT(EM_DIAGRAM):   if missing( DAVE ) then T_DAVE = .;
MPRINT(EM_DIAGRAM):   else T_DAVE = (DAVE - 0) * 3.46871595079858;
MPRINT(EM_DIAGRAM):   *** Standardize DAVID ;
MPRINT(EM_DIAGRAM):   drop T_DAVID ;
MPRINT(EM_DIAGRAM):   if missing( DAVID ) then T_DAVID = .;
MPRINT(EM_DIAGRAM):   else T_DAVID = (DAVID - 0) * 4.28651996609655;
MPRINT(EM_DIAGRAM):   *** Standardize DAVIDIAN ;
MPRINT(EM_DIAGRAM):   drop T_DAVIDIAN ;
MPRINT(EM_DIAGRAM):   if missing( DAVIDIAN ) then T_DAVIDIAN = .;
MPRINT(EM_DIAGRAM):   else T_DAVIDIAN = (DAVIDIAN - 0) * 3.68139541562301;
MPRINT(EM_DIAGRAM):   *** Standardize DAYTON ;
MPRINT(EM_DIAGRAM):   drop T_DAYTON ;
MPRINT(EM_DIAGRAM):   if missing( DAYTON ) then T_DAYTON = .;
MPRINT(EM_DIAGRAM):   else T_DAYTON = (DAYTON - 0) * 1.11892580555133;
MPRINT(EM_DIAGRAM):   *** Standardize DEAD ;
MPRINT(EM_DIAGRAM):   drop T_DEAD ;
MPRINT(EM_DIAGRAM):   if missing( DEAD ) then T_DEAD = .;
MPRINT(EM_DIAGRAM):   else T_DEAD = (DEAD - 0) * 5.3692761148099;
MPRINT(EM_DIAGRAM):   *** Standardize DEAL ;
MPRINT(EM_DIAGRAM):   drop T_DEAL ;
MPRINT(EM_DIAGRAM):   if missing( DEAL ) then T_DEAL = .;
MPRINT(EM_DIAGRAM):   else T_DEAL = (DEAL - 0) * 7.53964745730607;
MPRINT(EM_DIAGRAM):   *** Standardize DEAR ;
MPRINT(EM_DIAGRAM):   drop T_DEAR ;
MPRINT(EM_DIAGRAM):   if missing( DEAR ) then T_DEAR = .;
MPRINT(EM_DIAGRAM):   else T_DEAR = (DEAR - 0) * 3.47424233849575;
MPRINT(EM_DIAGRAM):   *** Standardize DEATH ;
MPRINT(EM_DIAGRAM):   drop T_DEATH ;
MPRINT(EM_DIAGRAM):   if missing( DEATH ) then T_DEATH = .;
MPRINT(EM_DIAGRAM):   else T_DEATH = (DEATH - 0) * 3.96464784639515;
MPRINT(EM_DIAGRAM):   *** Standardize DECID ;
MPRINT(EM_DIAGRAM):   drop T_DECID ;
MPRINT(EM_DIAGRAM):   if missing( DECID ) then T_DECID = .;
MPRINT(EM_DIAGRAM):   else T_DECID = (DECID - 0) * 7.17933398515052;
MPRINT(EM_DIAGRAM):   *** Standardize DECOD ;
MPRINT(EM_DIAGRAM):   drop T_DECOD ;
MPRINT(EM_DIAGRAM):   if missing( DECOD ) then T_DECOD = .;
MPRINT(EM_DIAGRAM):   else T_DECOD = (DECOD - 0) * 1.96368532249836;
MPRINT(EM_DIAGRAM):   *** Standardize DEFAULT ;
MPRINT(EM_DIAGRAM):   drop T_DEFAULT ;
MPRINT(EM_DIAGRAM):   if missing( DEFAULT ) then T_DEFAULT = .;
MPRINT(EM_DIAGRAM):   else T_DEFAULT = (DEFAULT - 0) * 1.74670376610717;
MPRINT(EM_DIAGRAM):   *** Standardize DEFIN ;
MPRINT(EM_DIAGRAM):   drop T_DEFIN ;
MPRINT(EM_DIAGRAM):   if missing( DEFIN ) then T_DEFIN = .;
MPRINT(EM_DIAGRAM):   else T_DEFIN = (DEFIN - 0) * 2.65485856582243;
MPRINT(EM_DIAGRAM):   *** Standardize DEFINIT ;
MPRINT(EM_DIAGRAM):   drop T_DEFINIT ;
MPRINT(EM_DIAGRAM):   if missing( DEFINIT ) then T_DEFINIT = .;
MPRINT(EM_DIAGRAM):   else T_DEFINIT = (DEFINIT - 0) * 6.31300685267402;
MPRINT(EM_DIAGRAM):   *** Standardize DEGRE ;
MPRINT(EM_DIAGRAM):   drop T_DEGRE ;
MPRINT(EM_DIAGRAM):   if missing( DEGRE ) then T_DEGRE = .;
MPRINT(EM_DIAGRAM):   else T_DEGRE = (DEGRE - 0) * 3.39250178494328;
MPRINT(EM_DIAGRAM):   *** Standardize DEIR ;
MPRINT(EM_DIAGRAM):   drop T_DEIR ;
MPRINT(EM_DIAGRAM):   if missing( DEIR ) then T_DEIR = .;
MPRINT(EM_DIAGRAM):   else T_DEIR = (DEIR - 0) * 3.96357930400715;
MPRINT(EM_DIAGRAM):   *** Standardize DELET ;
MPRINT(EM_DIAGRAM):   drop T_DELET ;
MPRINT(EM_DIAGRAM):   if missing( DELET ) then T_DELET = .;
MPRINT(EM_DIAGRAM):   else T_DELET = (DELET - 0) * 3.90782938681555;
MPRINT(EM_DIAGRAM):   *** Standardize DEPART ;
MPRINT(EM_DIAGRAM):   drop T_DEPART ;
MPRINT(EM_DIAGRAM):   if missing( DEPART ) then T_DEPART = .;
MPRINT(EM_DIAGRAM):   else T_DEPART = (DEPART - 0) * 7.50475429483073;
MPRINT(EM_DIAGRAM):   *** Standardize DEPEND ;
MPRINT(EM_DIAGRAM):   drop T_DEPEND ;
MPRINT(EM_DIAGRAM):   if missing( DEPEND ) then T_DEPEND = .;
MPRINT(EM_DIAGRAM):   else T_DEPEND = (DEPEND - 0) * 9.53031714483267;
MPRINT(EM_DIAGRAM):   *** Standardize DEPT ;
MPRINT(EM_DIAGRAM):   drop T_DEPT ;
MPRINT(EM_DIAGRAM):   if missing( DEPT ) then T_DEPT = .;
MPRINT(EM_DIAGRAM):   else T_DEPT = (DEPT - 0) * 6.56911162004866;
MPRINT(EM_DIAGRAM):   *** Standardize DEPTH ;
MPRINT(EM_DIAGRAM):   drop T_DEPTH ;
MPRINT(EM_DIAGRAM):   if missing( DEPTH ) then T_DEPTH = .;
MPRINT(EM_DIAGRAM):   else T_DEPTH = (DEPTH - 0) * 3.29512522835857;
MPRINT(EM_DIAGRAM):   *** Standardize DESIGN ;
MPRINT(EM_DIAGRAM):   drop T_DESIGN ;
MPRINT(EM_DIAGRAM):   if missing( DESIGN ) then T_DESIGN = .;
MPRINT(EM_DIAGRAM):   else T_DESIGN = (DESIGN - 0) * 2.94441411189408;
MPRINT(EM_DIAGRAM):   *** Standardize DESTROI ;
MPRINT(EM_DIAGRAM):   drop T_DESTROI ;
MPRINT(EM_DIAGRAM):   if missing( DESTROI ) then T_DESTROI = .;
MPRINT(EM_DIAGRAM):   else T_DESTROI = (DESTROI - 0) * 7.29575469253259;
MPRINT(EM_DIAGRAM):   *** Standardize DETAIL ;
MPRINT(EM_DIAGRAM):   drop T_DETAIL ;
MPRINT(EM_DIAGRAM):   if missing( DETAIL ) then T_DETAIL = .;
MPRINT(EM_DIAGRAM):   else T_DETAIL = (DETAIL - 0) * 6.44695968543357;
MPRINT(EM_DIAGRAM):   *** Standardize DETECT ;
MPRINT(EM_DIAGRAM):   drop T_DETECT ;
MPRINT(EM_DIAGRAM):   if missing( DETECT ) then T_DETECT = .;
MPRINT(EM_DIAGRAM):   else T_DETECT = (DETECT - 0) * 3.91548069241132;
MPRINT(EM_DIAGRAM):   *** Standardize DETECTOR ;
MPRINT(EM_DIAGRAM):   drop T_DETECTOR ;
MPRINT(EM_DIAGRAM):   if missing( DETECTOR ) then T_DETECTOR = .;
MPRINT(EM_DIAGRAM):   else T_DETECTOR = (DETECTOR - 0) * 1.08709270349317;
MPRINT(EM_DIAGRAM):   *** Standardize DETERMIN ;
MPRINT(EM_DIAGRAM):   drop T_DETERMIN ;
MPRINT(EM_DIAGRAM):   if missing( DETERMIN ) then T_DETERMIN = .;
MPRINT(EM_DIAGRAM):   else T_DETERMIN = (DETERMIN - 0) * 7.65216374078904;
MPRINT(EM_DIAGRAM):   *** Standardize DEVELOP ;
MPRINT(EM_DIAGRAM):   drop T_DEVELOP ;
MPRINT(EM_DIAGRAM):   if missing( DEVELOP ) then T_DEVELOP = .;
MPRINT(EM_DIAGRAM):   else T_DEVELOP = (DEVELOP - 0) * 6.24478822930802;
MPRINT(EM_DIAGRAM):   *** Standardize DEVIC ;
MPRINT(EM_DIAGRAM):   drop T_DEVIC ;
MPRINT(EM_DIAGRAM):   if missing( DEVIC ) then T_DEVIC = .;
MPRINT(EM_DIAGRAM):   else T_DEVIC = (DEVIC - 0) * 4.67205735821466;
MPRINT(EM_DIAGRAM):   *** Standardize DIAGNOS ;
MPRINT(EM_DIAGRAM):   drop T_DIAGNOS ;
MPRINT(EM_DIAGRAM):   if missing( DIAGNOS ) then T_DIAGNOS = .;
MPRINT(EM_DIAGRAM):   else T_DIAGNOS = (DIAGNOS - 0) * 6.67437864853782;
MPRINT(EM_DIAGRAM):   *** Standardize DIAGRAM ;
MPRINT(EM_DIAGRAM):   drop T_DIAGRAM ;
MPRINT(EM_DIAGRAM):   if missing( DIAGRAM ) then T_DIAGRAM = .;
MPRINT(EM_DIAGRAM):   else T_DIAGRAM = (DIAGRAM - 0) * 3.42614482210788;
MPRINT(EM_DIAGRAM):   *** Standardize DIALOG ;
MPRINT(EM_DIAGRAM):   drop T_DIALOG ;
MPRINT(EM_DIAGRAM):   if missing( DIALOG ) then T_DIALOG = .;
MPRINT(EM_DIAGRAM):   else T_DIALOG = (DIALOG - 0) * 3.52759981380202;
MPRINT(EM_DIAGRAM):   *** Standardize DICK ;
MPRINT(EM_DIAGRAM):   drop T_DICK ;
MPRINT(EM_DIAGRAM):   if missing( DICK ) then T_DICK = .;
MPRINT(EM_DIAGRAM):   else T_DICK = (DICK - 0) * 2.06192705758075;
MPRINT(EM_DIAGRAM):   *** Standardize DIDN ;
MPRINT(EM_DIAGRAM):   drop T_DIDN ;
MPRINT(EM_DIAGRAM):   if missing( DIDN ) then T_DIDN = .;
MPRINT(EM_DIAGRAM):   else T_DIDN = (DIDN - 0) * 9.51207444938571;
MPRINT(EM_DIAGRAM):   *** Standardize DIEGO ;
MPRINT(EM_DIAGRAM):   drop T_DIEGO ;
MPRINT(EM_DIAGRAM):   if missing( DIEGO ) then T_DIEGO = .;
MPRINT(EM_DIAGRAM):   else T_DIEGO = (DIEGO - 0) * 2.97206427188941;
MPRINT(EM_DIAGRAM):   *** Standardize DIET ;
MPRINT(EM_DIAGRAM):   drop T_DIET ;
MPRINT(EM_DIAGRAM):   if missing( DIET ) then T_DIET = .;
MPRINT(EM_DIAGRAM):   else T_DIET = (DIET - 0) * 2.88917112849646;
MPRINT(EM_DIAGRAM):   *** Standardize DIFFER ;
MPRINT(EM_DIAGRAM):   drop T_DIFFER ;
MPRINT(EM_DIAGRAM):   if missing( DIFFER ) then T_DIFFER = .;
MPRINT(EM_DIAGRAM):   else T_DIFFER = (DIFFER - 0) * 5.31710677495046;
MPRINT(EM_DIAGRAM):   *** Standardize DIGIT ;
MPRINT(EM_DIAGRAM):   drop T_DIGIT ;
MPRINT(EM_DIAGRAM):   if missing( DIGIT ) then T_DIGIT = .;
MPRINT(EM_DIAGRAM):   else T_DIGIT = (DIGIT - 0) * 3.1270053074246;
MPRINT(EM_DIAGRAM):   *** Standardize DIMENS ;
MPRINT(EM_DIAGRAM):   drop T_DIMENS ;
MPRINT(EM_DIAGRAM):   if missing( DIMENS ) then T_DIMENS = .;
MPRINT(EM_DIAGRAM):   else T_DIMENS = (DIMENS - 0) * 2.41845516854674;
MPRINT(EM_DIAGRAM):   *** Standardize DIOD ;
MPRINT(EM_DIAGRAM):   drop T_DIOD ;
MPRINT(EM_DIAGRAM):   if missing( DIOD ) then T_DIOD = .;
MPRINT(EM_DIAGRAM):   else T_DIOD = (DIOD - 0) * 1.87675504186548;
MPRINT(EM_DIAGRAM):   *** Standardize DIRECT ;
MPRINT(EM_DIAGRAM):   drop T_DIRECT ;
MPRINT(EM_DIAGRAM):   if missing( DIRECT ) then T_DIRECT = .;
MPRINT(EM_DIAGRAM):   else T_DIRECT = (DIRECT - 0) * 6.73936961806028;
MPRINT(EM_DIAGRAM):   *** Standardize DIRECTORI ;
MPRINT(EM_DIAGRAM):   drop T_DIRECTORI ;
MPRINT(EM_DIAGRAM):   if missing( DIRECTORI ) then T_DIRECTORI = .;
MPRINT(EM_DIAGRAM):   else T_DIRECTORI = (DIRECTORI - 0) * 4.62377986416014;
MPRINT(EM_DIAGRAM):   *** Standardize DISCHARG ;
MPRINT(EM_DIAGRAM):   drop T_DISCHARG ;
MPRINT(EM_DIAGRAM):   if missing( DISCHARG ) then T_DISCHARG = .;
MPRINT(EM_DIAGRAM):   else T_DISCHARG = (DISCHARG - 0) * 6.46284579070333;
MPRINT(EM_DIAGRAM):   *** Standardize DISCLAIM ;
MPRINT(EM_DIAGRAM):   drop T_DISCLAIM ;
MPRINT(EM_DIAGRAM):   if missing( DISCLAIM ) then T_DISCLAIM = .;
MPRINT(EM_DIAGRAM):   else T_DISCLAIM = (DISCLAIM - 0) * 3.69556377920341;
MPRINT(EM_DIAGRAM):   *** Standardize DISCUSS ;
MPRINT(EM_DIAGRAM):   drop T_DISCUSS ;
MPRINT(EM_DIAGRAM):   if missing( DISCUSS ) then T_DISCUSS = .;
MPRINT(EM_DIAGRAM):   else T_DISCUSS = (DISCUSS - 0) * 3.58978875030988;
MPRINT(EM_DIAGRAM):   *** Standardize DISEAS ;
MPRINT(EM_DIAGRAM):   drop T_DISEAS ;
MPRINT(EM_DIAGRAM):   if missing( DISEAS ) then T_DISEAS = .;
MPRINT(EM_DIAGRAM):   else T_DISEAS = (DISEAS - 0) * 3.32887979826876;
MPRINT(EM_DIAGRAM):   *** Standardize DISK ;
MPRINT(EM_DIAGRAM):   drop T_DISK ;
MPRINT(EM_DIAGRAM):   if missing( DISK ) then T_DISK = .;
MPRINT(EM_DIAGRAM):   else T_DISK = (DISK - 0) * 3.47251188516889;
MPRINT(EM_DIAGRAM):   *** Standardize DISPLAI ;
MPRINT(EM_DIAGRAM):   drop T_DISPLAI ;
MPRINT(EM_DIAGRAM):   if missing( DISPLAI ) then T_DISPLAI = .;
MPRINT(EM_DIAGRAM):   else T_DISPLAI = (DISPLAI - 0) * 3.78752765238273;
MPRINT(EM_DIAGRAM):   *** Standardize DISTANC ;
MPRINT(EM_DIAGRAM):   drop T_DISTANC ;
MPRINT(EM_DIAGRAM):   if missing( DISTANC ) then T_DISTANC = .;
MPRINT(EM_DIAGRAM):   else T_DISTANC = (DISTANC - 0) * 2.12005771311841;
MPRINT(EM_DIAGRAM):   *** Standardize DISTRIBUT ;
MPRINT(EM_DIAGRAM):   drop T_DISTRIBUT ;
MPRINT(EM_DIAGRAM):   if missing( DISTRIBUT ) then T_DISTRIBUT = .;
MPRINT(EM_DIAGRAM):   else T_DISTRIBUT = (DISTRIBUT - 0) * 7.05552574600035;
MPRINT(EM_DIAGRAM):   *** Standardize DIVIS ;
MPRINT(EM_DIAGRAM):   drop T_DIVIS ;
MPRINT(EM_DIAGRAM):   if missing( DIVIS ) then T_DIVIS = .;
MPRINT(EM_DIAGRAM):   else T_DIVIS = (DIVIS - 0) * 4.6201743340613;
MPRINT(EM_DIAGRAM):   *** Standardize DOCTOR ;
MPRINT(EM_DIAGRAM):   drop T_DOCTOR ;
MPRINT(EM_DIAGRAM):   if missing( DOCTOR ) then T_DOCTOR = .;
MPRINT(EM_DIAGRAM):   else T_DOCTOR = (DOCTOR - 0) * 3.29683080963783;
MPRINT(EM_DIAGRAM):   *** Standardize DOCUMENT ;
MPRINT(EM_DIAGRAM):   drop T_DOCUMENT ;
MPRINT(EM_DIAGRAM):   if missing( DOCUMENT ) then T_DOCUMENT = .;
MPRINT(EM_DIAGRAM):   else T_DOCUMENT = (DOCUMENT - 0) * 4.30070396981033;
MPRINT(EM_DIAGRAM):   *** Standardize DOESN ;
MPRINT(EM_DIAGRAM):   drop T_DOESN ;
MPRINT(EM_DIAGRAM):   if missing( DOESN ) then T_DOESN = .;
MPRINT(EM_DIAGRAM):   else T_DOESN = (DOESN - 0) * 6.48645082745116;
MPRINT(EM_DIAGRAM):   *** Standardize DOMAIN ;
MPRINT(EM_DIAGRAM):   drop T_DOMAIN ;
MPRINT(EM_DIAGRAM):   if missing( DOMAIN ) then T_DOMAIN = .;
MPRINT(EM_DIAGRAM):   else T_DOMAIN = (DOMAIN - 0) * 4.10730993756174;
MPRINT(EM_DIAGRAM):   *** Standardize DOMIN ;
MPRINT(EM_DIAGRAM):   drop T_DOMIN ;
MPRINT(EM_DIAGRAM):   if missing( DOMIN ) then T_DOMIN = .;
MPRINT(EM_DIAGRAM):   else T_DOMIN = (DOMIN - 0) * 1.64589310081653;
MPRINT(EM_DIAGRAM):   *** Standardize DON ;
MPRINT(EM_DIAGRAM):   drop T_DON ;
MPRINT(EM_DIAGRAM):   if missing( DON ) then T_DON = .;
MPRINT(EM_DIAGRAM):   else T_DON = (DON - 0) * 8.24380917430803;
MPRINT(EM_DIAGRAM):   *** Standardize DONAT ;
MPRINT(EM_DIAGRAM):   drop T_DONAT ;
MPRINT(EM_DIAGRAM):   if missing( DONAT ) then T_DONAT = .;
MPRINT(EM_DIAGRAM):   else T_DONAT = (DONAT - 0) * 2.75977396675445;
MPRINT(EM_DIAGRAM):   *** Standardize DORTMUND ;
MPRINT(EM_DIAGRAM):   drop T_DORTMUND ;
MPRINT(EM_DIAGRAM):   if missing( DORTMUND ) then T_DORTMUND = .;
MPRINT(EM_DIAGRAM):   else T_DORTMUND = (DORTMUND - 0) * 1.66404350569172;
MPRINT(EM_DIAGRAM):   *** Standardize DOUBT ;
MPRINT(EM_DIAGRAM):   drop T_DOUBT ;
MPRINT(EM_DIAGRAM):   if missing( DOUBT ) then T_DOUBT = .;
MPRINT(EM_DIAGRAM):   else T_DOUBT = (DOUBT - 0) * 6.75255470684912;
MPRINT(EM_DIAGRAM):   *** Standardize DOUG ;
MPRINT(EM_DIAGRAM):   drop T_DOUG ;
MPRINT(EM_DIAGRAM):   if missing( DOUG ) then T_DOUG = .;
MPRINT(EM_DIAGRAM):   else T_DOUG = (DOUG - 0) * 1.01974886941777;
MPRINT(EM_DIAGRAM):   *** Standardize DRAW ;
MPRINT(EM_DIAGRAM):   drop T_DRAW ;
MPRINT(EM_DIAGRAM):   if missing( DRAW ) then T_DRAW = .;
MPRINT(EM_DIAGRAM):   else T_DRAW = (DRAW - 0) * 2.92669701852183;
MPRINT(EM_DIAGRAM):   *** Standardize DRIVE ;
MPRINT(EM_DIAGRAM):   drop T_DRIVE ;
MPRINT(EM_DIAGRAM):   if missing( DRIVE ) then T_DRIVE = .;
MPRINT(EM_DIAGRAM):   else T_DRIVE = (DRIVE - 0) * 3.04563267369848;
MPRINT(EM_DIAGRAM):   *** Standardize DRIVER ;
MPRINT(EM_DIAGRAM):   drop T_DRIVER ;
MPRINT(EM_DIAGRAM):   if missing( DRIVER ) then T_DRIVER = .;
MPRINT(EM_DIAGRAM):   else T_DRIVER = (DRIVER - 0) * 3.72717498340517;
MPRINT(EM_DIAGRAM):   *** Standardize DROP ;
MPRINT(EM_DIAGRAM):   drop T_DROP ;
MPRINT(EM_DIAGRAM):   if missing( DROP ) then T_DROP = .;
MPRINT(EM_DIAGRAM):   else T_DROP = (DROP - 0) * 3.92848329597908;
MPRINT(EM_DIAGRAM):   *** Standardize DRUG ;
MPRINT(EM_DIAGRAM):   drop T_DRUG ;
MPRINT(EM_DIAGRAM):   if missing( DRUG ) then T_DRUG = .;
MPRINT(EM_DIAGRAM):   else T_DRUG = (DRUG - 0) * 3.37780479528133;
MPRINT(EM_DIAGRAM):   *** Standardize DUMP ;
MPRINT(EM_DIAGRAM):   drop T_DUMP ;
MPRINT(EM_DIAGRAM):   if missing( DUMP ) then T_DUMP = .;
MPRINT(EM_DIAGRAM):   else T_DUMP = (DUMP - 0) * 3.39147939655648;
MPRINT(EM_DIAGRAM):   *** Standardize DYER ;
MPRINT(EM_DIAGRAM):   drop T_DYER ;
MPRINT(EM_DIAGRAM):   if missing( DYER ) then T_DYER = .;
MPRINT(EM_DIAGRAM):   else T_DYER = (DYER - 0) * 1.47880205898777;
MPRINT(EM_DIAGRAM):   *** Standardize EASI ;
MPRINT(EM_DIAGRAM):   drop T_EASI ;
MPRINT(EM_DIAGRAM):   if missing( EASI ) then T_EASI = .;
MPRINT(EM_DIAGRAM):   else T_EASI = (EASI - 0) * 6.70940404774565;
MPRINT(EM_DIAGRAM):   *** Standardize EASILI ;
MPRINT(EM_DIAGRAM):   drop T_EASILI ;
MPRINT(EM_DIAGRAM):   if missing( EASILI ) then T_EASILI = .;
MPRINT(EM_DIAGRAM):   else T_EASILI = (EASILI - 0) * 4.94924315344507;
MPRINT(EM_DIAGRAM):   *** Standardize EAST ;
MPRINT(EM_DIAGRAM):   drop T_EAST ;
MPRINT(EM_DIAGRAM):   if missing( EAST ) then T_EAST = .;
MPRINT(EM_DIAGRAM):   else T_EAST = (EAST - 0) * 7.39339882387899;
MPRINT(EM_DIAGRAM):   *** Standardize EAT ;
MPRINT(EM_DIAGRAM):   drop T_EAT ;
MPRINT(EM_DIAGRAM):   if missing( EAT ) then T_EAT = .;
MPRINT(EM_DIAGRAM):   else T_EAT = (EAT - 0) * 6.41767177744021;
MPRINT(EM_DIAGRAM):   *** Standardize ECHO ;
MPRINT(EM_DIAGRAM):   drop T_ECHO ;
MPRINT(EM_DIAGRAM):   if missing( ECHO ) then T_ECHO = .;
MPRINT(EM_DIAGRAM):   else T_ECHO = (ECHO - 0) * 1.35012818372056;
MPRINT(EM_DIAGRAM):   *** Standardize EDITOR ;
MPRINT(EM_DIAGRAM):   drop T_EDITOR ;
MPRINT(EM_DIAGRAM):   if missing( EDITOR ) then T_EDITOR = .;
MPRINT(EM_DIAGRAM):   else T_EDITOR = (EDITOR - 0) * 2.2088372493738;
MPRINT(EM_DIAGRAM):   *** Standardize EDU ;
MPRINT(EM_DIAGRAM):   drop T_EDU ;
MPRINT(EM_DIAGRAM):   if missing( EDU ) then T_EDU = .;
MPRINT(EM_DIAGRAM):   else T_EDU = (EDU - 0) * 4.62191604150833;
MPRINT(EM_DIAGRAM):   *** Standardize EDUC ;
MPRINT(EM_DIAGRAM):   drop T_EDUC ;
MPRINT(EM_DIAGRAM):   if missing( EDUC ) then T_EDUC = .;
MPRINT(EM_DIAGRAM):   else T_EDUC = (EDUC - 0) * 4.35790690307987;
MPRINT(EM_DIAGRAM):   *** Standardize EDWARD ;
MPRINT(EM_DIAGRAM):   drop T_EDWARD ;
MPRINT(EM_DIAGRAM):   if missing( EDWARD ) then T_EDWARD = .;
MPRINT(EM_DIAGRAM):   else T_EDWARD = (EDWARD - 0) * 3.69902389132811;
MPRINT(EM_DIAGRAM):   *** Standardize EFFECT ;
MPRINT(EM_DIAGRAM):   drop T_EFFECT ;
MPRINT(EM_DIAGRAM):   if missing( EFFECT ) then T_EFFECT = .;
MPRINT(EM_DIAGRAM):   else T_EFFECT = (EFFECT - 0) * 2.59618812249216;
MPRINT(EM_DIAGRAM):   *** Standardize ELECTR ;
MPRINT(EM_DIAGRAM):   drop T_ELECTR ;
MPRINT(EM_DIAGRAM):   if missing( ELECTR ) then T_ELECTR = .;
MPRINT(EM_DIAGRAM):   else T_ELECTR = (ELECTR - 0) * 4.4458951495204;
MPRINT(EM_DIAGRAM):   *** Standardize ELECTRON ;
MPRINT(EM_DIAGRAM):   drop T_ELECTRON ;
MPRINT(EM_DIAGRAM):   if missing( ELECTRON ) then T_ELECTRON = .;
MPRINT(EM_DIAGRAM):   else T_ELECTRON = (ELECTRON - 0) * 2.0191870692385;
MPRINT(EM_DIAGRAM):   *** Standardize EMAIL ;
MPRINT(EM_DIAGRAM):   drop T_EMAIL ;
MPRINT(EM_DIAGRAM):   if missing( EMAIL ) then T_EMAIL = .;
MPRINT(EM_DIAGRAM):   else T_EMAIL = (EMAIL - 0) * 4.76322980481312;
MPRINT(EM_DIAGRAM):   *** Standardize EMPLOY ;
MPRINT(EM_DIAGRAM):   drop T_EMPLOY ;
MPRINT(EM_DIAGRAM):   if missing( EMPLOY ) then T_EMPLOY = .;
MPRINT(EM_DIAGRAM):   else T_EMPLOY = (EMPLOY - 0) * 8.75592573410038;
MPRINT(EM_DIAGRAM):   *** Standardize EMUL ;
MPRINT(EM_DIAGRAM):   drop T_EMUL ;
MPRINT(EM_DIAGRAM):   if missing( EMUL ) then T_EMUL = .;
MPRINT(EM_DIAGRAM):   else T_EMUL = (EMUL - 0) * 1.66268792837588;
MPRINT(EM_DIAGRAM):   *** Standardize ENERGI ;
MPRINT(EM_DIAGRAM):   drop T_ENERGI ;
MPRINT(EM_DIAGRAM):   if missing( ENERGI ) then T_ENERGI = .;
MPRINT(EM_DIAGRAM):   else T_ENERGI = (ENERGI - 0) * 5.73200789102385;
MPRINT(EM_DIAGRAM):   *** Standardize ENGIN ;
MPRINT(EM_DIAGRAM):   drop T_ENGIN ;
MPRINT(EM_DIAGRAM):   if missing( ENGIN ) then T_ENGIN = .;
MPRINT(EM_DIAGRAM):   else T_ENGIN = (ENGIN - 0) * 6.75667225857073;
MPRINT(EM_DIAGRAM):   *** Standardize ENGLAND ;
MPRINT(EM_DIAGRAM):   drop T_ENGLAND ;
MPRINT(EM_DIAGRAM):   if missing( ENGLAND ) then T_ENGLAND = .;
MPRINT(EM_DIAGRAM):   else T_ENGLAND = (ENGLAND - 0) * 5.5587877415932;
MPRINT(EM_DIAGRAM):   *** Standardize ENTIR ;
MPRINT(EM_DIAGRAM):   drop T_ENTIR ;
MPRINT(EM_DIAGRAM):   if missing( ENTIR ) then T_ENTIR = .;
MPRINT(EM_DIAGRAM):   else T_ENTIR = (ENTIR - 0) * 6.06397881345546;
MPRINT(EM_DIAGRAM):   *** Standardize ENTRI ;
MPRINT(EM_DIAGRAM):   drop T_ENTRI ;
MPRINT(EM_DIAGRAM):   if missing( ENTRI ) then T_ENTRI = .;
MPRINT(EM_DIAGRAM):   else T_ENTRI = (ENTRI - 0) * 3.36455506378583;
MPRINT(EM_DIAGRAM):   *** Standardize ENVIRON ;
MPRINT(EM_DIAGRAM):   drop T_ENVIRON ;
MPRINT(EM_DIAGRAM):   if missing( ENVIRON ) then T_ENVIRON = .;
MPRINT(EM_DIAGRAM):   else T_ENVIRON = (ENVIRON - 0) * 6.045097032424;
MPRINT(EM_DIAGRAM):   *** Standardize EPROM ;
MPRINT(EM_DIAGRAM):   drop T_EPROM ;
MPRINT(EM_DIAGRAM):   if missing( EPROM ) then T_EPROM = .;
MPRINT(EM_DIAGRAM):   else T_EPROM = (EPROM - 0) * 2.45034158711923;
MPRINT(EM_DIAGRAM):   *** Standardize EQUAL ;
MPRINT(EM_DIAGRAM):   drop T_EQUAL ;
MPRINT(EM_DIAGRAM):   if missing( EQUAL ) then T_EQUAL = .;
MPRINT(EM_DIAGRAM):   else T_EQUAL = (EQUAL - 0) * 3.78825784640411;
MPRINT(EM_DIAGRAM):   *** Standardize EQUIP ;
MPRINT(EM_DIAGRAM):   drop T_EQUIP ;
MPRINT(EM_DIAGRAM):   if missing( EQUIP ) then T_EQUIP = .;
MPRINT(EM_DIAGRAM):   else T_EQUIP = (EQUIP - 0) * 3.77564209625377;
MPRINT(EM_DIAGRAM):   *** Standardize ERIC ;
MPRINT(EM_DIAGRAM):   drop T_ERIC ;
MPRINT(EM_DIAGRAM):   if missing( ERIC ) then T_ERIC = .;
MPRINT(EM_DIAGRAM):   else T_ERIC = (ERIC - 0) * 2.50017556120882;
MPRINT(EM_DIAGRAM):   *** Standardize ERROR ;
MPRINT(EM_DIAGRAM):   drop T_ERROR ;
MPRINT(EM_DIAGRAM):   if missing( ERROR ) then T_ERROR = .;
MPRINT(EM_DIAGRAM):   else T_ERROR = (ERROR - 0) * 3.50448704639361;
MPRINT(EM_DIAGRAM):   *** Standardize ESCAP ;
MPRINT(EM_DIAGRAM):   drop T_ESCAP ;
MPRINT(EM_DIAGRAM):   if missing( ESCAP ) then T_ESCAP = .;
MPRINT(EM_DIAGRAM):   else T_ESCAP = (ESCAP - 0) * 6.28631123813953;
MPRINT(EM_DIAGRAM):   *** Standardize ESSENTI ;
MPRINT(EM_DIAGRAM):   drop T_ESSENTI ;
MPRINT(EM_DIAGRAM):   if missing( ESSENTI ) then T_ESSENTI = .;
MPRINT(EM_DIAGRAM):   else T_ESSENTI = (ESSENTI - 0) * 2.57469258279598;
MPRINT(EM_DIAGRAM):   *** Standardize EUROP ;
MPRINT(EM_DIAGRAM):   drop T_EUROP ;
MPRINT(EM_DIAGRAM):   if missing( EUROP ) then T_EUROP = .;
MPRINT(EM_DIAGRAM):   else T_EUROP = (EUROP - 0) * 4.62505215384067;
MPRINT(EM_DIAGRAM):   *** Standardize EUROPEAN ;
MPRINT(EM_DIAGRAM):   drop T_EUROPEAN ;
MPRINT(EM_DIAGRAM):   if missing( EUROPEAN ) then T_EUROPEAN = .;
MPRINT(EM_DIAGRAM):   else T_EUROPEAN = (EUROPEAN - 0) * 3.27506956145094;
MPRINT(EM_DIAGRAM):   *** Standardize EVENT ;
MPRINT(EM_DIAGRAM):   drop T_EVENT ;
MPRINT(EM_DIAGRAM):   if missing( EVENT ) then T_EVENT = .;
MPRINT(EM_DIAGRAM):   else T_EVENT = (EVENT - 0) * 2.77897384146163;
MPRINT(EM_DIAGRAM):   *** Standardize EVID ;
MPRINT(EM_DIAGRAM):   drop T_EVID ;
MPRINT(EM_DIAGRAM):   if missing( EVID ) then T_EVID = .;
MPRINT(EM_DIAGRAM):   else T_EVID = (EVID - 0) * 4.8924524864731;
MPRINT(EM_DIAGRAM):   *** Standardize EXACT ;
MPRINT(EM_DIAGRAM):   drop T_EXACT ;
MPRINT(EM_DIAGRAM):   if missing( EXACT ) then T_EXACT = .;
MPRINT(EM_DIAGRAM):   else T_EXACT = (EXACT - 0) * 8.24905296837813;
MPRINT(EM_DIAGRAM):   *** Standardize EXECUT ;
MPRINT(EM_DIAGRAM):   drop T_EXECUT ;
MPRINT(EM_DIAGRAM):   if missing( EXECUT ) then T_EXECUT = .;
MPRINT(EM_DIAGRAM):   else T_EXECUT = (EXECUT - 0) * 5.64755116414739;
MPRINT(EM_DIAGRAM):   *** Standardize EXERCIS ;
MPRINT(EM_DIAGRAM):   drop T_EXERCIS ;
MPRINT(EM_DIAGRAM):   if missing( EXERCIS ) then T_EXERCIS = .;
MPRINT(EM_DIAGRAM):   else T_EXERCIS = (EXERCIS - 0) * 2.66347831936319;
MPRINT(EM_DIAGRAM):   *** Standardize EXIST ;
MPRINT(EM_DIAGRAM):   drop T_EXIST ;
MPRINT(EM_DIAGRAM):   if missing( EXIST ) then T_EXIST = .;
MPRINT(EM_DIAGRAM):   else T_EXIST = (EXIST - 0) * 8.96131112340158;
MPRINT(EM_DIAGRAM):   *** Standardize EXPANS ;
MPRINT(EM_DIAGRAM):   drop T_EXPANS ;
MPRINT(EM_DIAGRAM):   if missing( EXPANS ) then T_EXPANS = .;
MPRINT(EM_DIAGRAM):   else T_EXPANS = (EXPANS - 0) * 6.07006912617717;
MPRINT(EM_DIAGRAM):   *** Standardize EXPECT ;
MPRINT(EM_DIAGRAM):   drop T_EXPECT ;
MPRINT(EM_DIAGRAM):   if missing( EXPECT ) then T_EXPECT = .;
MPRINT(EM_DIAGRAM):   else T_EXPECT = (EXPECT - 0) * 7.20058884274151;
MPRINT(EM_DIAGRAM):   *** Standardize EXPENS ;
MPRINT(EM_DIAGRAM):   drop T_EXPENS ;
MPRINT(EM_DIAGRAM):   if missing( EXPENS ) then T_EXPENS = .;
MPRINT(EM_DIAGRAM):   else T_EXPENS = (EXPENS - 0) * 6.36223198735248;
MPRINT(EM_DIAGRAM):   *** Standardize EXPERI ;
MPRINT(EM_DIAGRAM):   drop T_EXPERI ;
MPRINT(EM_DIAGRAM):   if missing( EXPERI ) then T_EXPERI = .;
MPRINT(EM_DIAGRAM):   else T_EXPERI = (EXPERI - 0) * 5.77101579726576;
MPRINT(EM_DIAGRAM):   *** Standardize EXPERIENC ;
MPRINT(EM_DIAGRAM):   drop T_EXPERIENC ;
MPRINT(EM_DIAGRAM):   if missing( EXPERIENC ) then T_EXPERIENC = .;
MPRINT(EM_DIAGRAM):   else T_EXPERIENC = (EXPERIENC - 0) * 4.91953289951439;
MPRINT(EM_DIAGRAM):   *** Standardize EXPLAIN ;
MPRINT(EM_DIAGRAM):   drop T_EXPLAIN ;
MPRINT(EM_DIAGRAM):   if missing( EXPLAIN ) then T_EXPLAIN = .;
MPRINT(EM_DIAGRAM):   else T_EXPLAIN = (EXPLAIN - 0) * 4.70797084271146;
MPRINT(EM_DIAGRAM):   *** Standardize EXPLOD ;
MPRINT(EM_DIAGRAM):   drop T_EXPLOD ;
MPRINT(EM_DIAGRAM):   if missing( EXPLOD ) then T_EXPLOD = .;
MPRINT(EM_DIAGRAM):   else T_EXPLOD = (EXPLOD - 0) * 1.90167061873641;
MPRINT(EM_DIAGRAM):   *** Standardize EXPOS ;
MPRINT(EM_DIAGRAM):   drop T_EXPOS ;
MPRINT(EM_DIAGRAM):   if missing( EXPOS ) then T_EXPOS = .;
MPRINT(EM_DIAGRAM):   else T_EXPOS = (EXPOS - 0) * 3.20387325111114;
MPRINT(EM_DIAGRAM):   *** Standardize EXPRESS ;
MPRINT(EM_DIAGRAM):   drop T_EXPRESS ;
MPRINT(EM_DIAGRAM):   if missing( EXPRESS ) then T_EXPRESS = .;
MPRINT(EM_DIAGRAM):   else T_EXPRESS = (EXPRESS - 0) * 6.46670222642541;
MPRINT(EM_DIAGRAM):   *** Standardize EXTENS ;
MPRINT(EM_DIAGRAM):   drop T_EXTENS ;
MPRINT(EM_DIAGRAM):   if missing( EXTENS ) then T_EXTENS = .;
MPRINT(EM_DIAGRAM):   else T_EXTENS = (EXTENS - 0) * 4.48920758025967;
MPRINT(EM_DIAGRAM):   *** Standardize EXTERMIN ;
MPRINT(EM_DIAGRAM):   drop T_EXTERMIN ;
MPRINT(EM_DIAGRAM):   if missing( EXTERMIN ) then T_EXTERMIN = .;
MPRINT(EM_DIAGRAM):   else T_EXTERMIN = (EXTERMIN - 0) * 12.160259480435;
MPRINT(EM_DIAGRAM):   *** Standardize EXTRA ;
MPRINT(EM_DIAGRAM):   drop T_EXTRA ;
MPRINT(EM_DIAGRAM):   if missing( EXTRA ) then T_EXTRA = .;
MPRINT(EM_DIAGRAM):   else T_EXTRA = (EXTRA - 0) * 3.94562548408332;
MPRINT(EM_DIAGRAM):   *** Standardize FACE ;
MPRINT(EM_DIAGRAM):   drop T_FACE ;
MPRINT(EM_DIAGRAM):   if missing( FACE ) then T_FACE = .;
MPRINT(EM_DIAGRAM):   else T_FACE = (FACE - 0) * 3.31823067246814;
MPRINT(EM_DIAGRAM):   *** Standardize FACT ;
MPRINT(EM_DIAGRAM):   drop T_FACT ;
MPRINT(EM_DIAGRAM):   if missing( FACT ) then T_FACT = .;
MPRINT(EM_DIAGRAM):   else T_FACT = (FACT - 0) * 10.9555206018458;
MPRINT(EM_DIAGRAM):   *** Standardize FAIL ;
MPRINT(EM_DIAGRAM):   drop T_FAIL ;
MPRINT(EM_DIAGRAM):   if missing( FAIL ) then T_FAIL = .;
MPRINT(EM_DIAGRAM):   else T_FAIL = (FAIL - 0) * 3.91494244161118;
MPRINT(EM_DIAGRAM):   *** Standardize FALS ;
MPRINT(EM_DIAGRAM):   drop T_FALS ;
MPRINT(EM_DIAGRAM):   if missing( FALS ) then T_FALS = .;
MPRINT(EM_DIAGRAM):   else T_FALS = (FALS - 0) * 4.74907711530576;
MPRINT(EM_DIAGRAM):   *** Standardize FAMILI ;
MPRINT(EM_DIAGRAM):   drop T_FAMILI ;
MPRINT(EM_DIAGRAM):   if missing( FAMILI ) then T_FAMILI = .;
MPRINT(EM_DIAGRAM):   else T_FAMILI = (FAMILI - 0) * 3.47669118837729;
MPRINT(EM_DIAGRAM):   *** Standardize FAST ;
MPRINT(EM_DIAGRAM):   drop T_FAST ;
MPRINT(EM_DIAGRAM):   if missing( FAST ) then T_FAST = .;
MPRINT(EM_DIAGRAM):   else T_FAST = (FAST - 0) * 8.31823757518703;
MPRINT(EM_DIAGRAM):   *** Standardize FATHER ;
MPRINT(EM_DIAGRAM):   drop T_FATHER ;
MPRINT(EM_DIAGRAM):   if missing( FATHER ) then T_FATHER = .;
MPRINT(EM_DIAGRAM):   else T_FATHER = (FATHER - 0) * 6.41767177744021;
MPRINT(EM_DIAGRAM):   *** Standardize FAVOR ;
MPRINT(EM_DIAGRAM):   drop T_FAVOR ;
MPRINT(EM_DIAGRAM):   if missing( FAVOR ) then T_FAVOR = .;
MPRINT(EM_DIAGRAM):   else T_FAVOR = (FAVOR - 0) * 10.1121051242537;
MPRINT(EM_DIAGRAM):   *** Standardize FAX ;
MPRINT(EM_DIAGRAM):   drop T_FAX ;
MPRINT(EM_DIAGRAM):   if missing( FAX ) then T_FAX = .;
MPRINT(EM_DIAGRAM):   else T_FAX = (FAX - 0) * 8.47991264225496;
MPRINT(EM_DIAGRAM):   *** Standardize FEATUR ;
MPRINT(EM_DIAGRAM):   drop T_FEATUR ;
MPRINT(EM_DIAGRAM):   if missing( FEATUR ) then T_FEATUR = .;
MPRINT(EM_DIAGRAM):   else T_FEATUR = (FEATUR - 0) * 4.51808384469694;
MPRINT(EM_DIAGRAM):   *** Standardize FEDER ;
MPRINT(EM_DIAGRAM):   drop T_FEDER ;
MPRINT(EM_DIAGRAM):   if missing( FEDER ) then T_FEDER = .;
MPRINT(EM_DIAGRAM):   else T_FEDER = (FEDER - 0) * 4.81206484832324;
MPRINT(EM_DIAGRAM):   *** Standardize FEED ;
MPRINT(EM_DIAGRAM):   drop T_FEED ;
MPRINT(EM_DIAGRAM):   if missing( FEED ) then T_FEED = .;
MPRINT(EM_DIAGRAM):   else T_FEED = (FEED - 0) * 4.56166856195836;
MPRINT(EM_DIAGRAM):   *** Standardize FEEL ;
MPRINT(EM_DIAGRAM):   drop T_FEEL ;
MPRINT(EM_DIAGRAM):   if missing( FEEL ) then T_FEEL = .;
MPRINT(EM_DIAGRAM):   else T_FEEL = (FEEL - 0) * 5.75411054232057;
MPRINT(EM_DIAGRAM):   *** Standardize FIELD ;
MPRINT(EM_DIAGRAM):   drop T_FIELD ;
MPRINT(EM_DIAGRAM):   if missing( FIELD ) then T_FIELD = .;
MPRINT(EM_DIAGRAM):   else T_FIELD = (FIELD - 0) * 4.93083801187734;
MPRINT(EM_DIAGRAM):   *** Standardize FIGHT ;
MPRINT(EM_DIAGRAM):   drop T_FIGHT ;
MPRINT(EM_DIAGRAM):   if missing( FIGHT ) then T_FIGHT = .;
MPRINT(EM_DIAGRAM):   else T_FIGHT = (FIGHT - 0) * 5.40607424308998;
MPRINT(EM_DIAGRAM):   *** Standardize FIGUR ;
MPRINT(EM_DIAGRAM):   drop T_FIGUR ;
MPRINT(EM_DIAGRAM):   if missing( FIGUR ) then T_FIGUR = .;
MPRINT(EM_DIAGRAM):   else T_FIGUR = (FIGUR - 0) * 5.60265876102052;
MPRINT(EM_DIAGRAM):   *** Standardize FILE ;
MPRINT(EM_DIAGRAM):   drop T_FILE ;
MPRINT(EM_DIAGRAM):   if missing( FILE ) then T_FILE = .;
MPRINT(EM_DIAGRAM):   else T_FILE = (FILE - 0) * 2.35197598797465;
MPRINT(EM_DIAGRAM):   *** Standardize FILL ;
MPRINT(EM_DIAGRAM):   drop T_FILL ;
MPRINT(EM_DIAGRAM):   if missing( FILL ) then T_FILL = .;
MPRINT(EM_DIAGRAM):   else T_FILL = (FILL - 0) * 5.80322090393581;
MPRINT(EM_DIAGRAM):   *** Standardize FILTER ;
MPRINT(EM_DIAGRAM):   drop T_FILTER ;
MPRINT(EM_DIAGRAM):   if missing( FILTER ) then T_FILTER = .;
MPRINT(EM_DIAGRAM):   else T_FILTER = (FILTER - 0) * 3.73148243738677;
MPRINT(EM_DIAGRAM):   *** Standardize FINAL ;
MPRINT(EM_DIAGRAM):   drop T_FINAL ;
MPRINT(EM_DIAGRAM):   if missing( FINAL ) then T_FINAL = .;
MPRINT(EM_DIAGRAM):   else T_FINAL = (FINAL - 0) * 7.64826637324504;
MPRINT(EM_DIAGRAM):   *** Standardize FIND ;
MPRINT(EM_DIAGRAM):   drop T_FIND ;
MPRINT(EM_DIAGRAM):   if missing( FIND ) then T_FIND = .;
MPRINT(EM_DIAGRAM):   else T_FIND = (FIND - 0) * 5.8118481131623;
MPRINT(EM_DIAGRAM):   *** Standardize FINE ;
MPRINT(EM_DIAGRAM):   drop T_FINE ;
MPRINT(EM_DIAGRAM):   if missing( FINE ) then T_FINE = .;
MPRINT(EM_DIAGRAM):   else T_FINE = (FINE - 0) * 7.15017481946224;
MPRINT(EM_DIAGRAM):   *** Standardize FIRE ;
MPRINT(EM_DIAGRAM):   drop T_FIRE ;
MPRINT(EM_DIAGRAM):   if missing( FIRE ) then T_FIRE = .;
MPRINT(EM_DIAGRAM):   else T_FIRE = (FIRE - 0) * 4.21149357803622;
MPRINT(EM_DIAGRAM):   *** Standardize FIX ;
MPRINT(EM_DIAGRAM):   drop T_FIX ;
MPRINT(EM_DIAGRAM):   if missing( FIX ) then T_FIX = .;
MPRINT(EM_DIAGRAM):   else T_FIX = (FIX - 0) * 3.18538394769798;
MPRINT(EM_DIAGRAM):   *** Standardize FLAME ;
MPRINT(EM_DIAGRAM):   drop T_FLAME ;
MPRINT(EM_DIAGRAM):   if missing( FLAME ) then T_FLAME = .;
MPRINT(EM_DIAGRAM):   else T_FLAME = (FLAME - 0) * 6.41079117261949;
MPRINT(EM_DIAGRAM):   *** Standardize FLASH ;
MPRINT(EM_DIAGRAM):   drop T_FLASH ;
MPRINT(EM_DIAGRAM):   if missing( FLASH ) then T_FLASH = .;
MPRINT(EM_DIAGRAM):   else T_FLASH = (FLASH - 0) * 3.07820942445689;
MPRINT(EM_DIAGRAM):   *** Standardize FLOOR ;
MPRINT(EM_DIAGRAM):   drop T_FLOOR ;
MPRINT(EM_DIAGRAM):   if missing( FLOOR ) then T_FLOOR = .;
MPRINT(EM_DIAGRAM):   else T_FLOOR = (FLOOR - 0) * 6.47187401041853;
MPRINT(EM_DIAGRAM):   *** Standardize FLUKE ;
MPRINT(EM_DIAGRAM):   drop T_FLUKE ;
MPRINT(EM_DIAGRAM):   if missing( FLUKE ) then T_FLUKE = .;
MPRINT(EM_DIAGRAM):   else T_FLUKE = (FLUKE - 0) * 1.40601271161789;
MPRINT(EM_DIAGRAM):   *** Standardize FOCU ;
MPRINT(EM_DIAGRAM):   drop T_FOCU ;
MPRINT(EM_DIAGRAM):   if missing( FOCU ) then T_FOCU = .;
MPRINT(EM_DIAGRAM):   else T_FOCU = (FOCU - 0) * 1.96341088833227;
MPRINT(EM_DIAGRAM):   *** Standardize FOLK ;
MPRINT(EM_DIAGRAM):   drop T_FOLK ;
MPRINT(EM_DIAGRAM):   if missing( FOLK ) then T_FOLK = .;
MPRINT(EM_DIAGRAM):   else T_FOLK = (FOLK - 0) * 3.89865119956833;
MPRINT(EM_DIAGRAM):   *** Standardize FOLLOWUP ;
MPRINT(EM_DIAGRAM):   drop T_FOLLOWUP ;
MPRINT(EM_DIAGRAM):   if missing( FOLLOWUP ) then T_FOLLOWUP = .;
MPRINT(EM_DIAGRAM):   else T_FOLLOWUP = (FOLLOWUP - 0) * 4.68706321386279;
MPRINT(EM_DIAGRAM):   *** Standardize FONT ;
MPRINT(EM_DIAGRAM):   drop T_FONT ;
MPRINT(EM_DIAGRAM):   if missing( FONT ) then T_FONT = .;
MPRINT(EM_DIAGRAM):   else T_FONT = (FONT - 0) * 1.58271039864806;
MPRINT(EM_DIAGRAM):   *** Standardize FOOD ;
MPRINT(EM_DIAGRAM):   drop T_FOOD ;
MPRINT(EM_DIAGRAM):   if missing( FOOD ) then T_FOOD = .;
MPRINT(EM_DIAGRAM):   else T_FOOD = (FOOD - 0) * 2.99578204227638;
MPRINT(EM_DIAGRAM):   *** Standardize FORC ;
MPRINT(EM_DIAGRAM):   drop T_FORC ;
MPRINT(EM_DIAGRAM):   if missing( FORC ) then T_FORC = .;
MPRINT(EM_DIAGRAM):   else T_FORC = (FORC - 0) * 10.6017021191428;
MPRINT(EM_DIAGRAM):   *** Standardize FORGET ;
MPRINT(EM_DIAGRAM):   drop T_FORGET ;
MPRINT(EM_DIAGRAM):   if missing( FORGET ) then T_FORGET = .;
MPRINT(EM_DIAGRAM):   else T_FORGET = (FORGET - 0) * 6.36321734780753;
MPRINT(EM_DIAGRAM):   *** Standardize FORM ;
MPRINT(EM_DIAGRAM):   drop T_FORM ;
MPRINT(EM_DIAGRAM):   if missing( FORM ) then T_FORM = .;
MPRINT(EM_DIAGRAM):   else T_FORM = (FORM - 0) * 2.81199874949137;
MPRINT(EM_DIAGRAM):   *** Standardize FORMAT ;
MPRINT(EM_DIAGRAM):   drop T_FORMAT ;
MPRINT(EM_DIAGRAM):   if missing( FORMAT ) then T_FORMAT = .;
MPRINT(EM_DIAGRAM):   else T_FORMAT = (FORMAT - 0) * 2.94606986458121;
MPRINT(EM_DIAGRAM):   *** Standardize FOURD ;
MPRINT(EM_DIAGRAM):   drop T_FOURD ;
MPRINT(EM_DIAGRAM):   if missing( FOURD ) then T_FOURD = .;
MPRINT(EM_DIAGRAM):   else T_FOURD = (FOURD - 0) * 2.02465830472976;
MPRINT(EM_DIAGRAM):   *** Standardize FRAME ;
MPRINT(EM_DIAGRAM):   drop T_FRAME ;
MPRINT(EM_DIAGRAM):   if missing( FRAME ) then T_FRAME = .;
MPRINT(EM_DIAGRAM):   else T_FRAME = (FRAME - 0) * 3.20953756008951;
MPRINT(EM_DIAGRAM):   *** Standardize FRANC ;
MPRINT(EM_DIAGRAM):   drop T_FRANC ;
MPRINT(EM_DIAGRAM):   if missing( FRANC ) then T_FRANC = .;
MPRINT(EM_DIAGRAM):   else T_FRANC = (FRANC - 0) * 4.06977527586778;
MPRINT(EM_DIAGRAM):   *** Standardize FRANK ;
MPRINT(EM_DIAGRAM):   drop T_FRANK ;
MPRINT(EM_DIAGRAM):   if missing( FRANK ) then T_FRANK = .;
MPRINT(EM_DIAGRAM):   else T_FRANK = (FRANK - 0) * 2.69245138309165;
MPRINT(EM_DIAGRAM):   *** Standardize FREE ;
MPRINT(EM_DIAGRAM):   drop T_FREE ;
MPRINT(EM_DIAGRAM):   if missing( FREE ) then T_FREE = .;
MPRINT(EM_DIAGRAM):   else T_FREE = (FREE - 0) * 5.51435593639054;
MPRINT(EM_DIAGRAM):   *** Standardize FREEDOM ;
MPRINT(EM_DIAGRAM):   drop T_FREEDOM ;
MPRINT(EM_DIAGRAM):   if missing( FREEDOM ) then T_FREEDOM = .;
MPRINT(EM_DIAGRAM):   else T_FREEDOM = (FREEDOM - 0) * 4.10040472147941;
MPRINT(EM_DIAGRAM):   *** Standardize FREEMAN ;
MPRINT(EM_DIAGRAM):   drop T_FREEMAN ;
MPRINT(EM_DIAGRAM):   if missing( FREEMAN ) then T_FREEMAN = .;
MPRINT(EM_DIAGRAM):   else T_FREEMAN = (FREEMAN - 0) * 2.0167578987821;
MPRINT(EM_DIAGRAM):   *** Standardize FREQUENC ;
MPRINT(EM_DIAGRAM):   drop T_FREQUENC ;
MPRINT(EM_DIAGRAM):   if missing( FREQUENC ) then T_FREQUENC = .;
MPRINT(EM_DIAGRAM):   else T_FREQUENC = (FREQUENC - 0) * 3.51132844756154;
MPRINT(EM_DIAGRAM):   *** Standardize FREQUENT ;
MPRINT(EM_DIAGRAM):   drop T_FREQUENT ;
MPRINT(EM_DIAGRAM):   if missing( FREQUENT ) then T_FREQUENT = .;
MPRINT(EM_DIAGRAM):   else T_FREQUENT = (FREQUENT - 0) * 5.03418946167169;
MPRINT(EM_DIAGRAM):   *** Standardize FRI ;
MPRINT(EM_DIAGRAM):   drop T_FRI ;
MPRINT(EM_DIAGRAM):   if missing( FRI ) then T_FRI = .;
MPRINT(EM_DIAGRAM):   else T_FRI = (FRI - 0) * 5.88152841773181;
MPRINT(EM_DIAGRAM):   *** Standardize FRIEND ;
MPRINT(EM_DIAGRAM):   drop T_FRIEND ;
MPRINT(EM_DIAGRAM):   if missing( FRIEND ) then T_FRIEND = .;
MPRINT(EM_DIAGRAM):   else T_FRIEND = (FRIEND - 0) * 4.35877836047294;
MPRINT(EM_DIAGRAM):   *** Standardize FULL ;
MPRINT(EM_DIAGRAM):   drop T_FULL ;
MPRINT(EM_DIAGRAM):   if missing( FULL ) then T_FULL = .;
MPRINT(EM_DIAGRAM):   else T_FULL = (FULL - 0) * 3.97168073786642;
MPRINT(EM_DIAGRAM):   *** Standardize FUNCTION ;
MPRINT(EM_DIAGRAM):   drop T_FUNCTION ;
MPRINT(EM_DIAGRAM):   if missing( FUNCTION ) then T_FUNCTION = .;
MPRINT(EM_DIAGRAM):   else T_FUNCTION = (FUNCTION - 0) * 5.1173689858046;
MPRINT(EM_DIAGRAM):   *** Standardize FUTUR ;
MPRINT(EM_DIAGRAM):   drop T_FUTUR ;
MPRINT(EM_DIAGRAM):   if missing( FUTUR ) then T_FUTUR = .;
MPRINT(EM_DIAGRAM):   else T_FUTUR = (FUTUR - 0) * 6.16203987051319;
MPRINT(EM_DIAGRAM):   *** Standardize GAIN ;
MPRINT(EM_DIAGRAM):   drop T_GAIN ;
MPRINT(EM_DIAGRAM):   if missing( GAIN ) then T_GAIN = .;
MPRINT(EM_DIAGRAM):   else T_GAIN = (GAIN - 0) * 4.25772847336999;
MPRINT(EM_DIAGRAM):   *** Standardize GAME ;
MPRINT(EM_DIAGRAM):   drop T_GAME ;
MPRINT(EM_DIAGRAM):   if missing( GAME ) then T_GAME = .;
MPRINT(EM_DIAGRAM):   else T_GAME = (GAME - 0) * 3.61088155849652;
MPRINT(EM_DIAGRAM):   *** Standardize GARFIEL ;
MPRINT(EM_DIAGRAM):   drop T_GARFIEL ;
MPRINT(EM_DIAGRAM):   if missing( GARFIEL ) then T_GARFIEL = .;
MPRINT(EM_DIAGRAM):   else T_GARFIEL = (GARFIEL - 0) * 2.44331709110622;
MPRINT(EM_DIAGRAM):   *** Standardize GARI ;
MPRINT(EM_DIAGRAM):   drop T_GARI ;
MPRINT(EM_DIAGRAM):   if missing( GARI ) then T_GARI = .;
MPRINT(EM_DIAGRAM):   else T_GARI = (GARI - 0) * 2.94452460155334;
MPRINT(EM_DIAGRAM):   *** Standardize GATEWAI ;
MPRINT(EM_DIAGRAM):   drop T_GATEWAI ;
MPRINT(EM_DIAGRAM):   if missing( GATEWAI ) then T_GATEWAI = .;
MPRINT(EM_DIAGRAM):   else T_GATEWAI = (GATEWAI - 0) * 3.45940438461311;
MPRINT(EM_DIAGRAM):   *** Standardize GAZA ;
MPRINT(EM_DIAGRAM):   drop T_GAZA ;
MPRINT(EM_DIAGRAM):   if missing( GAZA ) then T_GAZA = .;
MPRINT(EM_DIAGRAM):   else T_GAZA = (GAZA - 0) * 2.95089643012189;
MPRINT(EM_DIAGRAM):   *** Standardize GEB ;
MPRINT(EM_DIAGRAM):   drop T_GEB ;
MPRINT(EM_DIAGRAM):   if missing( GEB ) then T_GEB = .;
MPRINT(EM_DIAGRAM):   else T_GEB = (GEB - 0) * 4.73177524728255;
MPRINT(EM_DIAGRAM):   *** Standardize GENER ;
MPRINT(EM_DIAGRAM):   drop T_GENER ;
MPRINT(EM_DIAGRAM):   if missing( GENER ) then T_GENER = .;
MPRINT(EM_DIAGRAM):   else T_GENER = (GENER - 0) * 7.41141655455616;
MPRINT(EM_DIAGRAM):   *** Standardize GENOCID ;
MPRINT(EM_DIAGRAM):   drop T_GENOCID ;
MPRINT(EM_DIAGRAM):   if missing( GENOCID ) then T_GENOCID = .;
MPRINT(EM_DIAGRAM):   else T_GENOCID = (GENOCID - 0) * 5.28279141039622;
MPRINT(EM_DIAGRAM):   *** Standardize GEORG ;
MPRINT(EM_DIAGRAM):   drop T_GEORG ;
MPRINT(EM_DIAGRAM):   if missing( GEORG ) then T_GEORG = .;
MPRINT(EM_DIAGRAM):   else T_GEORG = (GEORG - 0) * 5.19769612581897;
MPRINT(EM_DIAGRAM):   *** Standardize GEORGIA ;
MPRINT(EM_DIAGRAM):   drop T_GEORGIA ;
MPRINT(EM_DIAGRAM):   if missing( GEORGIA ) then T_GEORGIA = .;
MPRINT(EM_DIAGRAM):   else T_GEORGIA = (GEORGIA - 0) * 1.83117424586408;
MPRINT(EM_DIAGRAM):   *** Standardize GERMAN ;
MPRINT(EM_DIAGRAM):   drop T_GERMAN ;
MPRINT(EM_DIAGRAM):   if missing( GERMAN ) then T_GERMAN = .;
MPRINT(EM_DIAGRAM):   else T_GERMAN = (GERMAN - 0) * 3.00072438805713;
MPRINT(EM_DIAGRAM):   *** Standardize GERMANI ;
MPRINT(EM_DIAGRAM):   drop T_GERMANI ;
MPRINT(EM_DIAGRAM):   if missing( GERMANI ) then T_GERMANI = .;
MPRINT(EM_DIAGRAM):   else T_GERMANI = (GERMANI - 0) * 5.53668454474448;
MPRINT(EM_DIAGRAM):   *** Standardize GILBERT ;
MPRINT(EM_DIAGRAM):   drop T_GILBERT ;
MPRINT(EM_DIAGRAM):   if missing( GILBERT ) then T_GILBERT = .;
MPRINT(EM_DIAGRAM):   else T_GILBERT = (GILBERT - 0) * 2.99363236787032;
MPRINT(EM_DIAGRAM):   *** Standardize GIVE ;
MPRINT(EM_DIAGRAM):   drop T_GIVE ;
MPRINT(EM_DIAGRAM):   if missing( GIVE ) then T_GIVE = .;
MPRINT(EM_DIAGRAM):   else T_GIVE = (GIVE - 0) * 5.12000735632698;
MPRINT(EM_DIAGRAM):   *** Standardize GOOD ;
MPRINT(EM_DIAGRAM):   drop T_GOOD ;
MPRINT(EM_DIAGRAM):   if missing( GOOD ) then T_GOOD = .;
MPRINT(EM_DIAGRAM):   else T_GOOD = (GOOD - 0) * 7.84845177981592;
MPRINT(EM_DIAGRAM):   *** Standardize GORDON ;
MPRINT(EM_DIAGRAM):   drop T_GORDON ;
MPRINT(EM_DIAGRAM):   if missing( GORDON ) then T_GORDON = .;
MPRINT(EM_DIAGRAM):   else T_GORDON = (GORDON - 0) * 3.47234244923162;
MPRINT(EM_DIAGRAM):   *** Standardize GOVERN ;
MPRINT(EM_DIAGRAM):   drop T_GOVERN ;
MPRINT(EM_DIAGRAM):   if missing( GOVERN ) then T_GOVERN = .;
MPRINT(EM_DIAGRAM):   else T_GOVERN = (GOVERN - 0) * 6.97158293696036;
MPRINT(EM_DIAGRAM):   *** Standardize GRANT ;
MPRINT(EM_DIAGRAM):   drop T_GRANT ;
MPRINT(EM_DIAGRAM):   if missing( GRANT ) then T_GRANT = .;
MPRINT(EM_DIAGRAM):   else T_GRANT = (GRANT - 0) * 3.2530203681818;
MPRINT(EM_DIAGRAM):   *** Standardize GRAPHIC ;
MPRINT(EM_DIAGRAM):   drop T_GRAPHIC ;
MPRINT(EM_DIAGRAM):   if missing( GRAPHIC ) then T_GRAPHIC = .;
MPRINT(EM_DIAGRAM):   else T_GRAPHIC = (GRAPHIC - 0) * 1.85199926810442;
MPRINT(EM_DIAGRAM):   *** Standardize GREAT ;
MPRINT(EM_DIAGRAM):   drop T_GREAT ;
MPRINT(EM_DIAGRAM):   if missing( GREAT ) then T_GREAT = .;
MPRINT(EM_DIAGRAM):   else T_GREAT = (GREAT - 0) * 5.17931019849811;
MPRINT(EM_DIAGRAM):   *** Standardize GREATLI ;
MPRINT(EM_DIAGRAM):   drop T_GREATLI ;
MPRINT(EM_DIAGRAM):   if missing( GREATLI ) then T_GREATLI = .;
MPRINT(EM_DIAGRAM):   else T_GREATLI = (GREATLI - 0) * 5.54837412222319;
MPRINT(EM_DIAGRAM):   *** Standardize GREEK ;
MPRINT(EM_DIAGRAM):   drop T_GREEK ;
MPRINT(EM_DIAGRAM):   if missing( GREEK ) then T_GREEK = .;
MPRINT(EM_DIAGRAM):   else T_GREEK = (GREEK - 0) * 3.01306399653486;
MPRINT(EM_DIAGRAM):   *** Standardize GREEN ;
MPRINT(EM_DIAGRAM):   drop T_GREEN ;
MPRINT(EM_DIAGRAM):   if missing( GREEN ) then T_GREEN = .;
MPRINT(EM_DIAGRAM):   else T_GREEN = (GREEN - 0) * 3.72935025745051;
MPRINT(EM_DIAGRAM):   *** Standardize GREG ;
MPRINT(EM_DIAGRAM):   drop T_GREG ;
MPRINT(EM_DIAGRAM):   if missing( GREG ) then T_GREG = .;
MPRINT(EM_DIAGRAM):   else T_GREG = (GREG - 0) * 1.34800577523759;
MPRINT(EM_DIAGRAM):   *** Standardize GROUND ;
MPRINT(EM_DIAGRAM):   drop T_GROUND ;
MPRINT(EM_DIAGRAM):   if missing( GROUND ) then T_GROUND = .;
MPRINT(EM_DIAGRAM):   else T_GROUND = (GROUND - 0) * 1.78910822919951;
MPRINT(EM_DIAGRAM):   *** Standardize GROUP ;
MPRINT(EM_DIAGRAM):   drop T_GROUP ;
MPRINT(EM_DIAGRAM):   if missing( GROUP ) then T_GROUP = .;
MPRINT(EM_DIAGRAM):   else T_GROUP = (GROUP - 0) * 3.99942378943969;
MPRINT(EM_DIAGRAM):   *** Standardize GUESS ;
MPRINT(EM_DIAGRAM):   drop T_GUESS ;
MPRINT(EM_DIAGRAM):   if missing( GUESS ) then T_GUESS = .;
MPRINT(EM_DIAGRAM):   else T_GUESS = (GUESS - 0) * 6.78796066705409;
MPRINT(EM_DIAGRAM):   *** Standardize GUEST ;
MPRINT(EM_DIAGRAM):   drop T_GUEST ;
MPRINT(EM_DIAGRAM):   if missing( GUEST ) then T_GUEST = .;
MPRINT(EM_DIAGRAM):   else T_GUEST = (GUEST - 0) * 5.5013280447714;
MPRINT(EM_DIAGRAM):   *** Standardize GUI ;
MPRINT(EM_DIAGRAM):   drop T_GUI ;
MPRINT(EM_DIAGRAM):   if missing( GUI ) then T_GUI = .;
MPRINT(EM_DIAGRAM):   else T_GUI = (GUI - 0) * 7.69985860511123;
MPRINT(EM_DIAGRAM):   *** Standardize HAMAZA ;
MPRINT(EM_DIAGRAM):   drop T_HAMAZA ;
MPRINT(EM_DIAGRAM):   if missing( HAMAZA ) then T_HAMAZA = .;
MPRINT(EM_DIAGRAM):   else T_HAMAZA = (HAMAZA - 0) * 2.72753171294851;
MPRINT(EM_DIAGRAM):   *** Standardize HAMID ;
MPRINT(EM_DIAGRAM):   drop T_HAMID ;
MPRINT(EM_DIAGRAM):   if missing( HAMID ) then T_HAMID = .;
MPRINT(EM_DIAGRAM):   else T_HAMID = (HAMID - 0) * 1.9285447944196;
MPRINT(EM_DIAGRAM):   *** Standardize HAND ;
MPRINT(EM_DIAGRAM):   drop T_HAND ;
MPRINT(EM_DIAGRAM):   if missing( HAND ) then T_HAND = .;
MPRINT(EM_DIAGRAM):   else T_HAND = (HAND - 0) * 6.88992902183216;
MPRINT(EM_DIAGRAM):   *** Standardize HANDL ;
MPRINT(EM_DIAGRAM):   drop T_HANDL ;
MPRINT(EM_DIAGRAM):   if missing( HANDL ) then T_HANDL = .;
MPRINT(EM_DIAGRAM):   else T_HANDL = (HANDL - 0) * 4.15228372502659;
MPRINT(EM_DIAGRAM):   *** Standardize HANG ;
MPRINT(EM_DIAGRAM):   drop T_HANG ;
MPRINT(EM_DIAGRAM):   if missing( HANG ) then T_HANG = .;
MPRINT(EM_DIAGRAM):   else T_HANG = (HANG - 0) * 3.91734258767295;
MPRINT(EM_DIAGRAM):   *** Standardize HAPPEN ;
MPRINT(EM_DIAGRAM):   drop T_HAPPEN ;
MPRINT(EM_DIAGRAM):   if missing( HAPPEN ) then T_HAPPEN = .;
MPRINT(EM_DIAGRAM):   else T_HAPPEN = (HAPPEN - 0) * 7.3099533432033;
MPRINT(EM_DIAGRAM):   *** Standardize HAPPI ;
MPRINT(EM_DIAGRAM):   drop T_HAPPI ;
MPRINT(EM_DIAGRAM):   if missing( HAPPI ) then T_HAPPI = .;
MPRINT(EM_DIAGRAM):   else T_HAPPI = (HAPPI - 0) * 2.01088481297785;
MPRINT(EM_DIAGRAM):   *** Standardize HARD ;
MPRINT(EM_DIAGRAM):   drop T_HARD ;
MPRINT(EM_DIAGRAM):   if missing( HARD ) then T_HARD = .;
MPRINT(EM_DIAGRAM):   else T_HARD = (HARD - 0) * 6.39973039517932;
MPRINT(EM_DIAGRAM):   *** Standardize HARDWAR ;
MPRINT(EM_DIAGRAM):   drop T_HARDWAR ;
MPRINT(EM_DIAGRAM):   if missing( HARDWAR ) then T_HARDWAR = .;
MPRINT(EM_DIAGRAM):   else T_HARDWAR = (HARDWAR - 0) * 5.67214595375326;
MPRINT(EM_DIAGRAM):   *** Standardize HARRI ;
MPRINT(EM_DIAGRAM):   drop T_HARRI ;
MPRINT(EM_DIAGRAM):   if missing( HARRI ) then T_HARRI = .;
MPRINT(EM_DIAGRAM):   else T_HARRI = (HARRI - 0) * 4.23160992988904;
MPRINT(EM_DIAGRAM):   *** Standardize HARVARD ;
MPRINT(EM_DIAGRAM):   drop T_HARVARD ;
MPRINT(EM_DIAGRAM):   if missing( HARVARD ) then T_HARVARD = .;
MPRINT(EM_DIAGRAM):   else T_HARVARD = (HARVARD - 0) * 4.22789254608107;
MPRINT(EM_DIAGRAM):   *** Standardize HATE ;
MPRINT(EM_DIAGRAM):   drop T_HATE ;
MPRINT(EM_DIAGRAM):   if missing( HATE ) then T_HATE = .;
MPRINT(EM_DIAGRAM):   else T_HATE = (HATE - 0) * 4.52097063619074;
MPRINT(EM_DIAGRAM):   *** Standardize HAVEN ;
MPRINT(EM_DIAGRAM):   drop T_HAVEN ;
MPRINT(EM_DIAGRAM):   if missing( HAVEN ) then T_HAVEN = .;
MPRINT(EM_DIAGRAM):   else T_HAVEN = (HAVEN - 0) * 6.93026150109196;
MPRINT(EM_DIAGRAM):   *** Standardize HEAD ;
MPRINT(EM_DIAGRAM):   drop T_HEAD ;
MPRINT(EM_DIAGRAM):   if missing( HEAD ) then T_HEAD = .;
MPRINT(EM_DIAGRAM):   else T_HEAD = (HEAD - 0) * 7.33489554631993;
MPRINT(EM_DIAGRAM):   *** Standardize HEADACH ;
MPRINT(EM_DIAGRAM):   drop T_HEADACH ;
MPRINT(EM_DIAGRAM):   if missing( HEADACH ) then T_HEADACH = .;
MPRINT(EM_DIAGRAM):   else T_HEADACH = (HEADACH - 0) * 3.56429214217565;
MPRINT(EM_DIAGRAM):   *** Standardize HEALTH ;
MPRINT(EM_DIAGRAM):   drop T_HEALTH ;
MPRINT(EM_DIAGRAM):   if missing( HEALTH ) then T_HEALTH = .;
MPRINT(EM_DIAGRAM):   else T_HEALTH = (HEALTH - 0) * 3.93322475555156;
MPRINT(EM_DIAGRAM):   *** Standardize HEAR ;
MPRINT(EM_DIAGRAM):   drop T_HEAR ;
MPRINT(EM_DIAGRAM):   if missing( HEAR ) then T_HEAR = .;
MPRINT(EM_DIAGRAM):   else T_HEAR = (HEAR - 0) * 4.9256523149998;
MPRINT(EM_DIAGRAM):   *** Standardize HEARD ;
MPRINT(EM_DIAGRAM):   drop T_HEARD ;
MPRINT(EM_DIAGRAM):   if missing( HEARD ) then T_HEARD = .;
MPRINT(EM_DIAGRAM):   else T_HEARD = (HEARD - 0) * 7.61674279865541;
MPRINT(EM_DIAGRAM):   *** Standardize HEART ;
MPRINT(EM_DIAGRAM):   drop T_HEART ;
MPRINT(EM_DIAGRAM):   if missing( HEART ) then T_HEART = .;
MPRINT(EM_DIAGRAM):   else T_HEART = (HEART - 0) * 3.01306399653486;
MPRINT(EM_DIAGRAM):   *** Standardize HEAT ;
MPRINT(EM_DIAGRAM):   drop T_HEAT ;
MPRINT(EM_DIAGRAM):   if missing( HEAT ) then T_HEAT = .;
MPRINT(EM_DIAGRAM):   else T_HEAT = (HEAT - 0) * 4.3958629005923;
MPRINT(EM_DIAGRAM):   *** Standardize HEAVI ;
MPRINT(EM_DIAGRAM):   drop T_HEAVI ;
MPRINT(EM_DIAGRAM):   if missing( HEAVI ) then T_HEAVI = .;
MPRINT(EM_DIAGRAM):   else T_HEAVI = (HEAVI - 0) * 3.53462282949131;
MPRINT(EM_DIAGRAM):   *** Standardize HEIGHT ;
MPRINT(EM_DIAGRAM):   drop T_HEIGHT ;
MPRINT(EM_DIAGRAM):   if missing( HEIGHT ) then T_HEIGHT = .;
MPRINT(EM_DIAGRAM):   else T_HEIGHT = (HEIGHT - 0) * 3.89392078863892;
MPRINT(EM_DIAGRAM):   *** Standardize HELP ;
MPRINT(EM_DIAGRAM):   drop T_HELP ;
MPRINT(EM_DIAGRAM):   if missing( HELP ) then T_HELP = .;
MPRINT(EM_DIAGRAM):   else T_HELP = (HELP - 0) * 4.81383544147163;
MPRINT(EM_DIAGRAM):   *** Standardize HENRI ;
MPRINT(EM_DIAGRAM):   drop T_HENRI ;
MPRINT(EM_DIAGRAM):   if missing( HENRI ) then T_HENRI = .;
MPRINT(EM_DIAGRAM):   else T_HENRI = (HENRI - 0) * 2.82153102997119;
MPRINT(EM_DIAGRAM):   *** Standardize HENRIK ;
MPRINT(EM_DIAGRAM):   drop T_HENRIK ;
MPRINT(EM_DIAGRAM):   if missing( HENRIK ) then T_HENRIK = .;
MPRINT(EM_DIAGRAM):   else T_HENRIK = (HENRIK - 0) * 2.34558440746198;
MPRINT(EM_DIAGRAM):   *** Standardize HERNIA ;
MPRINT(EM_DIAGRAM):   drop T_HERNIA ;
MPRINT(EM_DIAGRAM):   if missing( HERNIA ) then T_HERNIA = .;
MPRINT(EM_DIAGRAM):   else T_HERNIA = (HERNIA - 0) * 1.37503372398338;
MPRINT(EM_DIAGRAM):   *** Standardize HERNLEM ;
MPRINT(EM_DIAGRAM):   drop T_HERNLEM ;
MPRINT(EM_DIAGRAM):   if missing( HERNLEM ) then T_HERNLEM = .;
MPRINT(EM_DIAGRAM):   else T_HERNLEM = (HERNLEM - 0) * 5.14803989952273;
MPRINT(EM_DIAGRAM):   *** Standardize HEWLETT ;
MPRINT(EM_DIAGRAM):   drop T_HEWLETT ;
MPRINT(EM_DIAGRAM):   if missing( HEWLETT ) then T_HEWLETT = .;
MPRINT(EM_DIAGRAM):   else T_HEWLETT = (HEWLETT - 0) * 4.21299108485581;
MPRINT(EM_DIAGRAM):   *** Standardize HEZBOLLAH ;
MPRINT(EM_DIAGRAM):   drop T_HEZBOLLAH ;
MPRINT(EM_DIAGRAM):   if missing( HEZBOLLAH ) then T_HEZBOLLAH = .;
MPRINT(EM_DIAGRAM):   else T_HEZBOLLAH = (HEZBOLLAH - 0) * 2.67344115388685;
MPRINT(EM_DIAGRAM):   *** Standardize HIGH ;
MPRINT(EM_DIAGRAM):   drop T_HIGH ;
MPRINT(EM_DIAGRAM):   if missing( HIGH ) then T_HIGH = .;
MPRINT(EM_DIAGRAM):   else T_HIGH = (HIGH - 0) * 3.6198859665534;
MPRINT(EM_DIAGRAM):   *** Standardize HIGHER ;
MPRINT(EM_DIAGRAM):   drop T_HIGHER ;
MPRINT(EM_DIAGRAM):   if missing( HIGHER ) then T_HIGHER = .;
MPRINT(EM_DIAGRAM):   else T_HIGHER = (HIGHER - 0) * 6.02796084825432;
MPRINT(EM_DIAGRAM):   *** Standardize HINT ;
MPRINT(EM_DIAGRAM):   drop T_HINT ;
MPRINT(EM_DIAGRAM):   if missing( HINT ) then T_HINT = .;
MPRINT(EM_DIAGRAM):   else T_HINT = (HINT - 0) * 4.41767449874761;
MPRINT(EM_DIAGRAM):   *** Standardize HISTOR ;
MPRINT(EM_DIAGRAM):   drop T_HISTOR ;
MPRINT(EM_DIAGRAM):   if missing( HISTOR ) then T_HISTOR = .;
MPRINT(EM_DIAGRAM):   else T_HISTOR = (HISTOR - 0) * 8.07339659073915;
MPRINT(EM_DIAGRAM):   *** Standardize HISTORI ;
MPRINT(EM_DIAGRAM):   drop T_HISTORI ;
MPRINT(EM_DIAGRAM):   if missing( HISTORI ) then T_HISTORI = .;
MPRINT(EM_DIAGRAM):   else T_HISTORI = (HISTORI - 0) * 6.54218536772965;
MPRINT(EM_DIAGRAM):   *** Standardize HOLD ;
MPRINT(EM_DIAGRAM):   drop T_HOLD ;
MPRINT(EM_DIAGRAM):   if missing( HOLD ) then T_HOLD = .;
MPRINT(EM_DIAGRAM):   else T_HOLD = (HOLD - 0) * 6.54088030150052;
MPRINT(EM_DIAGRAM):   *** Standardize HOLOCAUST ;
MPRINT(EM_DIAGRAM):   drop T_HOLOCAUST ;
MPRINT(EM_DIAGRAM):   if missing( HOLOCAUST ) then T_HOLOCAUST = .;
MPRINT(EM_DIAGRAM):   else T_HOLOCAUST = (HOLOCAUST - 0) * 4.24904838832402;
MPRINT(EM_DIAGRAM):   *** Standardize HOME ;
MPRINT(EM_DIAGRAM):   drop T_HOME ;
MPRINT(EM_DIAGRAM):   if missing( HOME ) then T_HOME = .;
MPRINT(EM_DIAGRAM):   else T_HOME = (HOME - 0) * 5.20343485840704;
MPRINT(EM_DIAGRAM):   *** Standardize HOOK ;
MPRINT(EM_DIAGRAM):   drop T_HOOK ;
MPRINT(EM_DIAGRAM):   if missing( HOOK ) then T_HOOK = .;
MPRINT(EM_DIAGRAM):   else T_HOOK = (HOOK - 0) * 1.59181431582929;
MPRINT(EM_DIAGRAM):   *** Standardize HOPE ;
MPRINT(EM_DIAGRAM):   drop T_HOPE ;
MPRINT(EM_DIAGRAM):   if missing( HOPE ) then T_HOPE = .;
MPRINT(EM_DIAGRAM):   else T_HOPE = (HOPE - 0) * 10.2306049173267;
MPRINT(EM_DIAGRAM):   *** Standardize HOSPIT ;
MPRINT(EM_DIAGRAM):   drop T_HOSPIT ;
MPRINT(EM_DIAGRAM):   if missing( HOSPIT ) then T_HOSPIT = .;
MPRINT(EM_DIAGRAM):   else T_HOSPIT = (HOSPIT - 0) * 4.04975045455314;
MPRINT(EM_DIAGRAM):   *** Standardize HOST ;
MPRINT(EM_DIAGRAM):   drop T_HOST ;
MPRINT(EM_DIAGRAM):   if missing( HOST ) then T_HOST = .;
MPRINT(EM_DIAGRAM):   else T_HOST = (HOST - 0) * 2.04497774908265;
MPRINT(EM_DIAGRAM):   *** Standardize HOUR ;
MPRINT(EM_DIAGRAM):   drop T_HOUR ;
MPRINT(EM_DIAGRAM):   if missing( HOUR ) then T_HOUR = .;
MPRINT(EM_DIAGRAM):   else T_HOUR = (HOUR - 0) * 2.03983114806375;
MPRINT(EM_DIAGRAM):   *** Standardize HOUS ;
MPRINT(EM_DIAGRAM):   drop T_HOUS ;
MPRINT(EM_DIAGRAM):   if missing( HOUS ) then T_HOUS = .;
MPRINT(EM_DIAGRAM):   else T_HOUS = (HOUS - 0) * 6.69661554677435;
MPRINT(EM_DIAGRAM):   *** Standardize HOWARD ;
MPRINT(EM_DIAGRAM):   drop T_HOWARD ;
MPRINT(EM_DIAGRAM):   if missing( HOWARD ) then T_HOWARD = .;
MPRINT(EM_DIAGRAM):   else T_HOWARD = (HOWARD - 0) * 2.69245138309165;
MPRINT(EM_DIAGRAM):   *** Standardize HUMAN ;
MPRINT(EM_DIAGRAM):   drop T_HUMAN ;
MPRINT(EM_DIAGRAM):   if missing( HUMAN ) then T_HUMAN = .;
MPRINT(EM_DIAGRAM):   else T_HUMAN = (HUMAN - 0) * 8.74175437894234;
MPRINT(EM_DIAGRAM):   *** Standardize HUNTSVIL ;
MPRINT(EM_DIAGRAM):   drop T_HUNTSVIL ;
MPRINT(EM_DIAGRAM):   if missing( HUNTSVIL ) then T_HUNTSVIL = .;
MPRINT(EM_DIAGRAM):   else T_HUNTSVIL = (HUNTSVIL - 0) * 2.64234832144856;
MPRINT(EM_DIAGRAM):   *** Standardize ICON ;
MPRINT(EM_DIAGRAM):   drop T_ICON ;
MPRINT(EM_DIAGRAM):   if missing( ICON ) then T_ICON = .;
MPRINT(EM_DIAGRAM):   else T_ICON = (ICON - 0) * 0.80228266619901;
MPRINT(EM_DIAGRAM):   *** Standardize IDEA ;
MPRINT(EM_DIAGRAM):   drop T_IDEA ;
MPRINT(EM_DIAGRAM):   if missing( IDEA ) then T_IDEA = .;
MPRINT(EM_DIAGRAM):   else T_IDEA = (IDEA - 0) * 3.87827996932545;
MPRINT(EM_DIAGRAM):   *** Standardize IGNOR ;
MPRINT(EM_DIAGRAM):   drop T_IGNOR ;
MPRINT(EM_DIAGRAM):   if missing( IGNOR ) then T_IGNOR = .;
MPRINT(EM_DIAGRAM):   else T_IGNOR = (IGNOR - 0) * 5.43926092021131;
MPRINT(EM_DIAGRAM):   *** Standardize ILLEG ;
MPRINT(EM_DIAGRAM):   drop T_ILLEG ;
MPRINT(EM_DIAGRAM):   if missing( ILLEG ) then T_ILLEG = .;
MPRINT(EM_DIAGRAM):   else T_ILLEG = (ILLEG - 0) * 3.31611318774411;
MPRINT(EM_DIAGRAM):   *** Standardize ILLINOI ;
MPRINT(EM_DIAGRAM):   drop T_ILLINOI ;
MPRINT(EM_DIAGRAM):   if missing( ILLINOI ) then T_ILLINOI = .;
MPRINT(EM_DIAGRAM):   else T_ILLINOI = (ILLINOI - 0) * 3.83433327952997;
MPRINT(EM_DIAGRAM):   *** Standardize IMAG ;
MPRINT(EM_DIAGRAM):   drop T_IMAG ;
MPRINT(EM_DIAGRAM):   if missing( IMAG ) then T_IMAG = .;
MPRINT(EM_DIAGRAM):   else T_IMAG = (IMAG - 0) * 3.63138175350257;
MPRINT(EM_DIAGRAM):   *** Standardize IMAGIN ;
MPRINT(EM_DIAGRAM):   drop T_IMAGIN ;
MPRINT(EM_DIAGRAM):   if missing( IMAGIN ) then T_IMAGIN = .;
MPRINT(EM_DIAGRAM):   else T_IMAGIN = (IMAGIN - 0) * 5.78692294828452;
MPRINT(EM_DIAGRAM):   *** Standardize IMAK ;
MPRINT(EM_DIAGRAM):   drop T_IMAK ;
MPRINT(EM_DIAGRAM):   if missing( IMAK ) then T_IMAK = .;
MPRINT(EM_DIAGRAM):   else T_IMAK = (IMAK - 0) * 1.33446294548045;
MPRINT(EM_DIAGRAM):   *** Standardize IMPLEMENT ;
MPRINT(EM_DIAGRAM):   drop T_IMPLEMENT ;
MPRINT(EM_DIAGRAM):   if missing( IMPLEMENT ) then T_IMPLEMENT = .;
MPRINT(EM_DIAGRAM):   else T_IMPLEMENT = (IMPLEMENT - 0) * 6.21808045774825;
MPRINT(EM_DIAGRAM):   *** Standardize IMPORT ;
MPRINT(EM_DIAGRAM):   drop T_IMPORT ;
MPRINT(EM_DIAGRAM):   if missing( IMPORT ) then T_IMPORT = .;
MPRINT(EM_DIAGRAM):   else T_IMPORT = (IMPORT - 0) * 8.49682638311012;
MPRINT(EM_DIAGRAM):   *** Standardize IMPRESS ;
MPRINT(EM_DIAGRAM):   drop T_IMPRESS ;
MPRINT(EM_DIAGRAM):   if missing( IMPRESS ) then T_IMPRESS = .;
MPRINT(EM_DIAGRAM):   else T_IMPRESS = (IMPRESS - 0) * 3.27877381124654;
MPRINT(EM_DIAGRAM):   *** Standardize IMPROV ;
MPRINT(EM_DIAGRAM):   drop T_IMPROV ;
MPRINT(EM_DIAGRAM):   if missing( IMPROV ) then T_IMPROV = .;
MPRINT(EM_DIAGRAM):   else T_IMPROV = (IMPROV - 0) * 5.12741519244339;
MPRINT(EM_DIAGRAM):   *** Standardize INCLUD ;
MPRINT(EM_DIAGRAM):   drop T_INCLUD ;
MPRINT(EM_DIAGRAM):   if missing( INCLUD ) then T_INCLUD = .;
MPRINT(EM_DIAGRAM):   else T_INCLUD = (INCLUD - 0) * 7.45287218604392;
MPRINT(EM_DIAGRAM):   *** Standardize INCREAS ;
MPRINT(EM_DIAGRAM):   drop T_INCREAS ;
MPRINT(EM_DIAGRAM):   if missing( INCREAS ) then T_INCREAS = .;
MPRINT(EM_DIAGRAM):   else T_INCREAS = (INCREAS - 0) * 7.69985860511123;
MPRINT(EM_DIAGRAM):   *** Standardize INDIVIDU ;
MPRINT(EM_DIAGRAM):   drop T_INDIVIDU ;
MPRINT(EM_DIAGRAM):   if missing( INDIVIDU ) then T_INDIVIDU = .;
MPRINT(EM_DIAGRAM):   else T_INDIVIDU = (INDIVIDU - 0) * 7.20952417874716;
MPRINT(EM_DIAGRAM):   *** Standardize INDUSTRI ;
MPRINT(EM_DIAGRAM):   drop T_INDUSTRI ;
MPRINT(EM_DIAGRAM):   if missing( INDUSTRI ) then T_INDUSTRI = .;
MPRINT(EM_DIAGRAM):   else T_INDUSTRI = (INDUSTRI - 0) * 2.82377558207369;
MPRINT(EM_DIAGRAM):   *** Standardize INFECT ;
MPRINT(EM_DIAGRAM):   drop T_INFECT ;
MPRINT(EM_DIAGRAM):   if missing( INFECT ) then T_INFECT = .;
MPRINT(EM_DIAGRAM):   else T_INFECT = (INFECT - 0) * 2.79413431064905;
MPRINT(EM_DIAGRAM):   *** Standardize INFO ;
MPRINT(EM_DIAGRAM):   drop T_INFO ;
MPRINT(EM_DIAGRAM):   if missing( INFO ) then T_INFO = .;
MPRINT(EM_DIAGRAM):   else T_INFO = (INFO - 0) * 2.43990942670609;
MPRINT(EM_DIAGRAM):   *** Standardize INFORM ;
MPRINT(EM_DIAGRAM):   drop T_INFORM ;
MPRINT(EM_DIAGRAM):   if missing( INFORM ) then T_INFORM = .;
MPRINT(EM_DIAGRAM):   else T_INFORM = (INFORM - 0) * 4.30231113990862;
MPRINT(EM_DIAGRAM):   *** Standardize INJECT ;
MPRINT(EM_DIAGRAM):   drop T_INJECT ;
MPRINT(EM_DIAGRAM):   if missing( INJECT ) then T_INJECT = .;
MPRINT(EM_DIAGRAM):   else T_INJECT = (INJECT - 0) * 2.38826593276827;
MPRINT(EM_DIAGRAM):   *** Standardize INPUT ;
MPRINT(EM_DIAGRAM):   drop T_INPUT ;
MPRINT(EM_DIAGRAM):   if missing( INPUT ) then T_INPUT = .;
MPRINT(EM_DIAGRAM):   else T_INPUT = (INPUT - 0) * 3.34038456253531;
MPRINT(EM_DIAGRAM):   *** Standardize INSTAL ;
MPRINT(EM_DIAGRAM):   drop T_INSTAL ;
MPRINT(EM_DIAGRAM):   if missing( INSTAL ) then T_INSTAL = .;
MPRINT(EM_DIAGRAM):   else T_INSTAL = (INSTAL - 0) * 3.78909293660721;
MPRINT(EM_DIAGRAM):   *** Standardize INSTITUT ;
MPRINT(EM_DIAGRAM):   drop T_INSTITUT ;
MPRINT(EM_DIAGRAM):   if missing( INSTITUT ) then T_INSTITUT = .;
MPRINT(EM_DIAGRAM):   else T_INSTITUT = (INSTITUT - 0) * 3.1608756439435;
MPRINT(EM_DIAGRAM):   *** Standardize INSTRUMENT ;
MPRINT(EM_DIAGRAM):   drop T_INSTRUMENT ;
MPRINT(EM_DIAGRAM):   if missing( INSTRUMENT ) then T_INSTRUMENT = .;
MPRINT(EM_DIAGRAM):   else T_INSTRUMENT = (INSTRUMENT - 0) * 3.63701475343551;
MPRINT(EM_DIAGRAM):   *** Standardize INTEL ;
MPRINT(EM_DIAGRAM):   drop T_INTEL ;
MPRINT(EM_DIAGRAM):   if missing( INTEL ) then T_INTEL = .;
MPRINT(EM_DIAGRAM):   else T_INTEL = (INTEL - 0) * 2.04138267711683;
MPRINT(EM_DIAGRAM):   *** Standardize INTELLECT ;
MPRINT(EM_DIAGRAM):   drop T_INTELLECT ;
MPRINT(EM_DIAGRAM):   if missing( INTELLECT ) then T_INTELLECT = .;
MPRINT(EM_DIAGRAM):   else T_INTELLECT = (INTELLECT - 0) * 8.94967015408302;
MPRINT(EM_DIAGRAM):   *** Standardize INTELLIG ;
MPRINT(EM_DIAGRAM):   drop T_INTELLIG ;
MPRINT(EM_DIAGRAM):   if missing( INTELLIG ) then T_INTELLIG = .;
MPRINT(EM_DIAGRAM):   else T_INTELLIG = (INTELLIG - 0) * 3.20544894695733;
MPRINT(EM_DIAGRAM):   *** Standardize INTEND ;
MPRINT(EM_DIAGRAM):   drop T_INTEND ;
MPRINT(EM_DIAGRAM):   if missing( INTEND ) then T_INTEND = .;
MPRINT(EM_DIAGRAM):   else T_INTEND = (INTEND - 0) * 4.36852655684295;
MPRINT(EM_DIAGRAM):   *** Standardize INTEREST ;
MPRINT(EM_DIAGRAM):   drop T_INTEREST ;
MPRINT(EM_DIAGRAM):   if missing( INTEREST ) then T_INTEREST = .;
MPRINT(EM_DIAGRAM):   else T_INTEREST = (INTEREST - 0) * 5.51854784066428;
MPRINT(EM_DIAGRAM):   *** Standardize INTERFAC ;
MPRINT(EM_DIAGRAM):   drop T_INTERFAC ;
MPRINT(EM_DIAGRAM):   if missing( INTERFAC ) then T_INTERFAC = .;
MPRINT(EM_DIAGRAM):   else T_INTERFAC = (INTERFAC - 0) * 4.50170313789941;
MPRINT(EM_DIAGRAM):   *** Standardize INTERGRAPH ;
MPRINT(EM_DIAGRAM):   drop T_INTERGRAPH ;
MPRINT(EM_DIAGRAM):   if missing( INTERGRAPH ) then T_INTERGRAPH = .;
MPRINT(EM_DIAGRAM):   else T_INTERGRAPH = (INTERGRAPH - 0) * 2.9242870279844;
MPRINT(EM_DIAGRAM):   *** Standardize INTERN ;
MPRINT(EM_DIAGRAM):   drop T_INTERN ;
MPRINT(EM_DIAGRAM):   if missing( INTERN ) then T_INTERN = .;
MPRINT(EM_DIAGRAM):   else T_INTERN = (INTERN - 0) * 9.60100369979023;
MPRINT(EM_DIAGRAM):   *** Standardize INTERNET ;
MPRINT(EM_DIAGRAM):   drop T_INTERNET ;
MPRINT(EM_DIAGRAM):   if missing( INTERNET ) then T_INTERNET = .;
MPRINT(EM_DIAGRAM):   else T_INTERNET = (INTERNET - 0) * 1.88889117212133;
MPRINT(EM_DIAGRAM):   *** Standardize INTERVIEW ;
MPRINT(EM_DIAGRAM):   drop T_INTERVIEW ;
MPRINT(EM_DIAGRAM):   if missing( INTERVIEW ) then T_INTERVIEW = .;
MPRINT(EM_DIAGRAM):   else T_INTERVIEW = (INTERVIEW - 0) * 3.28008138048546;
MPRINT(EM_DIAGRAM):   *** Standardize INVENT ;
MPRINT(EM_DIAGRAM):   drop T_INVENT ;
MPRINT(EM_DIAGRAM):   if missing( INVENT ) then T_INVENT = .;
MPRINT(EM_DIAGRAM):   else T_INVENT = (INVENT - 0) * 3.59046988372407;
MPRINT(EM_DIAGRAM):   *** Standardize INVOLV ;
MPRINT(EM_DIAGRAM):   drop T_INVOLV ;
MPRINT(EM_DIAGRAM):   if missing( INVOLV ) then T_INVOLV = .;
MPRINT(EM_DIAGRAM):   else T_INVOLV = (INVOLV - 0) * 4.24841319155506;
MPRINT(EM_DIAGRAM):   *** Standardize IRAN ;
MPRINT(EM_DIAGRAM):   drop T_IRAN ;
MPRINT(EM_DIAGRAM):   if missing( IRAN ) then T_IRAN = .;
MPRINT(EM_DIAGRAM):   else T_IRAN = (IRAN - 0) * 3.48730840995242;
MPRINT(EM_DIAGRAM):   *** Standardize IRVIN ;
MPRINT(EM_DIAGRAM):   drop T_IRVIN ;
MPRINT(EM_DIAGRAM):   if missing( IRVIN ) then T_IRVIN = .;
MPRINT(EM_DIAGRAM):   else T_IRVIN = (IRVIN - 0) * 3.46684560536885;
MPRINT(EM_DIAGRAM):   *** Standardize ISLAM ;
MPRINT(EM_DIAGRAM):   drop T_ISLAM ;
MPRINT(EM_DIAGRAM):   if missing( ISLAM ) then T_ISLAM = .;
MPRINT(EM_DIAGRAM):   else T_ISLAM = (ISLAM - 0) * 4.29638175436361;
MPRINT(EM_DIAGRAM):   *** Standardize ISLAND ;
MPRINT(EM_DIAGRAM):   drop T_ISLAND ;
MPRINT(EM_DIAGRAM):   if missing( ISLAND ) then T_ISLAND = .;
MPRINT(EM_DIAGRAM):   else T_ISLAND = (ISLAND - 0) * 5.4684023602231;
MPRINT(EM_DIAGRAM):   *** Standardize ISN ;
MPRINT(EM_DIAGRAM):   drop T_ISN ;
MPRINT(EM_DIAGRAM):   if missing( ISN ) then T_ISN = .;
MPRINT(EM_DIAGRAM):   else T_ISN = (ISN - 0) * 9.5968924263904;
MPRINT(EM_DIAGRAM):   *** Standardize ISRA ;
MPRINT(EM_DIAGRAM):   drop T_ISRA ;
MPRINT(EM_DIAGRAM):   if missing( ISRA ) then T_ISRA = .;
MPRINT(EM_DIAGRAM):   else T_ISRA = (ISRA - 0) * 2.93382132882602;
MPRINT(EM_DIAGRAM):   *** Standardize ISRAEL ;
MPRINT(EM_DIAGRAM):   drop T_ISRAEL ;
MPRINT(EM_DIAGRAM):   if missing( ISRAEL ) then T_ISRAEL = .;
MPRINT(EM_DIAGRAM):   else T_ISRAEL = (ISRAEL - 0) * 3.39785495462447;
MPRINT(EM_DIAGRAM):   *** Standardize ISSU ;
MPRINT(EM_DIAGRAM):   drop T_ISSU ;
MPRINT(EM_DIAGRAM):   if missing( ISSU ) then T_ISSU = .;
MPRINT(EM_DIAGRAM):   else T_ISSU = (ISSU - 0) * 6.13734894916172;
MPRINT(EM_DIAGRAM):   *** Standardize ITEM ;
MPRINT(EM_DIAGRAM):   drop T_ITEM ;
MPRINT(EM_DIAGRAM):   if missing( ITEM ) then T_ITEM = .;
MPRINT(EM_DIAGRAM):   else T_ITEM = (ITEM - 0) * 5.48782846350452;
MPRINT(EM_DIAGRAM):   *** Standardize JACK ;
MPRINT(EM_DIAGRAM):   drop T_JACK ;
MPRINT(EM_DIAGRAM):   if missing( JACK ) then T_JACK = .;
MPRINT(EM_DIAGRAM):   else T_JACK = (JACK - 0) * 3.84965187865859;
MPRINT(EM_DIAGRAM):   *** Standardize JAKE ;
MPRINT(EM_DIAGRAM):   drop T_JAKE ;
MPRINT(EM_DIAGRAM):   if missing( JAKE ) then T_JAKE = .;
MPRINT(EM_DIAGRAM):   else T_JAKE = (JAKE - 0) * 3.05577357570351;
MPRINT(EM_DIAGRAM):   *** Standardize JASON ;
MPRINT(EM_DIAGRAM):   drop T_JASON ;
MPRINT(EM_DIAGRAM):   if missing( JASON ) then T_JASON = .;
MPRINT(EM_DIAGRAM):   else T_JASON = (JASON - 0) * 1.62756273776051;
MPRINT(EM_DIAGRAM):   *** Standardize JEFF ;
MPRINT(EM_DIAGRAM):   drop T_JEFF ;
MPRINT(EM_DIAGRAM):   if missing( JEFF ) then T_JEFF = .;
MPRINT(EM_DIAGRAM):   else T_JEFF = (JEFF - 0) * 2.56939287918451;
MPRINT(EM_DIAGRAM):   *** Standardize JEFFERSON ;
MPRINT(EM_DIAGRAM):   drop T_JEFFERSON ;
MPRINT(EM_DIAGRAM):   if missing( JEFFERSON ) then T_JEFFERSON = .;
MPRINT(EM_DIAGRAM):   else T_JEFFERSON = (JEFFERSON - 0) * 2.59448138548761;
MPRINT(EM_DIAGRAM):   *** Standardize JERUSALEM ;
MPRINT(EM_DIAGRAM):   drop T_JERUSALEM ;
MPRINT(EM_DIAGRAM):   if missing( JERUSALEM ) then T_JERUSALEM = .;
MPRINT(EM_DIAGRAM):   else T_JERUSALEM = (JERUSALEM - 0) * 3.13154010917841;
MPRINT(EM_DIAGRAM):   *** Standardize JESS ;
MPRINT(EM_DIAGRAM):   drop T_JESS ;
MPRINT(EM_DIAGRAM):   if missing( JESS ) then T_JESS = .;
MPRINT(EM_DIAGRAM):   else T_JESS = (JESS - 0) * 2.02153180937337;
MPRINT(EM_DIAGRAM):   *** Standardize JEW ;
MPRINT(EM_DIAGRAM):   drop T_JEW ;
MPRINT(EM_DIAGRAM):   if missing( JEW ) then T_JEW = .;
MPRINT(EM_DIAGRAM):   else T_JEW = (JEW - 0) * 3.14491364076581;
MPRINT(EM_DIAGRAM):   *** Standardize JEWISH ;
MPRINT(EM_DIAGRAM):   drop T_JEWISH ;
MPRINT(EM_DIAGRAM):   if missing( JEWISH ) then T_JEWISH = .;
MPRINT(EM_DIAGRAM):   else T_JEWISH = (JEWISH - 0) * 5.92217056150352;
MPRINT(EM_DIAGRAM):   *** Standardize JIM ;
MPRINT(EM_DIAGRAM):   drop T_JIM ;
MPRINT(EM_DIAGRAM):   if missing( JIM ) then T_JIM = .;
MPRINT(EM_DIAGRAM):   else T_JIM = (JIM - 0) * 3.92682177666454;
MPRINT(EM_DIAGRAM):   *** Standardize JIMMI ;
MPRINT(EM_DIAGRAM):   drop T_JIMMI ;
MPRINT(EM_DIAGRAM):   if missing( JIMMI ) then T_JIMMI = .;
MPRINT(EM_DIAGRAM):   else T_JIMMI = (JIMMI - 0) * 8.85649237985271;
MPRINT(EM_DIAGRAM):   *** Standardize JOEL ;
MPRINT(EM_DIAGRAM):   drop T_JOEL ;
MPRINT(EM_DIAGRAM):   if missing( JOEL ) then T_JOEL = .;
MPRINT(EM_DIAGRAM):   else T_JOEL = (JOEL - 0) * 1.78571147838687;
MPRINT(EM_DIAGRAM):   *** Standardize JOHN ;
MPRINT(EM_DIAGRAM):   drop T_JOHN ;
MPRINT(EM_DIAGRAM):   if missing( JOHN ) then T_JOHN = .;
MPRINT(EM_DIAGRAM):   else T_JOHN = (JOHN - 0) * 3.59085427385425;
MPRINT(EM_DIAGRAM):   *** Standardize JOSEPH ;
MPRINT(EM_DIAGRAM):   drop T_JOSEPH ;
MPRINT(EM_DIAGRAM):   if missing( JOSEPH ) then T_JOSEPH = .;
MPRINT(EM_DIAGRAM):   else T_JOSEPH = (JOSEPH - 0) * 3.19740195981445;
MPRINT(EM_DIAGRAM):   *** Standardize JOYSTICK ;
MPRINT(EM_DIAGRAM):   drop T_JOYSTICK ;
MPRINT(EM_DIAGRAM):   if missing( JOYSTICK ) then T_JOYSTICK = .;
MPRINT(EM_DIAGRAM):   else T_JOYSTICK = (JOYSTICK - 0) * 1.98733931776073;
MPRINT(EM_DIAGRAM):   *** Standardize JUSTIFI ;
MPRINT(EM_DIAGRAM):   drop T_JUSTIFI ;
MPRINT(EM_DIAGRAM):   if missing( JUSTIFI ) then T_JUSTIFI = .;
MPRINT(EM_DIAGRAM):   else T_JUSTIFI = (JUSTIFI - 0) * 8.36224941420918;
MPRINT(EM_DIAGRAM):   *** Standardize KEI ;
MPRINT(EM_DIAGRAM):   drop T_KEI ;
MPRINT(EM_DIAGRAM):   if missing( KEI ) then T_KEI = .;
MPRINT(EM_DIAGRAM):   else T_KEI = (KEI - 0) * 1.90144742715788;
MPRINT(EM_DIAGRAM):   *** Standardize KEITH ;
MPRINT(EM_DIAGRAM):   drop T_KEITH ;
MPRINT(EM_DIAGRAM):   if missing( KEITH ) then T_KEITH = .;
MPRINT(EM_DIAGRAM):   else T_KEITH = (KEITH - 0) * 3.02306896068342;
MPRINT(EM_DIAGRAM):   *** Standardize KEN ;
MPRINT(EM_DIAGRAM):   drop T_KEN ;
MPRINT(EM_DIAGRAM):   if missing( KEN ) then T_KEN = .;
MPRINT(EM_DIAGRAM):   else T_KEN = (KEN - 0) * 3.12575457089284;
MPRINT(EM_DIAGRAM):   *** Standardize KENNETH ;
MPRINT(EM_DIAGRAM):   drop T_KENNETH ;
MPRINT(EM_DIAGRAM):   if missing( KENNETH ) then T_KENNETH = .;
MPRINT(EM_DIAGRAM):   else T_KENNETH = (KENNETH - 0) * 3.32604559330722;
MPRINT(EM_DIAGRAM):   *** Standardize KEYBOARD ;
MPRINT(EM_DIAGRAM):   drop T_KEYBOARD ;
MPRINT(EM_DIAGRAM):   if missing( KEYBOARD ) then T_KEYBOARD = .;
MPRINT(EM_DIAGRAM):   else T_KEYBOARD = (KEYBOARD - 0) * 1.43127982922717;
MPRINT(EM_DIAGRAM):   *** Standardize KEYWORD ;
MPRINT(EM_DIAGRAM):   drop T_KEYWORD ;
MPRINT(EM_DIAGRAM):   if missing( KEYWORD ) then T_KEYWORD = .;
MPRINT(EM_DIAGRAM):   else T_KEYWORD = (KEYWORD - 0) * 5.02226940309122;
MPRINT(EM_DIAGRAM):   *** Standardize KIDNEI ;
MPRINT(EM_DIAGRAM):   drop T_KIDNEI ;
MPRINT(EM_DIAGRAM):   if missing( KIDNEI ) then T_KIDNEI = .;
MPRINT(EM_DIAGRAM):   else T_KIDNEI = (KIDNEI - 0) * 2.63878245839472;
MPRINT(EM_DIAGRAM):   *** Standardize KILL ;
MPRINT(EM_DIAGRAM):   drop T_KILL ;
MPRINT(EM_DIAGRAM):   if missing( KILL ) then T_KILL = .;
MPRINT(EM_DIAGRAM):   else T_KILL = (KILL - 0) * 4.07596293417053;
MPRINT(EM_DIAGRAM):   *** Standardize KIND ;
MPRINT(EM_DIAGRAM):   drop T_KIND ;
MPRINT(EM_DIAGRAM):   if missing( KIND ) then T_KIND = .;
MPRINT(EM_DIAGRAM):   else T_KIND = (KIND - 0) * 5.00154702429699;
MPRINT(EM_DIAGRAM):   *** Standardize KIRLIAN ;
MPRINT(EM_DIAGRAM):   drop T_KIRLIAN ;
MPRINT(EM_DIAGRAM):   if missing( KIRLIAN ) then T_KIRLIAN = .;
MPRINT(EM_DIAGRAM):   else T_KIRLIAN = (KIRLIAN - 0) * 3.85228666488177;
MPRINT(EM_DIAGRAM):   *** Standardize KLUTE ;
MPRINT(EM_DIAGRAM):   drop T_KLUTE ;
MPRINT(EM_DIAGRAM):   if missing( KLUTE ) then T_KLUTE = .;
MPRINT(EM_DIAGRAM):   else T_KLUTE = (KLUTE - 0) * 1.95716969457211;
MPRINT(EM_DIAGRAM):   *** Standardize KNOW ;
MPRINT(EM_DIAGRAM):   drop T_KNOW ;
MPRINT(EM_DIAGRAM):   if missing( KNOW ) then T_KNOW = .;
MPRINT(EM_DIAGRAM):   else T_KNOW = (KNOW - 0) * 3.84367664943068;
MPRINT(EM_DIAGRAM):   *** Standardize KNOWLEDG ;
MPRINT(EM_DIAGRAM):   drop T_KNOWLEDG ;
MPRINT(EM_DIAGRAM):   if missing( KNOWLEDG ) then T_KNOWLEDG = .;
MPRINT(EM_DIAGRAM):   else T_KNOWLEDG = (KNOWLEDG - 0) * 7.86723976001454;
MPRINT(EM_DIAGRAM):   *** Standardize KRILLEAN ;
MPRINT(EM_DIAGRAM):   drop T_KRILLEAN ;
MPRINT(EM_DIAGRAM):   if missing( KRILLEAN ) then T_KRILLEAN = .;
MPRINT(EM_DIAGRAM):   else T_KRILLEAN = (KRILLEAN - 0) * 3.04006137332276;
MPRINT(EM_DIAGRAM):   *** Standardize LAB ;
MPRINT(EM_DIAGRAM):   drop T_LAB ;
MPRINT(EM_DIAGRAM):   if missing( LAB ) then T_LAB = .;
MPRINT(EM_DIAGRAM):   else T_LAB = (LAB - 0) * 3.09682917312702;
MPRINT(EM_DIAGRAM):   *** Standardize LABEL ;
MPRINT(EM_DIAGRAM):   drop T_LABEL ;
MPRINT(EM_DIAGRAM):   if missing( LABEL ) then T_LABEL = .;
MPRINT(EM_DIAGRAM):   else T_LABEL = (LABEL - 0) * 2.72371278058268;
MPRINT(EM_DIAGRAM):   *** Standardize LABORATORI ;
MPRINT(EM_DIAGRAM):   drop T_LABORATORI ;
MPRINT(EM_DIAGRAM):   if missing( LABORATORI ) then T_LABORATORI = .;
MPRINT(EM_DIAGRAM):   else T_LABORATORI = (LABORATORI - 0) * 6.08256530442768;
MPRINT(EM_DIAGRAM):   *** Standardize LACK ;
MPRINT(EM_DIAGRAM):   drop T_LACK ;
MPRINT(EM_DIAGRAM):   if missing( LACK ) then T_LACK = .;
MPRINT(EM_DIAGRAM):   else T_LACK = (LACK - 0) * 3.82246073723758;
MPRINT(EM_DIAGRAM):   *** Standardize LAND ;
MPRINT(EM_DIAGRAM):   drop T_LAND ;
MPRINT(EM_DIAGRAM):   if missing( LAND ) then T_LAND = .;
MPRINT(EM_DIAGRAM):   else T_LAND = (LAND - 0) * 2.97237639698264;
MPRINT(EM_DIAGRAM):   *** Standardize LANGUAG ;
MPRINT(EM_DIAGRAM):   drop T_LANGUAG ;
MPRINT(EM_DIAGRAM):   if missing( LANGUAG ) then T_LANGUAG = .;
MPRINT(EM_DIAGRAM):   else T_LANGUAG = (LANGUAG - 0) * 3.68258733072651;
MPRINT(EM_DIAGRAM):   *** Standardize LARG ;
MPRINT(EM_DIAGRAM):   drop T_LARG ;
MPRINT(EM_DIAGRAM):   if missing( LARG ) then T_LARG = .;
MPRINT(EM_DIAGRAM):   else T_LARG = (LARG - 0) * 5.33287250006984;
MPRINT(EM_DIAGRAM):   *** Standardize LARRI ;
MPRINT(EM_DIAGRAM):   drop T_LARRI ;
MPRINT(EM_DIAGRAM):   if missing( LARRI ) then T_LARRI = .;
MPRINT(EM_DIAGRAM):   else T_LARRI = (LARRI - 0) * 2.31616155899716;
MPRINT(EM_DIAGRAM):   *** Standardize LASER ;
MPRINT(EM_DIAGRAM):   drop T_LASER ;
MPRINT(EM_DIAGRAM):   if missing( LASER ) then T_LASER = .;
MPRINT(EM_DIAGRAM):   else T_LASER = (LASER - 0) * 2.20233675358672;
MPRINT(EM_DIAGRAM):   *** Standardize LAW ;
MPRINT(EM_DIAGRAM):   drop T_LAW ;
MPRINT(EM_DIAGRAM):   if missing( LAW ) then T_LAW = .;
MPRINT(EM_DIAGRAM):   else T_LAW = (LAW - 0) * 5.66441262721047;
MPRINT(EM_DIAGRAM):   *** Standardize LEAD ;
MPRINT(EM_DIAGRAM):   drop T_LEAD ;
MPRINT(EM_DIAGRAM):   if missing( LEAD ) then T_LEAD = .;
MPRINT(EM_DIAGRAM):   else T_LEAD = (LEAD - 0) * 6.60145785059811;
MPRINT(EM_DIAGRAM):   *** Standardize LEADER ;
MPRINT(EM_DIAGRAM):   drop T_LEADER ;
MPRINT(EM_DIAGRAM):   if missing( LEADER ) then T_LEADER = .;
MPRINT(EM_DIAGRAM):   else T_LEADER = (LEADER - 0) * 4.42977890710686;
MPRINT(EM_DIAGRAM):   *** Standardize LEARN ;
MPRINT(EM_DIAGRAM):   drop T_LEARN ;
MPRINT(EM_DIAGRAM):   if missing( LEARN ) then T_LEARN = .;
MPRINT(EM_DIAGRAM):   else T_LEARN = (LEARN - 0) * 4.0802413970166;
MPRINT(EM_DIAGRAM):   *** Standardize LEAV ;
MPRINT(EM_DIAGRAM):   drop T_LEAV ;
MPRINT(EM_DIAGRAM):   if missing( LEAV ) then T_LEAV = .;
MPRINT(EM_DIAGRAM):   else T_LEAV = (LEAV - 0) * 8.36375585169377;
MPRINT(EM_DIAGRAM):   *** Standardize LEBANES ;
MPRINT(EM_DIAGRAM):   drop T_LEBANES ;
MPRINT(EM_DIAGRAM):   if missing( LEBANES ) then T_LEBANES = .;
MPRINT(EM_DIAGRAM):   else T_LEBANES = (LEBANES - 0) * 4.87845110098324;
MPRINT(EM_DIAGRAM):   *** Standardize LEBANON ;
MPRINT(EM_DIAGRAM):   drop T_LEBANON ;
MPRINT(EM_DIAGRAM):   if missing( LEBANON ) then T_LEBANON = .;
MPRINT(EM_DIAGRAM):   else T_LEBANON = (LEBANON - 0) * 5.98536161085264;
MPRINT(EM_DIAGRAM):   *** Standardize LEFT ;
MPRINT(EM_DIAGRAM):   drop T_LEFT ;
MPRINT(EM_DIAGRAM):   if missing( LEFT ) then T_LEFT = .;
MPRINT(EM_DIAGRAM):   else T_LEFT = (LEFT - 0) * 5.44184016616709;
MPRINT(EM_DIAGRAM):   *** Standardize LEGAL ;
MPRINT(EM_DIAGRAM):   drop T_LEGAL ;
MPRINT(EM_DIAGRAM):   if missing( LEGAL ) then T_LEGAL = .;
MPRINT(EM_DIAGRAM):   else T_LEGAL = (LEGAL - 0) * 4.98285060389899;
MPRINT(EM_DIAGRAM):   *** Standardize LET ;
MPRINT(EM_DIAGRAM):   drop T_LET ;
MPRINT(EM_DIAGRAM):   if missing( LET ) then T_LET = .;
MPRINT(EM_DIAGRAM):   else T_LET = (LET - 0) * 7.48818846451142;
MPRINT(EM_DIAGRAM):   *** Standardize LETTER ;
MPRINT(EM_DIAGRAM):   drop T_LETTER ;
MPRINT(EM_DIAGRAM):   if missing( LETTER ) then T_LETTER = .;
MPRINT(EM_DIAGRAM):   else T_LETTER = (LETTER - 0) * 3.43697441211463;
MPRINT(EM_DIAGRAM):   *** Standardize LEVEL ;
MPRINT(EM_DIAGRAM):   drop T_LEVEL ;
MPRINT(EM_DIAGRAM):   if missing( LEVEL ) then T_LEVEL = .;
MPRINT(EM_DIAGRAM):   else T_LEVEL = (LEVEL - 0) * 3.79255144404833;
MPRINT(EM_DIAGRAM):   *** Standardize LIBRARI ;
MPRINT(EM_DIAGRAM):   drop T_LIBRARI ;
MPRINT(EM_DIAGRAM):   if missing( LIBRARI ) then T_LIBRARI = .;
MPRINT(EM_DIAGRAM):   else T_LIBRARI = (LIBRARI - 0) * 3.23415514174726;
MPRINT(EM_DIAGRAM):   *** Standardize LICENS ;
MPRINT(EM_DIAGRAM):   drop T_LICENS ;
MPRINT(EM_DIAGRAM):   if missing( LICENS ) then T_LICENS = .;
MPRINT(EM_DIAGRAM):   else T_LICENS = (LICENS - 0) * 4.77265114921449;
MPRINT(EM_DIAGRAM):   *** Standardize LIFE ;
MPRINT(EM_DIAGRAM):   drop T_LIFE ;
MPRINT(EM_DIAGRAM):   if missing( LIFE ) then T_LIFE = .;
MPRINT(EM_DIAGRAM):   else T_LIFE = (LIFE - 0) * 3.1557108745795;
MPRINT(EM_DIAGRAM):   *** Standardize LIGHT ;
MPRINT(EM_DIAGRAM):   drop T_LIGHT ;
MPRINT(EM_DIAGRAM):   if missing( LIGHT ) then T_LIGHT = .;
MPRINT(EM_DIAGRAM):   else T_LIGHT = (LIGHT - 0) * 3.20221556824224;
MPRINT(EM_DIAGRAM):   *** Standardize LIMIT ;
MPRINT(EM_DIAGRAM):   drop T_LIMIT ;
MPRINT(EM_DIAGRAM):   if missing( LIMIT ) then T_LIMIT = .;
MPRINT(EM_DIAGRAM):   else T_LIMIT = (LIMIT - 0) * 5.21433224735978;
MPRINT(EM_DIAGRAM):   *** Standardize LINK ;
MPRINT(EM_DIAGRAM):   drop T_LINK ;
MPRINT(EM_DIAGRAM):   if missing( LINK ) then T_LINK = .;
MPRINT(EM_DIAGRAM):   else T_LINK = (LINK - 0) * 3.5368045882311;
MPRINT(EM_DIAGRAM):   *** Standardize LINUX ;
MPRINT(EM_DIAGRAM):   drop T_LINUX ;
MPRINT(EM_DIAGRAM):   if missing( LINUX ) then T_LINUX = .;
MPRINT(EM_DIAGRAM):   else T_LINUX = (LINUX - 0) * 2.29043022373019;
MPRINT(EM_DIAGRAM):   *** Standardize LIST ;
MPRINT(EM_DIAGRAM):   drop T_LIST ;
MPRINT(EM_DIAGRAM):   if missing( LIST ) then T_LIST = .;
MPRINT(EM_DIAGRAM):   else T_LIST = (LIST - 0) * 3.01527314406741;
MPRINT(EM_DIAGRAM):   *** Standardize LISTEN ;
MPRINT(EM_DIAGRAM):   drop T_LISTEN ;
MPRINT(EM_DIAGRAM):   if missing( LISTEN ) then T_LISTEN = .;
MPRINT(EM_DIAGRAM):   else T_LISTEN = (LISTEN - 0) * 5.97403754807864;
MPRINT(EM_DIAGRAM):   *** Standardize LITERATUR ;
MPRINT(EM_DIAGRAM):   drop T_LITERATUR ;
MPRINT(EM_DIAGRAM):   if missing( LITERATUR ) then T_LITERATUR = .;
MPRINT(EM_DIAGRAM):   else T_LITERATUR = (LITERATUR - 0) * 5.80322090393581;
MPRINT(EM_DIAGRAM):   *** Standardize LIVE ;
MPRINT(EM_DIAGRAM):   drop T_LIVE ;
MPRINT(EM_DIAGRAM):   if missing( LIVE ) then T_LIVE = .;
MPRINT(EM_DIAGRAM):   else T_LIVE = (LIVE - 0) * 5.54620113841454;
MPRINT(EM_DIAGRAM):   *** Standardize LIVNI ;
MPRINT(EM_DIAGRAM):   drop T_LIVNI ;
MPRINT(EM_DIAGRAM):   if missing( LIVNI ) then T_LIVNI = .;
MPRINT(EM_DIAGRAM):   else T_LIVNI = (LIVNI - 0) * 3.02692511951225;
MPRINT(EM_DIAGRAM):   *** Standardize LOAD ;
MPRINT(EM_DIAGRAM):   drop T_LOAD ;
MPRINT(EM_DIAGRAM):   if missing( LOAD ) then T_LOAD = .;
MPRINT(EM_DIAGRAM):   else T_LOAD = (LOAD - 0) * 3.28278258294526;
MPRINT(EM_DIAGRAM):   *** Standardize LOCAL ;
MPRINT(EM_DIAGRAM):   drop T_LOCAL ;
MPRINT(EM_DIAGRAM):   if missing( LOCAL ) then T_LOCAL = .;
MPRINT(EM_DIAGRAM):   else T_LOCAL = (LOCAL - 0) * 4.41628618325147;
MPRINT(EM_DIAGRAM):   *** Standardize LOCAT ;
MPRINT(EM_DIAGRAM):   drop T_LOCAT ;
MPRINT(EM_DIAGRAM):   if missing( LOCAT ) then T_LOCAT = .;
MPRINT(EM_DIAGRAM):   else T_LOCAT = (LOCAT - 0) * 6.39075480110013;
MPRINT(EM_DIAGRAM):   *** Standardize LOGIC ;
MPRINT(EM_DIAGRAM):   drop T_LOGIC ;
MPRINT(EM_DIAGRAM):   if missing( LOGIC ) then T_LOGIC = .;
MPRINT(EM_DIAGRAM):   else T_LOGIC = (LOGIC - 0) * 2.08332144374;
MPRINT(EM_DIAGRAM):   *** Standardize LOGIN ;
MPRINT(EM_DIAGRAM):   drop T_LOGIN ;
MPRINT(EM_DIAGRAM):   if missing( LOGIN ) then T_LOGIN = .;
MPRINT(EM_DIAGRAM):   else T_LOGIN = (LOGIN - 0) * 1.95919783110303;
MPRINT(EM_DIAGRAM):   *** Standardize LONG ;
MPRINT(EM_DIAGRAM):   drop T_LONG ;
MPRINT(EM_DIAGRAM):   if missing( LONG ) then T_LONG = .;
MPRINT(EM_DIAGRAM):   else T_LONG = (LONG - 0) * 4.19939497891168;
MPRINT(EM_DIAGRAM):   *** Standardize LONGER ;
MPRINT(EM_DIAGRAM):   drop T_LONGER ;
MPRINT(EM_DIAGRAM):   if missing( LONGER ) then T_LONGER = .;
MPRINT(EM_DIAGRAM):   else T_LONGER = (LONGER - 0) * 7.88126004757208;
MPRINT(EM_DIAGRAM):   *** Standardize LOOK ;
MPRINT(EM_DIAGRAM):   drop T_LOOK ;
MPRINT(EM_DIAGRAM):   if missing( LOOK ) then T_LOOK = .;
MPRINT(EM_DIAGRAM):   else T_LOOK = (LOOK - 0) * 7.95967583213043;
MPRINT(EM_DIAGRAM):   *** Standardize LOOP ;
MPRINT(EM_DIAGRAM):   drop T_LOOP ;
MPRINT(EM_DIAGRAM):   if missing( LOOP ) then T_LOOP = .;
MPRINT(EM_DIAGRAM):   else T_LOOP = (LOOP - 0) * 3.01101002669631;
MPRINT(EM_DIAGRAM):   *** Standardize LOST ;
MPRINT(EM_DIAGRAM):   drop T_LOST ;
MPRINT(EM_DIAGRAM):   if missing( LOST ) then T_LOST = .;
MPRINT(EM_DIAGRAM):   else T_LOST = (LOST - 0) * 6.20802524268119;
MPRINT(EM_DIAGRAM):   *** Standardize LOT ;
MPRINT(EM_DIAGRAM):   drop T_LOT ;
MPRINT(EM_DIAGRAM):   if missing( LOT ) then T_LOT = .;
MPRINT(EM_DIAGRAM):   else T_LOT = (LOT - 0) * 5.56296779259969;
MPRINT(EM_DIAGRAM):   *** Standardize LOVE ;
MPRINT(EM_DIAGRAM):   drop T_LOVE ;
MPRINT(EM_DIAGRAM):   if missing( LOVE ) then T_LOVE = .;
MPRINT(EM_DIAGRAM):   else T_LOVE = (LOVE - 0) * 5.11315117413479;
MPRINT(EM_DIAGRAM):   *** Standardize LUCK ;
MPRINT(EM_DIAGRAM):   drop T_LUCK ;
MPRINT(EM_DIAGRAM):   if missing( LUCK ) then T_LUCK = .;
MPRINT(EM_DIAGRAM):   else T_LUCK = (LUCK - 0) * 6.00144877611426;
MPRINT(EM_DIAGRAM):   *** Standardize LUNG ;
MPRINT(EM_DIAGRAM):   drop T_LUNG ;
MPRINT(EM_DIAGRAM):   if missing( LUNG ) then T_LUNG = .;
MPRINT(EM_DIAGRAM):   else T_LUNG = (LUNG - 0) * 1.73342280268442;
MPRINT(EM_DIAGRAM):   *** Standardize LYME ;
MPRINT(EM_DIAGRAM):   drop T_LYME ;
MPRINT(EM_DIAGRAM):   if missing( LYME ) then T_LYME = .;
MPRINT(EM_DIAGRAM):   else T_LYME = (LYME - 0) * 2.28745032950364;
MPRINT(EM_DIAGRAM):   *** Standardize MACHIN ;
MPRINT(EM_DIAGRAM):   drop T_MACHIN ;
MPRINT(EM_DIAGRAM):   if missing( MACHIN ) then T_MACHIN = .;
MPRINT(EM_DIAGRAM):   else T_MACHIN = (MACHIN - 0) * 4.78877337764077;
MPRINT(EM_DIAGRAM):   *** Standardize MAHAN ;
MPRINT(EM_DIAGRAM):   drop T_MAHAN ;
MPRINT(EM_DIAGRAM):   if missing( MAHAN ) then T_MAHAN = .;
MPRINT(EM_DIAGRAM):   else T_MAHAN = (MAHAN - 0) * 1.7880773702458;
MPRINT(EM_DIAGRAM):   *** Standardize MAIL ;
MPRINT(EM_DIAGRAM):   drop T_MAIL ;
MPRINT(EM_DIAGRAM):   if missing( MAIL ) then T_MAIL = .;
MPRINT(EM_DIAGRAM):   else T_MAIL = (MAIL - 0) * 3.59372355302247;
MPRINT(EM_DIAGRAM):   *** Standardize MAIN ;
MPRINT(EM_DIAGRAM):   drop T_MAIN ;
MPRINT(EM_DIAGRAM):   if missing( MAIN ) then T_MAIN = .;
MPRINT(EM_DIAGRAM):   else T_MAIN = (MAIN - 0) * 3.45428636602064;
MPRINT(EM_DIAGRAM):   *** Standardize MAINTAIN ;
MPRINT(EM_DIAGRAM):   drop T_MAINTAIN ;
MPRINT(EM_DIAGRAM):   if missing( MAINTAIN ) then T_MAINTAIN = .;
MPRINT(EM_DIAGRAM):   else T_MAINTAIN = (MAINTAIN - 0) * 5.64898434458089;
MPRINT(EM_DIAGRAM):   *** Standardize MAJOR ;
MPRINT(EM_DIAGRAM):   drop T_MAJOR ;
MPRINT(EM_DIAGRAM):   if missing( MAJOR ) then T_MAJOR = .;
MPRINT(EM_DIAGRAM):   else T_MAJOR = (MAJOR - 0) * 7.44949835593125;
MPRINT(EM_DIAGRAM):   *** Standardize MAKE ;
MPRINT(EM_DIAGRAM):   drop T_MAKE ;
MPRINT(EM_DIAGRAM):   if missing( MAKE ) then T_MAKE = .;
MPRINT(EM_DIAGRAM):   else T_MAKE = (MAKE - 0) * 7.42505140272714;
MPRINT(EM_DIAGRAM):   *** Standardize MAN ;
MPRINT(EM_DIAGRAM):   drop T_MAN ;
MPRINT(EM_DIAGRAM):   if missing( MAN ) then T_MAN = .;
MPRINT(EM_DIAGRAM):   else T_MAN = (MAN - 0) * 5.85361454701282;
MPRINT(EM_DIAGRAM):   *** Standardize MANAG ;
MPRINT(EM_DIAGRAM):   drop T_MANAG ;
MPRINT(EM_DIAGRAM):   if missing( MANAG ) then T_MANAG = .;
MPRINT(EM_DIAGRAM):   else T_MANAG = (MANAG - 0) * 3.76132037636571;
MPRINT(EM_DIAGRAM):   *** Standardize MANUAL ;
MPRINT(EM_DIAGRAM):   drop T_MANUAL ;
MPRINT(EM_DIAGRAM):   if missing( MANUAL ) then T_MANUAL = .;
MPRINT(EM_DIAGRAM):   else T_MANUAL = (MANUAL - 0) * 2.75912233008053;
MPRINT(EM_DIAGRAM):   *** Standardize MAP ;
MPRINT(EM_DIAGRAM):   drop T_MAP ;
MPRINT(EM_DIAGRAM):   if missing( MAP ) then T_MAP = .;
MPRINT(EM_DIAGRAM):   else T_MAP = (MAP - 0) * 2.29595960552858;
MPRINT(EM_DIAGRAM):   *** Standardize MARC ;
MPRINT(EM_DIAGRAM):   drop T_MARC ;
MPRINT(EM_DIAGRAM):   if missing( MARC ) then T_MARC = .;
MPRINT(EM_DIAGRAM):   else T_MARC = (MARC - 0) * 1.83117424586408;
MPRINT(EM_DIAGRAM):   *** Standardize MARK ;
MPRINT(EM_DIAGRAM):   drop T_MARK ;
MPRINT(EM_DIAGRAM):   if missing( MARK ) then T_MARK = .;
MPRINT(EM_DIAGRAM):   else T_MARK = (MARK - 0) * 3.0438061756493;
MPRINT(EM_DIAGRAM):   *** Standardize MARKET ;
MPRINT(EM_DIAGRAM):   drop T_MARKET ;
MPRINT(EM_DIAGRAM):   if missing( MARKET ) then T_MARKET = .;
MPRINT(EM_DIAGRAM):   else T_MARKET = (MARKET - 0) * 3.42125142146877;
MPRINT(EM_DIAGRAM):   *** Standardize MARTIN ;
MPRINT(EM_DIAGRAM):   drop T_MARTIN ;
MPRINT(EM_DIAGRAM):   if missing( MARTIN ) then T_MARTIN = .;
MPRINT(EM_DIAGRAM):   else T_MARTIN = (MARTIN - 0) * 2.05553993614618;
MPRINT(EM_DIAGRAM):   *** Standardize MASK ;
MPRINT(EM_DIAGRAM):   drop T_MASK ;
MPRINT(EM_DIAGRAM):   if missing( MASK ) then T_MASK = .;
MPRINT(EM_DIAGRAM):   else T_MASK = (MASK - 0) * 2.2677856697892;
MPRINT(EM_DIAGRAM):   *** Standardize MASS ;
MPRINT(EM_DIAGRAM):   drop T_MASS ;
MPRINT(EM_DIAGRAM):   if missing( MASS ) then T_MASS = .;
MPRINT(EM_DIAGRAM):   else T_MASS = (MASS - 0) * 8.69115543360127;
MPRINT(EM_DIAGRAM):   *** Standardize MASSACR ;
MPRINT(EM_DIAGRAM):   drop T_MASSACR ;
MPRINT(EM_DIAGRAM):   if missing( MASSACR ) then T_MASSACR = .;
MPRINT(EM_DIAGRAM):   else T_MASSACR = (MASSACR - 0) * 9.46435504138882;
MPRINT(EM_DIAGRAM):   *** Standardize MATERI ;
MPRINT(EM_DIAGRAM):   drop T_MATERI ;
MPRINT(EM_DIAGRAM):   if missing( MATERI ) then T_MATERI = .;
MPRINT(EM_DIAGRAM):   else T_MATERI = (MATERI - 0) * 4.25341793681997;
MPRINT(EM_DIAGRAM):   *** Standardize MATH ;
MPRINT(EM_DIAGRAM):   drop T_MATH ;
MPRINT(EM_DIAGRAM):   if missing( MATH ) then T_MATH = .;
MPRINT(EM_DIAGRAM):   else T_MATH = (MATH - 0) * 3.15952136368446;
MPRINT(EM_DIAGRAM):   *** Standardize MATTER ;
MPRINT(EM_DIAGRAM):   drop T_MATTER ;
MPRINT(EM_DIAGRAM):   if missing( MATTER ) then T_MATTER = .;
MPRINT(EM_DIAGRAM):   else T_MATTER = (MATTER - 0) * 7.97566016242569;
MPRINT(EM_DIAGRAM):   *** Standardize MCGILL ;
MPRINT(EM_DIAGRAM):   drop T_MCGILL ;
MPRINT(EM_DIAGRAM):   if missing( MCGILL ) then T_MCGILL = .;
MPRINT(EM_DIAGRAM):   else T_MCGILL = (MCGILL - 0) * 1.60758870343182;
MPRINT(EM_DIAGRAM):   *** Standardize MEAN ;
MPRINT(EM_DIAGRAM):   drop T_MEAN ;
MPRINT(EM_DIAGRAM):   if missing( MEAN ) then T_MEAN = .;
MPRINT(EM_DIAGRAM):   else T_MEAN = (MEAN - 0) * 4.35714953510162;
MPRINT(EM_DIAGRAM):   *** Standardize MEASUR ;
MPRINT(EM_DIAGRAM):   drop T_MEASUR ;
MPRINT(EM_DIAGRAM):   if missing( MEASUR ) then T_MEASUR = .;
MPRINT(EM_DIAGRAM):   else T_MEASUR = (MEASUR - 0) * 3.22851054039644;
MPRINT(EM_DIAGRAM):   *** Standardize MECHAN ;
MPRINT(EM_DIAGRAM):   drop T_MECHAN ;
MPRINT(EM_DIAGRAM):   if missing( MECHAN ) then T_MECHAN = .;
MPRINT(EM_DIAGRAM):   else T_MECHAN = (MECHAN - 0) * 5.50211686323758;
MPRINT(EM_DIAGRAM):   *** Standardize MED ;
MPRINT(EM_DIAGRAM):   drop T_MED ;
MPRINT(EM_DIAGRAM):   if missing( MED ) then T_MED = .;
MPRINT(EM_DIAGRAM):   else T_MED = (MED - 0) * 9.37751776577826;
MPRINT(EM_DIAGRAM):   *** Standardize MEDIA ;
MPRINT(EM_DIAGRAM):   drop T_MEDIA ;
MPRINT(EM_DIAGRAM):   if missing( MEDIA ) then T_MEDIA = .;
MPRINT(EM_DIAGRAM):   else T_MEDIA = (MEDIA - 0) * 3.73962818402804;
MPRINT(EM_DIAGRAM):   *** Standardize MEDIC ;
MPRINT(EM_DIAGRAM):   drop T_MEDIC ;
MPRINT(EM_DIAGRAM):   if missing( MEDIC ) then T_MEDIC = .;
MPRINT(EM_DIAGRAM):   else T_MEDIC = (MEDIC - 0) * 5.50007463226141;
MPRINT(EM_DIAGRAM):   *** Standardize MEDICIN ;
MPRINT(EM_DIAGRAM):   drop T_MEDICIN ;
MPRINT(EM_DIAGRAM):   if missing( MEDICIN ) then T_MEDICIN = .;
MPRINT(EM_DIAGRAM):   else T_MEDICIN = (MEDICIN - 0) * 3.69632394160673;
MPRINT(EM_DIAGRAM):   *** Standardize MELLON ;
MPRINT(EM_DIAGRAM):   drop T_MELLON ;
MPRINT(EM_DIAGRAM):   if missing( MELLON ) then T_MELLON = .;
MPRINT(EM_DIAGRAM):   else T_MELLON = (MELLON - 0) * 4.09514416335075;
MPRINT(EM_DIAGRAM):   *** Standardize MEMBER ;
MPRINT(EM_DIAGRAM):   drop T_MEMBER ;
MPRINT(EM_DIAGRAM):   if missing( MEMBER ) then T_MEMBER = .;
MPRINT(EM_DIAGRAM):   else T_MEMBER = (MEMBER - 0) * 6.98152406746835;
MPRINT(EM_DIAGRAM):   *** Standardize MEMORI ;
MPRINT(EM_DIAGRAM):   drop T_MEMORI ;
MPRINT(EM_DIAGRAM):   if missing( MEMORI ) then T_MEMORI = .;
MPRINT(EM_DIAGRAM):   else T_MEMORI = (MEMORI - 0) * 3.08243006790177;
MPRINT(EM_DIAGRAM):   *** Standardize MENTION ;
MPRINT(EM_DIAGRAM):   drop T_MENTION ;
MPRINT(EM_DIAGRAM):   if missing( MENTION ) then T_MENTION = .;
MPRINT(EM_DIAGRAM):   else T_MENTION = (MENTION - 0) * 9.24145196615372;
MPRINT(EM_DIAGRAM):   *** Standardize MENU ;
MPRINT(EM_DIAGRAM):   drop T_MENU ;
MPRINT(EM_DIAGRAM):   if missing( MENU ) then T_MENU = .;
MPRINT(EM_DIAGRAM):   else T_MENU = (MENU - 0) * 3.3335674149451;
MPRINT(EM_DIAGRAM):   *** Standardize MESSAG ;
MPRINT(EM_DIAGRAM):   drop T_MESSAG ;
MPRINT(EM_DIAGRAM):   if missing( MESSAG ) then T_MESSAG = .;
MPRINT(EM_DIAGRAM):   else T_MESSAG = (MESSAG - 0) * 2.89935922261813;
MPRINT(EM_DIAGRAM):   *** Standardize METAL ;
MPRINT(EM_DIAGRAM):   drop T_METAL ;
MPRINT(EM_DIAGRAM):   if missing( METAL ) then T_METAL = .;
MPRINT(EM_DIAGRAM):   else T_METAL = (METAL - 0) * 3.45398810609244;
MPRINT(EM_DIAGRAM):   *** Standardize METHOD ;
MPRINT(EM_DIAGRAM):   drop T_METHOD ;
MPRINT(EM_DIAGRAM):   if missing( METHOD ) then T_METHOD = .;
MPRINT(EM_DIAGRAM):   else T_METHOD = (METHOD - 0) * 3.47861232634472;
MPRINT(EM_DIAGRAM):   *** Standardize METHODOLOG ;
MPRINT(EM_DIAGRAM):   drop T_METHODOLOG ;
MPRINT(EM_DIAGRAM):   if missing( METHODOLOG ) then T_METHODOLOG = .;
MPRINT(EM_DIAGRAM):   else T_METHODOLOG = (METHODOLOG - 0) * 3.41262013612562;
MPRINT(EM_DIAGRAM):   *** Standardize MICHAEL ;
MPRINT(EM_DIAGRAM):   drop T_MICHAEL ;
MPRINT(EM_DIAGRAM):   if missing( MICHAEL ) then T_MICHAEL = .;
MPRINT(EM_DIAGRAM):   else T_MICHAEL = (MICHAEL - 0) * 2.376254304054;
MPRINT(EM_DIAGRAM):   *** Standardize MIDDL ;
MPRINT(EM_DIAGRAM):   drop T_MIDDL ;
MPRINT(EM_DIAGRAM):   if missing( MIDDL ) then T_MIDDL = .;
MPRINT(EM_DIAGRAM):   else T_MIDDL = (MIDDL - 0) * 7.7995193939542;
MPRINT(EM_DIAGRAM):   *** Standardize MIGRAIN ;
MPRINT(EM_DIAGRAM):   drop T_MIGRAIN ;
MPRINT(EM_DIAGRAM):   if missing( MIGRAIN ) then T_MIGRAIN = .;
MPRINT(EM_DIAGRAM):   else T_MIGRAIN = (MIGRAIN - 0) * 2.20699640983306;
MPRINT(EM_DIAGRAM):   *** Standardize MIKE ;
MPRINT(EM_DIAGRAM):   drop T_MIKE ;
MPRINT(EM_DIAGRAM):   if missing( MIKE ) then T_MIKE = .;
MPRINT(EM_DIAGRAM):   else T_MIKE = (MIKE - 0) * 1.86275620709937;
MPRINT(EM_DIAGRAM):   *** Standardize MILE ;
MPRINT(EM_DIAGRAM):   drop T_MILE ;
MPRINT(EM_DIAGRAM):   if missing( MILE ) then T_MILE = .;
MPRINT(EM_DIAGRAM):   else T_MILE = (MILE - 0) * 1.69279759447332;
MPRINT(EM_DIAGRAM):   *** Standardize MILITARI ;
MPRINT(EM_DIAGRAM):   drop T_MILITARI ;
MPRINT(EM_DIAGRAM):   if missing( MILITARI ) then T_MILITARI = .;
MPRINT(EM_DIAGRAM):   else T_MILITARI = (MILITARI - 0) * 5.98880797421104;
MPRINT(EM_DIAGRAM):   *** Standardize MILLION ;
MPRINT(EM_DIAGRAM):   drop T_MILLION ;
MPRINT(EM_DIAGRAM):   if missing( MILLION ) then T_MILLION = .;
MPRINT(EM_DIAGRAM):   else T_MILLION = (MILLION - 0) * 11.3978920578377;
MPRINT(EM_DIAGRAM):   *** Standardize MIND ;
MPRINT(EM_DIAGRAM):   drop T_MIND ;
MPRINT(EM_DIAGRAM):   if missing( MIND ) then T_MIND = .;
MPRINT(EM_DIAGRAM):   else T_MIND = (MIND - 0) * 5.41068115228797;
MPRINT(EM_DIAGRAM):   *** Standardize MINUT ;
MPRINT(EM_DIAGRAM):   drop T_MINUT ;
MPRINT(EM_DIAGRAM):   if missing( MINUT ) then T_MINUT = .;
MPRINT(EM_DIAGRAM):   else T_MINUT = (MINUT - 0) * 7.14890677719844;
MPRINT(EM_DIAGRAM):   *** Standardize MISC ;
MPRINT(EM_DIAGRAM):   drop T_MISC ;
MPRINT(EM_DIAGRAM):   if missing( MISC ) then T_MISC = .;
MPRINT(EM_DIAGRAM):   else T_MISC = (MISC - 0) * 5.12486560218211;
MPRINT(EM_DIAGRAM):   *** Standardize MISS ;
MPRINT(EM_DIAGRAM):   drop T_MISS ;
MPRINT(EM_DIAGRAM):   if missing( MISS ) then T_MISS = .;
MPRINT(EM_DIAGRAM):   else T_MISS = (MISS - 0) * 4.47290300624997;
MPRINT(EM_DIAGRAM):   *** Standardize MISTAK ;
MPRINT(EM_DIAGRAM):   drop T_MISTAK ;
MPRINT(EM_DIAGRAM):   if missing( MISTAK ) then T_MISTAK = .;
MPRINT(EM_DIAGRAM):   else T_MISTAK = (MISTAK - 0) * 3.69066606172837;
MPRINT(EM_DIAGRAM):   *** Standardize MODE ;
MPRINT(EM_DIAGRAM):   drop T_MODE ;
MPRINT(EM_DIAGRAM):   if missing( MODE ) then T_MODE = .;
MPRINT(EM_DIAGRAM):   else T_MODE = (MODE - 0) * 3.28620700970235;
MPRINT(EM_DIAGRAM):   *** Standardize MODEL ;
MPRINT(EM_DIAGRAM):   drop T_MODEL ;
MPRINT(EM_DIAGRAM):   if missing( MODEL ) then T_MODEL = .;
MPRINT(EM_DIAGRAM):   else T_MODEL = (MODEL - 0) * 2.21488945355343;
MPRINT(EM_DIAGRAM):   *** Standardize MODIFI ;
MPRINT(EM_DIAGRAM):   drop T_MODIFI ;
MPRINT(EM_DIAGRAM):   if missing( MODIFI ) then T_MODIFI = .;
MPRINT(EM_DIAGRAM):   else T_MODIFI = (MODIFI - 0) * 4.21337713510571;
MPRINT(EM_DIAGRAM):   *** Standardize MODUL ;
MPRINT(EM_DIAGRAM):   drop T_MODUL ;
MPRINT(EM_DIAGRAM):   if missing( MODUL ) then T_MODUL = .;
MPRINT(EM_DIAGRAM):   else T_MODUL = (MODUL - 0) * 1.79734103365012;
MPRINT(EM_DIAGRAM):   *** Standardize MON ;
MPRINT(EM_DIAGRAM):   drop T_MON ;
MPRINT(EM_DIAGRAM):   if missing( MON ) then T_MON = .;
MPRINT(EM_DIAGRAM):   else T_MON = (MON - 0) * 3.11461914988643;
MPRINT(EM_DIAGRAM):   *** Standardize MONEI ;
MPRINT(EM_DIAGRAM):   drop T_MONEI ;
MPRINT(EM_DIAGRAM):   if missing( MONEI ) then T_MONEI = .;
MPRINT(EM_DIAGRAM):   else T_MONEI = (MONEI - 0) * 4.23673825843567;
MPRINT(EM_DIAGRAM):   *** Standardize MONITOR ;
MPRINT(EM_DIAGRAM):   drop T_MONITOR ;
MPRINT(EM_DIAGRAM):   if missing( MONITOR ) then T_MONITOR = .;
MPRINT(EM_DIAGRAM):   else T_MONITOR = (MONITOR - 0) * 3.2654981547257;
MPRINT(EM_DIAGRAM):   *** Standardize MONTH ;
MPRINT(EM_DIAGRAM):   drop T_MONTH ;
MPRINT(EM_DIAGRAM):   if missing( MONTH ) then T_MONTH = .;
MPRINT(EM_DIAGRAM):   else T_MONTH = (MONTH - 0) * 6.11460287379286;
MPRINT(EM_DIAGRAM):   *** Standardize MORAL ;
MPRINT(EM_DIAGRAM):   drop T_MORAL ;
MPRINT(EM_DIAGRAM):   if missing( MORAL ) then T_MORAL = .;
MPRINT(EM_DIAGRAM):   else T_MORAL = (MORAL - 0) * 4.83656455563807;
MPRINT(EM_DIAGRAM):   *** Standardize MOTIF ;
MPRINT(EM_DIAGRAM):   drop T_MOTIF ;
MPRINT(EM_DIAGRAM):   if missing( MOTIF ) then T_MOTIF = .;
MPRINT(EM_DIAGRAM):   else T_MOTIF = (MOTIF - 0) * 1.77833146496822;
MPRINT(EM_DIAGRAM):   *** Standardize MOTOROLA ;
MPRINT(EM_DIAGRAM):   drop T_MOTOROLA ;
MPRINT(EM_DIAGRAM):   if missing( MOTOROLA ) then T_MOTOROLA = .;
MPRINT(EM_DIAGRAM):   else T_MOTOROLA = (MOTOROLA - 0) * 2.9016104519679;
MPRINT(EM_DIAGRAM):   *** Standardize MOUNTAIN ;
MPRINT(EM_DIAGRAM):   drop T_MOUNTAIN ;
MPRINT(EM_DIAGRAM):   if missing( MOUNTAIN ) then T_MOUNTAIN = .;
MPRINT(EM_DIAGRAM):   else T_MOUNTAIN = (MOUNTAIN - 0) * 7.92929569279031;
MPRINT(EM_DIAGRAM):   *** Standardize MOUS ;
MPRINT(EM_DIAGRAM):   drop T_MOUS ;
MPRINT(EM_DIAGRAM):   if missing( MOUS ) then T_MOUS = .;
MPRINT(EM_DIAGRAM):   else T_MOUS = (MOUS - 0) * 2.9016104519679;
MPRINT(EM_DIAGRAM):   *** Standardize MOVE ;
MPRINT(EM_DIAGRAM):   drop T_MOVE ;
MPRINT(EM_DIAGRAM):   if missing( MOVE ) then T_MOVE = .;
MPRINT(EM_DIAGRAM):   else T_MOVE = (MOVE - 0) * 7.60093756782965;
MPRINT(EM_DIAGRAM):   *** Standardize MOVEMENT ;
MPRINT(EM_DIAGRAM):   drop T_MOVEMENT ;
MPRINT(EM_DIAGRAM):   if missing( MOVEMENT ) then T_MOVEMENT = .;
MPRINT(EM_DIAGRAM):   else T_MOVEMENT = (MOVEMENT - 0) * 3.379935743281;
MPRINT(EM_DIAGRAM):   *** Standardize MSG ;
MPRINT(EM_DIAGRAM):   drop T_MSG ;
MPRINT(EM_DIAGRAM):   if missing( MSG ) then T_MSG = .;
MPRINT(EM_DIAGRAM):   else T_MSG = (MSG - 0) * 4.65826867722709;
MPRINT(EM_DIAGRAM):   *** Standardize MULTI ;
MPRINT(EM_DIAGRAM):   drop T_MULTI ;
MPRINT(EM_DIAGRAM):   if missing( MULTI ) then T_MULTI = .;
MPRINT(EM_DIAGRAM):   else T_MULTI = (MULTI - 0) * 3.03613203360167;
MPRINT(EM_DIAGRAM):   *** Standardize MULTIPL ;
MPRINT(EM_DIAGRAM):   drop T_MULTIPL ;
MPRINT(EM_DIAGRAM):   if missing( MULTIPL ) then T_MULTIPL = .;
MPRINT(EM_DIAGRAM):   else T_MULTIPL = (MULTIPL - 0) * 6.17370628638648;
MPRINT(EM_DIAGRAM):   *** Standardize MURDER ;
MPRINT(EM_DIAGRAM):   drop T_MURDER ;
MPRINT(EM_DIAGRAM):   if missing( MURDER ) then T_MURDER = .;
MPRINT(EM_DIAGRAM):   else T_MURDER = (MURDER - 0) * 6.56244858476765;
MPRINT(EM_DIAGRAM):   *** Standardize MUSCL ;
MPRINT(EM_DIAGRAM):   drop T_MUSCL ;
MPRINT(EM_DIAGRAM):   if missing( MUSCL ) then T_MUSCL = .;
MPRINT(EM_DIAGRAM):   else T_MUSCL = (MUSCL - 0) * 2.70165760776612;
MPRINT(EM_DIAGRAM):   *** Standardize MUSLIM ;
MPRINT(EM_DIAGRAM):   drop T_MUSLIM ;
MPRINT(EM_DIAGRAM):   if missing( MUSLIM ) then T_MUSLIM = .;
MPRINT(EM_DIAGRAM):   else T_MUSLIM = (MUSLIM - 0) * 4.84897475793507;
MPRINT(EM_DIAGRAM):   *** Standardize NAFTALI ;
MPRINT(EM_DIAGRAM):   drop T_NAFTALI ;
MPRINT(EM_DIAGRAM):   if missing( NAFTALI ) then T_NAFTALI = .;
MPRINT(EM_DIAGRAM):   else T_NAFTALI = (NAFTALI - 0) * 2.701539385081;
MPRINT(EM_DIAGRAM):   *** Standardize NAME ;
MPRINT(EM_DIAGRAM):   drop T_NAME ;
MPRINT(EM_DIAGRAM):   if missing( NAME ) then T_NAME = .;
MPRINT(EM_DIAGRAM):   else T_NAME = (NAME - 0) * 7.58969962111577;
MPRINT(EM_DIAGRAM):   *** Standardize NASA ;
MPRINT(EM_DIAGRAM):   drop T_NASA ;
MPRINT(EM_DIAGRAM):   if missing( NASA ) then T_NASA = .;
MPRINT(EM_DIAGRAM):   else T_NASA = (NASA - 0) * 3.64560157348207;
MPRINT(EM_DIAGRAM):   *** Standardize NATION ;
MPRINT(EM_DIAGRAM):   drop T_NATION ;
MPRINT(EM_DIAGRAM):   if missing( NATION ) then T_NATION = .;
MPRINT(EM_DIAGRAM):   else T_NATION = (NATION - 0) * 4.71969762486743;
MPRINT(EM_DIAGRAM):   *** Standardize NATUR ;
MPRINT(EM_DIAGRAM):   drop T_NATUR ;
MPRINT(EM_DIAGRAM):   if missing( NATUR ) then T_NATUR = .;
MPRINT(EM_DIAGRAM):   else T_NATUR = (NATUR - 0) * 5.73244526063442;
MPRINT(EM_DIAGRAM):   *** Standardize NAZI ;
MPRINT(EM_DIAGRAM):   drop T_NAZI ;
MPRINT(EM_DIAGRAM):   if missing( NAZI ) then T_NAZI = .;
MPRINT(EM_DIAGRAM):   else T_NAZI = (NAZI - 0) * 4.38397152600314;
MPRINT(EM_DIAGRAM):   *** Standardize NECESSARILI ;
MPRINT(EM_DIAGRAM):   drop T_NECESSARILI ;
MPRINT(EM_DIAGRAM):   if missing( NECESSARILI ) then T_NECESSARILI = .;
MPRINT(EM_DIAGRAM):   else T_NECESSARILI = (NECESSARILI - 0) * 4.95827183953248;
MPRINT(EM_DIAGRAM):   *** Standardize NEED ;
MPRINT(EM_DIAGRAM):   drop T_NEED ;
MPRINT(EM_DIAGRAM):   if missing( NEED ) then T_NEED = .;
MPRINT(EM_DIAGRAM):   else T_NEED = (NEED - 0) * 5.70642840850007;
MPRINT(EM_DIAGRAM):   *** Standardize NEEDL ;
MPRINT(EM_DIAGRAM):   drop T_NEEDL ;
MPRINT(EM_DIAGRAM):   if missing( NEEDL ) then T_NEEDL = .;
MPRINT(EM_DIAGRAM):   else T_NEEDL = (NEEDL - 0) * 2.15011904017348;
MPRINT(EM_DIAGRAM):   *** Standardize NEGOTI ;
MPRINT(EM_DIAGRAM):   drop T_NEGOTI ;
MPRINT(EM_DIAGRAM):   if missing( NEGOTI ) then T_NEGOTI = .;
MPRINT(EM_DIAGRAM):   else T_NEGOTI = (NEGOTI - 0) * 4.04739472205897;
MPRINT(EM_DIAGRAM):   *** Standardize NET ;
MPRINT(EM_DIAGRAM):   drop T_NET ;
MPRINT(EM_DIAGRAM):   if missing( NET ) then T_NET = .;
MPRINT(EM_DIAGRAM):   else T_NET = (NET - 0) * 4.75535700708339;
MPRINT(EM_DIAGRAM):   *** Standardize NETANYAHU ;
MPRINT(EM_DIAGRAM):   drop T_NETANYAHU ;
MPRINT(EM_DIAGRAM):   if missing( NETANYAHU ) then T_NETANYAHU = .;
MPRINT(EM_DIAGRAM):   else T_NETANYAHU = (NETANYAHU - 0) * 2.54104977475047;
MPRINT(EM_DIAGRAM):   *** Standardize NETCOM ;
MPRINT(EM_DIAGRAM):   drop T_NETCOM ;
MPRINT(EM_DIAGRAM):   if missing( NETCOM ) then T_NETCOM = .;
MPRINT(EM_DIAGRAM):   else T_NETCOM = (NETCOM - 0) * 3.40623835665797;
MPRINT(EM_DIAGRAM):   *** Standardize NETNEW ;
MPRINT(EM_DIAGRAM):   drop T_NETNEW ;
MPRINT(EM_DIAGRAM):   if missing( NETNEW ) then T_NETNEW = .;
MPRINT(EM_DIAGRAM):   else T_NETNEW = (NETNEW - 0) * 4.34294481903251;
MPRINT(EM_DIAGRAM):   *** Standardize NETWORK ;
MPRINT(EM_DIAGRAM):   drop T_NETWORK ;
MPRINT(EM_DIAGRAM):   if missing( NETWORK ) then T_NETWORK = .;
MPRINT(EM_DIAGRAM):   else T_NETWORK = (NETWORK - 0) * 4.22356430684241;
MPRINT(EM_DIAGRAM):   *** Standardize NEUTRAL ;
MPRINT(EM_DIAGRAM):   drop T_NEUTRAL ;
MPRINT(EM_DIAGRAM):   if missing( NEUTRAL ) then T_NEUTRAL = .;
MPRINT(EM_DIAGRAM):   else T_NEUTRAL = (NEUTRAL - 0) * 3.83993908718823;
MPRINT(EM_DIAGRAM):   *** Standardize NEW ;
MPRINT(EM_DIAGRAM):   drop T_NEW ;
MPRINT(EM_DIAGRAM):   if missing( NEW ) then T_NEW = .;
MPRINT(EM_DIAGRAM):   else T_NEW = (NEW - 0) * 5.28609191862929;
MPRINT(EM_DIAGRAM):   *** Standardize NEWS ;
MPRINT(EM_DIAGRAM):   drop T_NEWS ;
MPRINT(EM_DIAGRAM):   if missing( NEWS ) then T_NEWS = .;
MPRINT(EM_DIAGRAM):   else T_NEWS = (NEWS - 0) * 6.63244786409493;
MPRINT(EM_DIAGRAM):   *** Standardize NEWSREAD ;
MPRINT(EM_DIAGRAM):   drop T_NEWSREAD ;
MPRINT(EM_DIAGRAM):   if missing( NEWSREAD ) then T_NEWSREAD = .;
MPRINT(EM_DIAGRAM):   else T_NEWSREAD = (NEWSREAD - 0) * 5.31710677495046;
MPRINT(EM_DIAGRAM):   *** Standardize NICE ;
MPRINT(EM_DIAGRAM):   drop T_NICE ;
MPRINT(EM_DIAGRAM):   if missing( NICE ) then T_NICE = .;
MPRINT(EM_DIAGRAM):   else T_NICE = (NICE - 0) * 4.77268987983102;
MPRINT(EM_DIAGRAM):   *** Standardize NIGHT ;
MPRINT(EM_DIAGRAM):   drop T_NIGHT ;
MPRINT(EM_DIAGRAM):   if missing( NIGHT ) then T_NIGHT = .;
MPRINT(EM_DIAGRAM):   else T_NIGHT = (NIGHT - 0) * 3.75365165089199;
MPRINT(EM_DIAGRAM):   *** Standardize NNTP ;
MPRINT(EM_DIAGRAM):   drop T_NNTP ;
MPRINT(EM_DIAGRAM):   if missing( NNTP ) then T_NNTP = .;
MPRINT(EM_DIAGRAM):   else T_NNTP = (NNTP - 0) * 3.72800960735767;
MPRINT(EM_DIAGRAM):   *** Standardize NOIS ;
MPRINT(EM_DIAGRAM):   drop T_NOIS ;
MPRINT(EM_DIAGRAM):   if missing( NOIS ) then T_NOIS = .;
MPRINT(EM_DIAGRAM):   else T_NOIS = (NOIS - 0) * 2.08482728145691;
MPRINT(EM_DIAGRAM):   *** Standardize NORMAL ;
MPRINT(EM_DIAGRAM):   drop T_NORMAL ;
MPRINT(EM_DIAGRAM):   if missing( NORMAL ) then T_NORMAL = .;
MPRINT(EM_DIAGRAM):   else T_NORMAL = (NORMAL - 0) * 8.18992480577176;
MPRINT(EM_DIAGRAM):   *** Standardize NORTH ;
MPRINT(EM_DIAGRAM):   drop T_NORTH ;
MPRINT(EM_DIAGRAM):   if missing( NORTH ) then T_NORTH = .;
MPRINT(EM_DIAGRAM):   else T_NORTH = (NORTH - 0) * 5.03676698998738;
MPRINT(EM_DIAGRAM):   *** Standardize NOTE ;
MPRINT(EM_DIAGRAM):   drop T_NOTE ;
MPRINT(EM_DIAGRAM):   if missing( NOTE ) then T_NOTE = .;
MPRINT(EM_DIAGRAM):   else T_NOTE = (NOTE - 0) * 6.32175128788701;
MPRINT(EM_DIAGRAM):   *** Standardize NOTIC ;
MPRINT(EM_DIAGRAM):   drop T_NOTIC ;
MPRINT(EM_DIAGRAM):   if missing( NOTIC ) then T_NOTIC = .;
MPRINT(EM_DIAGRAM):   else T_NOTIC = (NOTIC - 0) * 8.52120241445657;
MPRINT(EM_DIAGRAM):   *** Standardize NUCLEAR ;
MPRINT(EM_DIAGRAM):   drop T_NUCLEAR ;
MPRINT(EM_DIAGRAM):   if missing( NUCLEAR ) then T_NUCLEAR = .;
MPRINT(EM_DIAGRAM):   else T_NUCLEAR = (NUCLEAR - 0) * 3.57167937315546;
MPRINT(EM_DIAGRAM):   *** Standardize NULL ;
MPRINT(EM_DIAGRAM):   drop T_NULL ;
MPRINT(EM_DIAGRAM):   if missing( NULL ) then T_NULL = .;
MPRINT(EM_DIAGRAM):   else T_NULL = (NULL - 0) * 2.46100206411842;
MPRINT(EM_DIAGRAM):   *** Standardize NUMBER ;
MPRINT(EM_DIAGRAM):   drop T_NUMBER ;
MPRINT(EM_DIAGRAM):   if missing( NUMBER ) then T_NUMBER = .;
MPRINT(EM_DIAGRAM):   else T_NUMBER = (NUMBER - 0) * 3.36789722047143;
MPRINT(EM_DIAGRAM):   *** Standardize OBJECT ;
MPRINT(EM_DIAGRAM):   drop T_OBJECT ;
MPRINT(EM_DIAGRAM):   if missing( OBJECT ) then T_OBJECT = .;
MPRINT(EM_DIAGRAM):   else T_OBJECT = (OBJECT - 0) * 5.88502222941819;
MPRINT(EM_DIAGRAM):   *** Standardize OBSERV ;
MPRINT(EM_DIAGRAM):   drop T_OBSERV ;
MPRINT(EM_DIAGRAM):   if missing( OBSERV ) then T_OBSERV = .;
MPRINT(EM_DIAGRAM):   else T_OBSERV = (OBSERV - 0) * 8.34172359808931;
MPRINT(EM_DIAGRAM):   *** Standardize OBTAIN ;
MPRINT(EM_DIAGRAM):   drop T_OBTAIN ;
MPRINT(EM_DIAGRAM):   if missing( OBTAIN ) then T_OBTAIN = .;
MPRINT(EM_DIAGRAM):   else T_OBTAIN = (OBTAIN - 0) * 5.77521791757663;
MPRINT(EM_DIAGRAM):   *** Standardize OCCUP ;
MPRINT(EM_DIAGRAM):   drop T_OCCUP ;
MPRINT(EM_DIAGRAM):   if missing( OCCUP ) then T_OCCUP = .;
MPRINT(EM_DIAGRAM):   else T_OCCUP = (OCCUP - 0) * 5.95580610087582;
MPRINT(EM_DIAGRAM):   *** Standardize OCCUPI ;
MPRINT(EM_DIAGRAM):   drop T_OCCUPI ;
MPRINT(EM_DIAGRAM):   if missing( OCCUPI ) then T_OCCUPI = .;
MPRINT(EM_DIAGRAM):   else T_OCCUPI = (OCCUPI - 0) * 8.05128485729477;
MPRINT(EM_DIAGRAM):   *** Standardize OCCUR ;
MPRINT(EM_DIAGRAM):   drop T_OCCUR ;
MPRINT(EM_DIAGRAM):   if missing( OCCUR ) then T_OCCUR = .;
MPRINT(EM_DIAGRAM):   else T_OCCUR = (OCCUR - 0) * 7.7456334898505;
MPRINT(EM_DIAGRAM):   *** Standardize ODOMET ;
MPRINT(EM_DIAGRAM):   drop T_ODOMET ;
MPRINT(EM_DIAGRAM):   if missing( ODOMET ) then T_ODOMET = .;
MPRINT(EM_DIAGRAM):   else T_ODOMET = (ODOMET - 0) * 1.80749553204446;
MPRINT(EM_DIAGRAM):   *** Standardize OFFER ;
MPRINT(EM_DIAGRAM):   drop T_OFFER ;
MPRINT(EM_DIAGRAM):   if missing( OFFER ) then T_OFFER = .;
MPRINT(EM_DIAGRAM):   else T_OFFER = (OFFER - 0) * 4.51231454789595;
MPRINT(EM_DIAGRAM):   *** Standardize OFFIC ;
MPRINT(EM_DIAGRAM):   drop T_OFFIC ;
MPRINT(EM_DIAGRAM):   if missing( OFFIC ) then T_OFFIC = .;
MPRINT(EM_DIAGRAM):   else T_OFFIC = (OFFIC - 0) * 8.77343540334071;
MPRINT(EM_DIAGRAM):   *** Standardize OFFICI ;
MPRINT(EM_DIAGRAM):   drop T_OFFICI ;
MPRINT(EM_DIAGRAM):   if missing( OFFICI ) then T_OFFICI = .;
MPRINT(EM_DIAGRAM):   else T_OFFICI = (OFFICI - 0) * 11.7320178245294;
MPRINT(EM_DIAGRAM):   *** Standardize OHIO ;
MPRINT(EM_DIAGRAM):   drop T_OHIO ;
MPRINT(EM_DIAGRAM):   if missing( OHIO ) then T_OHIO = .;
MPRINT(EM_DIAGRAM):   else T_OHIO = (OHIO - 0) * 4.09043935069223;
MPRINT(EM_DIAGRAM):   *** Standardize OLWM ;
MPRINT(EM_DIAGRAM):   drop T_OLWM ;
MPRINT(EM_DIAGRAM):   if missing( OLWM ) then T_OLWM = .;
MPRINT(EM_DIAGRAM):   else T_OLWM = (OLWM - 0) * 3.55674603305646;
MPRINT(EM_DIAGRAM):   *** Standardize OMRAN ;
MPRINT(EM_DIAGRAM):   drop T_OMRAN ;
MPRINT(EM_DIAGRAM):   if missing( OMRAN ) then T_OMRAN = .;
MPRINT(EM_DIAGRAM):   else T_OMRAN = (OMRAN - 0) * 2.86452085337362;
MPRINT(EM_DIAGRAM):   *** Standardize OPEN ;
MPRINT(EM_DIAGRAM):   drop T_OPEN ;
MPRINT(EM_DIAGRAM):   if missing( OPEN ) then T_OPEN = .;
MPRINT(EM_DIAGRAM):   else T_OPEN = (OPEN - 0) * 3.94025054159171;
MPRINT(EM_DIAGRAM):   *** Standardize OPENLOOK ;
MPRINT(EM_DIAGRAM):   drop T_OPENLOOK ;
MPRINT(EM_DIAGRAM):   if missing( OPENLOOK ) then T_OPENLOOK = .;
MPRINT(EM_DIAGRAM):   else T_OPENLOOK = (OPENLOOK - 0) * 4.2120594791666;
MPRINT(EM_DIAGRAM):   *** Standardize OPENWINDOW ;
MPRINT(EM_DIAGRAM):   drop T_OPENWINDOW ;
MPRINT(EM_DIAGRAM):   if missing( OPENWINDOW ) then T_OPENWINDOW = .;
MPRINT(EM_DIAGRAM):   else T_OPENWINDOW = (OPENWINDOW - 0) * 5.11698304967056;
MPRINT(EM_DIAGRAM):   *** Standardize OPER ;
MPRINT(EM_DIAGRAM):   drop T_OPER ;
MPRINT(EM_DIAGRAM):   if missing( OPER ) then T_OPER = .;
MPRINT(EM_DIAGRAM):   else T_OPER = (OPER - 0) * 4.43940874156981;
MPRINT(EM_DIAGRAM):   *** Standardize OPINION ;
MPRINT(EM_DIAGRAM):   drop T_OPINION ;
MPRINT(EM_DIAGRAM):   if missing( OPINION ) then T_OPINION = .;
MPRINT(EM_DIAGRAM):   else T_OPINION = (OPINION - 0) * 6.49554772318911;
MPRINT(EM_DIAGRAM):   *** Standardize OPTION ;
MPRINT(EM_DIAGRAM):   drop T_OPTION ;
MPRINT(EM_DIAGRAM):   if missing( OPTION ) then T_OPTION = .;
MPRINT(EM_DIAGRAM):   else T_OPTION = (OPTION - 0) * 3.99243536489465;
MPRINT(EM_DIAGRAM):   *** Standardize ORDER ;
MPRINT(EM_DIAGRAM):   drop T_ORDER ;
MPRINT(EM_DIAGRAM):   if missing( ORDER ) then T_ORDER = .;
MPRINT(EM_DIAGRAM):   else T_ORDER = (ORDER - 0) * 4.01876953482118;
MPRINT(EM_DIAGRAM):   *** Standardize ORG ;
MPRINT(EM_DIAGRAM):   drop T_ORG ;
MPRINT(EM_DIAGRAM):   if missing( ORG ) then T_ORG = .;
MPRINT(EM_DIAGRAM):   else T_ORG = (ORG - 0) * 3.38856288352271;
MPRINT(EM_DIAGRAM):   *** Standardize ORGAN ;
MPRINT(EM_DIAGRAM):   drop T_ORGAN ;
MPRINT(EM_DIAGRAM):   if missing( ORGAN ) then T_ORGAN = .;
MPRINT(EM_DIAGRAM):   else T_ORGAN = (ORGAN - 0) * 7.33836885915583;
MPRINT(EM_DIAGRAM):   *** Standardize ORIGIN ;
MPRINT(EM_DIAGRAM):   drop T_ORIGIN ;
MPRINT(EM_DIAGRAM):   if missing( ORIGIN ) then T_ORIGIN = .;
MPRINT(EM_DIAGRAM):   else T_ORIGIN = (ORIGIN - 0) * 5.47874632775651;
MPRINT(EM_DIAGRAM):   *** Standardize OSCIL ;
MPRINT(EM_DIAGRAM):   drop T_OSCIL ;
MPRINT(EM_DIAGRAM):   if missing( OSCIL ) then T_OSCIL = .;
MPRINT(EM_DIAGRAM):   else T_OSCIL = (OSCIL - 0) * 1.32117416072428;
MPRINT(EM_DIAGRAM):   *** Standardize OUTLET ;
MPRINT(EM_DIAGRAM):   drop T_OUTLET ;
MPRINT(EM_DIAGRAM):   if missing( OUTLET ) then T_OUTLET = .;
MPRINT(EM_DIAGRAM):   else T_OUTLET = (OUTLET - 0) * 2.6742755539967;
MPRINT(EM_DIAGRAM):   *** Standardize OUTPUT ;
MPRINT(EM_DIAGRAM):   drop T_OUTPUT ;
MPRINT(EM_DIAGRAM):   if missing( OUTPUT ) then T_OUTPUT = .;
MPRINT(EM_DIAGRAM):   else T_OUTPUT = (OUTPUT - 0) * 3.45534764240484;
MPRINT(EM_DIAGRAM):   *** Standardize OWNER ;
MPRINT(EM_DIAGRAM):   drop T_OWNER ;
MPRINT(EM_DIAGRAM):   if missing( OWNER ) then T_OWNER = .;
MPRINT(EM_DIAGRAM):   else T_OWNER = (OWNER - 0) * 4.02176962595571;
MPRINT(EM_DIAGRAM):   *** Standardize PACKAG ;
MPRINT(EM_DIAGRAM):   drop T_PACKAG ;
MPRINT(EM_DIAGRAM):   if missing( PACKAG ) then T_PACKAG = .;
MPRINT(EM_DIAGRAM):   else T_PACKAG = (PACKAG - 0) * 2.67846800388445;
MPRINT(EM_DIAGRAM):   *** Standardize PACKARD ;
MPRINT(EM_DIAGRAM):   drop T_PACKARD ;
MPRINT(EM_DIAGRAM):   if missing( PACKARD ) then T_PACKARD = .;
MPRINT(EM_DIAGRAM):   else T_PACKARD = (PACKARD - 0) * 4.37505160105043;
MPRINT(EM_DIAGRAM):   *** Standardize PACKET ;
MPRINT(EM_DIAGRAM):   drop T_PACKET ;
MPRINT(EM_DIAGRAM):   if missing( PACKET ) then T_PACKET = .;
MPRINT(EM_DIAGRAM):   else T_PACKET = (PACKET - 0) * 1.61984690699229;
MPRINT(EM_DIAGRAM):   *** Standardize PAGE ;
MPRINT(EM_DIAGRAM):   drop T_PAGE ;
MPRINT(EM_DIAGRAM):   if missing( PAGE ) then T_PAGE = .;
MPRINT(EM_DIAGRAM):   else T_PAGE = (PAGE - 0) * 3.69950049007003;
MPRINT(EM_DIAGRAM):   *** Standardize PAID ;
MPRINT(EM_DIAGRAM):   drop T_PAID ;
MPRINT(EM_DIAGRAM):   if missing( PAID ) then T_PAID = .;
MPRINT(EM_DIAGRAM):   else T_PAID = (PAID - 0) * 3.62742341672855;
MPRINT(EM_DIAGRAM):   *** Standardize PAIN ;
MPRINT(EM_DIAGRAM):   drop T_PAIN ;
MPRINT(EM_DIAGRAM):   if missing( PAIN ) then T_PAIN = .;
MPRINT(EM_DIAGRAM):   else T_PAIN = (PAIN - 0) * 2.24484759770233;
MPRINT(EM_DIAGRAM):   *** Standardize PALESTIN ;
MPRINT(EM_DIAGRAM):   drop T_PALESTIN ;
MPRINT(EM_DIAGRAM):   if missing( PALESTIN ) then T_PALESTIN = .;
MPRINT(EM_DIAGRAM):   else T_PALESTIN = (PALESTIN - 0) * 6.84258876960711;
MPRINT(EM_DIAGRAM):   *** Standardize PALESTINIAN ;
MPRINT(EM_DIAGRAM):   drop T_PALESTINIAN ;
MPRINT(EM_DIAGRAM):   if missing( PALESTINIAN ) then T_PALESTINIAN = .;
MPRINT(EM_DIAGRAM):   else T_PALESTINIAN = (PALESTINIAN - 0) * 3.33089082968775;
MPRINT(EM_DIAGRAM):   *** Standardize PAPER ;
MPRINT(EM_DIAGRAM):   drop T_PAPER ;
MPRINT(EM_DIAGRAM):   if missing( PAPER ) then T_PAPER = .;
MPRINT(EM_DIAGRAM):   else T_PAPER = (PAPER - 0) * 4.35790690307987;
MPRINT(EM_DIAGRAM):   *** Standardize PARENT ;
MPRINT(EM_DIAGRAM):   drop T_PARENT ;
MPRINT(EM_DIAGRAM):   if missing( PARENT ) then T_PARENT = .;
MPRINT(EM_DIAGRAM):   else T_PARENT = (PARENT - 0) * 3.1118720789221;
MPRINT(EM_DIAGRAM):   *** Standardize PART ;
MPRINT(EM_DIAGRAM):   drop T_PART ;
MPRINT(EM_DIAGRAM):   if missing( PART ) then T_PART = .;
MPRINT(EM_DIAGRAM):   else T_PART = (PART - 0) * 2.36437545659518;
MPRINT(EM_DIAGRAM):   *** Standardize PARTI ;
MPRINT(EM_DIAGRAM):   drop T_PARTI ;
MPRINT(EM_DIAGRAM):   if missing( PARTI ) then T_PARTI = .;
MPRINT(EM_DIAGRAM):   else T_PARTI = (PARTI - 0) * 2.89645966877508;
MPRINT(EM_DIAGRAM):   *** Standardize PASS ;
MPRINT(EM_DIAGRAM):   drop T_PASS ;
MPRINT(EM_DIAGRAM):   if missing( PASS ) then T_PASS = .;
MPRINT(EM_DIAGRAM):   else T_PASS = (PASS - 0) * 4.29886911685749;
MPRINT(EM_DIAGRAM):   *** Standardize PATCH ;
MPRINT(EM_DIAGRAM):   drop T_PATCH ;
MPRINT(EM_DIAGRAM):   if missing( PATCH ) then T_PATCH = .;
MPRINT(EM_DIAGRAM):   else T_PATCH = (PATCH - 0) * 3.43292344372798;
MPRINT(EM_DIAGRAM):   *** Standardize PATIENT ;
MPRINT(EM_DIAGRAM):   drop T_PATIENT ;
MPRINT(EM_DIAGRAM):   if missing( PATIENT ) then T_PATIENT = .;
MPRINT(EM_DIAGRAM):   else T_PATIENT = (PATIENT - 0) * 5.37603723162367;
MPRINT(EM_DIAGRAM):   *** Standardize PATRICK ;
MPRINT(EM_DIAGRAM):   drop T_PATRICK ;
MPRINT(EM_DIAGRAM):   if missing( PATRICK ) then T_PATRICK = .;
MPRINT(EM_DIAGRAM):   else T_PATRICK = (PATRICK - 0) * 4.01722395760507;
MPRINT(EM_DIAGRAM):   *** Standardize PAUL ;
MPRINT(EM_DIAGRAM):   drop T_PAUL ;
MPRINT(EM_DIAGRAM):   if missing( PAUL ) then T_PAUL = .;
MPRINT(EM_DIAGRAM):   else T_PAUL = (PAUL - 0) * 2.72061891402392;
MPRINT(EM_DIAGRAM):   *** Standardize PEAC ;
MPRINT(EM_DIAGRAM):   drop T_PEAC ;
MPRINT(EM_DIAGRAM):   if missing( PEAC ) then T_PEAC = .;
MPRINT(EM_DIAGRAM):   else T_PEAC = (PEAC - 0) * 6.39816992968634;
MPRINT(EM_DIAGRAM):   *** Standardize PERFORM ;
MPRINT(EM_DIAGRAM):   drop T_PERFORM ;
MPRINT(EM_DIAGRAM):   if missing( PERFORM ) then T_PERFORM = .;
MPRINT(EM_DIAGRAM):   else T_PERFORM = (PERFORM - 0) * 4.09189210145109;
MPRINT(EM_DIAGRAM):   *** Standardize PERIOD ;
MPRINT(EM_DIAGRAM):   drop T_PERIOD ;
MPRINT(EM_DIAGRAM):   if missing( PERIOD ) then T_PERIOD = .;
MPRINT(EM_DIAGRAM):   else T_PERIOD = (PERIOD - 0) * 6.51778768029415;
MPRINT(EM_DIAGRAM):   *** Standardize PERSIAN ;
MPRINT(EM_DIAGRAM):   drop T_PERSIAN ;
MPRINT(EM_DIAGRAM):   if missing( PERSIAN ) then T_PERSIAN = .;
MPRINT(EM_DIAGRAM):   else T_PERSIAN = (PERSIAN - 0) * 1.67506009663257;
MPRINT(EM_DIAGRAM):   *** Standardize PERSON ;
MPRINT(EM_DIAGRAM):   drop T_PERSON ;
MPRINT(EM_DIAGRAM):   if missing( PERSON ) then T_PERSON = .;
MPRINT(EM_DIAGRAM):   else T_PERSON = (PERSON - 0) * 4.19729146778759;
MPRINT(EM_DIAGRAM):   *** Standardize PETER ;
MPRINT(EM_DIAGRAM):   drop T_PETER ;
MPRINT(EM_DIAGRAM):   if missing( PETER ) then T_PETER = .;
MPRINT(EM_DIAGRAM):   else T_PETER = (PETER - 0) * 2.56597078860266;
MPRINT(EM_DIAGRAM):   *** Standardize PHONE ;
MPRINT(EM_DIAGRAM):   drop T_PHONE ;
MPRINT(EM_DIAGRAM):   if missing( PHONE ) then T_PHONE = .;
MPRINT(EM_DIAGRAM):   else T_PHONE = (PHONE - 0) * 3.42665222382902;
MPRINT(EM_DIAGRAM):   *** Standardize PHOTOGRAPHI ;
MPRINT(EM_DIAGRAM):   drop T_PHOTOGRAPHI ;
MPRINT(EM_DIAGRAM):   if missing( PHOTOGRAPHI ) then T_PHOTOGRAPHI = .;
MPRINT(EM_DIAGRAM):   else T_PHOTOGRAPHI = (PHOTOGRAPHI - 0) * 1.6828911173751;
MPRINT(EM_DIAGRAM):   *** Standardize PHYSIC ;
MPRINT(EM_DIAGRAM):   drop T_PHYSIC ;
MPRINT(EM_DIAGRAM):   if missing( PHYSIC ) then T_PHYSIC = .;
MPRINT(EM_DIAGRAM):   else T_PHYSIC = (PHYSIC - 0) * 5.0840859101228;
MPRINT(EM_DIAGRAM):   *** Standardize PHYSICIAN ;
MPRINT(EM_DIAGRAM):   drop T_PHYSICIAN ;
MPRINT(EM_DIAGRAM):   if missing( PHYSICIAN ) then T_PHYSICIAN = .;
MPRINT(EM_DIAGRAM):   else T_PHYSICIAN = (PHYSICIAN - 0) * 3.68662215712606;
MPRINT(EM_DIAGRAM):   *** Standardize PICA ;
MPRINT(EM_DIAGRAM):   drop T_PICA ;
MPRINT(EM_DIAGRAM):   if missing( PICA ) then T_PICA = .;
MPRINT(EM_DIAGRAM):   else T_PICA = (PICA - 0) * 1.12637834745801;
MPRINT(EM_DIAGRAM):   *** Standardize PICK ;
MPRINT(EM_DIAGRAM):   drop T_PICK ;
MPRINT(EM_DIAGRAM):   if missing( PICK ) then T_PICK = .;
MPRINT(EM_DIAGRAM):   else T_PICK = (PICK - 0) * 8.02897426913119;
MPRINT(EM_DIAGRAM):   *** Standardize PICTUR ;
MPRINT(EM_DIAGRAM):   drop T_PICTUR ;
MPRINT(EM_DIAGRAM):   if missing( PICTUR ) then T_PICTUR = .;
MPRINT(EM_DIAGRAM):   else T_PICTUR = (PICTUR - 0) * 2.9382792874506;
MPRINT(EM_DIAGRAM):   *** Standardize PILL ;
MPRINT(EM_DIAGRAM):   drop T_PILL ;
MPRINT(EM_DIAGRAM):   if missing( PILL ) then T_PILL = .;
MPRINT(EM_DIAGRAM):   else T_PILL = (PILL - 0) * 3.59235884144439;
MPRINT(EM_DIAGRAM):   *** Standardize PIN ;
MPRINT(EM_DIAGRAM):   drop T_PIN ;
MPRINT(EM_DIAGRAM):   if missing( PIN ) then T_PIN = .;
MPRINT(EM_DIAGRAM):   else T_PIN = (PIN - 0) * 2.00734001779754;
MPRINT(EM_DIAGRAM):   *** Standardize PITT ;
MPRINT(EM_DIAGRAM):   drop T_PITT ;
MPRINT(EM_DIAGRAM):   if missing( PITT ) then T_PITT = .;
MPRINT(EM_DIAGRAM):   else T_PITT = (PITT - 0) * 2.66789121160375;
MPRINT(EM_DIAGRAM):   *** Standardize PITTSBURGH ;
MPRINT(EM_DIAGRAM):   drop T_PITTSBURGH ;
MPRINT(EM_DIAGRAM):   if missing( PITTSBURGH ) then T_PITTSBURGH = .;
MPRINT(EM_DIAGRAM):   else T_PITTSBURGH = (PITTSBURGH - 0) * 4.87153141210063;
MPRINT(EM_DIAGRAM):   *** Standardize PIXEL ;
MPRINT(EM_DIAGRAM):   drop T_PIXEL ;
MPRINT(EM_DIAGRAM):   if missing( PIXEL ) then T_PIXEL = .;
MPRINT(EM_DIAGRAM):   else T_PIXEL = (PIXEL - 0) * 3.23687605808377;
MPRINT(EM_DIAGRAM):   *** Standardize PIXMAP ;
MPRINT(EM_DIAGRAM):   drop T_PIXMAP ;
MPRINT(EM_DIAGRAM):   if missing( PIXMAP ) then T_PIXMAP = .;
MPRINT(EM_DIAGRAM):   else T_PIXMAP = (PIXMAP - 0) * 2.38772147374394;
MPRINT(EM_DIAGRAM):   *** Standardize PLACE ;
MPRINT(EM_DIAGRAM):   drop T_PLACE ;
MPRINT(EM_DIAGRAM):   if missing( PLACE ) then T_PLACE = .;
MPRINT(EM_DIAGRAM):   else T_PLACE = (PLACE - 0) * 5.0827629036618;
MPRINT(EM_DIAGRAM):   *** Standardize PLAI ;
MPRINT(EM_DIAGRAM):   drop T_PLAI ;
MPRINT(EM_DIAGRAM):   if missing( PLAI ) then T_PLAI = .;
MPRINT(EM_DIAGRAM):   else T_PLAI = (PLAI - 0) * 8.33414748604749;
MPRINT(EM_DIAGRAM):   *** Standardize PLAIN ;
MPRINT(EM_DIAGRAM):   drop T_PLAIN ;
MPRINT(EM_DIAGRAM):   if missing( PLAIN ) then T_PLAIN = .;
MPRINT(EM_DIAGRAM):   else T_PLAIN = (PLAIN - 0) * 7.04596524565143;
MPRINT(EM_DIAGRAM):   *** Standardize PLAN ;
MPRINT(EM_DIAGRAM):   drop T_PLAN ;
MPRINT(EM_DIAGRAM):   if missing( PLAN ) then T_PLAN = .;
MPRINT(EM_DIAGRAM):   else T_PLAN = (PLAN - 0) * 7.55179153065899;
MPRINT(EM_DIAGRAM):   *** Standardize PLANE ;
MPRINT(EM_DIAGRAM):   drop T_PLANE ;
MPRINT(EM_DIAGRAM):   if missing( PLANE ) then T_PLANE = .;
MPRINT(EM_DIAGRAM):   else T_PLANE = (PLANE - 0) * 1.35160549983951;
MPRINT(EM_DIAGRAM):   *** Standardize PLAYER ;
MPRINT(EM_DIAGRAM):   drop T_PLAYER ;
MPRINT(EM_DIAGRAM):   if missing( PLAYER ) then T_PLAYER = .;
MPRINT(EM_DIAGRAM):   else T_PLAYER = (PLAYER - 0) * 3.42614482210788;
MPRINT(EM_DIAGRAM):   *** Standardize PLUG ;
MPRINT(EM_DIAGRAM):   drop T_PLUG ;
MPRINT(EM_DIAGRAM):   if missing( PLUG ) then T_PLUG = .;
MPRINT(EM_DIAGRAM):   else T_PLUG = (PLUG - 0) * 3.38559518894664;
MPRINT(EM_DIAGRAM):   *** Standardize POINT ;
MPRINT(EM_DIAGRAM):   drop T_POINT ;
MPRINT(EM_DIAGRAM):   if missing( POINT ) then T_POINT = .;
MPRINT(EM_DIAGRAM):   else T_POINT = (POINT - 0) * 4.65455214211544;
MPRINT(EM_DIAGRAM):   *** Standardize POINTER ;
MPRINT(EM_DIAGRAM):   drop T_POINTER ;
MPRINT(EM_DIAGRAM):   if missing( POINTER ) then T_POINTER = .;
MPRINT(EM_DIAGRAM):   else T_POINTER = (POINTER - 0) * 1.85650057122301;
MPRINT(EM_DIAGRAM):   *** Standardize POLIC ;
MPRINT(EM_DIAGRAM):   drop T_POLIC ;
MPRINT(EM_DIAGRAM):   if missing( POLIC ) then T_POLIC = .;
MPRINT(EM_DIAGRAM):   else T_POLIC = (POLIC - 0) * 6.63591988282692;
MPRINT(EM_DIAGRAM):   *** Standardize POLICI ;
MPRINT(EM_DIAGRAM):   drop T_POLICI ;
MPRINT(EM_DIAGRAM):   if missing( POLICI ) then T_POLICI = .;
MPRINT(EM_DIAGRAM):   else T_POLICI = (POLICI - 0) * 8.41452739753352;
MPRINT(EM_DIAGRAM):   *** Standardize POLIT ;
MPRINT(EM_DIAGRAM):   drop T_POLIT ;
MPRINT(EM_DIAGRAM):   if missing( POLIT ) then T_POLIT = .;
MPRINT(EM_DIAGRAM):   else T_POLIT = (POLIT - 0) * 8.96421250411425;
MPRINT(EM_DIAGRAM):   *** Standardize POPUL ;
MPRINT(EM_DIAGRAM):   drop T_POPUL ;
MPRINT(EM_DIAGRAM):   if missing( POPUL ) then T_POPUL = .;
MPRINT(EM_DIAGRAM):   else T_POPUL = (POPUL - 0) * 5.62967465880222;
MPRINT(EM_DIAGRAM):   *** Standardize POPULAR ;
MPRINT(EM_DIAGRAM):   drop T_POPULAR ;
MPRINT(EM_DIAGRAM):   if missing( POPULAR ) then T_POPULAR = .;
MPRINT(EM_DIAGRAM):   else T_POPULAR = (POPULAR - 0) * 4.75114694775712;
MPRINT(EM_DIAGRAM):   *** Standardize POPUP ;
MPRINT(EM_DIAGRAM):   drop T_POPUP ;
MPRINT(EM_DIAGRAM):   if missing( POPUP ) then T_POPUP = .;
MPRINT(EM_DIAGRAM):   else T_POPUP = (POPUP - 0) * 2.79405687667897;
MPRINT(EM_DIAGRAM):   *** Standardize PORT ;
MPRINT(EM_DIAGRAM):   drop T_PORT ;
MPRINT(EM_DIAGRAM):   if missing( PORT ) then T_PORT = .;
MPRINT(EM_DIAGRAM):   else T_PORT = (PORT - 0) * 2.7506640223857;
MPRINT(EM_DIAGRAM):   *** Standardize POSIT ;
MPRINT(EM_DIAGRAM):   drop T_POSIT ;
MPRINT(EM_DIAGRAM):   if missing( POSIT ) then T_POSIT = .;
MPRINT(EM_DIAGRAM):   else T_POSIT = (POSIT - 0) * 3.98645548043578;
MPRINT(EM_DIAGRAM):   *** Standardize POSSIBL ;
MPRINT(EM_DIAGRAM):   drop T_POSSIBL ;
MPRINT(EM_DIAGRAM):   if missing( POSSIBL ) then T_POSSIBL = .;
MPRINT(EM_DIAGRAM):   else T_POSSIBL = (POSSIBL - 0) * 7.93838080247056;
MPRINT(EM_DIAGRAM):   *** Standardize POST ;
MPRINT(EM_DIAGRAM):   drop T_POST ;
MPRINT(EM_DIAGRAM):   if missing( POST ) then T_POST = .;
MPRINT(EM_DIAGRAM):   else T_POST = (POST - 0) * 6.1241631127725;
MPRINT(EM_DIAGRAM):   *** Standardize POSTER ;
MPRINT(EM_DIAGRAM):   drop T_POSTER ;
MPRINT(EM_DIAGRAM):   if missing( POSTER ) then T_POSTER = .;
MPRINT(EM_DIAGRAM):   else T_POSTER = (POSTER - 0) * 3.34563238860308;
MPRINT(EM_DIAGRAM):   *** Standardize POSTSCRIPT ;
MPRINT(EM_DIAGRAM):   drop T_POSTSCRIPT ;
MPRINT(EM_DIAGRAM):   if missing( POSTSCRIPT ) then T_POSTSCRIPT = .;
MPRINT(EM_DIAGRAM):   else T_POSTSCRIPT = (POSTSCRIPT - 0) * 1.40992410277819;
MPRINT(EM_DIAGRAM):   *** Standardize POWER ;
MPRINT(EM_DIAGRAM):   drop T_POWER ;
MPRINT(EM_DIAGRAM):   if missing( POWER ) then T_POWER = .;
MPRINT(EM_DIAGRAM):   else T_POWER = (POWER - 0) * 3.01621257128619;
MPRINT(EM_DIAGRAM):   *** Standardize PRACTIC ;
MPRINT(EM_DIAGRAM):   drop T_PRACTIC ;
MPRINT(EM_DIAGRAM):   if missing( PRACTIC ) then T_PRACTIC = .;
MPRINT(EM_DIAGRAM):   else T_PRACTIC = (PRACTIC - 0) * 5.52035555914364;
MPRINT(EM_DIAGRAM):   *** Standardize PREFER ;
MPRINT(EM_DIAGRAM):   drop T_PREFER ;
MPRINT(EM_DIAGRAM):   if missing( PREFER ) then T_PREFER = .;
MPRINT(EM_DIAGRAM):   else T_PREFER = (PREFER - 0) * 4.11619745313288;
MPRINT(EM_DIAGRAM):   *** Standardize PRESENT ;
MPRINT(EM_DIAGRAM):   drop T_PRESENT ;
MPRINT(EM_DIAGRAM):   if missing( PRESENT ) then T_PRESENT = .;
MPRINT(EM_DIAGRAM):   else T_PRESENT = (PRESENT - 0) * 5.37127972615516;
MPRINT(EM_DIAGRAM):   *** Standardize PRESID ;
MPRINT(EM_DIAGRAM):   drop T_PRESID ;
MPRINT(EM_DIAGRAM):   if missing( PRESID ) then T_PRESID = .;
MPRINT(EM_DIAGRAM):   else T_PRESID = (PRESID - 0) * 7.09766287092383;
MPRINT(EM_DIAGRAM):   *** Standardize PRESS ;
MPRINT(EM_DIAGRAM):   drop T_PRESS ;
MPRINT(EM_DIAGRAM):   if missing( PRESS ) then T_PRESS = .;
MPRINT(EM_DIAGRAM):   else T_PRESS = (PRESS - 0) * 5.39116142939137;
MPRINT(EM_DIAGRAM):   *** Standardize PRETTI ;
MPRINT(EM_DIAGRAM):   drop T_PRETTI ;
MPRINT(EM_DIAGRAM):   if missing( PRETTI ) then T_PRETTI = .;
MPRINT(EM_DIAGRAM):   else T_PRETTI = (PRETTI - 0) * 8.27518190500551;
MPRINT(EM_DIAGRAM):   *** Standardize PREVENT ;
MPRINT(EM_DIAGRAM):   drop T_PREVENT ;
MPRINT(EM_DIAGRAM):   if missing( PREVENT ) then T_PREVENT = .;
MPRINT(EM_DIAGRAM):   else T_PREVENT = (PREVENT - 0) * 5.61606024937309;
MPRINT(EM_DIAGRAM):   *** Standardize PREVIOU ;
MPRINT(EM_DIAGRAM):   drop T_PREVIOU ;
MPRINT(EM_DIAGRAM):   if missing( PREVIOU ) then T_PREVIOU = .;
MPRINT(EM_DIAGRAM):   else T_PREVIOU = (PREVIOU - 0) * 4.81718669771287;
MPRINT(EM_DIAGRAM):   *** Standardize PRICE ;
MPRINT(EM_DIAGRAM):   drop T_PRICE ;
MPRINT(EM_DIAGRAM):   if missing( PRICE ) then T_PRICE = .;
MPRINT(EM_DIAGRAM):   else T_PRICE = (PRICE - 0) * 4.4221072132869;
MPRINT(EM_DIAGRAM):   *** Standardize PRINT ;
MPRINT(EM_DIAGRAM):   drop T_PRINT ;
MPRINT(EM_DIAGRAM):   if missing( PRINT ) then T_PRINT = .;
MPRINT(EM_DIAGRAM):   else T_PRINT = (PRINT - 0) * 3.15650342633701;
MPRINT(EM_DIAGRAM):   *** Standardize PRINTER ;
MPRINT(EM_DIAGRAM):   drop T_PRINTER ;
MPRINT(EM_DIAGRAM):   if missing( PRINTER ) then T_PRINTER = .;
MPRINT(EM_DIAGRAM):   else T_PRINTER = (PRINTER - 0) * 1.97553162301629;
MPRINT(EM_DIAGRAM):   *** Standardize PRIVAT ;
MPRINT(EM_DIAGRAM):   drop T_PRIVAT ;
MPRINT(EM_DIAGRAM):   if missing( PRIVAT ) then T_PRIVAT = .;
MPRINT(EM_DIAGRAM):   else T_PRIVAT = (PRIVAT - 0) * 6.94502377033778;
MPRINT(EM_DIAGRAM):   *** Standardize PROBLEM ;
MPRINT(EM_DIAGRAM):   drop T_PROBLEM ;
MPRINT(EM_DIAGRAM):   if missing( PROBLEM ) then T_PROBLEM = .;
MPRINT(EM_DIAGRAM):   else T_PROBLEM = (PROBLEM - 0) * 7.0126506335806;
MPRINT(EM_DIAGRAM):   *** Standardize PROCESS ;
MPRINT(EM_DIAGRAM):   drop T_PROCESS ;
MPRINT(EM_DIAGRAM):   if missing( PROCESS ) then T_PROCESS = .;
MPRINT(EM_DIAGRAM):   else T_PROCESS = (PROCESS - 0) * 5.0409028369115;
MPRINT(EM_DIAGRAM):   *** Standardize PRODUC ;
MPRINT(EM_DIAGRAM):   drop T_PRODUC ;
MPRINT(EM_DIAGRAM):   if missing( PRODUC ) then T_PRODUC = .;
MPRINT(EM_DIAGRAM):   else T_PRODUC = (PRODUC - 0) * 5.71029232670681;
MPRINT(EM_DIAGRAM):   *** Standardize PRODUCT ;
MPRINT(EM_DIAGRAM):   drop T_PRODUCT ;
MPRINT(EM_DIAGRAM):   if missing( PRODUCT ) then T_PRODUCT = .;
MPRINT(EM_DIAGRAM):   else T_PRODUCT = (PRODUCT - 0) * 4.84857704765892;
MPRINT(EM_DIAGRAM):   *** Standardize PROGRAM ;
MPRINT(EM_DIAGRAM):   drop T_PROGRAM ;
MPRINT(EM_DIAGRAM):   if missing( PROGRAM ) then T_PROGRAM = .;
MPRINT(EM_DIAGRAM):   else T_PROGRAM = (PROGRAM - 0) * 3.85619513795463;
MPRINT(EM_DIAGRAM):   *** Standardize PROGRAMM ;
MPRINT(EM_DIAGRAM):   drop T_PROGRAMM ;
MPRINT(EM_DIAGRAM):   if missing( PROGRAMM ) then T_PROGRAMM = .;
MPRINT(EM_DIAGRAM):   else T_PROGRAMM = (PROGRAMM - 0) * 3.72551241419874;
MPRINT(EM_DIAGRAM):   *** Standardize PROJECT ;
MPRINT(EM_DIAGRAM):   drop T_PROJECT ;
MPRINT(EM_DIAGRAM):   if missing( PROJECT ) then T_PROJECT = .;
MPRINT(EM_DIAGRAM):   else T_PROJECT = (PROJECT - 0) * 3.85177641840636;
MPRINT(EM_DIAGRAM):   *** Standardize PROLIN ;
MPRINT(EM_DIAGRAM):   drop T_PROLIN ;
MPRINT(EM_DIAGRAM):   if missing( PROLIN ) then T_PROLIN = .;
MPRINT(EM_DIAGRAM):   else T_PROLIN = (PROLIN - 0) * 2.23785161110266;
MPRINT(EM_DIAGRAM):   *** Standardize PROPAGANDA ;
MPRINT(EM_DIAGRAM):   drop T_PROPAGANDA ;
MPRINT(EM_DIAGRAM):   if missing( PROPAGANDA ) then T_PROPAGANDA = .;
MPRINT(EM_DIAGRAM):   else T_PROPAGANDA = (PROPAGANDA - 0) * 3.15392440431294;
MPRINT(EM_DIAGRAM):   *** Standardize PROPER ;
MPRINT(EM_DIAGRAM):   drop T_PROPER ;
MPRINT(EM_DIAGRAM):   if missing( PROPER ) then T_PROPER = .;
MPRINT(EM_DIAGRAM):   else T_PROPER = (PROPER - 0) * 4.74559367417263;
MPRINT(EM_DIAGRAM):   *** Standardize PROPOS ;
MPRINT(EM_DIAGRAM):   drop T_PROPOS ;
MPRINT(EM_DIAGRAM):   if missing( PROPOS ) then T_PROPOS = .;
MPRINT(EM_DIAGRAM):   else T_PROPOS = (PROPOS - 0) * 4.69731016376762;
MPRINT(EM_DIAGRAM):   *** Standardize PROTECT ;
MPRINT(EM_DIAGRAM):   drop T_PROTECT ;
MPRINT(EM_DIAGRAM):   if missing( PROTECT ) then T_PROTECT = .;
MPRINT(EM_DIAGRAM):   else T_PROTECT = (PROTECT - 0) * 4.35330411491208;
MPRINT(EM_DIAGRAM):   *** Standardize PROTOCOL ;
MPRINT(EM_DIAGRAM):   drop T_PROTOCOL ;
MPRINT(EM_DIAGRAM):   if missing( PROTOCOL ) then T_PROTOCOL = .;
MPRINT(EM_DIAGRAM):   else T_PROTOCOL = (PROTOCOL - 0) * 3.07135812251306;
MPRINT(EM_DIAGRAM):   *** Standardize PROVE ;
MPRINT(EM_DIAGRAM):   drop T_PROVE ;
MPRINT(EM_DIAGRAM):   if missing( PROVE ) then T_PROVE = .;
MPRINT(EM_DIAGRAM):   else T_PROVE = (PROVE - 0) * 3.11700315734362;
MPRINT(EM_DIAGRAM):   *** Standardize PROVID ;
MPRINT(EM_DIAGRAM):   drop T_PROVID ;
MPRINT(EM_DIAGRAM):   if missing( PROVID ) then T_PROVID = .;
MPRINT(EM_DIAGRAM):   else T_PROVID = (PROVID - 0) * 6.60157659502238;
MPRINT(EM_DIAGRAM):   *** Standardize PUBLIC ;
MPRINT(EM_DIAGRAM):   drop T_PUBLIC ;
MPRINT(EM_DIAGRAM):   if missing( PUBLIC ) then T_PUBLIC = .;
MPRINT(EM_DIAGRAM):   else T_PUBLIC = (PUBLIC - 0) * 3.22461720691186;
MPRINT(EM_DIAGRAM):   *** Standardize PUBLISH ;
MPRINT(EM_DIAGRAM):   drop T_PUBLISH ;
MPRINT(EM_DIAGRAM):   if missing( PUBLISH ) then T_PUBLISH = .;
MPRINT(EM_DIAGRAM):   else T_PUBLISH = (PUBLISH - 0) * 5.45568016700118;
MPRINT(EM_DIAGRAM):   *** Standardize PULL ;
MPRINT(EM_DIAGRAM):   drop T_PULL ;
MPRINT(EM_DIAGRAM):   if missing( PULL ) then T_PULL = .;
MPRINT(EM_DIAGRAM):   else T_PULL = (PULL - 0) * 6.12048468046936;
MPRINT(EM_DIAGRAM):   *** Standardize PURPOS ;
MPRINT(EM_DIAGRAM):   drop T_PURPOS ;
MPRINT(EM_DIAGRAM):   if missing( PURPOS ) then T_PURPOS = .;
MPRINT(EM_DIAGRAM):   else T_PURPOS = (PURPOS - 0) * 5.14713111661917;
MPRINT(EM_DIAGRAM):   *** Standardize PUT ;
MPRINT(EM_DIAGRAM):   drop T_PUT ;
MPRINT(EM_DIAGRAM):   if missing( PUT ) then T_PUT = .;
MPRINT(EM_DIAGRAM):   else T_PUT = (PUT - 0) * 3.8760565437185;
MPRINT(EM_DIAGRAM):   *** Standardize QUACK ;
MPRINT(EM_DIAGRAM):   drop T_QUACK ;
MPRINT(EM_DIAGRAM):   if missing( QUACK ) then T_QUACK = .;
MPRINT(EM_DIAGRAM):   else T_QUACK = (QUACK - 0) * 2.01880869078783;
MPRINT(EM_DIAGRAM):   *** Standardize QUALITI ;
MPRINT(EM_DIAGRAM):   drop T_QUALITI ;
MPRINT(EM_DIAGRAM):   if missing( QUALITI ) then T_QUALITI = .;
MPRINT(EM_DIAGRAM):   else T_QUALITI = (QUALITI - 0) * 2.31956374538892;
MPRINT(EM_DIAGRAM):   *** Standardize QUESTION ;
MPRINT(EM_DIAGRAM):   drop T_QUESTION ;
MPRINT(EM_DIAGRAM):   if missing( QUESTION ) then T_QUESTION = .;
MPRINT(EM_DIAGRAM):   else T_QUESTION = (QUESTION - 0) * 6.05202205428262;
MPRINT(EM_DIAGRAM):   *** Standardize QUOT ;
MPRINT(EM_DIAGRAM):   drop T_QUOT ;
MPRINT(EM_DIAGRAM):   if missing( QUOT ) then T_QUOT = .;
MPRINT(EM_DIAGRAM):   else T_QUOT = (QUOT - 0) * 3.24122625928757;
MPRINT(EM_DIAGRAM):   *** Standardize RACE ;
MPRINT(EM_DIAGRAM):   drop T_RACE ;
MPRINT(EM_DIAGRAM):   if missing( RACE ) then T_RACE = .;
MPRINT(EM_DIAGRAM):   else T_RACE = (RACE - 0) * 4.82358140651409;
MPRINT(EM_DIAGRAM):   *** Standardize RACISM ;
MPRINT(EM_DIAGRAM):   drop T_RACISM ;
MPRINT(EM_DIAGRAM):   if missing( RACISM ) then T_RACISM = .;
MPRINT(EM_DIAGRAM):   else T_RACISM = (RACISM - 0) * 2.03488763793389;
MPRINT(EM_DIAGRAM):   *** Standardize RACIST ;
MPRINT(EM_DIAGRAM):   drop T_RACIST ;
MPRINT(EM_DIAGRAM):   if missing( RACIST ) then T_RACIST = .;
MPRINT(EM_DIAGRAM):   else T_RACIST = (RACIST - 0) * 2.70218848549669;
MPRINT(EM_DIAGRAM):   *** Standardize RADAR ;
MPRINT(EM_DIAGRAM):   drop T_RADAR ;
MPRINT(EM_DIAGRAM):   if missing( RADAR ) then T_RADAR = .;
MPRINT(EM_DIAGRAM):   else T_RADAR = (RADAR - 0) * 1.64028348569154;
MPRINT(EM_DIAGRAM):   *** Standardize RADIO ;
MPRINT(EM_DIAGRAM):   drop T_RADIO ;
MPRINT(EM_DIAGRAM):   if missing( RADIO ) then T_RADIO = .;
MPRINT(EM_DIAGRAM):   else T_RADIO = (RADIO - 0) * 3.27810759013307;
MPRINT(EM_DIAGRAM):   *** Standardize RAINER ;
MPRINT(EM_DIAGRAM):   drop T_RAINER ;
MPRINT(EM_DIAGRAM):   if missing( RAINER ) then T_RAINER = .;
MPRINT(EM_DIAGRAM):   else T_RAINER = (RAINER - 0) * 1.73975095483375;
MPRINT(EM_DIAGRAM):   *** Standardize RANG ;
MPRINT(EM_DIAGRAM):   drop T_RANG ;
MPRINT(EM_DIAGRAM):   if missing( RANG ) then T_RANG = .;
MPRINT(EM_DIAGRAM):   else T_RANG = (RANG - 0) * 6.36040152682328;
MPRINT(EM_DIAGRAM):   *** Standardize RATE ;
MPRINT(EM_DIAGRAM):   drop T_RATE ;
MPRINT(EM_DIAGRAM):   if missing( RATE ) then T_RATE = .;
MPRINT(EM_DIAGRAM):   else T_RATE = (RATE - 0) * 3.778185645265;
MPRINT(EM_DIAGRAM):   *** Standardize REACTION ;
MPRINT(EM_DIAGRAM):   drop T_REACTION ;
MPRINT(EM_DIAGRAM):   if missing( REACTION ) then T_REACTION = .;
MPRINT(EM_DIAGRAM):   else T_REACTION = (REACTION - 0) * 3.66427899253742;
MPRINT(EM_DIAGRAM):   *** Standardize READ ;
MPRINT(EM_DIAGRAM):   drop T_READ ;
MPRINT(EM_DIAGRAM):   if missing( READ ) then T_READ = .;
MPRINT(EM_DIAGRAM):   else T_READ = (READ - 0) * 4.42237465935729;
MPRINT(EM_DIAGRAM):   *** Standardize READER ;
MPRINT(EM_DIAGRAM):   drop T_READER ;
MPRINT(EM_DIAGRAM):   if missing( READER ) then T_READER = .;
MPRINT(EM_DIAGRAM):   else T_READER = (READER - 0) * 3.64261661555347;
MPRINT(EM_DIAGRAM):   *** Standardize REAL ;
MPRINT(EM_DIAGRAM):   drop T_REAL ;
MPRINT(EM_DIAGRAM):   if missing( REAL ) then T_REAL = .;
MPRINT(EM_DIAGRAM):   else T_REAL = (REAL - 0) * 6.1344874429765;
MPRINT(EM_DIAGRAM):   *** Standardize REALIZ ;
MPRINT(EM_DIAGRAM):   drop T_REALIZ ;
MPRINT(EM_DIAGRAM):   if missing( REALIZ ) then T_REALIZ = .;
MPRINT(EM_DIAGRAM):   else T_REALIZ = (REALIZ - 0) * 5.65143719704247;
MPRINT(EM_DIAGRAM):   *** Standardize REASON ;
MPRINT(EM_DIAGRAM):   drop T_REASON ;
MPRINT(EM_DIAGRAM):   if missing( REASON ) then T_REASON = .;
MPRINT(EM_DIAGRAM):   else T_REASON = (REASON - 0) * 9.31761791253643;
MPRINT(EM_DIAGRAM):   *** Standardize REC ;
MPRINT(EM_DIAGRAM):   drop T_REC ;
MPRINT(EM_DIAGRAM):   if missing( REC ) then T_REC = .;
MPRINT(EM_DIAGRAM):   else T_REC = (REC - 0) * 6.14271624502613;
MPRINT(EM_DIAGRAM):   *** Standardize RECAL ;
MPRINT(EM_DIAGRAM):   drop T_RECAL ;
MPRINT(EM_DIAGRAM):   if missing( RECAL ) then T_RECAL = .;
MPRINT(EM_DIAGRAM):   else T_RECAL = (RECAL - 0) * 5.96975687409782;
MPRINT(EM_DIAGRAM):   *** Standardize RECEIV ;
MPRINT(EM_DIAGRAM):   drop T_RECEIV ;
MPRINT(EM_DIAGRAM):   if missing( RECEIV ) then T_RECEIV = .;
MPRINT(EM_DIAGRAM):   else T_RECEIV = (RECEIV - 0) * 3.29627760495118;
MPRINT(EM_DIAGRAM):   *** Standardize RECOGN ;
MPRINT(EM_DIAGRAM):   drop T_RECOGN ;
MPRINT(EM_DIAGRAM):   if missing( RECOGN ) then T_RECOGN = .;
MPRINT(EM_DIAGRAM):   else T_RECOGN = (RECOGN - 0) * 8.08344938077436;
MPRINT(EM_DIAGRAM):   *** Standardize RECOMMEND ;
MPRINT(EM_DIAGRAM):   drop T_RECOMMEND ;
MPRINT(EM_DIAGRAM):   if missing( RECOMMEND ) then T_RECOMMEND = .;
MPRINT(EM_DIAGRAM):   else T_RECOMMEND = (RECOMMEND - 0) * 5.05110883134966;
MPRINT(EM_DIAGRAM):   *** Standardize REDUC ;
MPRINT(EM_DIAGRAM):   drop T_REDUC ;
MPRINT(EM_DIAGRAM):   if missing( REDUC ) then T_REDUC = .;
MPRINT(EM_DIAGRAM):   else T_REDUC = (REDUC - 0) * 4.01448713456559;
MPRINT(EM_DIAGRAM):   *** Standardize REDUND ;
MPRINT(EM_DIAGRAM):   drop T_REDUND ;
MPRINT(EM_DIAGRAM):   if missing( REDUND ) then T_REDUND = .;
MPRINT(EM_DIAGRAM):   else T_REDUND = (REDUND - 0) * 8.71579282059791;
MPRINT(EM_DIAGRAM):   *** Standardize REGION ;
MPRINT(EM_DIAGRAM):   drop T_REGION ;
MPRINT(EM_DIAGRAM):   if missing( REGION ) then T_REGION = .;
MPRINT(EM_DIAGRAM):   else T_REGION = (REGION - 0) * 4.62364510185265;
MPRINT(EM_DIAGRAM):   *** Standardize REGIST ;
MPRINT(EM_DIAGRAM):   drop T_REGIST ;
MPRINT(EM_DIAGRAM):   if missing( REGIST ) then T_REGIST = .;
MPRINT(EM_DIAGRAM):   else T_REGIST = (REGIST - 0) * 5.28142068265843;
MPRINT(EM_DIAGRAM):   *** Standardize REILLI ;
MPRINT(EM_DIAGRAM):   drop T_REILLI ;
MPRINT(EM_DIAGRAM):   if missing( REILLI ) then T_REILLI = .;
MPRINT(EM_DIAGRAM):   else T_REILLI = (REILLI - 0) * 2.88821759831644;
MPRINT(EM_DIAGRAM):   *** Standardize RELAI ;
MPRINT(EM_DIAGRAM):   drop T_RELAI ;
MPRINT(EM_DIAGRAM):   if missing( RELAI ) then T_RELAI = .;
MPRINT(EM_DIAGRAM):   else T_RELAI = (RELAI - 0) * 1.44700027126945;
MPRINT(EM_DIAGRAM):   *** Standardize RELAT ;
MPRINT(EM_DIAGRAM):   drop T_RELAT ;
MPRINT(EM_DIAGRAM):   if missing( RELAT ) then T_RELAT = .;
MPRINT(EM_DIAGRAM):   else T_RELAT = (RELAT - 0) * 5.22544461309134;
MPRINT(EM_DIAGRAM):   *** Standardize RELEAS ;
MPRINT(EM_DIAGRAM):   drop T_RELEAS ;
MPRINT(EM_DIAGRAM):   if missing( RELEAS ) then T_RELEAS = .;
MPRINT(EM_DIAGRAM):   else T_RELEAS = (RELEAS - 0) * 5.46956491986047;
MPRINT(EM_DIAGRAM):   *** Standardize RELIABL ;
MPRINT(EM_DIAGRAM):   drop T_RELIABL ;
MPRINT(EM_DIAGRAM):   if missing( RELIABL ) then T_RELIABL = .;
MPRINT(EM_DIAGRAM):   else T_RELIABL = (RELIABL - 0) * 5.25126767909997;
MPRINT(EM_DIAGRAM):   *** Standardize RELIGION ;
MPRINT(EM_DIAGRAM):   drop T_RELIGION ;
MPRINT(EM_DIAGRAM):   if missing( RELIGION ) then T_RELIGION = .;
MPRINT(EM_DIAGRAM):   else T_RELIGION = (RELIGION - 0) * 3.0411123746389;
MPRINT(EM_DIAGRAM):   *** Standardize REMAIN ;
MPRINT(EM_DIAGRAM):   drop T_REMAIN ;
MPRINT(EM_DIAGRAM):   if missing( REMAIN ) then T_REMAIN = .;
MPRINT(EM_DIAGRAM):   else T_REMAIN = (REMAIN - 0) * 6.36974095671772;
MPRINT(EM_DIAGRAM):   *** Standardize REMEMB ;
MPRINT(EM_DIAGRAM):   drop T_REMEMB ;
MPRINT(EM_DIAGRAM):   if missing( REMEMB ) then T_REMEMB = .;
MPRINT(EM_DIAGRAM):   else T_REMEMB = (REMEMB - 0) * 5.36096344091829;
MPRINT(EM_DIAGRAM):   *** Standardize REMOT ;
MPRINT(EM_DIAGRAM):   drop T_REMOT ;
MPRINT(EM_DIAGRAM):   if missing( REMOT ) then T_REMOT = .;
MPRINT(EM_DIAGRAM):   else T_REMOT = (REMOT - 0) * 3.28008138048546;
MPRINT(EM_DIAGRAM):   *** Standardize REMOV ;
MPRINT(EM_DIAGRAM):   drop T_REMOV ;
MPRINT(EM_DIAGRAM):   if missing( REMOV ) then T_REMOV = .;
MPRINT(EM_DIAGRAM):   else T_REMOV = (REMOV - 0) * 7.19955636365003;
MPRINT(EM_DIAGRAM):   *** Standardize REPEAT ;
MPRINT(EM_DIAGRAM):   drop T_REPEAT ;
MPRINT(EM_DIAGRAM):   if missing( REPEAT ) then T_REPEAT = .;
MPRINT(EM_DIAGRAM):   else T_REPEAT = (REPEAT - 0) * 3.87706731919812;
MPRINT(EM_DIAGRAM):   *** Standardize REPLAC ;
MPRINT(EM_DIAGRAM):   drop T_REPLAC ;
MPRINT(EM_DIAGRAM):   if missing( REPLAC ) then T_REPLAC = .;
MPRINT(EM_DIAGRAM):   else T_REPLAC = (REPLAC - 0) * 4.62364510185265;
MPRINT(EM_DIAGRAM):   *** Standardize REPLI ;
MPRINT(EM_DIAGRAM):   drop T_REPLI ;
MPRINT(EM_DIAGRAM):   if missing( REPLI ) then T_REPLI = .;
MPRINT(EM_DIAGRAM):   else T_REPLI = (REPLI - 0) * 6.302186984309;
MPRINT(EM_DIAGRAM):   *** Standardize REPORT ;
MPRINT(EM_DIAGRAM):   drop T_REPORT ;
MPRINT(EM_DIAGRAM):   if missing( REPORT ) then T_REPORT = .;
MPRINT(EM_DIAGRAM):   else T_REPORT = (REPORT - 0) * 4.8008784102956;
MPRINT(EM_DIAGRAM):   *** Standardize REQUEST ;
MPRINT(EM_DIAGRAM):   drop T_REQUEST ;
MPRINT(EM_DIAGRAM):   if missing( REQUEST ) then T_REQUEST = .;
MPRINT(EM_DIAGRAM):   else T_REQUEST = (REQUEST - 0) * 3.51663769689601;
MPRINT(EM_DIAGRAM):   *** Standardize REQUIR ;
MPRINT(EM_DIAGRAM):   drop T_REQUIR ;
MPRINT(EM_DIAGRAM):   if missing( REQUIR ) then T_REQUIR = .;
MPRINT(EM_DIAGRAM):   else T_REQUIR = (REQUIR - 0) * 7.93928217872022;
MPRINT(EM_DIAGRAM):   *** Standardize RESEARCH ;
MPRINT(EM_DIAGRAM):   drop T_RESEARCH ;
MPRINT(EM_DIAGRAM):   if missing( RESEARCH ) then T_RESEARCH = .;
MPRINT(EM_DIAGRAM):   else T_RESEARCH = (RESEARCH - 0) * 5.28309774587878;
MPRINT(EM_DIAGRAM):   *** Standardize RESERV ;
MPRINT(EM_DIAGRAM):   drop T_RESERV ;
MPRINT(EM_DIAGRAM):   if missing( RESERV ) then T_RESERV = .;
MPRINT(EM_DIAGRAM):   else T_RESERV = (RESERV - 0) * 6.60177585332304;
MPRINT(EM_DIAGRAM):   *** Standardize RESIST ;
MPRINT(EM_DIAGRAM):   drop T_RESIST ;
MPRINT(EM_DIAGRAM):   if missing( RESIST ) then T_RESIST = .;
MPRINT(EM_DIAGRAM):   else T_RESIST = (RESIST - 0) * 5.77881958031442;
MPRINT(EM_DIAGRAM):   *** Standardize RESISTOR ;
MPRINT(EM_DIAGRAM):   drop T_RESISTOR ;
MPRINT(EM_DIAGRAM):   if missing( RESISTOR ) then T_RESISTOR = .;
MPRINT(EM_DIAGRAM):   else T_RESISTOR = (RESISTOR - 0) * 2.12005771311841;
MPRINT(EM_DIAGRAM):   *** Standardize RESOURC ;
MPRINT(EM_DIAGRAM):   drop T_RESOURC ;
MPRINT(EM_DIAGRAM):   if missing( RESOURC ) then T_RESOURC = .;
MPRINT(EM_DIAGRAM):   else T_RESOURC = (RESOURC - 0) * 4.07459596168581;
MPRINT(EM_DIAGRAM):   *** Standardize RESPOND ;
MPRINT(EM_DIAGRAM):   drop T_RESPOND ;
MPRINT(EM_DIAGRAM):   if missing( RESPOND ) then T_RESPOND = .;
MPRINT(EM_DIAGRAM):   else T_RESPOND = (RESPOND - 0) * 9.73519363704945;
MPRINT(EM_DIAGRAM):   *** Standardize RESPONS ;
MPRINT(EM_DIAGRAM):   drop T_RESPONS ;
MPRINT(EM_DIAGRAM):   if missing( RESPONS ) then T_RESPONS = .;
MPRINT(EM_DIAGRAM):   else T_RESPONS = (RESPONS - 0) * 5.9381275927421;
MPRINT(EM_DIAGRAM):   *** Standardize REST ;
MPRINT(EM_DIAGRAM):   drop T_REST ;
MPRINT(EM_DIAGRAM):   if missing( REST ) then T_REST = .;
MPRINT(EM_DIAGRAM):   else T_REST = (REST - 0) * 6.4901290913663;
MPRINT(EM_DIAGRAM):   *** Standardize RESULT ;
MPRINT(EM_DIAGRAM):   drop T_RESULT ;
MPRINT(EM_DIAGRAM):   if missing( RESULT ) then T_RESULT = .;
MPRINT(EM_DIAGRAM):   else T_RESULT = (RESULT - 0) * 4.99794897444614;
MPRINT(EM_DIAGRAM):   *** Standardize RETURN ;
MPRINT(EM_DIAGRAM):   drop T_RETURN ;
MPRINT(EM_DIAGRAM):   if missing( RETURN ) then T_RETURN = .;
MPRINT(EM_DIAGRAM):   else T_RETURN = (RETURN - 0) * 4.85768628990131;
MPRINT(EM_DIAGRAM):   *** Standardize REVIEW ;
MPRINT(EM_DIAGRAM):   drop T_REVIEW ;
MPRINT(EM_DIAGRAM):   if missing( REVIEW ) then T_REVIEW = .;
MPRINT(EM_DIAGRAM):   else T_REVIEW = (REVIEW - 0) * 2.6304195219475;
MPRINT(EM_DIAGRAM):   *** Standardize RICH ;
MPRINT(EM_DIAGRAM):   drop T_RICH ;
MPRINT(EM_DIAGRAM):   if missing( RICH ) then T_RICH = .;
MPRINT(EM_DIAGRAM):   else T_RICH = (RICH - 0) * 3.38559518894664;
MPRINT(EM_DIAGRAM):   *** Standardize RICHARD ;
MPRINT(EM_DIAGRAM):   drop T_RICHARD ;
MPRINT(EM_DIAGRAM):   if missing( RICHARD ) then T_RICHARD = .;
MPRINT(EM_DIAGRAM):   else T_RICHARD = (RICHARD - 0) * 3.84992930255561;
MPRINT(EM_DIAGRAM):   *** Standardize RICHARDSON ;
MPRINT(EM_DIAGRAM):   drop T_RICHARDSON ;
MPRINT(EM_DIAGRAM):   if missing( RICHARDSON ) then T_RICHARDSON = .;
MPRINT(EM_DIAGRAM):   else T_RICHARDSON = (RICHARDSON - 0) * 3.65045154861105;
MPRINT(EM_DIAGRAM):   *** Standardize RIGHT ;
MPRINT(EM_DIAGRAM):   drop T_RIGHT ;
MPRINT(EM_DIAGRAM):   if missing( RIGHT ) then T_RIGHT = .;
MPRINT(EM_DIAGRAM):   else T_RIGHT = (RIGHT - 0) * 5.34093121112534;
MPRINT(EM_DIAGRAM):   *** Standardize RIND ;
MPRINT(EM_DIAGRAM):   drop T_RIND ;
MPRINT(EM_DIAGRAM):   if missing( RIND ) then T_RIND = .;
MPRINT(EM_DIAGRAM):   else T_RIND = (RIND - 0) * 3.93512125221087;
MPRINT(EM_DIAGRAM):   *** Standardize RING ;
MPRINT(EM_DIAGRAM):   drop T_RING ;
MPRINT(EM_DIAGRAM):   if missing( RING ) then T_RING = .;
MPRINT(EM_DIAGRAM):   else T_RING = (RING - 0) * 1.79734103365012;
MPRINT(EM_DIAGRAM):   *** Standardize RISK ;
MPRINT(EM_DIAGRAM):   drop T_RISK ;
MPRINT(EM_DIAGRAM):   if missing( RISK ) then T_RISK = .;
MPRINT(EM_DIAGRAM):   else T_RISK = (RISK - 0) * 4.56820949795395;
MPRINT(EM_DIAGRAM):   *** Standardize RIVER ;
MPRINT(EM_DIAGRAM):   drop T_RIVER ;
MPRINT(EM_DIAGRAM):   if missing( RIVER ) then T_RIVER = .;
MPRINT(EM_DIAGRAM):   else T_RIVER = (RIVER - 0) * 3.26127811047953;
MPRINT(EM_DIAGRAM):   *** Standardize ROAD ;
MPRINT(EM_DIAGRAM):   drop T_ROAD ;
MPRINT(EM_DIAGRAM):   if missing( ROAD ) then T_ROAD = .;
MPRINT(EM_DIAGRAM):   else T_ROAD = (ROAD - 0) * 8.15733836375268;
MPRINT(EM_DIAGRAM):   *** Standardize ROBERT ;
MPRINT(EM_DIAGRAM):   drop T_ROBERT ;
MPRINT(EM_DIAGRAM):   if missing( ROBERT ) then T_ROBERT = .;
MPRINT(EM_DIAGRAM):   else T_ROBERT = (ROBERT - 0) * 1.8248903937835;
MPRINT(EM_DIAGRAM):   *** Standardize ROCHEST ;
MPRINT(EM_DIAGRAM):   drop T_ROCHEST ;
MPRINT(EM_DIAGRAM):   if missing( ROCHEST ) then T_ROCHEST = .;
MPRINT(EM_DIAGRAM):   else T_ROCHEST = (ROCHEST - 0) * 5.64151390661766;
MPRINT(EM_DIAGRAM):   *** Standardize RON ;
MPRINT(EM_DIAGRAM):   drop T_RON ;
MPRINT(EM_DIAGRAM):   if missing( RON ) then T_RON = .;
MPRINT(EM_DIAGRAM):   else T_RON = (RON - 0) * 1.58042529841303;
MPRINT(EM_DIAGRAM):   *** Standardize ROOM ;
MPRINT(EM_DIAGRAM):   drop T_ROOM ;
MPRINT(EM_DIAGRAM):   if missing( ROOM ) then T_ROOM = .;
MPRINT(EM_DIAGRAM):   else T_ROOM = (ROOM - 0) * 5.33783352214779;
MPRINT(EM_DIAGRAM):   *** Standardize ROOT ;
MPRINT(EM_DIAGRAM):   drop T_ROOT ;
MPRINT(EM_DIAGRAM):   if missing( ROOT ) then T_ROOT = .;
MPRINT(EM_DIAGRAM):   else T_ROOT = (ROOT - 0) * 3.97895650201293;
MPRINT(EM_DIAGRAM):   *** Standardize RUI ;
MPRINT(EM_DIAGRAM):   drop T_RUI ;
MPRINT(EM_DIAGRAM):   if missing( RUI ) then T_RUI = .;
MPRINT(EM_DIAGRAM):   else T_RUI = (RUI - 0) * 1.12637834745801;
MPRINT(EM_DIAGRAM):   *** Standardize RULE ;
MPRINT(EM_DIAGRAM):   drop T_RULE ;
MPRINT(EM_DIAGRAM):   if missing( RULE ) then T_RULE = .;
MPRINT(EM_DIAGRAM):   else T_RULE = (RULE - 0) * 2.67933548179396;
MPRINT(EM_DIAGRAM):   *** Standardize RUN ;
MPRINT(EM_DIAGRAM):   drop T_RUN ;
MPRINT(EM_DIAGRAM):   if missing( RUN ) then T_RUN = .;
MPRINT(EM_DIAGRAM):   else T_RUN = (RUN - 0) * 6.08016199674241;
MPRINT(EM_DIAGRAM):   *** Standardize RUSSEL ;
MPRINT(EM_DIAGRAM):   drop T_RUSSEL ;
MPRINT(EM_DIAGRAM):   if missing( RUSSEL ) then T_RUSSEL = .;
MPRINT(EM_DIAGRAM):   else T_RUSSEL = (RUSSEL - 0) * 6.10204565409665;
MPRINT(EM_DIAGRAM):   *** Standardize RUSSIAN ;
MPRINT(EM_DIAGRAM):   drop T_RUSSIAN ;
MPRINT(EM_DIAGRAM):   if missing( RUSSIAN ) then T_RUSSIAN = .;
MPRINT(EM_DIAGRAM):   else T_RUSSIAN = (RUSSIAN - 0) * 8.12217251239834;
MPRINT(EM_DIAGRAM):   *** Standardize SALAH ;
MPRINT(EM_DIAGRAM):   drop T_SALAH ;
MPRINT(EM_DIAGRAM):   if missing( SALAH ) then T_SALAH = .;
MPRINT(EM_DIAGRAM):   else T_SALAH = (SALAH - 0) * 3.08094526162643;
MPRINT(EM_DIAGRAM):   *** Standardize SALE ;
MPRINT(EM_DIAGRAM):   drop T_SALE ;
MPRINT(EM_DIAGRAM):   if missing( SALE ) then T_SALE = .;
MPRINT(EM_DIAGRAM):   else T_SALE = (SALE - 0) * 3.59046988372407;
MPRINT(EM_DIAGRAM):   *** Standardize SALMON ;
MPRINT(EM_DIAGRAM):   drop T_SALMON ;
MPRINT(EM_DIAGRAM):   if missing( SALMON ) then T_SALMON = .;
MPRINT(EM_DIAGRAM):   else T_SALMON = (SALMON - 0) * 1.24706174182851;
MPRINT(EM_DIAGRAM):   *** Standardize SAMPL ;
MPRINT(EM_DIAGRAM):   drop T_SAMPL ;
MPRINT(EM_DIAGRAM):   if missing( SAMPL ) then T_SAMPL = .;
MPRINT(EM_DIAGRAM):   else T_SAMPL = (SAMPL - 0) * 2.80605949712792;
MPRINT(EM_DIAGRAM):   *** Standardize SAT ;
MPRINT(EM_DIAGRAM):   drop T_SAT ;
MPRINT(EM_DIAGRAM):   if missing( SAT ) then T_SAT = .;
MPRINT(EM_DIAGRAM):   else T_SAT = (SAT - 0) * 5.28116628047848;
MPRINT(EM_DIAGRAM):   *** Standardize SAVE ;
MPRINT(EM_DIAGRAM):   drop T_SAVE ;
MPRINT(EM_DIAGRAM):   if missing( SAVE ) then T_SAVE = .;
MPRINT(EM_DIAGRAM):   else T_SAVE = (SAVE - 0) * 4.71143792775502;
MPRINT(EM_DIAGRAM):   *** Standardize SCHEMAT ;
MPRINT(EM_DIAGRAM):   drop T_SCHEMAT ;
MPRINT(EM_DIAGRAM):   if missing( SCHEMAT ) then T_SCHEMAT = .;
MPRINT(EM_DIAGRAM):   else T_SCHEMAT = (SCHEMAT - 0) * 2.28004602999207;
MPRINT(EM_DIAGRAM):   *** Standardize SCHOOL ;
MPRINT(EM_DIAGRAM):   drop T_SCHOOL ;
MPRINT(EM_DIAGRAM):   if missing( SCHOOL ) then T_SCHOOL = .;
MPRINT(EM_DIAGRAM):   else T_SCHOOL = (SCHOOL - 0) * 5.41530789631916;
MPRINT(EM_DIAGRAM):   *** Standardize SCHWARTZ ;
MPRINT(EM_DIAGRAM):   drop T_SCHWARTZ ;
MPRINT(EM_DIAGRAM):   if missing( SCHWARTZ ) then T_SCHWARTZ = .;
MPRINT(EM_DIAGRAM):   else T_SCHWARTZ = (SCHWARTZ - 0) * 1.85692098924073;
MPRINT(EM_DIAGRAM):   *** Standardize SCI ;
MPRINT(EM_DIAGRAM):   drop T_SCI ;
MPRINT(EM_DIAGRAM):   if missing( SCI ) then T_SCI = .;
MPRINT(EM_DIAGRAM):   else T_SCI = (SCI - 0) * 3.86334678194681;
MPRINT(EM_DIAGRAM):   *** Standardize SCIENC ;
MPRINT(EM_DIAGRAM):   drop T_SCIENC ;
MPRINT(EM_DIAGRAM):   if missing( SCIENC ) then T_SCIENC = .;
MPRINT(EM_DIAGRAM):   else T_SCIENC = (SCIENC - 0) * 6.56365560945997;
MPRINT(EM_DIAGRAM):   *** Standardize SCIENTIF ;
MPRINT(EM_DIAGRAM):   drop T_SCIENTIF ;
MPRINT(EM_DIAGRAM):   if missing( SCIENTIF ) then T_SCIENTIF = .;
MPRINT(EM_DIAGRAM):   else T_SCIENTIF = (SCIENTIF - 0) * 4.33576366155512;
MPRINT(EM_DIAGRAM):   *** Standardize SCIENTIST ;
MPRINT(EM_DIAGRAM):   drop T_SCIENTIST ;
MPRINT(EM_DIAGRAM):   if missing( SCIENTIST ) then T_SCIENTIST = .;
MPRINT(EM_DIAGRAM):   else T_SCIENTIST = (SCIENTIST - 0) * 6.86584688745596;
MPRINT(EM_DIAGRAM):   *** Standardize SCOPE ;
MPRINT(EM_DIAGRAM):   drop T_SCOPE ;
MPRINT(EM_DIAGRAM):   if missing( SCOPE ) then T_SCOPE = .;
MPRINT(EM_DIAGRAM):   else T_SCOPE = (SCOPE - 0) * 1.69573969827824;
MPRINT(EM_DIAGRAM):   *** Standardize SCOTT ;
MPRINT(EM_DIAGRAM):   drop T_SCOTT ;
MPRINT(EM_DIAGRAM):   if missing( SCOTT ) then T_SCOTT = .;
MPRINT(EM_DIAGRAM):   else T_SCOTT = (SCOTT - 0) * 1.8446248585239;
MPRINT(EM_DIAGRAM):   *** Standardize SCREEN ;
MPRINT(EM_DIAGRAM):   drop T_SCREEN ;
MPRINT(EM_DIAGRAM):   if missing( SCREEN ) then T_SCREEN = .;
MPRINT(EM_DIAGRAM):   else T_SCREEN = (SCREEN - 0) * 2.80730286771813;
MPRINT(EM_DIAGRAM):   *** Standardize SDSU ;
MPRINT(EM_DIAGRAM):   drop T_SDSU ;
MPRINT(EM_DIAGRAM):   if missing( SDSU ) then T_SDSU = .;
MPRINT(EM_DIAGRAM):   else T_SDSU = (SDSU - 0) * 1.75074437915415;
MPRINT(EM_DIAGRAM):   *** Standardize SEA ;
MPRINT(EM_DIAGRAM):   drop T_SEA ;
MPRINT(EM_DIAGRAM):   if missing( SEA ) then T_SEA = .;
MPRINT(EM_DIAGRAM):   else T_SEA = (SEA - 0) * 4.4510059567035;
MPRINT(EM_DIAGRAM):   *** Standardize SEARCH ;
MPRINT(EM_DIAGRAM):   drop T_SEARCH ;
MPRINT(EM_DIAGRAM):   if missing( SEARCH ) then T_SEARCH = .;
MPRINT(EM_DIAGRAM):   else T_SEARCH = (SEARCH - 0) * 4.89711404524307;
MPRINT(EM_DIAGRAM):   *** Standardize SEATTL ;
MPRINT(EM_DIAGRAM):   drop T_SEATTL ;
MPRINT(EM_DIAGRAM):   if missing( SEATTL ) then T_SEATTL = .;
MPRINT(EM_DIAGRAM):   else T_SEATTL = (SEATTL - 0) * 4.46427869596718;
MPRINT(EM_DIAGRAM):   *** Standardize SECTION ;
MPRINT(EM_DIAGRAM):   drop T_SECTION ;
MPRINT(EM_DIAGRAM):   if missing( SECTION ) then T_SECTION = .;
MPRINT(EM_DIAGRAM):   else T_SECTION = (SECTION - 0) * 6.39329180875458;
MPRINT(EM_DIAGRAM):   *** Standardize SECUR ;
MPRINT(EM_DIAGRAM):   drop T_SECUR ;
MPRINT(EM_DIAGRAM):   if missing( SECUR ) then T_SECUR = .;
MPRINT(EM_DIAGRAM):   else T_SECUR = (SECUR - 0) * 4.90893522994014;
MPRINT(EM_DIAGRAM):   *** Standardize SEEK ;
MPRINT(EM_DIAGRAM):   drop T_SEEK ;
MPRINT(EM_DIAGRAM):   if missing( SEEK ) then T_SEEK = .;
MPRINT(EM_DIAGRAM):   else T_SEEK = (SEEK - 0) * 5.56204923898378;
MPRINT(EM_DIAGRAM):   *** Standardize SEIZUR ;
MPRINT(EM_DIAGRAM):   drop T_SEIZUR ;
MPRINT(EM_DIAGRAM):   if missing( SEIZUR ) then T_SEIZUR = .;
MPRINT(EM_DIAGRAM):   else T_SEIZUR = (SEIZUR - 0) * 2.65857784289069;
MPRINT(EM_DIAGRAM):   *** Standardize SELECT ;
MPRINT(EM_DIAGRAM):   drop T_SELECT ;
MPRINT(EM_DIAGRAM):   if missing( SELECT ) then T_SELECT = .;
MPRINT(EM_DIAGRAM):   else T_SELECT = (SELECT - 0) * 3.53362628480372;
MPRINT(EM_DIAGRAM):   *** Standardize SELL ;
MPRINT(EM_DIAGRAM):   drop T_SELL ;
MPRINT(EM_DIAGRAM):   if missing( SELL ) then T_SELL = .;
MPRINT(EM_DIAGRAM):   else T_SELL = (SELL - 0) * 4.48708374071907;
MPRINT(EM_DIAGRAM):   *** Standardize SEMIT ;
MPRINT(EM_DIAGRAM):   drop T_SEMIT ;
MPRINT(EM_DIAGRAM):   if missing( SEMIT ) then T_SEMIT = .;
MPRINT(EM_DIAGRAM):   else T_SEMIT = (SEMIT - 0) * 6.10391415288027;
MPRINT(EM_DIAGRAM):   *** Standardize SEND ;
MPRINT(EM_DIAGRAM):   drop T_SEND ;
MPRINT(EM_DIAGRAM):   if missing( SEND ) then T_SEND = .;
MPRINT(EM_DIAGRAM):   else T_SEND = (SEND - 0) * 5.56197567358981;
MPRINT(EM_DIAGRAM):   *** Standardize SENS ;
MPRINT(EM_DIAGRAM):   drop T_SENS ;
MPRINT(EM_DIAGRAM):   if missing( SENS ) then T_SENS = .;
MPRINT(EM_DIAGRAM):   else T_SENS = (SENS - 0) * 6.07367456567906;
MPRINT(EM_DIAGRAM):   *** Standardize SENSIT ;
MPRINT(EM_DIAGRAM):   drop T_SENSIT ;
MPRINT(EM_DIAGRAM):   if missing( SENSIT ) then T_SENSIT = .;
MPRINT(EM_DIAGRAM):   else T_SENSIT = (SENSIT - 0) * 3.81092230073154;
MPRINT(EM_DIAGRAM):   *** Standardize SEPAR ;
MPRINT(EM_DIAGRAM):   drop T_SEPAR ;
MPRINT(EM_DIAGRAM):   if missing( SEPAR ) then T_SEPAR = .;
MPRINT(EM_DIAGRAM):   else T_SEPAR = (SEPAR - 0) * 5.40714313406037;
MPRINT(EM_DIAGRAM):   *** Standardize SEQUENC ;
MPRINT(EM_DIAGRAM):   drop T_SEQUENC ;
MPRINT(EM_DIAGRAM):   if missing( SEQUENC ) then T_SEQUENC = .;
MPRINT(EM_DIAGRAM):   else T_SEQUENC = (SEQUENC - 0) * 2.4341403372841;
MPRINT(EM_DIAGRAM):   *** Standardize SERA ;
MPRINT(EM_DIAGRAM):   drop T_SERA ;
MPRINT(EM_DIAGRAM):   if missing( SERA ) then T_SERA = .;
MPRINT(EM_DIAGRAM):   else T_SERA = (SERA - 0) * 11.2616749392744;
MPRINT(EM_DIAGRAM):   *** Standardize SERDAR ;
MPRINT(EM_DIAGRAM):   drop T_SERDAR ;
MPRINT(EM_DIAGRAM):   if missing( SERDAR ) then T_SERDAR = .;
MPRINT(EM_DIAGRAM):   else T_SERDAR = (SERDAR - 0) * 2.09987060606459;
MPRINT(EM_DIAGRAM):   *** Standardize SERI ;
MPRINT(EM_DIAGRAM):   drop T_SERI ;
MPRINT(EM_DIAGRAM):   if missing( SERI ) then T_SERI = .;
MPRINT(EM_DIAGRAM):   else T_SERI = (SERI - 0) * 4.0803231203129;
MPRINT(EM_DIAGRAM):   *** Standardize SERIAL ;
MPRINT(EM_DIAGRAM):   drop T_SERIAL ;
MPRINT(EM_DIAGRAM):   if missing( SERIAL ) then T_SERIAL = .;
MPRINT(EM_DIAGRAM):   else T_SERIAL = (SERIAL - 0) * 2.60967990238096;
MPRINT(EM_DIAGRAM):   *** Standardize SERV ;
MPRINT(EM_DIAGRAM):   drop T_SERV ;
MPRINT(EM_DIAGRAM):   if missing( SERV ) then T_SERV = .;
MPRINT(EM_DIAGRAM):   else T_SERV = (SERV - 0) * 15.9259167608249;
MPRINT(EM_DIAGRAM):   *** Standardize SERVER ;
MPRINT(EM_DIAGRAM):   drop T_SERVER ;
MPRINT(EM_DIAGRAM):   if missing( SERVER ) then T_SERVER = .;
MPRINT(EM_DIAGRAM):   else T_SERVER = (SERVER - 0) * 2.57500352960129;
MPRINT(EM_DIAGRAM):   *** Standardize SERVIC ;
MPRINT(EM_DIAGRAM):   drop T_SERVIC ;
MPRINT(EM_DIAGRAM):   if missing( SERVIC ) then T_SERVIC = .;
MPRINT(EM_DIAGRAM):   else T_SERVIC = (SERVIC - 0) * 7.39693461644889;
MPRINT(EM_DIAGRAM):   *** Standardize SET ;
MPRINT(EM_DIAGRAM):   drop T_SET ;
MPRINT(EM_DIAGRAM):   if missing( SET ) then T_SET = .;
MPRINT(EM_DIAGRAM):   else T_SET = (SET - 0) * 4.61144377975774;
MPRINT(EM_DIAGRAM):   *** Standardize SEXUAL ;
MPRINT(EM_DIAGRAM):   drop T_SEXUAL ;
MPRINT(EM_DIAGRAM):   if missing( SEXUAL ) then T_SEXUAL = .;
MPRINT(EM_DIAGRAM):   else T_SEXUAL = (SEXUAL - 0) * 5.25126767909997;
MPRINT(EM_DIAGRAM):   *** Standardize SHACK ;
MPRINT(EM_DIAGRAM):   drop T_SHACK ;
MPRINT(EM_DIAGRAM):   if missing( SHACK ) then T_SHACK = .;
MPRINT(EM_DIAGRAM):   else T_SHACK = (SHACK - 0) * 2.21736372887148;
MPRINT(EM_DIAGRAM):   *** Standardize SHAME ;
MPRINT(EM_DIAGRAM):   drop T_SHAME ;
MPRINT(EM_DIAGRAM):   if missing( SHAME ) then T_SHAME = .;
MPRINT(EM_DIAGRAM):   else T_SHAME = (SHAME - 0) * 9.40845132144659;
MPRINT(EM_DIAGRAM):   *** Standardize SHARE ;
MPRINT(EM_DIAGRAM):   drop T_SHARE ;
MPRINT(EM_DIAGRAM):   if missing( SHARE ) then T_SHARE = .;
MPRINT(EM_DIAGRAM):   else T_SHARE = (SHARE - 0) * 4.3841701086976;
MPRINT(EM_DIAGRAM):   *** Standardize SHELL ;
MPRINT(EM_DIAGRAM):   drop T_SHELL ;
MPRINT(EM_DIAGRAM):   if missing( SHELL ) then T_SHELL = .;
MPRINT(EM_DIAGRAM):   else T_SHELL = (SHELL - 0) * 2.71774961111309;
MPRINT(EM_DIAGRAM):   *** Standardize SHNEKENDORF ;
MPRINT(EM_DIAGRAM):   drop T_SHNEKENDORF ;
MPRINT(EM_DIAGRAM):   if missing( SHNEKENDORF ) then T_SHNEKENDORF = .;
MPRINT(EM_DIAGRAM):   else T_SHNEKENDORF = (SHNEKENDORF - 0) * 3.32604559330722;
MPRINT(EM_DIAGRAM):   *** Standardize SHOOT ;
MPRINT(EM_DIAGRAM):   drop T_SHOOT ;
MPRINT(EM_DIAGRAM):   if missing( SHOOT ) then T_SHOOT = .;
MPRINT(EM_DIAGRAM):   else T_SHOOT = (SHOOT - 0) * 1.35160549983951;
MPRINT(EM_DIAGRAM):   *** Standardize SHORT ;
MPRINT(EM_DIAGRAM):   drop T_SHORT ;
MPRINT(EM_DIAGRAM):   if missing( SHORT ) then T_SHORT = .;
MPRINT(EM_DIAGRAM):   else T_SHORT = (SHORT - 0) * 3.76982372865303;
MPRINT(EM_DIAGRAM):   *** Standardize SHOSTACK ;
MPRINT(EM_DIAGRAM):   drop T_SHOSTACK ;
MPRINT(EM_DIAGRAM):   if missing( SHOSTACK ) then T_SHOSTACK = .;
MPRINT(EM_DIAGRAM):   else T_SHOSTACK = (SHOSTACK - 0) * 5.09555542979376;
MPRINT(EM_DIAGRAM):   *** Standardize SHOT ;
MPRINT(EM_DIAGRAM):   drop T_SHOT ;
MPRINT(EM_DIAGRAM):   if missing( SHOT ) then T_SHOT = .;
MPRINT(EM_DIAGRAM):   else T_SHOT = (SHOT - 0) * 2.17376259567876;
MPRINT(EM_DIAGRAM):   *** Standardize SHOULDN ;
MPRINT(EM_DIAGRAM):   drop T_SHOULDN ;
MPRINT(EM_DIAGRAM):   if missing( SHOULDN ) then T_SHOULDN = .;
MPRINT(EM_DIAGRAM):   else T_SHOULDN = (SHOULDN - 0) * 3.8491847175318;
MPRINT(EM_DIAGRAM):   *** Standardize SHOW ;
MPRINT(EM_DIAGRAM):   drop T_SHOW ;
MPRINT(EM_DIAGRAM):   if missing( SHOW ) then T_SHOW = .;
MPRINT(EM_DIAGRAM):   else T_SHOW = (SHOW - 0) * 9.06604212992825;
MPRINT(EM_DIAGRAM):   *** Standardize SICK ;
MPRINT(EM_DIAGRAM):   drop T_SICK ;
MPRINT(EM_DIAGRAM):   if missing( SICK ) then T_SICK = .;
MPRINT(EM_DIAGRAM):   else T_SICK = (SICK - 0) * 3.89347856909603;
MPRINT(EM_DIAGRAM):   *** Standardize SIDE ;
MPRINT(EM_DIAGRAM):   drop T_SIDE ;
MPRINT(EM_DIAGRAM):   if missing( SIDE ) then T_SIDE = .;
MPRINT(EM_DIAGRAM):   else T_SIDE = (SIDE - 0) * 4.93914957474677;
MPRINT(EM_DIAGRAM):   *** Standardize SIGN ;
MPRINT(EM_DIAGRAM):   drop T_SIGN ;
MPRINT(EM_DIAGRAM):   if missing( SIGN ) then T_SIGN = .;
MPRINT(EM_DIAGRAM):   else T_SIGN = (SIGN - 0) * 4.96642019414495;
MPRINT(EM_DIAGRAM):   *** Standardize SIGNAL ;
MPRINT(EM_DIAGRAM):   drop T_SIGNAL ;
MPRINT(EM_DIAGRAM):   if missing( SIGNAL ) then T_SIGNAL = .;
MPRINT(EM_DIAGRAM):   else T_SIGNAL = (SIGNAL - 0) * 3.38065533154697;
MPRINT(EM_DIAGRAM):   *** Standardize SIGNIFIC ;
MPRINT(EM_DIAGRAM):   drop T_SIGNIFIC ;
MPRINT(EM_DIAGRAM):   if missing( SIGNIFIC ) then T_SIGNIFIC = .;
MPRINT(EM_DIAGRAM):   else T_SIGNIFIC = (SIGNIFIC - 0) * 9.82120823994772;
MPRINT(EM_DIAGRAM):   *** Standardize SIMILAR ;
MPRINT(EM_DIAGRAM):   drop T_SIMILAR ;
MPRINT(EM_DIAGRAM):   if missing( SIMILAR ) then T_SIMILAR = .;
MPRINT(EM_DIAGRAM):   else T_SIMILAR = (SIMILAR - 0) * 5.50490064523339;
MPRINT(EM_DIAGRAM):   *** Standardize SIMM ;
MPRINT(EM_DIAGRAM):   drop T_SIMM ;
MPRINT(EM_DIAGRAM):   if missing( SIMM ) then T_SIMM = .;
MPRINT(EM_DIAGRAM):   else T_SIMM = (SIMM - 0) * 1.54644529318556;
MPRINT(EM_DIAGRAM):   *** Standardize SIMPL ;
MPRINT(EM_DIAGRAM):   drop T_SIMPL ;
MPRINT(EM_DIAGRAM):   if missing( SIMPL ) then T_SIMPL = .;
MPRINT(EM_DIAGRAM):   else T_SIMPL = (SIMPL - 0) * 7.14486222883968;
MPRINT(EM_DIAGRAM):   *** Standardize SIMPLI ;
MPRINT(EM_DIAGRAM):   drop T_SIMPLI ;
MPRINT(EM_DIAGRAM):   if missing( SIMPLI ) then T_SIMPLI = .;
MPRINT(EM_DIAGRAM):   else T_SIMPLI = (SIMPLI - 0) * 7.20330627133014;
MPRINT(EM_DIAGRAM):   *** Standardize SINGL ;
MPRINT(EM_DIAGRAM):   drop T_SINGL ;
MPRINT(EM_DIAGRAM):   if missing( SINGL ) then T_SINGL = .;
MPRINT(EM_DIAGRAM):   else T_SINGL = (SINGL - 0) * 12.9244280574099;
MPRINT(EM_DIAGRAM):   *** Standardize SITE ;
MPRINT(EM_DIAGRAM):   drop T_SITE ;
MPRINT(EM_DIAGRAM):   if missing( SITE ) then T_SITE = .;
MPRINT(EM_DIAGRAM):   else T_SITE = (SITE - 0) * 3.83243294460704;
MPRINT(EM_DIAGRAM):   *** Standardize SITUAT ;
MPRINT(EM_DIAGRAM):   drop T_SITUAT ;
MPRINT(EM_DIAGRAM):   if missing( SITUAT ) then T_SITUAT = .;
MPRINT(EM_DIAGRAM):   else T_SITUAT = (SITUAT - 0) * 3.94847899317356;
MPRINT(EM_DIAGRAM):   *** Standardize SIZE ;
MPRINT(EM_DIAGRAM):   drop T_SIZE ;
MPRINT(EM_DIAGRAM):   if missing( SIZE ) then T_SIZE = .;
MPRINT(EM_DIAGRAM):   else T_SIZE = (SIZE - 0) * 3.6695349880654;
MPRINT(EM_DIAGRAM):   *** Standardize SKEPTIC ;
MPRINT(EM_DIAGRAM):   drop T_SKEPTIC ;
MPRINT(EM_DIAGRAM):   if missing( SKEPTIC ) then T_SKEPTIC = .;
MPRINT(EM_DIAGRAM):   else T_SKEPTIC = (SKEPTIC - 0) * 6.85807127712225;
MPRINT(EM_DIAGRAM):   *** Standardize SKIN ;
MPRINT(EM_DIAGRAM):   drop T_SKIN ;
MPRINT(EM_DIAGRAM):   if missing( SKIN ) then T_SKIN = .;
MPRINT(EM_DIAGRAM):   else T_SKIN = (SKIN - 0) * 2.37245482340149;
MPRINT(EM_DIAGRAM):   *** Standardize SLEEP ;
MPRINT(EM_DIAGRAM):   drop T_SLEEP ;
MPRINT(EM_DIAGRAM):   if missing( SLEEP ) then T_SLEEP = .;
MPRINT(EM_DIAGRAM):   else T_SLEEP = (SLEEP - 0) * 1.17780984062133;
MPRINT(EM_DIAGRAM):   *** Standardize SLOW ;
MPRINT(EM_DIAGRAM):   drop T_SLOW ;
MPRINT(EM_DIAGRAM):   if missing( SLOW ) then T_SLOW = .;
MPRINT(EM_DIAGRAM):   else T_SLOW = (SLOW - 0) * 4.78729317829876;
MPRINT(EM_DIAGRAM):   *** Standardize SMALL ;
MPRINT(EM_DIAGRAM):   drop T_SMALL ;
MPRINT(EM_DIAGRAM):   if missing( SMALL ) then T_SMALL = .;
MPRINT(EM_DIAGRAM):   else T_SMALL = (SMALL - 0) * 6.50981709070174;
MPRINT(EM_DIAGRAM):   *** Standardize SMOKE ;
MPRINT(EM_DIAGRAM):   drop T_SMOKE ;
MPRINT(EM_DIAGRAM):   if missing( SMOKE ) then T_SMOKE = .;
MPRINT(EM_DIAGRAM):   else T_SMOKE = (SMOKE - 0) * 4.51651504004447;
MPRINT(EM_DIAGRAM):   *** Standardize SOCIETI ;
MPRINT(EM_DIAGRAM):   drop T_SOCIETI ;
MPRINT(EM_DIAGRAM):   if missing( SOCIETI ) then T_SOCIETI = .;
MPRINT(EM_DIAGRAM):   else T_SOCIETI = (SOCIETI - 0) * 6.70172878593014;
MPRINT(EM_DIAGRAM):   *** Standardize SOFTWAR ;
MPRINT(EM_DIAGRAM):   drop T_SOFTWAR ;
MPRINT(EM_DIAGRAM):   if missing( SOFTWAR ) then T_SOFTWAR = .;
MPRINT(EM_DIAGRAM):   else T_SOFTWAR = (SOFTWAR - 0) * 4.29749579343883;
MPRINT(EM_DIAGRAM):   *** Standardize SOLARI ;
MPRINT(EM_DIAGRAM):   drop T_SOLARI ;
MPRINT(EM_DIAGRAM):   if missing( SOLARI ) then T_SOLARI = .;
MPRINT(EM_DIAGRAM):   else T_SOLARI = (SOLARI - 0) * 2.01915056694161;
MPRINT(EM_DIAGRAM):   *** Standardize SOLDIER ;
MPRINT(EM_DIAGRAM):   drop T_SOLDIER ;
MPRINT(EM_DIAGRAM):   if missing( SOLDIER ) then T_SOLDIER = .;
MPRINT(EM_DIAGRAM):   else T_SOLDIER = (SOLDIER - 0) * 5.62841858966247;
MPRINT(EM_DIAGRAM):   *** Standardize SOLUT ;
MPRINT(EM_DIAGRAM):   drop T_SOLUT ;
MPRINT(EM_DIAGRAM):   if missing( SOLUT ) then T_SOLUT = .;
MPRINT(EM_DIAGRAM):   else T_SOLUT = (SOLUT - 0) * 8.76174318153971;
MPRINT(EM_DIAGRAM):   *** Standardize SORT ;
MPRINT(EM_DIAGRAM):   drop T_SORT ;
MPRINT(EM_DIAGRAM):   if missing( SORT ) then T_SORT = .;
MPRINT(EM_DIAGRAM):   else T_SORT = (SORT - 0) * 9.97256653844965;
MPRINT(EM_DIAGRAM):   *** Standardize SOUND ;
MPRINT(EM_DIAGRAM):   drop T_SOUND ;
MPRINT(EM_DIAGRAM):   if missing( SOUND ) then T_SOUND = .;
MPRINT(EM_DIAGRAM):   else T_SOUND = (SOUND - 0) * 3.65781122916394;
MPRINT(EM_DIAGRAM):   *** Standardize SOURC ;
MPRINT(EM_DIAGRAM):   drop T_SOURC ;
MPRINT(EM_DIAGRAM):   if missing( SOURC ) then T_SOURC = .;
MPRINT(EM_DIAGRAM):   else T_SOURC = (SOURC - 0) * 2.78630007892985;
MPRINT(EM_DIAGRAM):   *** Standardize SOUTH ;
MPRINT(EM_DIAGRAM):   drop T_SOUTH ;
MPRINT(EM_DIAGRAM):   if missing( SOUTH ) then T_SOUTH = .;
MPRINT(EM_DIAGRAM):   else T_SOUTH = (SOUTH - 0) * 4.86183938893136;
MPRINT(EM_DIAGRAM):   *** Standardize SOVIET ;
MPRINT(EM_DIAGRAM):   drop T_SOVIET ;
MPRINT(EM_DIAGRAM):   if missing( SOVIET ) then T_SOVIET = .;
MPRINT(EM_DIAGRAM):   else T_SOVIET = (SOVIET - 0) * 6.47310314259372;
MPRINT(EM_DIAGRAM):   *** Standardize SPACE ;
MPRINT(EM_DIAGRAM):   drop T_SPACE ;
MPRINT(EM_DIAGRAM):   if missing( SPACE ) then T_SPACE = .;
MPRINT(EM_DIAGRAM):   else T_SPACE = (SPACE - 0) * 6.31898163919863;
MPRINT(EM_DIAGRAM):   *** Standardize SPARC ;
MPRINT(EM_DIAGRAM):   drop T_SPARC ;
MPRINT(EM_DIAGRAM):   if missing( SPARC ) then T_SPARC = .;
MPRINT(EM_DIAGRAM):   else T_SPARC = (SPARC - 0) * 5.83296251757131;
MPRINT(EM_DIAGRAM):   *** Standardize SPEAK ;
MPRINT(EM_DIAGRAM):   drop T_SPEAK ;
MPRINT(EM_DIAGRAM):   if missing( SPEAK ) then T_SPEAK = .;
MPRINT(EM_DIAGRAM):   else T_SPEAK = (SPEAK - 0) * 2.7201609313444;
MPRINT(EM_DIAGRAM):   *** Standardize SPEC ;
MPRINT(EM_DIAGRAM):   drop T_SPEC ;
MPRINT(EM_DIAGRAM):   if missing( SPEC ) then T_SPEC = .;
MPRINT(EM_DIAGRAM):   else T_SPEC = (SPEC - 0) * 3.45242229857291;
MPRINT(EM_DIAGRAM):   *** Standardize SPECIAL ;
MPRINT(EM_DIAGRAM):   drop T_SPECIAL ;
MPRINT(EM_DIAGRAM):   if missing( SPECIAL ) then T_SPECIAL = .;
MPRINT(EM_DIAGRAM):   else T_SPECIAL = (SPECIAL - 0) * 9.60440836177352;
MPRINT(EM_DIAGRAM):   *** Standardize SPECIF ;
MPRINT(EM_DIAGRAM):   drop T_SPECIF ;
MPRINT(EM_DIAGRAM):   if missing( SPECIF ) then T_SPECIF = .;
MPRINT(EM_DIAGRAM):   else T_SPECIF = (SPECIF - 0) * 5.20399019109002;
MPRINT(EM_DIAGRAM):   *** Standardize SPEED ;
MPRINT(EM_DIAGRAM):   drop T_SPEED ;
MPRINT(EM_DIAGRAM):   if missing( SPEED ) then T_SPEED = .;
MPRINT(EM_DIAGRAM):   else T_SPEED = (SPEED - 0) * 4.2105432955338;
MPRINT(EM_DIAGRAM):   *** Standardize SPELL ;
MPRINT(EM_DIAGRAM):   drop T_SPELL ;
MPRINT(EM_DIAGRAM):   if missing( SPELL ) then T_SPELL = .;
MPRINT(EM_DIAGRAM):   else T_SPELL = (SPELL - 0) * 5.6541761967798;
MPRINT(EM_DIAGRAM):   *** Standardize SPOCK ;
MPRINT(EM_DIAGRAM):   drop T_SPOCK ;
MPRINT(EM_DIAGRAM):   if missing( SPOCK ) then T_SPOCK = .;
MPRINT(EM_DIAGRAM):   else T_SPOCK = (SPOCK - 0) * 1.6028544912444;
MPRINT(EM_DIAGRAM):   *** Standardize SPOT ;
MPRINT(EM_DIAGRAM):   drop T_SPOT ;
MPRINT(EM_DIAGRAM):   if missing( SPOT ) then T_SPOT = .;
MPRINT(EM_DIAGRAM):   else T_SPOT = (SPOT - 0) * 3.47424233849575;
MPRINT(EM_DIAGRAM):   *** Standardize STAI ;
MPRINT(EM_DIAGRAM):   drop T_STAI ;
MPRINT(EM_DIAGRAM):   if missing( STAI ) then T_STAI = .;
MPRINT(EM_DIAGRAM):   else T_STAI = (STAI - 0) * 7.84423242554376;
MPRINT(EM_DIAGRAM):   *** Standardize STAND ;
MPRINT(EM_DIAGRAM):   drop T_STAND ;
MPRINT(EM_DIAGRAM):   if missing( STAND ) then T_STAND = .;
MPRINT(EM_DIAGRAM):   else T_STAND = (STAND - 0) * 5.40120860037422;
MPRINT(EM_DIAGRAM):   *** Standardize STANDARD ;
MPRINT(EM_DIAGRAM):   drop T_STANDARD ;
MPRINT(EM_DIAGRAM):   if missing( STANDARD ) then T_STANDARD = .;
MPRINT(EM_DIAGRAM):   else T_STANDARD = (STANDARD - 0) * 4.02897864307366;
MPRINT(EM_DIAGRAM):   *** Standardize START ;
MPRINT(EM_DIAGRAM):   drop T_START ;
MPRINT(EM_DIAGRAM):   if missing( START ) then T_START = .;
MPRINT(EM_DIAGRAM):   else T_START = (START - 0) * 7.53680562133528;
MPRINT(EM_DIAGRAM):   *** Standardize STATE ;
MPRINT(EM_DIAGRAM):   drop T_STATE ;
MPRINT(EM_DIAGRAM):   if missing( STATE ) then T_STATE = .;
MPRINT(EM_DIAGRAM):   else T_STATE = (STATE - 0) * 5.92066543507595;
MPRINT(EM_DIAGRAM):   *** Standardize STATEMENT ;
MPRINT(EM_DIAGRAM):   drop T_STATEMENT ;
MPRINT(EM_DIAGRAM):   if missing( STATEMENT ) then T_STATEMENT = .;
MPRINT(EM_DIAGRAM):   else T_STATEMENT = (STATEMENT - 0) * 3.71905879564323;
MPRINT(EM_DIAGRAM):   *** Standardize STATIC ;
MPRINT(EM_DIAGRAM):   drop T_STATIC ;
MPRINT(EM_DIAGRAM):   if missing( STATIC ) then T_STATIC = .;
MPRINT(EM_DIAGRAM):   else T_STATIC = (STATIC - 0) * 5.01031611440981;
MPRINT(EM_DIAGRAM):   *** Standardize STATU ;
MPRINT(EM_DIAGRAM):   drop T_STATU ;
MPRINT(EM_DIAGRAM):   if missing( STATU ) then T_STATU = .;
MPRINT(EM_DIAGRAM):   else T_STATU = (STATU - 0) * 1.81937055979855;
MPRINT(EM_DIAGRAM):   *** Standardize STEIN ;
MPRINT(EM_DIAGRAM):   drop T_STEIN ;
MPRINT(EM_DIAGRAM):   if missing( STEIN ) then T_STEIN = .;
MPRINT(EM_DIAGRAM):   else T_STEIN = (STEIN - 0) * 2.25832190773615;
MPRINT(EM_DIAGRAM):   *** Standardize STEPHEN ;
MPRINT(EM_DIAGRAM):   drop T_STEPHEN ;
MPRINT(EM_DIAGRAM):   if missing( STEPHEN ) then T_STEPHEN = .;
MPRINT(EM_DIAGRAM):   else T_STEPHEN = (STEPHEN - 0) * 3.71015221318154;
MPRINT(EM_DIAGRAM):   *** Standardize STEVE ;
MPRINT(EM_DIAGRAM):   drop T_STEVE ;
MPRINT(EM_DIAGRAM):   if missing( STEVE ) then T_STEVE = .;
MPRINT(EM_DIAGRAM):   else T_STEVE = (STEVE - 0) * 3.48935132106124;
MPRINT(EM_DIAGRAM):   *** Standardize STEVEN ;
MPRINT(EM_DIAGRAM):   drop T_STEVEN ;
MPRINT(EM_DIAGRAM):   if missing( STEVEN ) then T_STEVEN = .;
MPRINT(EM_DIAGRAM):   else T_STEVEN = (STEVEN - 0) * 3.52637414066315;
MPRINT(EM_DIAGRAM):   *** Standardize STONE ;
MPRINT(EM_DIAGRAM):   drop T_STONE ;
MPRINT(EM_DIAGRAM):   if missing( STONE ) then T_STONE = .;
MPRINT(EM_DIAGRAM):   else T_STONE = (STONE - 0) * 2.63912542714844;
MPRINT(EM_DIAGRAM):   *** Standardize STOP ;
MPRINT(EM_DIAGRAM):   drop T_STOP ;
MPRINT(EM_DIAGRAM):   if missing( STOP ) then T_STOP = .;
MPRINT(EM_DIAGRAM):   else T_STOP = (STOP - 0) * 7.48945510569096;
MPRINT(EM_DIAGRAM):   *** Standardize STORE ;
MPRINT(EM_DIAGRAM):   drop T_STORE ;
MPRINT(EM_DIAGRAM):   if missing( STORE ) then T_STORE = .;
MPRINT(EM_DIAGRAM):   else T_STORE = (STORE - 0) * 3.33877514319707;
MPRINT(EM_DIAGRAM):   *** Standardize STORI ;
MPRINT(EM_DIAGRAM):   drop T_STORI ;
MPRINT(EM_DIAGRAM):   if missing( STORI ) then T_STORI = .;
MPRINT(EM_DIAGRAM):   else T_STORI = (STORI - 0) * 3.61988800632888;
MPRINT(EM_DIAGRAM):   *** Standardize STRING ;
MPRINT(EM_DIAGRAM):   drop T_STRING ;
MPRINT(EM_DIAGRAM):   if missing( STRING ) then T_STRING = .;
MPRINT(EM_DIAGRAM):   else T_STRING = (STRING - 0) * 2.36961144112787;
MPRINT(EM_DIAGRAM):   *** Standardize STRIP ;
MPRINT(EM_DIAGRAM):   drop T_STRIP ;
MPRINT(EM_DIAGRAM):   if missing( STRIP ) then T_STRIP = .;
MPRINT(EM_DIAGRAM):   else T_STRIP = (STRIP - 0) * 3.86546518640416;
MPRINT(EM_DIAGRAM):   *** Standardize STUDENT ;
MPRINT(EM_DIAGRAM):   drop T_STUDENT ;
MPRINT(EM_DIAGRAM):   if missing( STUDENT ) then T_STUDENT = .;
MPRINT(EM_DIAGRAM):   else T_STUDENT = (STUDENT - 0) * 8.56224830548594;
MPRINT(EM_DIAGRAM):   *** Standardize STUDI ;
MPRINT(EM_DIAGRAM):   drop T_STUDI ;
MPRINT(EM_DIAGRAM):   if missing( STUDI ) then T_STUDI = .;
MPRINT(EM_DIAGRAM):   else T_STUDI = (STUDI - 0) * 5.33160690355022;
MPRINT(EM_DIAGRAM):   *** Standardize STUFF ;
MPRINT(EM_DIAGRAM):   drop T_STUFF ;
MPRINT(EM_DIAGRAM):   if missing( STUFF ) then T_STUFF = .;
MPRINT(EM_DIAGRAM):   else T_STUFF = (STUFF - 0) * 9.96957520303211;
MPRINT(EM_DIAGRAM):   *** Standardize STUPID ;
MPRINT(EM_DIAGRAM):   drop T_STUPID ;
MPRINT(EM_DIAGRAM):   if missing( STUPID ) then T_STUPID = .;
MPRINT(EM_DIAGRAM):   else T_STUPID = (STUPID - 0) * 3.15952136368446;
MPRINT(EM_DIAGRAM):   *** Standardize STYLE ;
MPRINT(EM_DIAGRAM):   drop T_STYLE ;
MPRINT(EM_DIAGRAM):   if missing( STYLE ) then T_STYLE = .;
MPRINT(EM_DIAGRAM):   else T_STYLE = (STYLE - 0) * 2.5795010963403;
MPRINT(EM_DIAGRAM):   *** Standardize SUBSCRIB ;
MPRINT(EM_DIAGRAM):   drop T_SUBSCRIB ;
MPRINT(EM_DIAGRAM):   if missing( SUBSCRIB ) then T_SUBSCRIB = .;
MPRINT(EM_DIAGRAM):   else T_SUBSCRIB = (SUBSCRIB - 0) * 0.71855697064332;
MPRINT(EM_DIAGRAM):   *** Standardize SUBSCRIV ;
MPRINT(EM_DIAGRAM):   drop T_SUBSCRIV ;
MPRINT(EM_DIAGRAM):   if missing( SUBSCRIV ) then T_SUBSCRIV = .;
MPRINT(EM_DIAGRAM):   else T_SUBSCRIV = (SUBSCRIV - 0) * 0.52869505982916;
MPRINT(EM_DIAGRAM):   *** Standardize SUFFER ;
MPRINT(EM_DIAGRAM):   drop T_SUFFER ;
MPRINT(EM_DIAGRAM):   if missing( SUFFER ) then T_SUFFER = .;
MPRINT(EM_DIAGRAM):   else T_SUFFER = (SUFFER - 0) * 2.41551817034929;
MPRINT(EM_DIAGRAM):   *** Standardize SUGGEST ;
MPRINT(EM_DIAGRAM):   drop T_SUGGEST ;
MPRINT(EM_DIAGRAM):   if missing( SUGGEST ) then T_SUGGEST = .;
MPRINT(EM_DIAGRAM):   else T_SUGGEST = (SUGGEST - 0) * 7.92691956749453;
MPRINT(EM_DIAGRAM):   *** Standardize SUIT ;
MPRINT(EM_DIAGRAM):   drop T_SUIT ;
MPRINT(EM_DIAGRAM):   if missing( SUIT ) then T_SUIT = .;
MPRINT(EM_DIAGRAM):   else T_SUIT = (SUIT - 0) * 4.01372171169398;
MPRINT(EM_DIAGRAM):   *** Standardize SUMMARI ;
MPRINT(EM_DIAGRAM):   drop T_SUMMARI ;
MPRINT(EM_DIAGRAM):   if missing( SUMMARI ) then T_SUMMARI = .;
MPRINT(EM_DIAGRAM):   else T_SUMMARI = (SUMMARI - 0) * 7.00997806865313;
MPRINT(EM_DIAGRAM):   *** Standardize SUN ;
MPRINT(EM_DIAGRAM):   drop T_SUN ;
MPRINT(EM_DIAGRAM):   if missing( SUN ) then T_SUN = .;
MPRINT(EM_DIAGRAM):   else T_SUN = (SUN - 0) * 4.80667325525575;
MPRINT(EM_DIAGRAM):   *** Standardize SUNO ;
MPRINT(EM_DIAGRAM):   drop T_SUNO ;
MPRINT(EM_DIAGRAM):   if missing( SUNO ) then T_SUNO = .;
MPRINT(EM_DIAGRAM):   else T_SUNO = (SUNO - 0) * 4.48052816105898;
MPRINT(EM_DIAGRAM):   *** Standardize SUPERSTIT ;
MPRINT(EM_DIAGRAM):   drop T_SUPERSTIT ;
MPRINT(EM_DIAGRAM):   if missing( SUPERSTIT ) then T_SUPERSTIT = .;
MPRINT(EM_DIAGRAM):   else T_SUPERSTIT = (SUPERSTIT - 0) * 5.64755116414739;
MPRINT(EM_DIAGRAM):   *** Standardize SUPPLI ;
MPRINT(EM_DIAGRAM):   drop T_SUPPLI ;
MPRINT(EM_DIAGRAM):   if missing( SUPPLI ) then T_SUPPLI = .;
MPRINT(EM_DIAGRAM):   else T_SUPPLI = (SUPPLI - 0) * 2.27690988633473;
MPRINT(EM_DIAGRAM):   *** Standardize SUPPORT ;
MPRINT(EM_DIAGRAM):   drop T_SUPPORT ;
MPRINT(EM_DIAGRAM):   if missing( SUPPORT ) then T_SUPPORT = .;
MPRINT(EM_DIAGRAM):   else T_SUPPORT = (SUPPORT - 0) * 3.37328146905376;
MPRINT(EM_DIAGRAM):   *** Standardize SUPPOS ;
MPRINT(EM_DIAGRAM):   drop T_SUPPOS ;
MPRINT(EM_DIAGRAM):   if missing( SUPPOS ) then T_SUPPOS = .;
MPRINT(EM_DIAGRAM):   else T_SUPPOS = (SUPPOS - 0) * 5.35399313404024;
MPRINT(EM_DIAGRAM):   *** Standardize SURGERI ;
MPRINT(EM_DIAGRAM):   drop T_SURGERI ;
MPRINT(EM_DIAGRAM):   if missing( SURGERI ) then T_SURGERI = .;
MPRINT(EM_DIAGRAM):   else T_SURGERI = (SURGERI - 0) * 2.50258809982546;
MPRINT(EM_DIAGRAM):   *** Standardize SURPRIS ;
MPRINT(EM_DIAGRAM):   drop T_SURPRIS ;
MPRINT(EM_DIAGRAM):   if missing( SURPRIS ) then T_SURPRIS = .;
MPRINT(EM_DIAGRAM):   else T_SURPRIS = (SURPRIS - 0) * 6.74468654619342;
MPRINT(EM_DIAGRAM):   *** Standardize SURREND ;
MPRINT(EM_DIAGRAM):   drop T_SURREND ;
MPRINT(EM_DIAGRAM):   if missing( SURREND ) then T_SURREND = .;
MPRINT(EM_DIAGRAM):   else T_SURREND = (SURREND - 0) * 9.03837495132943;
MPRINT(EM_DIAGRAM):   *** Standardize SUSPECT ;
MPRINT(EM_DIAGRAM):   drop T_SUSPECT ;
MPRINT(EM_DIAGRAM):   if missing( SUSPECT ) then T_SUSPECT = .;
MPRINT(EM_DIAGRAM):   else T_SUSPECT = (SUSPECT - 0) * 7.24733229630158;
MPRINT(EM_DIAGRAM):   *** Standardize SWITCH ;
MPRINT(EM_DIAGRAM):   drop T_SWITCH ;
MPRINT(EM_DIAGRAM):   if missing( SWITCH ) then T_SWITCH = .;
MPRINT(EM_DIAGRAM):   else T_SWITCH = (SWITCH - 0) * 2.88035001519678;
MPRINT(EM_DIAGRAM):   *** Standardize SYMBOL ;
MPRINT(EM_DIAGRAM):   drop T_SYMBOL ;
MPRINT(EM_DIAGRAM):   if missing( SYMBOL ) then T_SYMBOL = .;
MPRINT(EM_DIAGRAM):   else T_SYMBOL = (SYMBOL - 0) * 1.87045227325236;
MPRINT(EM_DIAGRAM):   *** Standardize SYMPTOM ;
MPRINT(EM_DIAGRAM):   drop T_SYMPTOM ;
MPRINT(EM_DIAGRAM):   if missing( SYMPTOM ) then T_SYMPTOM = .;
MPRINT(EM_DIAGRAM):   else T_SYMPTOM = (SYMPTOM - 0) * 7.4664515052241;
MPRINT(EM_DIAGRAM):   *** Standardize SYNDROM ;
MPRINT(EM_DIAGRAM):   drop T_SYNDROM ;
MPRINT(EM_DIAGRAM):   if missing( SYNDROM ) then T_SYNDROM = .;
MPRINT(EM_DIAGRAM):   else T_SYNDROM = (SYNDROM - 0) * 3.23140196729826;
MPRINT(EM_DIAGRAM):   *** Standardize SYRIA ;
MPRINT(EM_DIAGRAM):   drop T_SYRIA ;
MPRINT(EM_DIAGRAM):   if missing( SYRIA ) then T_SYRIA = .;
MPRINT(EM_DIAGRAM):   else T_SYRIA = (SYRIA - 0) * 6.49628754523637;
MPRINT(EM_DIAGRAM):   *** Standardize SYSTEM ;
MPRINT(EM_DIAGRAM):   drop T_SYSTEM ;
MPRINT(EM_DIAGRAM):   if missing( SYSTEM ) then T_SYSTEM = .;
MPRINT(EM_DIAGRAM):   else T_SYSTEM = (SYSTEM - 0) * 6.55169316226039;
MPRINT(EM_DIAGRAM):   *** Standardize TABL ;
MPRINT(EM_DIAGRAM):   drop T_TABL ;
MPRINT(EM_DIAGRAM):   if missing( TABL ) then T_TABL = .;
MPRINT(EM_DIAGRAM):   else T_TABL = (TABL - 0) * 2.96419316875994;
MPRINT(EM_DIAGRAM):   *** Standardize TAKE ;
MPRINT(EM_DIAGRAM):   drop T_TAKE ;
MPRINT(EM_DIAGRAM):   if missing( TAKE ) then T_TAKE = .;
MPRINT(EM_DIAGRAM):   else T_TAKE = (TAKE - 0) * 6.23784191930933;
MPRINT(EM_DIAGRAM):   *** Standardize TALK ;
MPRINT(EM_DIAGRAM):   drop T_TALK ;
MPRINT(EM_DIAGRAM):   if missing( TALK ) then T_TALK = .;
MPRINT(EM_DIAGRAM):   else T_TALK = (TALK - 0) * 3.35400694955132;
MPRINT(EM_DIAGRAM):   *** Standardize TAPE ;
MPRINT(EM_DIAGRAM):   drop T_TAPE ;
MPRINT(EM_DIAGRAM):   if missing( TAPE ) then T_TAPE = .;
MPRINT(EM_DIAGRAM):   else T_TAPE = (TAPE - 0) * 2.33349719046157;
MPRINT(EM_DIAGRAM):   *** Standardize TARGET ;
MPRINT(EM_DIAGRAM):   drop T_TARGET ;
MPRINT(EM_DIAGRAM):   if missing( TARGET ) then T_TARGET = .;
MPRINT(EM_DIAGRAM):   else T_TARGET = (TARGET - 0) * 6.49612921259778;
MPRINT(EM_DIAGRAM):   *** Standardize TAST ;
MPRINT(EM_DIAGRAM):   drop T_TAST ;
MPRINT(EM_DIAGRAM):   if missing( TAST ) then T_TAST = .;
MPRINT(EM_DIAGRAM):   else T_TAST = (TAST - 0) * 3.14376696116474;
MPRINT(EM_DIAGRAM):   *** Standardize TCP ;
MPRINT(EM_DIAGRAM):   drop T_TCP ;
MPRINT(EM_DIAGRAM):   if missing( TCP ) then T_TCP = .;
MPRINT(EM_DIAGRAM):   else T_TCP = (TCP - 0) * 1.57629893116987;
MPRINT(EM_DIAGRAM):   *** Standardize TECHNIC ;
MPRINT(EM_DIAGRAM):   drop T_TECHNIC ;
MPRINT(EM_DIAGRAM):   if missing( TECHNIC ) then T_TECHNIC = .;
MPRINT(EM_DIAGRAM):   else T_TECHNIC = (TECHNIC - 0) * 2.58931672392968;
MPRINT(EM_DIAGRAM):   *** Standardize TECHNOLOG ;
MPRINT(EM_DIAGRAM):   drop T_TECHNOLOG ;
MPRINT(EM_DIAGRAM):   if missing( TECHNOLOG ) then T_TECHNOLOG = .;
MPRINT(EM_DIAGRAM):   else T_TECHNOLOG = (TECHNOLOG - 0) * 3.19896414213013;
MPRINT(EM_DIAGRAM):   *** Standardize TEKTRONIX ;
MPRINT(EM_DIAGRAM):   drop T_TEKTRONIX ;
MPRINT(EM_DIAGRAM):   if missing( TEKTRONIX ) then T_TEKTRONIX = .;
MPRINT(EM_DIAGRAM):   else T_TEKTRONIX = (TEKTRONIX - 0) * 1.30481321612531;
MPRINT(EM_DIAGRAM):   *** Standardize TEL ;
MPRINT(EM_DIAGRAM):   drop T_TEL ;
MPRINT(EM_DIAGRAM):   if missing( TEL ) then T_TEL = .;
MPRINT(EM_DIAGRAM):   else T_TEL = (TEL - 0) * 6.55913881176141;
MPRINT(EM_DIAGRAM):   *** Standardize TELEPHON ;
MPRINT(EM_DIAGRAM):   drop T_TELEPHON ;
MPRINT(EM_DIAGRAM):   if missing( TELEPHON ) then T_TELEPHON = .;
MPRINT(EM_DIAGRAM):   else T_TELEPHON = (TELEPHON - 0) * 2.36450552237681;
MPRINT(EM_DIAGRAM):   *** Standardize TELL ;
MPRINT(EM_DIAGRAM):   drop T_TELL ;
MPRINT(EM_DIAGRAM):   if missing( TELL ) then T_TELL = .;
MPRINT(EM_DIAGRAM):   else T_TELL = (TELL - 0) * 6.99694371197393;
MPRINT(EM_DIAGRAM):   *** Standardize TEMPERATUR ;
MPRINT(EM_DIAGRAM):   drop T_TEMPERATUR ;
MPRINT(EM_DIAGRAM):   if missing( TEMPERATUR ) then T_TEMPERATUR = .;
MPRINT(EM_DIAGRAM):   else T_TEMPERATUR = (TEMPERATUR - 0) * 5.39202310095038;
MPRINT(EM_DIAGRAM):   *** Standardize TERM ;
MPRINT(EM_DIAGRAM):   drop T_TERM ;
MPRINT(EM_DIAGRAM):   if missing( TERM ) then T_TERM = .;
MPRINT(EM_DIAGRAM):   else T_TERM = (TERM - 0) * 4.15398966793004;
MPRINT(EM_DIAGRAM):   *** Standardize TERMIN ;
MPRINT(EM_DIAGRAM):   drop T_TERMIN ;
MPRINT(EM_DIAGRAM):   if missing( TERMIN ) then T_TERMIN = .;
MPRINT(EM_DIAGRAM):   else T_TERMIN = (TERMIN - 0) * 3.20544894695733;
MPRINT(EM_DIAGRAM):   *** Standardize TERRITORI ;
MPRINT(EM_DIAGRAM):   drop T_TERRITORI ;
MPRINT(EM_DIAGRAM):   if missing( TERRITORI ) then T_TERRITORI = .;
MPRINT(EM_DIAGRAM):   else T_TERRITORI = (TERRITORI - 0) * 6.45048859910456;
MPRINT(EM_DIAGRAM):   *** Standardize TERROR ;
MPRINT(EM_DIAGRAM):   drop T_TERROR ;
MPRINT(EM_DIAGRAM):   if missing( TERROR ) then T_TERROR = .;
MPRINT(EM_DIAGRAM):   else T_TERROR = (TERROR - 0) * 2.07614186251329;
MPRINT(EM_DIAGRAM):   *** Standardize TERRORIST ;
MPRINT(EM_DIAGRAM):   drop T_TERRORIST ;
MPRINT(EM_DIAGRAM):   if missing( TERRORIST ) then T_TERRORIST = .;
MPRINT(EM_DIAGRAM):   else T_TERRORIST = (TERRORIST - 0) * 5.187625286251;
MPRINT(EM_DIAGRAM):   *** Standardize TEST ;
MPRINT(EM_DIAGRAM):   drop T_TEST ;
MPRINT(EM_DIAGRAM):   if missing( TEST ) then T_TEST = .;
MPRINT(EM_DIAGRAM):   else T_TEST = (TEST - 0) * 3.44941004862211;
MPRINT(EM_DIAGRAM):   *** Standardize TEXA ;
MPRINT(EM_DIAGRAM):   drop T_TEXA ;
MPRINT(EM_DIAGRAM):   if missing( TEXA ) then T_TEXA = .;
MPRINT(EM_DIAGRAM):   else T_TEXA = (TEXA - 0) * 3.65088133880284;
MPRINT(EM_DIAGRAM):   *** Standardize TEXT ;
MPRINT(EM_DIAGRAM):   drop T_TEXT ;
MPRINT(EM_DIAGRAM):   if missing( TEXT ) then T_TEXT = .;
MPRINT(EM_DIAGRAM):   else T_TEXT = (TEXT - 0) * 3.18179325322068;
MPRINT(EM_DIAGRAM):   *** Standardize THAT ;
MPRINT(EM_DIAGRAM):   drop T_THAT ;
MPRINT(EM_DIAGRAM):   if missing( THAT ) then T_THAT = .;
MPRINT(EM_DIAGRAM):   else T_THAT = (THAT - 0) * 9.43387301812898;
MPRINT(EM_DIAGRAM):   *** Standardize THEE ;
MPRINT(EM_DIAGRAM):   drop T_THEE ;
MPRINT(EM_DIAGRAM):   if missing( THEE ) then T_THEE = .;
MPRINT(EM_DIAGRAM):   else T_THEE = (THEE - 0) * 1.14639922266899;
MPRINT(EM_DIAGRAM):   *** Standardize THEORI ;
MPRINT(EM_DIAGRAM):   drop T_THEORI ;
MPRINT(EM_DIAGRAM):   if missing( THEORI ) then T_THEORI = .;
MPRINT(EM_DIAGRAM):   else T_THEORI = (THEORI - 0) * 4.51918747566471;
MPRINT(EM_DIAGRAM):   *** Standardize THERAPI ;
MPRINT(EM_DIAGRAM):   drop T_THERAPI ;
MPRINT(EM_DIAGRAM):   if missing( THERAPI ) then T_THERAPI = .;
MPRINT(EM_DIAGRAM):   else T_THERAPI = (THERAPI - 0) * 2.79481805122568;
MPRINT(EM_DIAGRAM):   *** Standardize THERE ;
MPRINT(EM_DIAGRAM):   drop T_THERE ;
MPRINT(EM_DIAGRAM):   if missing( THERE ) then T_THERE = .;
MPRINT(EM_DIAGRAM):   else T_THERE = (THERE - 0) * 4.80220418088676;
MPRINT(EM_DIAGRAM):   *** Standardize THEY ;
MPRINT(EM_DIAGRAM):   drop T_THEY ;
MPRINT(EM_DIAGRAM):   if missing( THEY ) then T_THEY = .;
MPRINT(EM_DIAGRAM):   else T_THEY = (THEY - 0) * 4.57459366891748;
MPRINT(EM_DIAGRAM):   *** Standardize THINK ;
MPRINT(EM_DIAGRAM):   drop T_THINK ;
MPRINT(EM_DIAGRAM):   if missing( THINK ) then T_THINK = .;
MPRINT(EM_DIAGRAM):   else T_THINK = (THINK - 0) * 4.52792972160679;
MPRINT(EM_DIAGRAM):   *** Standardize THOMA ;
MPRINT(EM_DIAGRAM):   drop T_THOMA ;
MPRINT(EM_DIAGRAM):   if missing( THOMA ) then T_THOMA = .;
MPRINT(EM_DIAGRAM):   else T_THOMA = (THOMA - 0) * 2.77545347579539;
MPRINT(EM_DIAGRAM):   *** Standardize THOUGHT ;
MPRINT(EM_DIAGRAM):   drop T_THOUGHT ;
MPRINT(EM_DIAGRAM):   if missing( THOUGHT ) then T_THOUGHT = .;
MPRINT(EM_DIAGRAM):   else T_THOUGHT = (THOUGHT - 0) * 8.36821289414676;
MPRINT(EM_DIAGRAM):   *** Standardize THREAD ;
MPRINT(EM_DIAGRAM):   drop T_THREAD ;
MPRINT(EM_DIAGRAM):   if missing( THREAD ) then T_THREAD = .;
MPRINT(EM_DIAGRAM):   else T_THREAD = (THREAD - 0) * 1.85292924719773;
MPRINT(EM_DIAGRAM):   *** Standardize THROW ;
MPRINT(EM_DIAGRAM):   drop T_THROW ;
MPRINT(EM_DIAGRAM):   if missing( THROW ) then T_THROW = .;
MPRINT(EM_DIAGRAM):   else T_THROW = (THROW - 0) * 6.49477848708899;
MPRINT(EM_DIAGRAM):   *** Standardize THU ;
MPRINT(EM_DIAGRAM):   drop T_THU ;
MPRINT(EM_DIAGRAM):   if missing( THU ) then T_THU = .;
MPRINT(EM_DIAGRAM):   else T_THU = (THU - 0) * 5.15275447711372;
MPRINT(EM_DIAGRAM):   *** Standardize TIM ;
MPRINT(EM_DIAGRAM):   drop T_TIM ;
MPRINT(EM_DIAGRAM):   if missing( TIM ) then T_TIM = .;
MPRINT(EM_DIAGRAM):   else T_TIM = (TIM - 0) * 2.52555441567483;
MPRINT(EM_DIAGRAM):   *** Standardize TIME ;
MPRINT(EM_DIAGRAM):   drop T_TIME ;
MPRINT(EM_DIAGRAM):   if missing( TIME ) then T_TIME = .;
MPRINT(EM_DIAGRAM):   else T_TIME = (TIME - 0) * 6.00969282466044;
MPRINT(EM_DIAGRAM):   *** Standardize TIMER ;
MPRINT(EM_DIAGRAM):   drop T_TIMER ;
MPRINT(EM_DIAGRAM):   if missing( TIMER ) then T_TIMER = .;
MPRINT(EM_DIAGRAM):   else T_TIMER = (TIMER - 0) * 1.51485659648586;
MPRINT(EM_DIAGRAM):   *** Standardize TITL ;
MPRINT(EM_DIAGRAM):   drop T_TITL ;
MPRINT(EM_DIAGRAM):   if missing( TITL ) then T_TITL = .;
MPRINT(EM_DIAGRAM):   else T_TITL = (TITL - 0) * 3.01306399653486;
MPRINT(EM_DIAGRAM):   *** Standardize TODAI ;
MPRINT(EM_DIAGRAM):   drop T_TODAI ;
MPRINT(EM_DIAGRAM):   if missing( TODAI ) then T_TODAI = .;
MPRINT(EM_DIAGRAM):   else T_TODAI = (TODAI - 0) * 12.3426832709514;
MPRINT(EM_DIAGRAM):   *** Standardize TOLD ;
MPRINT(EM_DIAGRAM):   drop T_TOLD ;
MPRINT(EM_DIAGRAM):   if missing( TOLD ) then T_TOLD = .;
MPRINT(EM_DIAGRAM):   else T_TOLD = (TOLD - 0) * 3.43405731155405;
MPRINT(EM_DIAGRAM):   *** Standardize TOM ;
MPRINT(EM_DIAGRAM):   drop T_TOM ;
MPRINT(EM_DIAGRAM):   if missing( TOM ) then T_TOM = .;
MPRINT(EM_DIAGRAM):   else T_TOM = (TOM - 0) * 3.84367664943068;
MPRINT(EM_DIAGRAM):   *** Standardize TONIGHT ;
MPRINT(EM_DIAGRAM):   drop T_TONIGHT ;
MPRINT(EM_DIAGRAM):   if missing( TONIGHT ) then T_TONIGHT = .;
MPRINT(EM_DIAGRAM):   else T_TONIGHT = (TONIGHT - 0) * 2.73783866145829;
MPRINT(EM_DIAGRAM):   *** Standardize TOOL ;
MPRINT(EM_DIAGRAM):   drop T_TOOL ;
MPRINT(EM_DIAGRAM):   if missing( TOOL ) then T_TOOL = .;
MPRINT(EM_DIAGRAM):   else T_TOOL = (TOOL - 0) * 3.37070170808457;
MPRINT(EM_DIAGRAM):   *** Standardize TOOLKIT ;
MPRINT(EM_DIAGRAM):   drop T_TOOLKIT ;
MPRINT(EM_DIAGRAM):   if missing( TOOLKIT ) then T_TOOLKIT = .;
MPRINT(EM_DIAGRAM):   else T_TOOLKIT = (TOOLKIT - 0) * 2.7300961089005;
MPRINT(EM_DIAGRAM):   *** Standardize TOPIC ;
MPRINT(EM_DIAGRAM):   drop T_TOPIC ;
MPRINT(EM_DIAGRAM):   if missing( TOPIC ) then T_TOPIC = .;
MPRINT(EM_DIAGRAM):   else T_TOPIC = (TOPIC - 0) * 3.97034115577857;
MPRINT(EM_DIAGRAM):   *** Standardize TORONTO ;
MPRINT(EM_DIAGRAM):   drop T_TORONTO ;
MPRINT(EM_DIAGRAM):   if missing( TORONTO ) then T_TORONTO = .;
MPRINT(EM_DIAGRAM):   else T_TORONTO = (TORONTO - 0) * 3.22023601862314;
MPRINT(EM_DIAGRAM):   *** Standardize TOTAL ;
MPRINT(EM_DIAGRAM):   drop T_TOTAL ;
MPRINT(EM_DIAGRAM):   if missing( TOTAL ) then T_TOTAL = .;
MPRINT(EM_DIAGRAM):   else T_TOTAL = (TOTAL - 0) * 6.76847182184393;
MPRINT(EM_DIAGRAM):   *** Standardize TOWER ;
MPRINT(EM_DIAGRAM):   drop T_TOWER ;
MPRINT(EM_DIAGRAM):   if missing( TOWER ) then T_TOWER = .;
MPRINT(EM_DIAGRAM):   else T_TOWER = (TOWER - 0) * 3.72687424570259;
MPRINT(EM_DIAGRAM):   *** Standardize TRACE ;
MPRINT(EM_DIAGRAM):   drop T_TRACE ;
MPRINT(EM_DIAGRAM):   if missing( TRACE ) then T_TRACE = .;
MPRINT(EM_DIAGRAM):   else T_TRACE = (TRACE - 0) * 3.39703695319584;
MPRINT(EM_DIAGRAM):   *** Standardize TRAFFIC ;
MPRINT(EM_DIAGRAM):   drop T_TRAFFIC ;
MPRINT(EM_DIAGRAM):   if missing( TRAFFIC ) then T_TRAFFIC = .;
MPRINT(EM_DIAGRAM):   else T_TRAFFIC = (TRAFFIC - 0) * 3.2609481300756;
MPRINT(EM_DIAGRAM):   *** Standardize TRAIN ;
MPRINT(EM_DIAGRAM):   drop T_TRAIN ;
MPRINT(EM_DIAGRAM):   if missing( TRAIN ) then T_TRAIN = .;
MPRINT(EM_DIAGRAM):   else T_TRAIN = (TRAIN - 0) * 4.70124685992096;
MPRINT(EM_DIAGRAM):   *** Standardize TRANSFORM ;
MPRINT(EM_DIAGRAM):   drop T_TRANSFORM ;
MPRINT(EM_DIAGRAM):   if missing( TRANSFORM ) then T_TRANSFORM = .;
MPRINT(EM_DIAGRAM):   else T_TRANSFORM = (TRANSFORM - 0) * 4.06977527586778;
MPRINT(EM_DIAGRAM):   *** Standardize TRANSLAT ;
MPRINT(EM_DIAGRAM):   drop T_TRANSLAT ;
MPRINT(EM_DIAGRAM):   if missing( TRANSLAT ) then T_TRANSLAT = .;
MPRINT(EM_DIAGRAM):   else T_TRANSLAT = (TRANSLAT - 0) * 3.0368168925286;
MPRINT(EM_DIAGRAM):   *** Standardize TRANSMIT ;
MPRINT(EM_DIAGRAM):   drop T_TRANSMIT ;
MPRINT(EM_DIAGRAM):   if missing( TRANSMIT ) then T_TRANSMIT = .;
MPRINT(EM_DIAGRAM):   else T_TRANSMIT = (TRANSMIT - 0) * 1.60383274156506;
MPRINT(EM_DIAGRAM):   *** Standardize TREAT ;
MPRINT(EM_DIAGRAM):   drop T_TREAT ;
MPRINT(EM_DIAGRAM):   if missing( TREAT ) then T_TREAT = .;
MPRINT(EM_DIAGRAM):   else T_TREAT = (TREAT - 0) * 4.50373972704178;
MPRINT(EM_DIAGRAM):   *** Standardize TREATMENT ;
MPRINT(EM_DIAGRAM):   drop T_TREATMENT ;
MPRINT(EM_DIAGRAM):   if missing( TREATMENT ) then T_TREATMENT = .;
MPRINT(EM_DIAGRAM):   else T_TREATMENT = (TREATMENT - 0) * 4.28116834159018;
MPRINT(EM_DIAGRAM):   *** Standardize TROOP ;
MPRINT(EM_DIAGRAM):   drop T_TROOP ;
MPRINT(EM_DIAGRAM):   if missing( TROOP ) then T_TROOP = .;
MPRINT(EM_DIAGRAM):   else T_TROOP = (TROOP - 0) * 8.60936144105718;
MPRINT(EM_DIAGRAM):   *** Standardize TROUBL ;
MPRINT(EM_DIAGRAM):   drop T_TROUBL ;
MPRINT(EM_DIAGRAM):   if missing( TROUBL ) then T_TROUBL = .;
MPRINT(EM_DIAGRAM):   else T_TROUBL = (TROUBL - 0) * 4.8795305522727;
MPRINT(EM_DIAGRAM):   *** Standardize TRUE ;
MPRINT(EM_DIAGRAM):   drop T_TRUE ;
MPRINT(EM_DIAGRAM):   if missing( TRUE ) then T_TRUE = .;
MPRINT(EM_DIAGRAM):   else T_TRUE = (TRUE - 0) * 4.99164342356806;
MPRINT(EM_DIAGRAM):   *** Standardize TRUTH ;
MPRINT(EM_DIAGRAM):   drop T_TRUTH ;
MPRINT(EM_DIAGRAM):   if missing( TRUTH ) then T_TRUTH = .;
MPRINT(EM_DIAGRAM):   else T_TRUTH = (TRUTH - 0) * 6.77712576704542;
MPRINT(EM_DIAGRAM):   *** Standardize TUBE ;
MPRINT(EM_DIAGRAM):   drop T_TUBE ;
MPRINT(EM_DIAGRAM):   if missing( TUBE ) then T_TUBE = .;
MPRINT(EM_DIAGRAM):   else T_TUBE = (TUBE - 0) * 2.59118164936694;
MPRINT(EM_DIAGRAM):   *** Standardize TUE ;
MPRINT(EM_DIAGRAM):   drop T_TUE ;
MPRINT(EM_DIAGRAM):   if missing( TUE ) then T_TUE = .;
MPRINT(EM_DIAGRAM):   else T_TUE = (TUE - 0) * 6.10720937566147;
MPRINT(EM_DIAGRAM):   *** Standardize TURK ;
MPRINT(EM_DIAGRAM):   drop T_TURK ;
MPRINT(EM_DIAGRAM):   if missing( TURK ) then T_TURK = .;
MPRINT(EM_DIAGRAM):   else T_TURK = (TURK - 0) * 7.33842469522119;
MPRINT(EM_DIAGRAM):   *** Standardize TURKEI ;
MPRINT(EM_DIAGRAM):   drop T_TURKEI ;
MPRINT(EM_DIAGRAM):   if missing( TURKEI ) then T_TURKEI = .;
MPRINT(EM_DIAGRAM):   else T_TURKEI = (TURKEI - 0) * 3.97661018821993;
MPRINT(EM_DIAGRAM):   *** Standardize TURKISH ;
MPRINT(EM_DIAGRAM):   drop T_TURKISH ;
MPRINT(EM_DIAGRAM):   if missing( TURKISH ) then T_TURKISH = .;
MPRINT(EM_DIAGRAM):   else T_TURKISH = (TURKISH - 0) * 2.72926345909578;
MPRINT(EM_DIAGRAM):   *** Standardize TURN ;
MPRINT(EM_DIAGRAM):   drop T_TURN ;
MPRINT(EM_DIAGRAM):   if missing( TURN ) then T_TURN = .;
MPRINT(EM_DIAGRAM):   else T_TURN = (TURN - 0) * 3.64474339347173;
MPRINT(EM_DIAGRAM):   *** Standardize TYPE ;
MPRINT(EM_DIAGRAM):   drop T_TYPE ;
MPRINT(EM_DIAGRAM):   if missing( TYPE ) then T_TYPE = .;
MPRINT(EM_DIAGRAM):   else T_TYPE = (TYPE - 0) * 3.10963939675502;
MPRINT(EM_DIAGRAM):   *** Standardize TYPIC ;
MPRINT(EM_DIAGRAM):   drop T_TYPIC ;
MPRINT(EM_DIAGRAM):   if missing( TYPIC ) then T_TYPIC = .;
MPRINT(EM_DIAGRAM):   else T_TYPIC = (TYPIC - 0) * 9.29048751938108;
MPRINT(EM_DIAGRAM):   *** Standardize UNDEFIN ;
MPRINT(EM_DIAGRAM):   drop T_UNDEFIN ;
MPRINT(EM_DIAGRAM):   if missing( UNDEFIN ) then T_UNDEFIN = .;
MPRINT(EM_DIAGRAM):   else T_UNDEFIN = (UNDEFIN - 0) * 1.75621979702556;
MPRINT(EM_DIAGRAM):   *** Standardize UNDERSTAND ;
MPRINT(EM_DIAGRAM):   drop T_UNDERSTAND ;
MPRINT(EM_DIAGRAM):   if missing( UNDERSTAND ) then T_UNDERSTAND = .;
MPRINT(EM_DIAGRAM):   else T_UNDERSTAND = (UNDERSTAND - 0) * 3.87108363324295;
MPRINT(EM_DIAGRAM):   *** Standardize UNIT ;
MPRINT(EM_DIAGRAM):   drop T_UNIT ;
MPRINT(EM_DIAGRAM):   if missing( UNIT ) then T_UNIT = .;
MPRINT(EM_DIAGRAM):   else T_UNIT = (UNIT - 0) * 7.0026334975815;
MPRINT(EM_DIAGRAM):   *** Standardize UNIV ;
MPRINT(EM_DIAGRAM):   drop T_UNIV ;
MPRINT(EM_DIAGRAM):   if missing( UNIV ) then T_UNIV = .;
MPRINT(EM_DIAGRAM):   else T_UNIV = (UNIV - 0) * 5.92777154989409;
MPRINT(EM_DIAGRAM):   *** Standardize UNIVERS ;
MPRINT(EM_DIAGRAM):   drop T_UNIVERS ;
MPRINT(EM_DIAGRAM):   if missing( UNIVERS ) then T_UNIVERS = .;
MPRINT(EM_DIAGRAM):   else T_UNIVERS = (UNIVERS - 0) * 5.80931195996725;
MPRINT(EM_DIAGRAM):   *** Standardize UNIX ;
MPRINT(EM_DIAGRAM):   drop T_UNIX ;
MPRINT(EM_DIAGRAM):   if missing( UNIX ) then T_UNIX = .;
MPRINT(EM_DIAGRAM):   else T_UNIX = (UNIX - 0) * 3.30072892529905;
MPRINT(EM_DIAGRAM):   *** Standardize UNKNOWN ;
MPRINT(EM_DIAGRAM):   drop T_UNKNOWN ;
MPRINT(EM_DIAGRAM):   if missing( UNKNOWN ) then T_UNKNOWN = .;
MPRINT(EM_DIAGRAM):   else T_UNKNOWN = (UNKNOWN - 0) * 0.7066859043728;
MPRINT(EM_DIAGRAM):   *** Standardize UPDAT ;
MPRINT(EM_DIAGRAM):   drop T_UPDAT ;
MPRINT(EM_DIAGRAM):   if missing( UPDAT ) then T_UPDAT = .;
MPRINT(EM_DIAGRAM):   else T_UPDAT = (UPDAT - 0) * 3.05434432694761;
MPRINT(EM_DIAGRAM):   *** Standardize URBANA ;
MPRINT(EM_DIAGRAM):   drop T_URBANA ;
MPRINT(EM_DIAGRAM):   if missing( URBANA ) then T_URBANA = .;
MPRINT(EM_DIAGRAM):   else T_URBANA = (URBANA - 0) * 3.53342952186401;
MPRINT(EM_DIAGRAM):   *** Standardize USA ;
MPRINT(EM_DIAGRAM):   drop T_USA ;
MPRINT(EM_DIAGRAM):   if missing( USA ) then T_USA = .;
MPRINT(EM_DIAGRAM):   else T_USA = (USA - 0) * 6.57604880486877;
MPRINT(EM_DIAGRAM):   *** Standardize USENET ;
MPRINT(EM_DIAGRAM):   drop T_USENET ;
MPRINT(EM_DIAGRAM):   if missing( USENET ) then T_USENET = .;
MPRINT(EM_DIAGRAM):   else T_USENET = (USENET - 0) * 5.99794705751076;
MPRINT(EM_DIAGRAM):   *** Standardize USER ;
MPRINT(EM_DIAGRAM):   drop T_USER ;
MPRINT(EM_DIAGRAM):   if missing( USER ) then T_USER = .;
MPRINT(EM_DIAGRAM):   else T_USER = (USER - 0) * 3.29881440691399;
MPRINT(EM_DIAGRAM):   *** Standardize UTEXA ;
MPRINT(EM_DIAGRAM):   drop T_UTEXA ;
MPRINT(EM_DIAGRAM):   if missing( UTEXA ) then T_UTEXA = .;
MPRINT(EM_DIAGRAM):   else T_UTEXA = (UTEXA - 0) * 1.33446294548045;
MPRINT(EM_DIAGRAM):   *** Standardize UUCP ;
MPRINT(EM_DIAGRAM):   drop T_UUCP ;
MPRINT(EM_DIAGRAM):   if missing( UUCP ) then T_UUCP = .;
MPRINT(EM_DIAGRAM):   else T_UUCP = (UUCP - 0) * 5.1465616359408;
MPRINT(EM_DIAGRAM):   *** Standardize VALU ;
MPRINT(EM_DIAGRAM):   drop T_VALU ;
MPRINT(EM_DIAGRAM):   if missing( VALU ) then T_VALU = .;
MPRINT(EM_DIAGRAM):   else T_VALU = (VALU - 0) * 2.22988882551337;
MPRINT(EM_DIAGRAM):   *** Standardize VANDERBYL ;
MPRINT(EM_DIAGRAM):   drop T_VANDERBYL ;
MPRINT(EM_DIAGRAM):   if missing( VANDERBYL ) then T_VANDERBYL = .;
MPRINT(EM_DIAGRAM):   else T_VANDERBYL = (VANDERBYL - 0) * 2.49469363989193;
MPRINT(EM_DIAGRAM):   *** Standardize VARIABL ;
MPRINT(EM_DIAGRAM):   drop T_VARIABL ;
MPRINT(EM_DIAGRAM):   if missing( VARIABL ) then T_VARIABL = .;
MPRINT(EM_DIAGRAM):   else T_VARIABL = (VARIABL - 0) * 4.46814029974551;
MPRINT(EM_DIAGRAM):   *** Standardize VAX ;
MPRINT(EM_DIAGRAM):   drop T_VAX ;
MPRINT(EM_DIAGRAM):   if missing( VAX ) then T_VAX = .;
MPRINT(EM_DIAGRAM):   else T_VAX = (VAX - 0) * 3.30350513038009;
MPRINT(EM_DIAGRAM):   *** Standardize VERSION ;
MPRINT(EM_DIAGRAM):   drop T_VERSION ;
MPRINT(EM_DIAGRAM):   if missing( VERSION ) then T_VERSION = .;
MPRINT(EM_DIAGRAM):   else T_VERSION = (VERSION - 0) * 5.44024908108807;
MPRINT(EM_DIAGRAM):   *** Standardize VIDEO ;
MPRINT(EM_DIAGRAM):   drop T_VIDEO ;
MPRINT(EM_DIAGRAM):   if missing( VIDEO ) then T_VIDEO = .;
MPRINT(EM_DIAGRAM):   else T_VIDEO = (VIDEO - 0) * 2.41593859776061;
MPRINT(EM_DIAGRAM):   *** Standardize VIEW ;
MPRINT(EM_DIAGRAM):   drop T_VIEW ;
MPRINT(EM_DIAGRAM):   if missing( VIEW ) then T_VIEW = .;
MPRINT(EM_DIAGRAM):   else T_VIEW = (VIEW - 0) * 4.78896322881294;
MPRINT(EM_DIAGRAM):   *** Standardize VILLAG ;
MPRINT(EM_DIAGRAM):   drop T_VILLAG ;
MPRINT(EM_DIAGRAM):   if missing( VILLAG ) then T_VILLAG = .;
MPRINT(EM_DIAGRAM):   else T_VILLAG = (VILLAG - 0) * 5.58872683096197;
MPRINT(EM_DIAGRAM):   *** Standardize VIRGINIA ;
MPRINT(EM_DIAGRAM):   drop T_VIRGINIA ;
MPRINT(EM_DIAGRAM):   if missing( VIRGINIA ) then T_VIRGINIA = .;
MPRINT(EM_DIAGRAM):   else T_VIRGINIA = (VIRGINIA - 0) * 1.56848971585599;
MPRINT(EM_DIAGRAM):   *** Standardize VIRTUAL ;
MPRINT(EM_DIAGRAM):   drop T_VIRTUAL ;
MPRINT(EM_DIAGRAM):   if missing( VIRTUAL ) then T_VIRTUAL = .;
MPRINT(EM_DIAGRAM):   else T_VIRTUAL = (VIRTUAL - 0) * 2.94452460155334;
MPRINT(EM_DIAGRAM):   *** Standardize VISUAL ;
MPRINT(EM_DIAGRAM):   drop T_VISUAL ;
MPRINT(EM_DIAGRAM):   if missing( VISUAL ) then T_VISUAL = .;
MPRINT(EM_DIAGRAM):   else T_VISUAL = (VISUAL - 0) * 1.64401061836805;
MPRINT(EM_DIAGRAM):   *** Standardize VOIC ;
MPRINT(EM_DIAGRAM):   drop T_VOIC ;
MPRINT(EM_DIAGRAM):   if missing( VOIC ) then T_VOIC = .;
MPRINT(EM_DIAGRAM):   else T_VOIC = (VOIC - 0) * 4.09189210145109;
MPRINT(EM_DIAGRAM):   *** Standardize VOLT ;
MPRINT(EM_DIAGRAM):   drop T_VOLT ;
MPRINT(EM_DIAGRAM):   if missing( VOLT ) then T_VOLT = .;
MPRINT(EM_DIAGRAM):   else T_VOLT = (VOLT - 0) * 4.29587390230487;
MPRINT(EM_DIAGRAM):   *** Standardize VOLTAG ;
MPRINT(EM_DIAGRAM):   drop T_VOLTAG ;
MPRINT(EM_DIAGRAM):   if missing( VOLTAG ) then T_VOLTAG = .;
MPRINT(EM_DIAGRAM):   else T_VOLTAG = (VOLTAG - 0) * 2.82398405328062;
MPRINT(EM_DIAGRAM):   *** Standardize WAI ;
MPRINT(EM_DIAGRAM):   drop T_WAI ;
MPRINT(EM_DIAGRAM):   if missing( WAI ) then T_WAI = .;
MPRINT(EM_DIAGRAM):   else T_WAI = (WAI - 0) * 8.60140793962066;
MPRINT(EM_DIAGRAM):   *** Standardize WAIT ;
MPRINT(EM_DIAGRAM):   drop T_WAIT ;
MPRINT(EM_DIAGRAM):   if missing( WAIT ) then T_WAIT = .;
MPRINT(EM_DIAGRAM):   else T_WAIT = (WAIT - 0) * 7.76735347379873;
MPRINT(EM_DIAGRAM):   *** Standardize WALL ;
MPRINT(EM_DIAGRAM):   drop T_WALL ;
MPRINT(EM_DIAGRAM):   if missing( WALL ) then T_WALL = .;
MPRINT(EM_DIAGRAM):   else T_WALL = (WALL - 0) * 5.57537268683799;
MPRINT(EM_DIAGRAM):   *** Standardize WANT ;
MPRINT(EM_DIAGRAM):   drop T_WANT ;
MPRINT(EM_DIAGRAM):   if missing( WANT ) then T_WANT = .;
MPRINT(EM_DIAGRAM):   else T_WANT = (WANT - 0) * 3.66370973330842;
MPRINT(EM_DIAGRAM):   *** Standardize WAR ;
MPRINT(EM_DIAGRAM):   drop T_WAR ;
MPRINT(EM_DIAGRAM):   if missing( WAR ) then T_WAR = .;
MPRINT(EM_DIAGRAM):   else T_WAR = (WAR - 0) * 6.5921893596337;
MPRINT(EM_DIAGRAM):   *** Standardize WARN ;
MPRINT(EM_DIAGRAM):   drop T_WARN ;
MPRINT(EM_DIAGRAM):   if missing( WARN ) then T_WARN = .;
MPRINT(EM_DIAGRAM):   else T_WARN = (WARN - 0) * 3.58843252883528;
MPRINT(EM_DIAGRAM):   *** Standardize WASHINGTON ;
MPRINT(EM_DIAGRAM):   drop T_WASHINGTON ;
MPRINT(EM_DIAGRAM):   if missing( WASHINGTON ) then T_WASHINGTON = .;
MPRINT(EM_DIAGRAM):   else T_WASHINGTON = (WASHINGTON - 0) * 3.63580350009622;
MPRINT(EM_DIAGRAM):   *** Standardize WASN ;
MPRINT(EM_DIAGRAM):   drop T_WASN ;
MPRINT(EM_DIAGRAM):   if missing( WASN ) then T_WASN = .;
MPRINT(EM_DIAGRAM):   else T_WASN = (WASN - 0) * 6.84995550937991;
MPRINT(EM_DIAGRAM):   *** Standardize WAST ;
MPRINT(EM_DIAGRAM):   drop T_WAST ;
MPRINT(EM_DIAGRAM):   if missing( WAST ) then T_WAST = .;
MPRINT(EM_DIAGRAM):   else T_WAST = (WAST - 0) * 5.81408481557776;
MPRINT(EM_DIAGRAM):   *** Standardize WATCH ;
MPRINT(EM_DIAGRAM):   drop T_WATCH ;
MPRINT(EM_DIAGRAM):   if missing( WATCH ) then T_WATCH = .;
MPRINT(EM_DIAGRAM):   else T_WATCH = (WATCH - 0) * 4.00514024146194;
MPRINT(EM_DIAGRAM):   *** Standardize WATER ;
MPRINT(EM_DIAGRAM):   drop T_WATER ;
MPRINT(EM_DIAGRAM):   if missing( WATER ) then T_WATER = .;
MPRINT(EM_DIAGRAM):   else T_WATER = (WATER - 0) * 2.41062120349601;
MPRINT(EM_DIAGRAM):   *** Standardize WAVE ;
MPRINT(EM_DIAGRAM):   drop T_WAVE ;
MPRINT(EM_DIAGRAM):   if missing( WAVE ) then T_WAVE = .;
MPRINT(EM_DIAGRAM):   else T_WAVE = (WAVE - 0) * 3.01430598897757;
MPRINT(EM_DIAGRAM):   *** Standardize WAYN ;
MPRINT(EM_DIAGRAM):   drop T_WAYN ;
MPRINT(EM_DIAGRAM):   if missing( WAYN ) then T_WAYN = .;
MPRINT(EM_DIAGRAM):   else T_WAYN = (WAYN - 0) * 2.11614827247839;
MPRINT(EM_DIAGRAM):   *** Standardize WED ;
MPRINT(EM_DIAGRAM):   drop T_WED ;
MPRINT(EM_DIAGRAM):   if missing( WED ) then T_WED = .;
MPRINT(EM_DIAGRAM):   else T_WED = (WED - 0) * 4.00164111577006;
MPRINT(EM_DIAGRAM):   *** Standardize WEEK ;
MPRINT(EM_DIAGRAM):   drop T_WEEK ;
MPRINT(EM_DIAGRAM):   if missing( WEEK ) then T_WEEK = .;
MPRINT(EM_DIAGRAM):   else T_WEEK = (WEEK - 0) * 7.22728935814586;
MPRINT(EM_DIAGRAM):   *** Standardize WEIGHT ;
MPRINT(EM_DIAGRAM):   drop T_WEIGHT ;
MPRINT(EM_DIAGRAM):   if missing( WEIGHT ) then T_WEIGHT = .;
MPRINT(EM_DIAGRAM):   else T_WEIGHT = (WEIGHT - 0) * 2.86359068952869;
MPRINT(EM_DIAGRAM):   *** Standardize WEST ;
MPRINT(EM_DIAGRAM):   drop T_WEST ;
MPRINT(EM_DIAGRAM):   if missing( WEST ) then T_WEST = .;
MPRINT(EM_DIAGRAM):   else T_WEST = (WEST - 0) * 4.533822774318;
MPRINT(EM_DIAGRAM):   *** Standardize WESTERN ;
MPRINT(EM_DIAGRAM):   drop T_WESTERN ;
MPRINT(EM_DIAGRAM):   if missing( WESTERN ) then T_WESTERN = .;
MPRINT(EM_DIAGRAM):   else T_WESTERN = (WESTERN - 0) * 5.59607720118322;
MPRINT(EM_DIAGRAM):   *** Standardize WHAT ;
MPRINT(EM_DIAGRAM):   drop T_WHAT ;
MPRINT(EM_DIAGRAM):   if missing( WHAT ) then T_WHAT = .;
MPRINT(EM_DIAGRAM):   else T_WHAT = (WHAT - 0) * 5.75058521804322;
MPRINT(EM_DIAGRAM):   *** Standardize WHITE ;
MPRINT(EM_DIAGRAM):   drop T_WHITE ;
MPRINT(EM_DIAGRAM):   if missing( WHITE ) then T_WHITE = .;
MPRINT(EM_DIAGRAM):   else T_WHITE = (WHITE - 0) * 5.45370525014434;
MPRINT(EM_DIAGRAM):   *** Standardize WIDE ;
MPRINT(EM_DIAGRAM):   drop T_WIDE ;
MPRINT(EM_DIAGRAM):   if missing( WIDE ) then T_WIDE = .;
MPRINT(EM_DIAGRAM):   else T_WIDE = (WIDE - 0) * 4.38397152600314;
MPRINT(EM_DIAGRAM):   *** Standardize WIDGET ;
MPRINT(EM_DIAGRAM):   drop T_WIDGET ;
MPRINT(EM_DIAGRAM):   if missing( WIDGET ) then T_WIDGET = .;
MPRINT(EM_DIAGRAM):   else T_WIDGET = (WIDGET - 0) * 1.62705336812421;
MPRINT(EM_DIAGRAM):   *** Standardize WIDTH ;
MPRINT(EM_DIAGRAM):   drop T_WIDTH ;
MPRINT(EM_DIAGRAM):   if missing( WIDTH ) then T_WIDTH = .;
MPRINT(EM_DIAGRAM):   else T_WIDTH = (WIDTH - 0) * 2.78045015140324;
MPRINT(EM_DIAGRAM):   *** Standardize WIFE ;
MPRINT(EM_DIAGRAM):   drop T_WIFE ;
MPRINT(EM_DIAGRAM):   if missing( WIFE ) then T_WIFE = .;
MPRINT(EM_DIAGRAM):   else T_WIFE = (WIFE - 0) * 4.45989679772405;
MPRINT(EM_DIAGRAM):   *** Standardize WIN ;
MPRINT(EM_DIAGRAM):   drop T_WIN ;
MPRINT(EM_DIAGRAM):   if missing( WIN ) then T_WIN = .;
MPRINT(EM_DIAGRAM):   else T_WIN = (WIN - 0) * 0.97728693440411;
MPRINT(EM_DIAGRAM):   *** Standardize WINDOW ;
MPRINT(EM_DIAGRAM):   drop T_WINDOW ;
MPRINT(EM_DIAGRAM):   if missing( WINDOW ) then T_WINDOW = .;
MPRINT(EM_DIAGRAM):   else T_WINDOW = (WINDOW - 0) * 2.81462439954458;
MPRINT(EM_DIAGRAM):   *** Standardize WIRE ;
MPRINT(EM_DIAGRAM):   drop T_WIRE ;
MPRINT(EM_DIAGRAM):   if missing( WIRE ) then T_WIRE = .;
MPRINT(EM_DIAGRAM):   else T_WIRE = (WIRE - 0) * 2.45211024512543;
MPRINT(EM_DIAGRAM):   *** Standardize WOMEN ;
MPRINT(EM_DIAGRAM):   drop T_WOMEN ;
MPRINT(EM_DIAGRAM):   if missing( WOMEN ) then T_WOMEN = .;
MPRINT(EM_DIAGRAM):   else T_WOMEN = (WOMEN - 0) * 9.72980640827037;
MPRINT(EM_DIAGRAM):   *** Standardize WON ;
MPRINT(EM_DIAGRAM):   drop T_WON ;
MPRINT(EM_DIAGRAM):   if missing( WON ) then T_WON = .;
MPRINT(EM_DIAGRAM):   else T_WON = (WON - 0) * 6.09752489253073;
MPRINT(EM_DIAGRAM):   *** Standardize WONDER ;
MPRINT(EM_DIAGRAM):   drop T_WONDER ;
MPRINT(EM_DIAGRAM):   if missing( WONDER ) then T_WONDER = .;
MPRINT(EM_DIAGRAM):   else T_WONDER = (WONDER - 0) * 7.46037303280928;
MPRINT(EM_DIAGRAM):   *** Standardize WORD ;
MPRINT(EM_DIAGRAM):   drop T_WORD ;
MPRINT(EM_DIAGRAM):   if missing( WORD ) then T_WORD = .;
MPRINT(EM_DIAGRAM):   else T_WORD = (WORD - 0) * 4.51012483227801;
MPRINT(EM_DIAGRAM):   *** Standardize WORK ;
MPRINT(EM_DIAGRAM):   drop T_WORK ;
MPRINT(EM_DIAGRAM):   if missing( WORK ) then T_WORK = .;
MPRINT(EM_DIAGRAM):   else T_WORK = (WORK - 0) * 6.75133541473952;
MPRINT(EM_DIAGRAM):   *** Standardize WORLD ;
MPRINT(EM_DIAGRAM):   drop T_WORLD ;
MPRINT(EM_DIAGRAM):   if missing( WORLD ) then T_WORLD = .;
MPRINT(EM_DIAGRAM):   else T_WORLD = (WORLD - 0) * 8.3425896333976;
MPRINT(EM_DIAGRAM):   *** Standardize WORTH ;
MPRINT(EM_DIAGRAM):   drop T_WORTH ;
MPRINT(EM_DIAGRAM):   if missing( WORTH ) then T_WORTH = .;
MPRINT(EM_DIAGRAM):   else T_WORTH = (WORTH - 0) * 4.52988487080115;
MPRINT(EM_DIAGRAM):   *** Standardize WOULDN ;
MPRINT(EM_DIAGRAM):   drop T_WOULDN ;
MPRINT(EM_DIAGRAM):   if missing( WOULDN ) then T_WOULDN = .;
MPRINT(EM_DIAGRAM):   else T_WOULDN = (WOULDN - 0) * 10.2942622332383;
MPRINT(EM_DIAGRAM):   *** Standardize WPI ;
MPRINT(EM_DIAGRAM):   drop T_WPI ;
MPRINT(EM_DIAGRAM):   if missing( WPI ) then T_WPI = .;
MPRINT(EM_DIAGRAM):   else T_WPI = (WPI - 0) * 1.19627933986554;
MPRINT(EM_DIAGRAM):   *** Standardize WRITE ;
MPRINT(EM_DIAGRAM):   drop T_WRITE ;
MPRINT(EM_DIAGRAM):   if missing( WRITE ) then T_WRITE = .;
MPRINT(EM_DIAGRAM):   else T_WRITE = (WRITE - 0) * 6.13235809687057;
MPRINT(EM_DIAGRAM):   *** Standardize WRITTEN ;
MPRINT(EM_DIAGRAM):   drop T_WRITTEN ;
MPRINT(EM_DIAGRAM):   if missing( WRITTEN ) then T_WRITTEN = .;
MPRINT(EM_DIAGRAM):   else T_WRITTEN = (WRITTEN - 0) * 8.03539792264399;
MPRINT(EM_DIAGRAM):   *** Standardize WRONG ;
MPRINT(EM_DIAGRAM):   drop T_WRONG ;
MPRINT(EM_DIAGRAM):   if missing( WRONG ) then T_WRONG = .;
MPRINT(EM_DIAGRAM):   else T_WRONG = (WRONG - 0) * 4.69326684347661;
MPRINT(EM_DIAGRAM):   *** Standardize WROTE ;
MPRINT(EM_DIAGRAM):   drop T_WROTE ;
MPRINT(EM_DIAGRAM):   if missing( WROTE ) then T_WROTE = .;
MPRINT(EM_DIAGRAM):   else T_WROTE = (WROTE - 0) * 7.96468241130353;
MPRINT(EM_DIAGRAM):   *** Standardize XLIB ;
MPRINT(EM_DIAGRAM):   drop T_XLIB ;
MPRINT(EM_DIAGRAM):   if missing( XLIB ) then T_XLIB = .;
MPRINT(EM_DIAGRAM):   else T_XLIB = (XLIB - 0) * 1.99512053695088;
MPRINT(EM_DIAGRAM):   *** Standardize XPUTIMAG ;
MPRINT(EM_DIAGRAM):   drop T_XPUTIMAG ;
MPRINT(EM_DIAGRAM):   if missing( XPUTIMAG ) then T_XPUTIMAG = .;
MPRINT(EM_DIAGRAM):   else T_XPUTIMAG = (XPUTIMAG - 0) * 3.19581575843676;
MPRINT(EM_DIAGRAM):   *** Standardize XSERVER ;
MPRINT(EM_DIAGRAM):   drop T_XSERVER ;
MPRINT(EM_DIAGRAM):   if missing( XSERVER ) then T_XSERVER = .;
MPRINT(EM_DIAGRAM):   else T_XSERVER = (XSERVER - 0) * 2.37063794761955;
MPRINT(EM_DIAGRAM):   *** Standardize XTERM ;
MPRINT(EM_DIAGRAM):   drop T_XTERM ;
MPRINT(EM_DIAGRAM):   if missing( XTERM ) then T_XTERM = .;
MPRINT(EM_DIAGRAM):   else T_XTERM = (XTERM - 0) * 1.87682582544599;
MPRINT(EM_DIAGRAM):   *** Standardize XTERMIN ;
MPRINT(EM_DIAGRAM):   drop T_XTERMIN ;
MPRINT(EM_DIAGRAM):   if missing( XTERMIN ) then T_XTERMIN = .;
MPRINT(EM_DIAGRAM):   else T_XTERMIN = (XTERMIN - 0) * 1.63000338748835;
MPRINT(EM_DIAGRAM):   *** Standardize XVIEW ;
MPRINT(EM_DIAGRAM):   drop T_XVIEW ;
MPRINT(EM_DIAGRAM):   if missing( XVIEW ) then T_XVIEW = .;
MPRINT(EM_DIAGRAM):   else T_XVIEW = (XVIEW - 0) * 2.97565814952913;
MPRINT(EM_DIAGRAM):   *** Standardize XWINDOW ;
MPRINT(EM_DIAGRAM):   drop T_XWINDOW ;
MPRINT(EM_DIAGRAM):   if missing( XWINDOW ) then T_XWINDOW = .;
MPRINT(EM_DIAGRAM):   else T_XWINDOW = (XWINDOW - 0) * 2.46143105802671;
MPRINT(EM_DIAGRAM):   *** Standardize YASSIN ;
MPRINT(EM_DIAGRAM):   drop T_YASSIN ;
MPRINT(EM_DIAGRAM):   if missing( YASSIN ) then T_YASSIN = .;
MPRINT(EM_DIAGRAM):   else T_YASSIN = (YASSIN - 0) * 2.64238620267143;
MPRINT(EM_DIAGRAM):   *** Standardize YEAH ;
MPRINT(EM_DIAGRAM):   drop T_YEAH ;
MPRINT(EM_DIAGRAM):   if missing( YEAH ) then T_YEAH = .;
MPRINT(EM_DIAGRAM):   else T_YEAH = (YEAH - 0) * 6.18021307979127;
MPRINT(EM_DIAGRAM):   *** Standardize YEAR ;
MPRINT(EM_DIAGRAM):   drop T_YEAR ;
MPRINT(EM_DIAGRAM):   if missing( YEAR ) then T_YEAR = .;
MPRINT(EM_DIAGRAM):   else T_YEAR = (YEAR - 0) * 8.57780075115767;
MPRINT(EM_DIAGRAM):   *** Standardize YEAST ;
MPRINT(EM_DIAGRAM):   drop T_YEAST ;
MPRINT(EM_DIAGRAM):   if missing( YEAST ) then T_YEAST = .;
MPRINT(EM_DIAGRAM):   else T_YEAST = (YEAST - 0) * 1.93462582225522;
MPRINT(EM_DIAGRAM):   *** Standardize YIGAL ;
MPRINT(EM_DIAGRAM):   drop T_YIGAL ;
MPRINT(EM_DIAGRAM):   if missing( YIGAL ) then T_YIGAL = .;
MPRINT(EM_DIAGRAM):   else T_YIGAL = (YIGAL - 0) * 2.45876275468918;
MPRINT(EM_DIAGRAM):   *** Standardize YORK ;
MPRINT(EM_DIAGRAM):   drop T_YORK ;
MPRINT(EM_DIAGRAM):   if missing( YORK ) then T_YORK = .;
MPRINT(EM_DIAGRAM):   else T_YORK = (YORK - 0) * 6.994354945407;
MPRINT(EM_DIAGRAM):   *** Standardize YOU ;
MPRINT(EM_DIAGRAM):   drop T_YOU ;
MPRINT(EM_DIAGRAM):   if missing( YOU ) then T_YOU = .;
MPRINT(EM_DIAGRAM):   else T_YOU = (YOU - 0) * 5.2943325608246;
MPRINT(EM_DIAGRAM):   *** Standardize YOUNG ;
MPRINT(EM_DIAGRAM):   drop T_YOUNG ;
MPRINT(EM_DIAGRAM):   if missing( YOUNG ) then T_YOUNG = .;
MPRINT(EM_DIAGRAM):   else T_YOUNG = (YOUNG - 0) * 5.30910622198526;
MPRINT(EM_DIAGRAM):   *** Standardize ZIONISM ;
MPRINT(EM_DIAGRAM):   drop T_ZIONISM ;
MPRINT(EM_DIAGRAM):   if missing( ZIONISM ) then T_ZIONISM = .;
MPRINT(EM_DIAGRAM):   else T_ZIONISM = (ZIONISM - 0) * 1.88415522030915;
MPRINT(EM_DIAGRAM):   *** Standardize ZIONIST ;
MPRINT(EM_DIAGRAM):   drop T_ZIONIST ;
MPRINT(EM_DIAGRAM):   if missing( ZIONIST ) then T_ZIONIST = .;
MPRINT(EM_DIAGRAM):   else T_ZIONIST = (ZIONIST - 0) * 5.97403754807864;
MPRINT(EM_DIAGRAM):   *** Standardize ZUMA ;
MPRINT(EM_DIAGRAM):   drop T_ZUMA ;
MPRINT(EM_DIAGRAM):   if missing( ZUMA ) then T_ZUMA = .;
MPRINT(EM_DIAGRAM):   else T_ZUMA = (ZUMA - 0) * 10.2028849877187;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUSvlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Id de segmento' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distancia' ;
MPRINT(EM_DIAGRAM):   array CLUSvads [4] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 4;
MPRINT(EM_DIAGRAM):   CLUSvads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_ABSOLUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ABSOLUT - 0.00395136778115 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ABSOLUT - 0.02168748283444 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ABSOLUT - 0.00432746811012 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ABSOLUT - 0.00490440863679 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00251692048009;
MPRINT(EM_DIAGRAM):   if not missing( T_ACCELER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ACCELER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ACCELER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ACCELER - 0.00252725248895 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ACCELER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00099533943263;
MPRINT(EM_DIAGRAM):   if not missing( T_ACCEPT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ACCEPT - 0.00344537815126 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ACCEPT - 0.02205640912473 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ACCEPT - 0.01075960740133 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ACCEPT - 0.00938150949337 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00407077009827;
MPRINT(EM_DIAGRAM):   if not missing( T_ACCESS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ACCESS - 0.00093586539711 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ACCESS - 0.01209215740411 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ACCESS - 0.00256147540983 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00357448900726;
MPRINT(EM_DIAGRAM):   if not missing( T_ACCOUNT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ACCOUNT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ACCOUNT - 0.01620181935382 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ACCOUNT - 0.00703285175681 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ACCOUNT - 0.01842150701582 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00367053461609;
MPRINT(EM_DIAGRAM):   if not missing( T_ACCUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ACCUR - 0.01030990173847 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ACCUR - 0.01101558275362 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ACCUR - 0.00413578071729 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ACCUR - 0.0009146611731 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023671693661;
MPRINT(EM_DIAGRAM):   if not missing( T_ACID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ACID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ACID - 0.00014513168566 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ACID - 0.00460467698741 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ACID - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00154870449284;
MPRINT(EM_DIAGRAM):   if not missing( T_ACTION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ACTION - 0.00430528375733 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ACTION - 0.03229220449723 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ACTION - 0.00819931046838 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ACTION - 0.01436643394128 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00477451437096;
MPRINT(EM_DIAGRAM):   if not missing( T_ACTIV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ACTIV - 0.01052586690145 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ACTIV - 0.00533145757371 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ACTIV - 0.00733193415664 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ACTIV - 0.00757676358488 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00176810039326;
MPRINT(EM_DIAGRAM):   if not missing( T_ADAM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ADAM - 0.03575742239157 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ADAM - 0.00096919915105 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ADAM - 0.00109674440083 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00263050473814;
MPRINT(EM_DIAGRAM):   if not missing( T_ADCOM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ADCOM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ADCOM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ADCOM - 0.00254702891113 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ADCOM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00133001997039;
MPRINT(EM_DIAGRAM):   if not missing( T_ADDIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ADDIT - 0.0031512605042 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ADDIT - 0.00331120351584 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ADDIT - 0.00696501815051 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ADDIT - 0.0042512166266 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00176501732109;
MPRINT(EM_DIAGRAM):   if not missing( T_ADDRESS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ADDRESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ADDRESS - 0.00207310668793 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ADDRESS - 0.00779375777373 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ADDRESS - 0.00247503741489 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194998376212;
MPRINT(EM_DIAGRAM):   if not missing( T_ADMIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ADMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ADMIN - 0.0012063037396 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ADMIN - 0.00763453622357 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ADMIN - 0.00256147540983 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00371405789273;
MPRINT(EM_DIAGRAM):   if not missing( T_ADMINISTR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ADMINISTR - 0.00243161094224 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ADMINISTR - 0.00873306943791 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ADMINISTR - 0.00766331766948 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ADMINISTR - 0.00466996512786 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0027021159607;
MPRINT(EM_DIAGRAM):   if not missing( T_ADRIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ADRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ADRIAN - 0.00002295367947 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ADRIAN - 0.00182144898357 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ADRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00094783586035;
MPRINT(EM_DIAGRAM):   if not missing( T_ADVANC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ADVANC - 0.00486322188449 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ADVANC - 0.00079568208111 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ADVANC - 0.02490628064052 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ADVANC - 0.00220243854844 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00802279459761;
MPRINT(EM_DIAGRAM):   if not missing( T_ADVIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ADVIC - 0.01163175796634 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ADVIC - 0.00128881142486 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ADVIC - 0.00936097291966 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ADVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00369594504493;
MPRINT(EM_DIAGRAM):   if not missing( T_AFFECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AFFECT - 0.01533826102975 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AFFECT - 0.0011406873641 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AFFECT - 0.00679127337993 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AFFECT - 0.00121455753137 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00270999526653;
MPRINT(EM_DIAGRAM):   if not missing( T_AGRE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AGRE - 0.02301249250327 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AGRE - 0.03289401458962 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AGRE - 0.0056027526075 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AGRE - 0.00617005412317 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00295586612412;
MPRINT(EM_DIAGRAM):   if not missing( T_AID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AID - 0.00709633397431 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AID - 0.00050834001484 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AID - 0.00196314928 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AID - 0.0025713090445 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00075266143772;
MPRINT(EM_DIAGRAM):   if not missing( T_ALAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ALAN - 0.00491071428571 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ALAN - 0.01181074154795 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ALAN - 0.00356339783076 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ALAN - 0.00038289142304 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00208694278763;
MPRINT(EM_DIAGRAM):   if not missing( T_ALLERG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ALLERG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ALLERG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ALLERG - 0.0036417358998 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ALLERG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00121601422212;
MPRINT(EM_DIAGRAM):   if not missing( T_ALLERGI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ALLERGI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ALLERGI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ALLERGI - 0.00280743049816 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ALLERGI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00097378614017;
MPRINT(EM_DIAGRAM):   if not missing( T_ALLOC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ALLOC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ALLOC - 0.00038452259455 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ALLOC - 0.00249156453991 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ALLOC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00088213980882;
MPRINT(EM_DIAGRAM):   if not missing( T_ALLOW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ALLOW - 0.02002025036818 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ALLOW - 0.03619176272865 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ALLOW - 0.0077162916886 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ALLOW - 0.01279124735664 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00663598773121;
MPRINT(EM_DIAGRAM):   if not missing( T_ALTERN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ALTERN - 0.01269454830014 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ALTERN - 0.01060193410216 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ALTERN - 0.00694492649908 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ALTERN - 0.00087109603541 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00311217996261;
MPRINT(EM_DIAGRAM):   if not missing( T_AMATEUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AMATEUR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AMATEUR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AMATEUR - 0.0048651859098 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AMATEUR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00144615382029;
MPRINT(EM_DIAGRAM):   if not missing( T_AMERICAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AMERICAN - 0.00627177700348 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AMERICAN - 0.04075877057269 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AMERICAN - 0.00827746407912 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AMERICAN - 0.0105838484508 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00613792893604;
MPRINT(EM_DIAGRAM):   if not missing( T_AMOUNT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AMOUNT - 0.01954495614035 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AMOUNT - 0.00338769763983 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AMOUNT - 0.00974540128719 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AMOUNT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00328489801443;
MPRINT(EM_DIAGRAM):   if not missing( T_AMP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AMP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AMP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AMP - 0.00698620179303 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AMP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00255080609802;
MPRINT(EM_DIAGRAM):   if not missing( T_AMPLIFI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AMPLIFI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AMPLIFI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AMPLIFI - 0.00321188901825 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AMPLIFI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00092279278573;
MPRINT(EM_DIAGRAM):   if not missing( T_ANA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANA - 0.02092931844086 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANA - 0.00041746871564 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00213362959532;
MPRINT(EM_DIAGRAM):   if not missing( T_ANALOG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANALOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANALOG - 0.0009534143056 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANALOG - 0.00453094436 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANALOG - 0.00394050430553 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0014001851658;
MPRINT(EM_DIAGRAM):   if not missing( T_ANDI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANDI - 0.01378265133119 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANDI - 0.00222531418638 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00100139210422;
MPRINT(EM_DIAGRAM):   if not missing( T_ANDREW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANDREW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANDREW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANDREW - 0.00440207022374 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANDREW - 0.001462552234 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00145263717056;
MPRINT(EM_DIAGRAM):   if not missing( T_ANGEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANGEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANGEL - 0.0026768316212 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANGEL - 0.00496079389488 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANGEL - 0.00306296750043 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00211295153378;
MPRINT(EM_DIAGRAM):   if not missing( T_ANIM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANIM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANIM - 0.0015668846121 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANIM - 0.00389244084629 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANIM - 0.00102002586581 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00104052434889;
MPRINT(EM_DIAGRAM):   if not missing( T_ANNOUNC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANNOUNC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANNOUNC - 0.00111016113842 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANNOUNC - 0.00266656772024 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANNOUNC - 0.00996115043253 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0009408154678;
MPRINT(EM_DIAGRAM):   if not missing( T_ANSWER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANSWER - 0.01161901000155 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANSWER - 0.01849009030728 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANSWER - 0.01106220565762 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANSWER - 0.00852429520805 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00336220864585;
MPRINT(EM_DIAGRAM):   if not missing( T_ANTENNA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANTENNA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANTENNA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANTENNA - 0.00319832230982 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANTENNA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00151633468173;
MPRINT(EM_DIAGRAM):   if not missing( T_ANTI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANTI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANTI - 0.03896046416939 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANTI - 0.00326187155638 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANTI - 0.01248871578488 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00257400380809;
MPRINT(EM_DIAGRAM):   if not missing( T_ANTIBIOT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ANTIBIOT - 0.00527882205513 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ANTIBIOT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ANTIBIOT - 0.00233604512058 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ANTIBIOT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00083363707134;
MPRINT(EM_DIAGRAM):   if not missing( T_APP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_APP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_APP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_APP - 0.00325152212184 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_APP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00102391623601;
MPRINT(EM_DIAGRAM):   if not missing( T_APPAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_APPAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_APPAR - 0.00241912968409 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_APPAR - 0.00414181803407 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_APPAR - 0.00278203475548 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00091864337336;
MPRINT(EM_DIAGRAM):   if not missing( T_APPEAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_APPEAR - 0.00582604470359 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_APPEAR - 0.00058723412909 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_APPEAR - 0.00585046916011 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_APPEAR - 0.00258355770772 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00129613507736;
MPRINT(EM_DIAGRAM):   if not missing( T_APPL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_APPL - 0.00492610837438 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_APPL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_APPL - 0.00610705071754 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_APPL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00296713180884;
MPRINT(EM_DIAGRAM):   if not missing( T_APPLI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_APPLI - 0.01289792681545 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_APPLI - 0.01584844492971 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_APPLI - 0.01460865075844 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_APPLI - 0.00384064530128 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00615063839906;
MPRINT(EM_DIAGRAM):   if not missing( T_APPLIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_APPLIC - 0.00052895832185 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_APPLIC - 0.02013306865004 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00514779472168;
MPRINT(EM_DIAGRAM):   if not missing( T_APPRECI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_APPRECI - 0.00976821546228 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_APPRECI - 0.00492519991048 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_APPRECI - 0.01666808037057 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_APPRECI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00452860811928;
MPRINT(EM_DIAGRAM):   if not missing( T_APPROACH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_APPROACH - 0.01269841269841 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_APPROACH - 0.00415279132277 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_APPROACH - 0.00677347342104 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_APPROACH - 0.006459883615 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00277617075238;
MPRINT(EM_DIAGRAM):   if not missing( T_APRIL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_APRIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_APRIL - 0.00547813057477 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_APRIL - 0.00467848817682 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_APRIL - 0.02270091936793 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00191443701358;
MPRINT(EM_DIAGRAM):   if not missing( T_ARAB ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ARAB - 0.130340120852 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ARAB - 0.00109705770532 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ARAB - 0.00524369646874 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00757788329944;
MPRINT(EM_DIAGRAM):   if not missing( T_ARCAD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ARCAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ARCAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ARCAD - 0.00172352887588 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ARCAD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00093438534484;
MPRINT(EM_DIAGRAM):   if not missing( T_AREA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AREA - 0.0029304029304 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AREA - 0.01812893214684 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AREA - 0.01561669770379 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AREA - 0.01277954882246 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00506812794404;
MPRINT(EM_DIAGRAM):   if not missing( T_AREN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AREN - 0.01140709300961 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AREN - 0.01339653430414 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AREN - 0.0045768207825 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AREN - 0.00254821245621 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178000643629;
MPRINT(EM_DIAGRAM):   if not missing( T_ARGIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ARGIC - 0.00004077357872 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ARGIC - 0.00231226479243 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ARGIC - 0.11537503187941 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00234228830211;
MPRINT(EM_DIAGRAM):   if not missing( T_ARGUMENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ARGUMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ARGUMENT - 0.00694866069839 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ARGUMENT - 0.00384361740372 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ARGUMENT - 0.00034258742323 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00114764512325;
MPRINT(EM_DIAGRAM):   if not missing( T_ARM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ARM - 0.0084656084656 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ARM - 0.01840647926724 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ARM - 0.0053234212334 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ARM - 0.04301757018929 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00317505468048;
MPRINT(EM_DIAGRAM):   if not missing( T_ARMENIA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ARMENIA - 0.00009478542589 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ARMENIA - 0.00123932358748 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ARMENIA - 0.06812428994418 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00091579971232;
MPRINT(EM_DIAGRAM):   if not missing( T_ARMENIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ARMENIAN - 0.00090476997441 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ARMENIAN - 0.00326575632936 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ARMENIAN - 0.4080226490199 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00943357450269;
MPRINT(EM_DIAGRAM):   if not missing( T_ARMI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ARMI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ARMI - 0.01381146430979 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ARMI - 0.00171723694012 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ARMI - 0.06883822652882 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219264082435;
MPRINT(EM_DIAGRAM):   if not missing( T_ARTICL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ARTICL - 0.00238095238095 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ARTICL - 0.00386116607413 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ARTICL - 0.00397924157628 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ARTICL - 0.0034680269558 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00129209689338;
MPRINT(EM_DIAGRAM):   if not missing( T_ARTIFICI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ARTIFICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ARTIFICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ARTIFICI - 0.0042292887327 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ARTIFICI - 0.00083787878158 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00133279121621;
MPRINT(EM_DIAGRAM):   if not missing( T_ASK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ASK - 0.00238095238095 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ASK - 0.00567078622421 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ASK - 0.00506472069336 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ASK - 0.00495381149351 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00131611950303;
MPRINT(EM_DIAGRAM):   if not missing( T_ASSEMBL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ASSEMBL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ASSEMBL - 0.00051660861603 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ASSEMBL - 0.00407422578828 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ASSEMBL - 0.00154800138878 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00150882066339;
MPRINT(EM_DIAGRAM):   if not missing( T_ASSIST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ASSIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ASSIST - 0.00680274586978 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ASSIST - 0.0042773813835 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ASSIST - 0.00590475886905 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00218451136297;
MPRINT(EM_DIAGRAM):   if not missing( T_ASSOCI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ASSOCI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ASSOCI - 0.00024410497322 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ASSOCI - 0.00596695621619 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ASSOCI - 0.00337937133979 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00209677781948;
MPRINT(EM_DIAGRAM):   if not missing( T_ASSUM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ASSUM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ASSUM - 0.01646756680853 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ASSUM - 0.0112553703859 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ASSUM - 0.00315342498771 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00395670163679;
MPRINT(EM_DIAGRAM):   if not missing( T_ATARI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ATARI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ATARI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ATARI - 0.00154917369184 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ATARI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00066737716875;
MPRINT(EM_DIAGRAM):   if not missing( T_ATHEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ATHEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ATHEN - 0.000683654992 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ATHEN - 0.00448188428266 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ATHEN - 0.0022506573599 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00228993662903;
MPRINT(EM_DIAGRAM):   if not missing( T_ATHENA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ATHENA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ATHENA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ATHENA - 0.00250839604222 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ATHENA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00083018476163;
MPRINT(EM_DIAGRAM):   if not missing( T_ATTACH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ATTACH - 0.01650119137421 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ATTACH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ATTACH - 0.00412470445423 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ATTACH - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00148765530021;
MPRINT(EM_DIAGRAM):   if not missing( T_ATTACK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ATTACK - 0.01537056928034 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ATTACK - 0.06345686173729 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ATTACK - 0.00264559179386 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ATTACK - 0.03898147010659 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00465524898098;
MPRINT(EM_DIAGRAM):   if not missing( T_ATTEMPT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ATTEMPT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ATTEMPT - 0.02309394614379 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ATTEMPT - 0.00377766263791 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ATTEMPT - 0.01958621818166 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00187367288504;
MPRINT(EM_DIAGRAM):   if not missing( T_ATTRIBUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ATTRIBUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ATTRIBUT - 0.00172840521471 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ATTRIBUT - 0.00330374219973 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ATTRIBUT - 0.00171069532445 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.001307106171;
MPRINT(EM_DIAGRAM):   if not missing( T_AUDIO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AUDIO - 0.00843276856486 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00319775466892;
MPRINT(EM_DIAGRAM):   if not missing( T_AUSTIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AUSTIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AUSTIN - 0.00071735496565 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AUSTIN - 0.00419788598337 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AUSTIN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00171265036094;
MPRINT(EM_DIAGRAM):   if not missing( T_AUSTRALIA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AUSTRALIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AUSTRALIA - 0.00013761821404 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AUSTRALIA - 0.00468213653909 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AUSTRALIA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00191275340748;
MPRINT(EM_DIAGRAM):   if not missing( T_AUTHOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AUTHOR - 0.00664602683178 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AUTHOR - 0.02065086596712 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AUTHOR - 0.00888486081372 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AUTHOR - 0.00876284008801 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00357728722841;
MPRINT(EM_DIAGRAM):   if not missing( T_AVOID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AVOID - 0.00214285714285 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AVOID - 0.00178571957787 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AVOID - 0.00405048338419 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AVOID - 0.00182489875561 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00075282138802;
MPRINT(EM_DIAGRAM):   if not missing( T_AZERI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_AZERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_AZERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_AZERI - 0.00036279641109 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_AZERI - 0.09097034835542 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00195777102716;
MPRINT(EM_DIAGRAM):   if not missing( T_BACKGROUND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BACKGROUND - 0.0037037037037 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BACKGROUND - 0.00027250608272 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BACKGROUND - 0.003158995646 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BACKGROUND - 0.00144258305887 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00092994890051;
MPRINT(EM_DIAGRAM):   if not missing( T_BAND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BAND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BAND - 0.00017776000177 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BAND - 0.00549770761554 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BAND - 0.00104092622749 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00232695341754;
MPRINT(EM_DIAGRAM):   if not missing( T_BANK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BANK - 0.53015994165467 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BANK - 0.01073989854224 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BANK - 0.00360234663382 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00770333013271;
MPRINT(EM_DIAGRAM):   if not missing( T_BARBECU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BARBECU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BARBECU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BARBECU - 0.00282313259381 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BARBECU - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00126283405881;
MPRINT(EM_DIAGRAM):   if not missing( T_BASE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BASE - 0.02476698461715 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BASE - 0.02735813526313 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BASE - 0.01347648315444 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BASE - 0.00955363047747 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00564879559042;
MPRINT(EM_DIAGRAM):   if not missing( T_BASIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BASIC - 0.01346409574468 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BASIC - 0.01489630301575 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BASIC - 0.01043495450168 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BASIC - 0.0011583904581 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00387865033225;
MPRINT(EM_DIAGRAM):   if not missing( T_BATTERI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BATTERI - 0.00062287397174 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BATTERI - 0.00823105574257 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BATTERI - 0.0000901839753 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00353960326361;
MPRINT(EM_DIAGRAM):   if not missing( T_BECK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BECK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BECK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BECK - 0.00284008388299 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BECK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00113389762736;
MPRINT(EM_DIAGRAM):   if not missing( T_BELL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BELL - 0.00179567096901 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BELL - 0.00392896045741 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BELL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00146022824051;
MPRINT(EM_DIAGRAM):   if not missing( T_BENSON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BENSON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BENSON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BENSON - 0.00339253431869 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BENSON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023176862827;
MPRINT(EM_DIAGRAM):   if not missing( T_BERKELEI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BERKELEI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BERKELEI - 0.00616666827788 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BERKELEI - 0.00211396336586 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BERKELEI - 0.00271355554042 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00110746548719;
MPRINT(EM_DIAGRAM):   if not missing( T_BEYER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BEYER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BEYER - 0.02701233557291 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BEYER - 0.00240669849635 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BEYER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00207199449408;
MPRINT(EM_DIAGRAM):   if not missing( T_BILL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BILL - 0.00697825521961 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BILL - 0.00535732293052 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BILL - 0.00580721405078 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BILL - 0.00062081936428 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00159099402995;
MPRINT(EM_DIAGRAM):   if not missing( T_BIRTHDAI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BIRTHDAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BIRTHDAI - 0.00857572542446 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BIRTHDAI - 3.9506453774288E-6 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BIRTHDAI - 0.00008813678829 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00068705761785;
MPRINT(EM_DIAGRAM):   if not missing( T_BIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BIT - 0.00230258625207 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BIT - 0.00636468818224 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BIT - 0.00016219660545 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178622436422;
MPRINT(EM_DIAGRAM):   if not missing( T_BITMAP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BITMAP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BITMAP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BITMAP - 0.00281280707868 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BITMAP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00122468038946;
MPRINT(EM_DIAGRAM):   if not missing( T_BLACK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BLACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BLACK - 0.00534488433789 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BLACK - 0.0048651698776 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BLACK - 0.00413928217283 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00218964134285;
MPRINT(EM_DIAGRAM):   if not missing( T_BLOOD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BLOOD - 0.05819653642059 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BLOOD - 0.0039135664214 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BLOOD - 0.00615111590784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BLOOD - 0.01598261771782 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00313866246483;
MPRINT(EM_DIAGRAM):   if not missing( T_BLUE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BLUE - 0.00535714285714 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BLUE - 0.00046278756612 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BLUE - 0.00422518558496 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BLUE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00138764341042;
MPRINT(EM_DIAGRAM):   if not missing( T_BOARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BOARD - 0.00001632275618 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BOARD - 0.00885990133209 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BOARD - 0.00045072684755 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00287772491702;
MPRINT(EM_DIAGRAM):   if not missing( T_BODI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BODI - 0.00680272108843 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BODI - 0.00834399941365 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BODI - 0.00632769394227 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BODI - 0.02107612573539 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00262295571892;
MPRINT(EM_DIAGRAM):   if not missing( T_BOMB ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BOMB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BOMB - 0.02581583730199 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BOMB - 0.00201748462276 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BOMB - 0.0102855612644 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00231996919544;
MPRINT(EM_DIAGRAM):   if not missing( T_BOOK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BOOK - 0.0058201058201 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BOOK - 0.00810493963041 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BOOK - 0.011690428735 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BOOK - 0.01243018420282 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00378502613574;
MPRINT(EM_DIAGRAM):   if not missing( T_BORDER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BORDER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BORDER - 0.02138607893472 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BORDER - 0.00350502106842 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BORDER - 0.01720165235711 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219576197512;
MPRINT(EM_DIAGRAM):   if not missing( T_BOSTON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BOSTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BOSTON - 0.00428855842365 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BOSTON - 0.00441874693534 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BOSTON - 0.00271197532964 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00191949920659;
MPRINT(EM_DIAGRAM):   if not missing( T_BOUGHT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BOUGHT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BOUGHT - 0.0010841297561 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BOUGHT - 0.00778456465924 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BOUGHT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00295035788035;
MPRINT(EM_DIAGRAM):   if not missing( T_BOULDER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BOULDER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BOULDER - 0.0058701029548 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BOULDER - 0.00261402696687 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BOULDER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00104608913569;
MPRINT(EM_DIAGRAM):   if not missing( T_BOX ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BOX - 0.00297619047619 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BOX - 0.00033445093427 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BOX - 0.00726427964198 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BOX - 0.00012662288328 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00252844470307;
MPRINT(EM_DIAGRAM):   if not missing( T_BRAD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BRAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BRAD - 0.01589269223163 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BRAD - 0.00170291563909 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BRAD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0015112143363;
MPRINT(EM_DIAGRAM):   if not missing( T_BRAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BRAIN - 0.02896067690612 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BRAIN - 0.00756894373057 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BRAIN - 0.00667753768635 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BRAIN - 0.00114743142512 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00225834820048;
MPRINT(EM_DIAGRAM):   if not missing( T_BRAND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BRAND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BRAND - 0.00003361220621 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BRAND - 0.00227671475765 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BRAND - 0.00006071645415 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00092351224912;
MPRINT(EM_DIAGRAM):   if not missing( T_BREAK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BREAK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BREAK - 0.00208085796283 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BREAK - 0.00385786069123 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BREAK - 0.00182734785473 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00129416380647;
MPRINT(EM_DIAGRAM):   if not missing( T_BRIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BRIAN - 0.00251623376623 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BRIAN - 0.00607726750873 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BRIAN - 0.00079676212156 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0021856704032;
MPRINT(EM_DIAGRAM):   if not missing( T_BRING ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BRING - 0.00408163265306 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BRING - 0.01137418772148 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BRING - 0.00585067562092 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BRING - 0.00812870905465 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00287553475153;
MPRINT(EM_DIAGRAM):   if not missing( T_BRITISH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BRITISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BRITISH - 0.01023420880748 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BRITISH - 0.0040682764364 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BRITISH - 0.01511306819557 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00236037505416;
MPRINT(EM_DIAGRAM):   if not missing( T_BROWN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BROWN - 0.00314285714285 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BROWN - 0.01250421426692 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BROWN - 0.00275067425975 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BROWN - 0.00016513541103 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00137914315922;
MPRINT(EM_DIAGRAM):   if not missing( T_BTW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BTW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BTW - 0.00391502763626 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BTW - 0.00618328475876 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BTW - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00239841431527;
MPRINT(EM_DIAGRAM):   if not missing( T_BUFFER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BUFFER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BUFFER - 0.00359818225604 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BUFFER - 0.00338025356963 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BUFFER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00126643541669;
MPRINT(EM_DIAGRAM):   if not missing( T_BUILD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BUILD - 0.00140515222482 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BUILD - 0.00278079492708 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BUILD - 0.01459883535193 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BUILD - 0.00301731501022 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00393417257323;
MPRINT(EM_DIAGRAM):   if not missing( T_BUILT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BUILT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BUILT - 0.00350227247129 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BUILT - 0.01011937123756 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BUILT - 0.00012143290831 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00368271257462;
MPRINT(EM_DIAGRAM):   if not missing( T_BULB ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BULB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BULB - 0.00011212396425 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BULB - 0.00201297179377 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BULB - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00090472531931;
MPRINT(EM_DIAGRAM):   if not missing( T_BUNCH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BUNCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BUNCH - 0.00411225580394 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BUNCH - 0.00490086006849 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BUNCH - 0.00030477045972 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00228964350221;
MPRINT(EM_DIAGRAM):   if not missing( T_BUSH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BUSH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BUSH - 0.03488265178217 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BUSH - 0.00049024483989 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BUSH - 0.00078351012536 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00226989689316;
MPRINT(EM_DIAGRAM):   if not missing( T_BUSI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BUSI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BUSI - 0.00688229725031 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BUSI - 0.00646568672272 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BUSI - 0.00707630030953 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00222659225124;
MPRINT(EM_DIAGRAM):   if not missing( T_BUTTON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_BUTTON - 0.00535026791834 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00150884596115;
MPRINT(EM_DIAGRAM):   if not missing( T_CABL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CABL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CABL - 0.00027294279119 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CABL - 0.00403289120056 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CABL - 0.00057882140774 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00148097553255;
MPRINT(EM_DIAGRAM):   if not missing( T_CALIFORNIA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CALIFORNIA - 0.0063492063492 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CALIFORNIA - 0.02371463520065 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CALIFORNIA - 0.00667060973152 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CALIFORNIA - 0.0081994397549 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00334946171345;
MPRINT(EM_DIAGRAM):   if not missing( T_CALL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CALL - 0.01950277163007 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CALL - 0.01979300603977 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CALL - 0.02103470700113 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CALL - 0.00776201756526 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00430180286262;
MPRINT(EM_DIAGRAM):   if not missing( T_CAMBRIDG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CAMBRIDG - 0.00394957983193 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CAMBRIDG - 0.01286384734854 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CAMBRIDG - 0.01090385821407 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CAMBRIDG - 0.02948095265846 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00612827078861;
MPRINT(EM_DIAGRAM):   if not missing( T_CAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CAN - 0.02246523898091 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CAN - 0.0105659966872 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CAN - 0.02185135276699 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CAN - 0.01877837279062 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00584895262832;
MPRINT(EM_DIAGRAM):   if not missing( T_CANADA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CANADA - 0.0025974025974 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CANADA - 0.0056588415705 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CANADA - 0.00944917144609 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CANADA - 0.00243960389673 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00305417142323;
MPRINT(EM_DIAGRAM):   if not missing( T_CANCER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CANCER - 0.00457173488532 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CANCER - 0.000514424748 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CANCER - 0.0041476031543 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CANCER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00153024630397;
MPRINT(EM_DIAGRAM):   if not missing( T_CANDIDA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CANDIDA - 0.00408163265306 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CANDIDA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CANDIDA - 0.00649954477104 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CANDIDA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0029950470091;
MPRINT(EM_DIAGRAM):   if not missing( T_CAPABL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CAPABL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CAPABL - 0.00187017593667 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CAPABL - 0.00461906544697 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CAPABL - 0.00208775403909 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0013039641587;
MPRINT(EM_DIAGRAM):   if not missing( T_CAPACITOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CAPACITOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CAPACITOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CAPACITOR - 0.00343719454019 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CAPACITOR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00125218434231;
MPRINT(EM_DIAGRAM):   if not missing( T_CAPIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CAPIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CAPIT - 0.01175326044639 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CAPIT - 0.0049810312628 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CAPIT - 0.00844343643563 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00312478715415;
MPRINT(EM_DIAGRAM):   if not missing( T_CAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CAR - 0.00080948675744 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CAR - 0.00457771517847 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CAR - 0.00050262913702 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00135071506241;
MPRINT(EM_DIAGRAM):   if not missing( T_CARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CARD - 0.00122729504172 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CARD - 0.00381757912305 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CARD - 0.00557162069347 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00228853567535;
MPRINT(EM_DIAGRAM):   if not missing( T_CARE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CARE - 0.03247493240954 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CARE - 0.01741018191494 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CARE - 0.01266206616383 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CARE - 0.00480616162176 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00494312619026;
MPRINT(EM_DIAGRAM):   if not missing( T_CARNEGI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CARNEGI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CARNEGI - 0.00130141941892 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CARNEGI - 0.00578791307079 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CARNEGI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00266059261589;
MPRINT(EM_DIAGRAM):   if not missing( T_CARRI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CARRI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CARRI - 0.01052257021622 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CARRI - 0.00945762554385 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CARRI - 0.02918675875763 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00441789340818;
MPRINT(EM_DIAGRAM):   if not missing( T_CARTER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CARTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CARTER - 0.02378147496696 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CARTER - 0.00129782200464 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CARTER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00140795929791;
MPRINT(EM_DIAGRAM):   if not missing( T_CASE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CASE - 0.03025151166269 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CASE - 0.04046031425318 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CASE - 0.02327949863705 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CASE - 0.00671496757119 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00714032805844;
MPRINT(EM_DIAGRAM):   if not missing( T_CATALOG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CATALOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CATALOG - 0.00002639284094 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CATALOG - 0.00421934886253 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CATALOG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00171349565994;
MPRINT(EM_DIAGRAM):   if not missing( T_CAUS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CAUS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CAUS - 0.00341559307657 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CAUS - 0.00833425367222 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CAUS - 0.00213421281138 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00223411311424;
MPRINT(EM_DIAGRAM):   if not missing( T_CELL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CELL - 0.00002992570618 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CELL - 0.00451376722044 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CELL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00166929872792;
MPRINT(EM_DIAGRAM):   if not missing( T_CENTER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CENTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CENTER - 0.05360175114902 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CENTER - 0.01523716912398 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CENTER - 0.03383599813257 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00734044785206;
MPRINT(EM_DIAGRAM):   if not missing( T_CENTR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CENTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CENTR - 0.00968267649567 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CENTR - 0.00479172651898 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CENTR - 0.00064803138573 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00228610454524;
MPRINT(EM_DIAGRAM):   if not missing( T_CHANC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHANC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHANC - 0.0012869970382 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHANC - 0.00741236046101 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHANC - 0.00684769470977 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00239418744601;
MPRINT(EM_DIAGRAM):   if not missing( T_CHANG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHANG - 0.00282750111692 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHANG - 0.01020767693415 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHANG - 0.00307004640603 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00223602384301;
MPRINT(EM_DIAGRAM):   if not missing( T_CHANNEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHANNEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHANNEL - 0.00223882589998 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHANNEL - 0.00532545475458 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHANNEL - 0.00143184934883 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00192636041604;
MPRINT(EM_DIAGRAM):   if not missing( T_CHARACT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHARACT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHARACT - 0.00118632773631 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHARACT - 0.0031377303076 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHARACT - 0.00118968681232 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00094241100188;
MPRINT(EM_DIAGRAM):   if not missing( T_CHARG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHARG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHARG - 0.00276069284848 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHARG - 0.00813974983264 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHARG - 0.00526777404135 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00326882297324;
MPRINT(EM_DIAGRAM):   if not missing( T_CHASTITI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHASTITI - 0.52354950753203 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHASTITI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHASTITI - 0.00103002389852 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHASTITI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.006978756534;
MPRINT(EM_DIAGRAM):   if not missing( T_CHEAP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHEAP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHEAP - 0.00176783302183 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHEAP - 0.00725187524983 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHEAP - 0.00087110410742 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0022324063355;
MPRINT(EM_DIAGRAM):   if not missing( T_CHECK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHECK - 0.00936507936507 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHECK - 0.00366179857654 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHECK - 0.01278602482229 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHECK - 0.00208457459799 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00346472200893;
MPRINT(EM_DIAGRAM):   if not missing( T_CHEER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHEER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHEER - 0.01056423839713 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHEER - 0.00578950003407 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHEER - 0.00116016481829 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00250542394884;
MPRINT(EM_DIAGRAM):   if not missing( T_CHEMIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHEMIC - 0.0035409035409 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHEMIC - 0.00040195903361 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHEMIC - 0.00294290838065 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHEMIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00070597510344;
MPRINT(EM_DIAGRAM):   if not missing( T_CHICAGO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHICAGO - 0.00563909774436 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHICAGO - 0.00197168831659 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHICAGO - 0.00359609906087 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHICAGO - 0.00082873519065 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00153285469123;
MPRINT(EM_DIAGRAM):   if not missing( T_CHILD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHILD - 0.00400432900432 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHILD - 0.01085278137637 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHILD - 0.00397976898935 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHILD - 0.00670550438002 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00189384530693;
MPRINT(EM_DIAGRAM):   if not missing( T_CHILDREN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHILDREN - 0.00886827458256 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHILDREN - 0.01460785231222 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHILDREN - 0.00392277401432 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHILDREN - 0.03332432437602 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00189434097521;
MPRINT(EM_DIAGRAM):   if not missing( T_CHINES ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHINES - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHINES - 0.00043341330098 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHINES - 0.00653303169353 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHINES - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00292822420988;
MPRINT(EM_DIAGRAM):   if not missing( T_CHIP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHIP - 0.00008376211559 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHIP - 0.01515972201921 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00460467806333;
MPRINT(EM_DIAGRAM):   if not missing( T_CHOIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHOIC - 0.00892857142857 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHOIC - 0.01119423452334 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHOIC - 0.00696589207098 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHOIC - 0.00068124502738 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00348765733821;
MPRINT(EM_DIAGRAM):   if not missing( T_CHRI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHRI - 0.00806722689075 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHRI - 0.00592352039746 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHRI - 0.00659859322065 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHRI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00312663910546;
MPRINT(EM_DIAGRAM):   if not missing( T_CHRISTIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHRISTIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHRISTIAN - 0.01373869766294 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHRISTIAN - 0.00298557885876 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHRISTIAN - 0.00815950171697 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00205150109492;
MPRINT(EM_DIAGRAM):   if not missing( T_CHRISTOPH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CHRISTOPH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CHRISTOPH - 0.00272573237468 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CHRISTOPH - 0.0046093968148 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CHRISTOPH - 0.00075895567698 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00189741899925;
MPRINT(EM_DIAGRAM):   if not missing( T_CIRCUIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CIRCUIT - 0.01551719083281 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0054635886551;
MPRINT(EM_DIAGRAM):   if not missing( T_CITI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CITI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CITI - 0.00447466008503 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CITI - 0.00634574626277 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CITI - 0.0099495924648 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00212793385536;
MPRINT(EM_DIAGRAM):   if not missing( T_CITIZEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CITIZEN - 0.0244980063939 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CITIZEN - 0.01534706218072 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CITIZEN - 0.00094004918109 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CITIZEN - 0.00324965685238 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00129192812675;
MPRINT(EM_DIAGRAM):   if not missing( T_CIVIL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CIVIL - 0.00117416829745 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CIVIL - 0.00585378990066 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CIVIL - 0.00140501416569 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CIVIL - 0.00179473380627 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00050667250885;
MPRINT(EM_DIAGRAM):   if not missing( T_CIVILIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CIVILIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CIVILIAN - 0.03803861614366 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CIVILIAN - 0.0001336126271 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CIVILIAN - 0.01504912181315 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0021309909213;
MPRINT(EM_DIAGRAM):   if not missing( T_CLAIM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CLAIM - 0.00412946428571 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CLAIM - 0.03342422472347 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CLAIM - 0.00750257316558 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CLAIM - 0.03365868295753 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00375635611379;
MPRINT(EM_DIAGRAM):   if not missing( T_CLASS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CLASS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CLASS - 0.00161421747812 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CLASS - 0.0093497549387 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CLASS - 0.00120968335449 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00388120344747;
MPRINT(EM_DIAGRAM):   if not missing( T_CLEAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CLEAR - 0.00238095238095 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CLEAR - 0.01231710456304 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CLEAR - 0.00736526320253 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CLEAR - 0.00477469558068 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00258395125575;
MPRINT(EM_DIAGRAM):   if not missing( T_CLEVELAND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CLEVELAND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CLEVELAND - 0.01144843098821 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CLEVELAND - 0.00123693490827 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CLEVELAND - 0.00034070224504 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00098206634498;
MPRINT(EM_DIAGRAM):   if not missing( T_CLIENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CLIENT - 0.00220779220779 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CLIENT - 0.01175837749746 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0041521077325;
MPRINT(EM_DIAGRAM):   if not missing( T_CLINIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CLINIC - 0.00593454419439 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CLINIC - 0.00014482678716 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CLINIC - 0.00589506083223 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CLINIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00173166614161;
MPRINT(EM_DIAGRAM):   if not missing( T_CLINTON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CLINTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CLINTON - 0.01094879462374 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CLINTON - 0.00063130351823 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CLINTON - 0.00093122904643 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00129747999771;
MPRINT(EM_DIAGRAM):   if not missing( T_CLOCK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CLOCK - 0.00362173038229 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CLOCK - 0.04685098061494 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CLOCK - 0.00308209901045 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CLOCK - 0.00459001457037 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00417181412962;
MPRINT(EM_DIAGRAM):   if not missing( T_CLOSE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CLOSE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CLOSE - 0.01020938999316 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CLOSE - 0.00890199580275 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CLOSE - 0.07221119112623 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00370152510709;
MPRINT(EM_DIAGRAM):   if not missing( T_CLUB ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CLUB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CLUB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CLUB - 0.00198193549706 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CLUB - 0.00173256115633 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00083019696421;
MPRINT(EM_DIAGRAM):   if not missing( T_CMU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CMU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CMU - 0.00166292481307 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CMU - 0.00433040458532 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CMU - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00223893906375;
MPRINT(EM_DIAGRAM):   if not missing( T_CODE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CODE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CODE - 0.00080972516185 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CODE - 0.01518472208382 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CODE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00410754144058;
MPRINT(EM_DIAGRAM):   if not missing( T_COLD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COLD - 0.00559334845049 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COLD - 0.00053155359238 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COLD - 0.00614124050615 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COLD - 0.01986638154835 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00251362860901;
MPRINT(EM_DIAGRAM):   if not missing( T_COLLEG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COLLEG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COLLEG - 0.00609669176484 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COLLEG - 0.01642683744671 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COLLEG - 0.00551371185981 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00728668209097;
MPRINT(EM_DIAGRAM):   if not missing( T_COLLIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COLLIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COLLIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COLLIN - 0.00219390626307 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COLLIN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0009396268753;
MPRINT(EM_DIAGRAM):   if not missing( T_COLOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COLOR - 0.005125 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COLOR - 0.00078667767556 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COLOR - 0.00996213566126 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COLOR - 0.00004699185027 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00329555912783;
MPRINT(EM_DIAGRAM):   if not missing( T_COLORADO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COLORADO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COLORADO - 0.00430924305294 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COLORADO - 0.00407292990167 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COLORADO - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00148385175968;
MPRINT(EM_DIAGRAM):   if not missing( T_COLORMAP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COLORMAP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COLORMAP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COLORMAP - 0.00394871792886 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COLORMAP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00131273767244;
MPRINT(EM_DIAGRAM):   if not missing( T_COLUMBIA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COLUMBIA - 0.00357142857142 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COLUMBIA - 0.01312319950648 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COLUMBIA - 0.00710101023283 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COLUMBIA - 0.00510298177553 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00414649514434;
MPRINT(EM_DIAGRAM):   if not missing( T_COMBIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMBIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMBIN - 0.0007942704979 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMBIN - 0.00767600316987 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMBIN - 0.00016452200481 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00297358612702;
MPRINT(EM_DIAGRAM):   if not missing( T_COMMAND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMMAND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMMAND - 0.0019935937683 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMMAND - 0.00418014692816 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMMAND - 0.00848926896807 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00102924637145;
MPRINT(EM_DIAGRAM):   if not missing( T_COMMENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMMENT - 0.01366728509585 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMMENT - 0.01921625570617 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMMENT - 0.00748139361561 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMMENT - 0.00258581540204 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00376495643324;
MPRINT(EM_DIAGRAM):   if not missing( T_COMMERCI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMMERCI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMMERCI - 0.00087985088164 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMMERCI - 0.00693117189265 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMMERCI - 0.00014992637943 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00276644434123;
MPRINT(EM_DIAGRAM):   if not missing( T_COMMIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMMIT - 0.00962099125364 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMMIT - 0.04060440366455 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMMIT - 0.00116986072467 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMMIT - 0.02723330697281 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00389051904228;
MPRINT(EM_DIAGRAM):   if not missing( T_COMMON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMMON - 0.01608240928065 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMMON - 0.0044578299517 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMMON - 0.01355244307643 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMMON - 0.00264477288076 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00461117548008;
MPRINT(EM_DIAGRAM):   if not missing( T_COMMUN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMMUN - 0.01052804104176 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMMUN - 0.00789885252278 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMMUN - 0.01741100801492 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMMUN - 0.01386191736614 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00501247265599;
MPRINT(EM_DIAGRAM):   if not missing( T_COMP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMP - 0.00147654851285 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMP - 0.04096486058072 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00836858224829;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPANI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMPANI - 0.00456637299728 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMPANI - 0.00201898484117 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMPANI - 0.01474374278598 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMPANI - 0.00773270112635 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00422826374553;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMPAR - 0.0031328320802 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMPAR - 0.01025144005933 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMPAR - 0.00313768139043 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMPAR - 0.00280711704639 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00102360537818;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMPAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMPAT - 0.00037522482777 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMPAT - 0.00299071255197 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMPAT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00094087773722;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPIL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMPIL - 0.00038381880581 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMPIL - 0.0074389563694 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0021340542775;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPLET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMPLET - 0.0203947368421 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMPLET - 0.01734324870509 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMPLET - 0.01664107811848 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMPLET - 0.01441694662598 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00785748935996;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMPON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMPON - 0.00002171910869 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMPON - 0.00570140245975 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMPON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00156794269407;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COMPUT - 0.14633081724658 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COMPUT - 0.01565928544313 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COMPUT - 0.03070459554018 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COMPUT - 0.00362185040466 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00667425988144;
MPRINT(EM_DIAGRAM):   if not missing( T_CONCERN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONCERN - 0.00780798149219 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONCERN - 0.00562029122217 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONCERN - 0.00631671591842 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONCERN - 0.00085581244276 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00191661175971;
MPRINT(EM_DIAGRAM):   if not missing( T_CONCRET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONCRET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONCRET - 0.00055081041029 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONCRET - 0.00442978182175 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONCRET - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00195726507621;
MPRINT(EM_DIAGRAM):   if not missing( T_CONDIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONDIT - 0.00692419825072 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONDIT - 0.00208752463315 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONDIT - 0.00810214963298 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONDIT - 0.00324663941667 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00236737391256;
MPRINT(EM_DIAGRAM):   if not missing( T_CONFER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONFER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONFER - 0.00161872847318 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONFER - 0.00281614533846 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONFER - 0.00147567731651 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00114349795111;
MPRINT(EM_DIAGRAM):   if not missing( T_CONFIGUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONFIGUR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONFIGUR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONFIGUR - 0.00600161649958 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONFIGUR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00270757820592;
MPRINT(EM_DIAGRAM):   if not missing( T_CONFLICT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONFLICT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONFLICT - 0.02293533307847 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONFLICT - 0.00351875410508 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONFLICT - 0.04517658837874 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00364235846247;
MPRINT(EM_DIAGRAM):   if not missing( T_CONFUS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONFUS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONFUS - 0.00622706762793 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONFUS - 0.00375237784477 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONFUS - 0.00873925488579 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00163585362447;
MPRINT(EM_DIAGRAM):   if not missing( T_CONNECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONNECT - 0.00769119769119 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONNECT - 0.00124967522484 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONNECT - 0.01328064660146 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONNECT - 0.00081993848776 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00365708369664;
MPRINT(EM_DIAGRAM):   if not missing( T_CONSID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONSID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONSID - 0.00899095726292 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONSID - 0.00651388573883 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONSID - 0.01306145964068 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0028919291766;
MPRINT(EM_DIAGRAM):   if not missing( T_CONSIST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONSIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONSIST - 0.00864270737662 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONSIST - 0.00392474017371 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONSIST - 0.00608323303161 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00151348179405;
MPRINT(EM_DIAGRAM):   if not missing( T_CONSTRUCT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONSTRUCT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONSTRUCT - 0.00028847658943 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONSTRUCT - 0.00598053394229 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONSTRUCT - 0.00099227332756 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00220998162519;
MPRINT(EM_DIAGRAM):   if not missing( T_CONSULT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONSULT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONSULT - 0.00475456950807 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONSULT - 0.00550407067911 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONSULT - 0.00049332119004 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00257771396002;
MPRINT(EM_DIAGRAM):   if not missing( T_CONTACT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONTACT - 0.00362173038229 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONTACT - 0.0001656990786 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONTACT - 0.00943187153011 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONTACT - 0.00066227132335 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00358101047925;
MPRINT(EM_DIAGRAM):   if not missing( T_CONTENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONTENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONTENT - 0.00613117474642 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONTENT - 0.00788162599469 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONTENT - 0.01269901752034 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00335680298114;
MPRINT(EM_DIAGRAM):   if not missing( T_CONTEXT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONTEXT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONTEXT - 0.00294762560055 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONTEXT - 0.00288474219193 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONTEXT - 0.00007423264991 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00126231866707;
MPRINT(EM_DIAGRAM):   if not missing( T_CONTINU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONTINU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONTINU - 0.01761578275657 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONTINU - 0.01017131540274 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONTINU - 0.02947449176282 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00398462825126;
MPRINT(EM_DIAGRAM):   if not missing( T_CONTROL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONTROL - 0.01244513240518 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONTROL - 0.01698433032533 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONTROL - 0.01836324753083 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONTROL - 0.00581916558946 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00605835001324;
MPRINT(EM_DIAGRAM):   if not missing( T_CONVENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONVENT - 0.00559586302245 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONVENT - 0.00487526003894 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONVENT - 0.00172098051761 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00252760109212;
MPRINT(EM_DIAGRAM):   if not missing( T_CONVERT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CONVERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CONVERT - 0.00208931113993 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CONVERT - 0.00782864268849 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CONVERT - 0.00028491277285 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00321649386652;
MPRINT(EM_DIAGRAM):   if not missing( T_COOL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COOL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COOL - 0.00039971405071 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COOL - 0.00636688487221 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COOL - 0.00012024530041 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0028245836324;
MPRINT(EM_DIAGRAM):   if not missing( T_COPI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COPI - 0.00176830297452 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COPI - 0.0142717909163 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COPI - 0.0014005155521 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00488180943163;
MPRINT(EM_DIAGRAM):   if not missing( T_CORN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CORN - 0.01388888888888 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CORN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CORN - 0.0018419675165 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CORN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00128206088182;
MPRINT(EM_DIAGRAM):   if not missing( T_CORP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CORP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CORP - 0.00808287541613 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CORP - 0.00692655447406 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CORP - 0.00139476467477 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00222254218316;
MPRINT(EM_DIAGRAM):   if not missing( T_CORPOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CORPOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CORPOR - 0.0086987555741 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CORPOR - 0.01029455159583 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CORPOR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00304771993701;
MPRINT(EM_DIAGRAM):   if not missing( T_CORRECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CORRECT - 0.00821119402634 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CORRECT - 0.00370021632674 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CORRECT - 0.0113440314102 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CORRECT - 0.00335025639992 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00280739680636;
MPRINT(EM_DIAGRAM):   if not missing( T_COST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COST - 0.00252976190476 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COST - 0.00052673915053 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COST - 0.00572034114685 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COST - 0.00077748204664 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00130019632249;
MPRINT(EM_DIAGRAM):   if not missing( T_COULDN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COULDN - 0.0216553479943 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COULDN - 0.006567422861 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COULDN - 0.00912202053323 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COULDN - 0.00397586291668 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00387358311026;
MPRINT(EM_DIAGRAM):   if not missing( T_COUNT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COUNT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COUNT - 0.00543171853832 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COUNT - 0.00427677839871 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COUNT - 0.00564192112951 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00128286419648;
MPRINT(EM_DIAGRAM):   if not missing( T_COUNTRI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COUNTRI - 0.00173784977908 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COUNTRI - 0.02973196958608 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COUNTRI - 0.00318682816994 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COUNTRI - 0.02190202501441 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229782391791;
MPRINT(EM_DIAGRAM):   if not missing( T_COUPL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COUPL - 0.01233211233211 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COUPL - 0.00927059478789 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COUPL - 0.01220891358204 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COUPL - 0.00240219331795 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00406745727668;
MPRINT(EM_DIAGRAM):   if not missing( T_COVER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COVER - 0.00900671240457 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COVER - 0.00649838994314 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COVER - 0.01728407521785 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00286107703073;
MPRINT(EM_DIAGRAM):   if not missing( T_COVINGTON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_COVINGTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_COVINGTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_COVINGTON - 0.00580948549996 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_COVINGTON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00266143888631;
MPRINT(EM_DIAGRAM):   if not missing( T_CPR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CPR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CPR - 0.02042814343159 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CPR - 0.00030798187674 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CPR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00092713104234;
MPRINT(EM_DIAGRAM):   if not missing( T_CREAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CREAT - 0.00581032898732 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CREAT - 0.01837576519308 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CREAT - 0.00387238096128 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00655530340844;
MPRINT(EM_DIAGRAM):   if not missing( T_CROHN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CROHN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CROHN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CROHN - 0.00278200695089 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CROHN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0014638747758;
MPRINT(EM_DIAGRAM):   if not missing( T_CROSS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CROSS - 0.01108802183487 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CROSS - 0.00055555340874 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CROSS - 0.00227718623066 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CROSS - 0.00353270654517 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00079645320783;
MPRINT(EM_DIAGRAM):   if not missing( T_CURE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CURE - 0.01551987560995 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CURE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CURE - 0.00417648040965 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CURE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00140679451382;
MPRINT(EM_DIAGRAM):   if not missing( T_CURRENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CURRENT - 0.00428405838029 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CURRENT - 0.01525257298794 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CURRENT - 0.00167841296896 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00427224609771;
MPRINT(EM_DIAGRAM):   if not missing( T_CURSOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CURSOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CURSOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CURSOR - 0.00311889219489 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CURSOR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00122913889765;
MPRINT(EM_DIAGRAM):   if not missing( T_CUSTOM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CUSTOM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CUSTOM - 0.00029148671215 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CUSTOM - 0.00578467479034 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CUSTOM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00223142400462;
MPRINT(EM_DIAGRAM):   if not missing( T_CUTE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CUTE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CUTE - 0.0010132619082 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CUTE - 0.0024703811543 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CUTE - 0.00007050943063 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00156842181356;
MPRINT(EM_DIAGRAM):   if not missing( T_CYCL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_CYCL - 0.01251138052551 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_CYCL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_CYCL - 0.00369292769772 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_CYCL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00139648843895;
MPRINT(EM_DIAGRAM):   if not missing( T_DAI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DAI - 0.00393990929705 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DAI - 0.00599490507034 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DAI - 0.00998249313392 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DAI - 0.00637616654814 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00174689902549;
MPRINT(EM_DIAGRAM):   if not missing( T_DAILI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DAILI - 0.00349544072948 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DAILI - 0.00762347303689 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DAILI - 0.00562026512706 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DAILI - 0.00613987957735 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00228514187593;
MPRINT(EM_DIAGRAM):   if not missing( T_DALE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DALE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DALE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DALE - 0.00135718668661 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DALE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0005312494648;
MPRINT(EM_DIAGRAM):   if not missing( T_DAMAG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DAMAG - 0.03692077314718 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DAMAG - 0.00197205562097 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DAMAG - 0.00429278212411 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DAMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00192891917502;
MPRINT(EM_DIAGRAM):   if not missing( T_DANGER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DANGER - 0.01674893534649 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DANGER - 0.00610604856114 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DANGER - 0.00539015716088 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DANGER - 0.00019589175853 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00210263195154;
MPRINT(EM_DIAGRAM):   if not missing( T_DANIEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DANIEL - 0.00888914377473 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DANIEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DANIEL - 0.00496264344325 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DANIEL - 0.00029964429322 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00186511584305;
MPRINT(EM_DIAGRAM):   if not missing( T_DANNI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DANNI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DANNI - 0.0116479541143 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DANNI - 0.00148765224162 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DANNI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00150417914941;
MPRINT(EM_DIAGRAM):   if not missing( T_DATA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DATA - 0.0004307957324 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DATA - 0.0129076558006 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00385138209;
MPRINT(EM_DIAGRAM):   if not missing( T_DAVE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DAVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DAVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DAVE - 0.00644543569846 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DAVE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00242322430391;
MPRINT(EM_DIAGRAM):   if not missing( T_DAVID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DAVID - 0.00580362726704 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DAVID - 0.00387309896914 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DAVID - 0.02022947335531 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DAVID - 0.03555492735709 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00691673325015;
MPRINT(EM_DIAGRAM):   if not missing( T_DAVIDIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DAVIDIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DAVIDIAN - 0.00176222740204 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DAVIDIAN - 0.00161583559641 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DAVIDIAN - 0.04892008417944 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00140268089018;
MPRINT(EM_DIAGRAM):   if not missing( T_DAYTON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DAYTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DAYTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DAYTON - 0.00104920552078 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DAYTON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.000544974996;
MPRINT(EM_DIAGRAM):   if not missing( T_DEAD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEAD - 0.00470927699001 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEAD - 0.00490829667511 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEAD - 0.03200594166483 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00195270728247;
MPRINT(EM_DIAGRAM):   if not missing( T_DEAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEAL - 0.01425772384565 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEAL - 0.0111011531601 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEAL - 0.00962638869504 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEAL - 0.00990541281307 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00374110173763;
MPRINT(EM_DIAGRAM):   if not missing( T_DEAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEAR - 0.00447287355914 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEAR - 0.00235485456532 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEAR - 0.00067887160308 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00089296723517;
MPRINT(EM_DIAGRAM):   if not missing( T_DEATH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEATH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEATH - 0.01885126111208 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEATH - 0.00238022091273 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEATH - 0.01135971316439 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00172032783531;
MPRINT(EM_DIAGRAM):   if not missing( T_DECID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DECID - 0.00326530612244 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DECID - 0.01162120017049 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DECID - 0.00670891662858 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DECID - 0.00378145778092 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00246789409999;
MPRINT(EM_DIAGRAM):   if not missing( T_DECOD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DECOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DECOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DECOD - 0.00238415208261 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DECOD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00095687582014;
MPRINT(EM_DIAGRAM):   if not missing( T_DEFAULT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEFAULT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEFAULT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEFAULT - 0.00356861500426 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEFAULT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00089977817924;
MPRINT(EM_DIAGRAM):   if not missing( T_DEFIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEFIN - 0.00288359788359 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEFIN - 0.00388904490058 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEFIN - 0.00523827418957 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEFIN - 0.00019439569689 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00209653595393;
MPRINT(EM_DIAGRAM):   if not missing( T_DEFINIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEFINIT - 0.01381475667189 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEFINIT - 0.00395663034653 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEFINIT - 0.0045876940886 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEFINIT - 0.00451839906681 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0018542661907;
MPRINT(EM_DIAGRAM):   if not missing( T_DEGRE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEGRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEGRE - 0.00181517220942 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEGRE - 0.00314971765754 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEGRE - 0.00133442756401 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00087766287397;
MPRINT(EM_DIAGRAM):   if not missing( T_DEIR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEIR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEIR - 0.02119167794967 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEIR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEIR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00189377458604;
MPRINT(EM_DIAGRAM):   if not missing( T_DELET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DELET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DELET - 0.00390964742983 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DELET - 0.00324290766494 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DELET - 0.00037605029672 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0011570255919;
MPRINT(EM_DIAGRAM):   if not missing( T_DEPART ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEPART - 0.01805546997828 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEPART - 0.07610764008628 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEPART - 0.01868259260731 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEPART - 0.00562119485836 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01152300821202;
MPRINT(EM_DIAGRAM):   if not missing( T_DEPEND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEPEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEPEND - 0.00471658877146 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEPEND - 0.01141715216378 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEPEND - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00387993888119;
MPRINT(EM_DIAGRAM):   if not missing( T_DEPT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEPT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEPT - 0.01308252957175 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEPT - 0.018889646474 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEPT - 0.0024142255666 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00713544971934;
MPRINT(EM_DIAGRAM):   if not missing( T_DEPTH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEPTH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEPTH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEPTH - 0.00421732526414 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEPTH - 0.00092011639475 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00189022958775;
MPRINT(EM_DIAGRAM):   if not missing( T_DESIGN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DESIGN - 0.00139818069179 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DESIGN - 0.0091551851677 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DESIGN - 0.00085219920859 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00187054605814;
MPRINT(EM_DIAGRAM):   if not missing( T_DESTROI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DESTROI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DESTROI - 0.01295010604479 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DESTROI - 0.00300922212813 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DESTROI - 0.05464308070991 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00262439479673;
MPRINT(EM_DIAGRAM):   if not missing( T_DETAIL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DETAIL - 0.00402494331065 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DETAIL - 0.00916335803993 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DETAIL - 0.00903300135276 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DETAIL - 0.00172440254584 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00317261251087;
MPRINT(EM_DIAGRAM):   if not missing( T_DETECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DETECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DETECT - 0.00057749512522 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DETECT - 0.00806929053297 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DETECT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00285018958368;
MPRINT(EM_DIAGRAM):   if not missing( T_DETECTOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DETECTOR - 0.00418318641165 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0016340005264;
MPRINT(EM_DIAGRAM):   if not missing( T_DETERMIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DETERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DETERMIN - 0.00831394099467 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DETERMIN - 0.00851952562696 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DETERMIN - 0.00948782914224 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00343636461219;
MPRINT(EM_DIAGRAM):   if not missing( T_DEVELOP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEVELOP - 0.0138238453276 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEVELOP - 0.00270861857448 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEVELOP - 0.01378466037952 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEVELOP - 0.00264969683595 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00426332864205;
MPRINT(EM_DIAGRAM):   if not missing( T_DEVIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DEVIC - 0.00061867032669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DEVIC - 0.01361357967665 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00448975568447;
MPRINT(EM_DIAGRAM):   if not missing( T_DIAGNOS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIAGNOS - 0.02890818475202 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIAGNOS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIAGNOS - 0.00803479383879 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIAGNOS - 0.00362155791278 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0039696027689;
MPRINT(EM_DIAGRAM):   if not missing( T_DIAGRAM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIAGRAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIAGRAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIAGRAM - 0.00310975268359 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIAGRAM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00122878480487;
MPRINT(EM_DIAGRAM):   if not missing( T_DIALOG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIALOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIALOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIALOG - 0.00427870763248 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIALOG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00210847536183;
MPRINT(EM_DIAGRAM):   if not missing( T_DICK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DICK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DICK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DICK - 0.00191352357673 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DICK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00087989087677;
MPRINT(EM_DIAGRAM):   if not missing( T_DIDN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIDN - 0.02568922305764 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIDN - 0.03292374600371 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIDN - 0.01648136393382 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIDN - 0.00498358368065 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00737772061555;
MPRINT(EM_DIAGRAM):   if not missing( T_DIEGO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIEGO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIEGO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIEGO - 0.00266646038929 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIEGO - 0.00279888044782 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00108158462916;
MPRINT(EM_DIAGRAM):   if not missing( T_DIET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIET - 0.02853916684445 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIET - 0.0047958568591 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIET - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00137454399398;
MPRINT(EM_DIAGRAM):   if not missing( T_DIFFER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIFFER - 0.00300751879699 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIFFER - 0.0065290455415 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIFFER - 0.00890315809426 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIFFER - 0.00382941442239 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00250015326881;
MPRINT(EM_DIAGRAM):   if not missing( T_DIGIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIGIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIGIT - 0.00087720871431 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIGIT - 0.0068013323843 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIGIT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00217754118954;
MPRINT(EM_DIAGRAM):   if not missing( T_DIMENS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIMENS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIMENS - 0.00007848677497 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIMENS - 0.00298353064147 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIMENS - 0.0004872918702 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00169481639691;
MPRINT(EM_DIAGRAM):   if not missing( T_DIOD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIOD - 0.00172971724852 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIOD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00069570038166;
MPRINT(EM_DIAGRAM):   if not missing( T_DIRECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIRECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIRECT - 0.00463057539473 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIRECT - 0.01181255391676 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIRECT - 0.00407399300903 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00444148885666;
MPRINT(EM_DIAGRAM):   if not missing( T_DIRECTORI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIRECTORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIRECTORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIRECTORI - 0.00534054028137 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIRECTORI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00190613107292;
MPRINT(EM_DIAGRAM):   if not missing( T_DISCHARG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DISCHARG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DISCHARG - 0.00034394466312 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DISCHARG - 0.00671841200138 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DISCHARG - 0.00018125427961 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00301037364942;
MPRINT(EM_DIAGRAM):   if not missing( T_DISCLAIM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DISCLAIM - 0.00580357142857 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DISCLAIM - 0.00179441976193 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DISCLAIM - 0.00552455223989 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DISCLAIM - 0.00184673715055 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0012580771653;
MPRINT(EM_DIAGRAM):   if not missing( T_DISCUSS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DISCUSS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DISCUSS - 0.00964881206052 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DISCUSS - 0.00588936092218 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DISCUSS - 0.01105672497743 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00176276005904;
MPRINT(EM_DIAGRAM):   if not missing( T_DISEAS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DISEAS - 0.0313858003201 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DISEAS - 0.0001781369482 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DISEAS - 0.00991377986303 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DISEAS - 0.00081165923509 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00296395104832;
MPRINT(EM_DIAGRAM):   if not missing( T_DISK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DISK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DISK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DISK - 0.00659070839065 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DISK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00213873960444;
MPRINT(EM_DIAGRAM):   if not missing( T_DISPLAI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DISPLAI - 0.00106840931363 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DISPLAI - 0.01794699403792 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DISPLAI - 0.00128192835063 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00542321360685;
MPRINT(EM_DIAGRAM):   if not missing( T_DISTANC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DISTANC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DISTANC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DISTANC - 0.00291927032835 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DISTANC - 0.0009288764078 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00101539505943;
MPRINT(EM_DIAGRAM):   if not missing( T_DISTRIBUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DISTRIBUT - 0.0063577225762 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DISTRIBUT - 0.00632033307383 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DISTRIBUT - 0.04197221280826 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DISTRIBUT - 0.03401394703162 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00865567001839;
MPRINT(EM_DIAGRAM):   if not missing( T_DIVIS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DIVIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DIVIS - 0.00115642745773 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DIVIS - 0.00849039517793 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DIVIS - 0.00123616854207 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00258664269132;
MPRINT(EM_DIAGRAM):   if not missing( T_DOCTOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DOCTOR - 0.02276877789196 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DOCTOR - 0.00105636843467 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DOCTOR - 0.0120590707535 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DOCTOR - 0.00062804766283 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00317355505604;
MPRINT(EM_DIAGRAM):   if not missing( T_DOCUMENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DOCUMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DOCUMENT - 0.00645877377029 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DOCUMENT - 0.00684921019122 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DOCUMENT - 0.01131604983057 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00225265262107;
MPRINT(EM_DIAGRAM):   if not missing( T_DOESN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DOESN - 0.02163280895898 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DOESN - 0.00997490757885 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DOESN - 0.02013578659957 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DOESN - 0.00364096302828 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00556103648851;
MPRINT(EM_DIAGRAM):   if not missing( T_DOMAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DOMAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DOMAIN - 0.00080989177367 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DOMAIN - 0.0053376344373 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DOMAIN - 0.00022988175457 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00198093354506;
MPRINT(EM_DIAGRAM):   if not missing( T_DOMIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DOMIN - 0.00853658536585 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DOMIN - 0.00112157922888 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DOMIN - 0.00179355875982 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DOMIN - 0.00036846221833 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00117191651252;
MPRINT(EM_DIAGRAM):   if not missing( T_DON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DON - 0.06358579574759 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DON - 0.04257781482221 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DON - 0.04699216815844 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DON - 0.01708794042891 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00984988778005;
MPRINT(EM_DIAGRAM):   if not missing( T_DONAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DONAT - 0.01862436704004 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DONAT - 0.00004288836653 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DONAT - 0.002007267349 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DONAT - 0.00044398907103 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00093726289269;
MPRINT(EM_DIAGRAM):   if not missing( T_DORTMUND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DORTMUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DORTMUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DORTMUND - 0.00217927279423 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DORTMUND - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00139017437454;
MPRINT(EM_DIAGRAM):   if not missing( T_DOUBT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DOUBT - 0.01165214096248 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DOUBT - 0.01837909237516 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DOUBT - 0.00370429226115 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DOUBT - 0.00478372263036 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00225082578437;
MPRINT(EM_DIAGRAM):   if not missing( T_DOUG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DOUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DOUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DOUG - 0.00194876642438 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DOUG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00063036434083;
MPRINT(EM_DIAGRAM):   if not missing( T_DRAW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DRAW - 0.0019064516159 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DRAW - 0.00869103717883 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00311280364982;
MPRINT(EM_DIAGRAM):   if not missing( T_DRIVE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DRIVE - 0.00612575204552 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DRIVE - 0.00691300838395 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DRIVE - 0.00115376105117 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00209677995678;
MPRINT(EM_DIAGRAM):   if not missing( T_DRIVER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DRIVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DRIVER - 0.00046409571291 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DRIVER - 0.00364907201388 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DRIVER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00141394876959;
MPRINT(EM_DIAGRAM):   if not missing( T_DROP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DROP - 0.0115629984051 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DROP - 0.00229869553247 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DROP - 0.0044934518231 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DROP - 0.00332224476589 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00127223502901;
MPRINT(EM_DIAGRAM):   if not missing( T_DRUG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DRUG - 0.02267219149174 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DRUG - 0.00756992098475 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DRUG - 0.00738019670603 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DRUG - 0.00049748886572 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00270119779196;
MPRINT(EM_DIAGRAM):   if not missing( T_DUMP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DUMP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DUMP - 0.00144308998312 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DUMP - 0.00317268718251 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DUMP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00130714128869;
MPRINT(EM_DIAGRAM):   if not missing( T_DYER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_DYER - 0.00331632653061 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_DYER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_DYER - 0.00358464692655 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_DYER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00132814420771;
MPRINT(EM_DIAGRAM):   if not missing( T_EASI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EASI - 0.00556930969108 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EASI - 0.00312940055354 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EASI - 0.00894308759477 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EASI - 0.00814027395384 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00320186330027;
MPRINT(EM_DIAGRAM):   if not missing( T_EASILI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EASILI - 0.00338345864661 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EASILI - 0.00146077359002 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EASILI - 0.00494728830432 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EASILI - 0.00181037023654 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00121610185168;
MPRINT(EM_DIAGRAM):   if not missing( T_EAST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EAST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EAST - 0.02458622774162 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EAST - 0.00417333055704 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EAST - 0.01193741196265 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00259015158374;
MPRINT(EM_DIAGRAM):   if not missing( T_EAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EAT - 0.0067733939966 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EAT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00243733137189;
MPRINT(EM_DIAGRAM):   if not missing( T_ECHO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ECHO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ECHO - 0.00015805122493 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ECHO - 0.00162611224117 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ECHO - 0.00014649989921 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00051101876084;
MPRINT(EM_DIAGRAM):   if not missing( T_EDITOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EDITOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EDITOR - 0.00002683820206 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EDITOR - 0.0025930084232 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EDITOR - 0.00069842178482 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00083300301368;
MPRINT(EM_DIAGRAM):   if not missing( T_EDU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EDU - 0.30101978509179 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EDU - 0.01379553336129 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EDU - 0.02772271379686 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EDU - 0.00222718650926 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01018096044943;
MPRINT(EM_DIAGRAM):   if not missing( T_EDUC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EDUC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EDUC - 0.00316264737545 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EDUC - 0.00684731160028 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EDUC - 0.00872323500499 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00270090226812;
MPRINT(EM_DIAGRAM):   if not missing( T_EDWARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EDWARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EDWARD - 0.02038749905817 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EDWARD - 0.0014336705107 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EDWARD - 0.00028840027759 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00177494086708;
MPRINT(EM_DIAGRAM):   if not missing( T_EFFECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EFFECT - 0.01740296767237 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EFFECT - 0.00207450127697 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EFFECT - 0.00997682118034 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EFFECT - 0.00168765568803 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00170444052488;
MPRINT(EM_DIAGRAM):   if not missing( T_ELECTR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ELECTR - 0.00106195777728 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ELECTR - 0.01190336812793 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ELECTR - 0.00228886435451 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00421821746014;
MPRINT(EM_DIAGRAM):   if not missing( T_ELECTRON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ELECTRON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ELECTRON - 0.00212961866273 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ELECTRON - 0.02036891355292 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ELECTRON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00188195528935;
MPRINT(EM_DIAGRAM):   if not missing( T_EMAIL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EMAIL - 0.01031845666319 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EMAIL - 0.00326408484946 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EMAIL - 0.01860096673152 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EMAIL - 0.0010246425397 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00528353968317;
MPRINT(EM_DIAGRAM):   if not missing( T_EMPLOY ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EMPLOY - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EMPLOY - 0.05397888998965 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EMPLOY - 0.00395311005093 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EMPLOY - 0.00066282098169 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00515409865785;
MPRINT(EM_DIAGRAM):   if not missing( T_EMUL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EMUL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EMUL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EMUL - 0.00215130332843 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EMUL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00088865937451;
MPRINT(EM_DIAGRAM):   if not missing( T_ENERGI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ENERGI - 0.01209201163829 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ENERGI - 0.00030997481985 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ENERGI - 0.00603909150255 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ENERGI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00301158876412;
MPRINT(EM_DIAGRAM):   if not missing( T_ENGIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ENGIN - 0.00714974514395 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ENGIN - 0.01183692907104 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ENGIN - 0.02285631451975 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ENGIN - 0.00683820814221 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00841015892288;
MPRINT(EM_DIAGRAM):   if not missing( T_ENGLAND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ENGLAND - 0.00445269016697 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ENGLAND - 0.00003958926141 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ENGLAND - 0.00503479013767 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ENGLAND - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00200295700036;
MPRINT(EM_DIAGRAM):   if not missing( T_ENTIR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ENTIR - 0.0051724137931 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ENTIR - 0.00686759431295 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ENTIR - 0.00361991164303 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ENTIR - 0.01404504123068 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0013390826017;
MPRINT(EM_DIAGRAM):   if not missing( T_ENTRI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ENTRI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ENTRI - 0.0001628159152 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ENTRI - 0.00315006950807 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ENTRI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00118015441886;
MPRINT(EM_DIAGRAM):   if not missing( T_ENVIRON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ENVIRON - 0.00358543417366 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ENVIRON - 0.00184033923938 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ENVIRON - 0.00885945013717 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ENVIRON - 0.00096173366526 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00356414431245;
MPRINT(EM_DIAGRAM):   if not missing( T_EPROM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EPROM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EPROM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EPROM - 0.00271697023298 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EPROM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00151825687353;
MPRINT(EM_DIAGRAM):   if not missing( T_EQUAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EQUAL - 0.00226480836236 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EQUAL - 0.00426401614862 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EQUAL - 0.00416441177109 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EQUAL - 0.00189869407781 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00105921718436;
MPRINT(EM_DIAGRAM):   if not missing( T_EQUIP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EQUIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EQUIP - 0.00128404479807 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EQUIP - 0.00579619143493 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EQUIP - 0.00200021155134 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00154189777533;
MPRINT(EM_DIAGRAM):   if not missing( T_ERIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ERIC - 0.00340909090909 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ERIC - 0.00216447235655 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ERIC - 0.00307017197157 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ERIC - 0.00127975125739 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00135927744274;
MPRINT(EM_DIAGRAM):   if not missing( T_ERROR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ERROR - 0.00383275261324 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ERROR - 0.00107383008712 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ERROR - 0.00981826540857 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ERROR - 0.00074845783835 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00271516175395;
MPRINT(EM_DIAGRAM):   if not missing( T_ESCAP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ESCAP - 0.00459770114942 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ESCAP - 0.00323528324796 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ESCAP - 0.0061621735776 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ESCAP - 0.07451371257061 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00276025566871;
MPRINT(EM_DIAGRAM):   if not missing( T_ESSENTI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ESSENTI - 0.00506493506493 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ESSENTI - 0.00148200894699 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ESSENTI - 0.00236931801085 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ESSENTI - 0.00010756128235 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00073790807976;
MPRINT(EM_DIAGRAM):   if not missing( T_EUROP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EUROP - 0.00285714285714 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EUROP - 0.00589763736554 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EUROP - 0.0037899766342 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EUROP - 0.00869987029233 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0015116729632;
MPRINT(EM_DIAGRAM):   if not missing( T_EUROPEAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EUROPEAN - 0.00210084033613 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EUROPEAN - 0.00432130217553 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EUROPEAN - 0.00295197722005 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EUROPEAN - 0.00380823001949 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00109875133625;
MPRINT(EM_DIAGRAM):   if not missing( T_EVENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EVENT - 0.00183982683982 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EVENT - 0.00912516437317 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EVENT - 0.00899649435498 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EVENT - 0.00474782939972 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00292364919943;
MPRINT(EM_DIAGRAM):   if not missing( T_EVID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EVID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EVID - 0.01292170048621 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EVID - 0.00635991177486 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EVID - 0.00644098015178 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00243005461493;
MPRINT(EM_DIAGRAM):   if not missing( T_EXACT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXACT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXACT - 0.00302206116243 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXACT - 0.00693169769415 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXACT - 0.01286604210654 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00310857673179;
MPRINT(EM_DIAGRAM):   if not missing( T_EXECUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXECUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXECUT - 0.00400920084127 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXECUT - 0.0059324274527 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXECUT - 0.00756388265737 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00294424355401;
MPRINT(EM_DIAGRAM):   if not missing( T_EXERCIS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXERCIS - 0.00846611721611 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXERCIS - 0.00160358766278 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXERCIS - 0.00261822913418 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXERCIS - 0.00060543225263 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00097103763937;
MPRINT(EM_DIAGRAM):   if not missing( T_EXIST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXIST - 0.00589743589743 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXIST - 0.02482611990773 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXIST - 0.01223909855521 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXIST - 0.0846060224221 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00502953698354;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPANS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXPANS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXPANS - 0.04613558690337 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXPANS - 0.00202946533431 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXPANS - 0.00022044971742 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00340046185835;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXPECT - 0.00597402597402 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXPECT - 0.01000096515525 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXPECT - 0.00740035256842 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXPECT - 0.01130471270989 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00269631131976;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPENS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXPENS - 0.01755102040816 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXPENS - 0.00142319073705 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXPENS - 0.00528411622631 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXPENS - 0.00053024612257 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00171009293541;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPERI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXPERI - 0.00712360415864 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXPERI - 0.00267960471892 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXPERI - 0.01718259998624 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXPERI - 0.00416623999537 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00454901538184;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPERIENC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXPERIENC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXPERIENC - 0.00044381800089 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXPERIENC - 0.00428249023671 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXPERIENC - 0.00306628312498 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00165108790555;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPLAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXPLAIN - 0.00746909340659 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXPLAIN - 0.00762030185787 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXPLAIN - 0.00488888079438 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXPLAIN - 0.02050116163869 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00173085590668;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPLOD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXPLOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXPLOD - 0.000553503182 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXPLOD - 0.00168636670098 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXPLOD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00095733492949;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPOS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXPOS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXPOS - 0.00143746812148 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXPOS - 0.00546046524418 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXPOS - 0.00141962274401 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00244984919675;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPRESS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXPRESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXPRESS - 0.00756942166093 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXPRESS - 0.00986623800637 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXPRESS - 0.00426613865833 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00357692764758;
MPRINT(EM_DIAGRAM):   if not missing( T_EXTENS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXTENS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXTENS - 0.00066894152589 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXTENS - 0.00480198855871 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXTENS - 0.00050304787832 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00152332563386;
MPRINT(EM_DIAGRAM):   if not missing( T_EXTERMIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXTERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXTERMIN - 0.00599280288245 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXTERMIN - 0.00020559811058 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXTERMIN - 0.22999363744177 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00497723740546;
MPRINT(EM_DIAGRAM):   if not missing( T_EXTRA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_EXTRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_EXTRA - 0.00220865767348 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_EXTRA - 0.00411301235988 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_EXTRA - 0.00035349741505 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00162206258898;
MPRINT(EM_DIAGRAM):   if not missing( T_FACE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FACE - 0.00261904761904 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FACE - 0.00687286109491 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FACE - 0.00356553290154 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FACE - 0.00762451799765 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00130513626875;
MPRINT(EM_DIAGRAM):   if not missing( T_FACT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FACT - 0.02643355142844 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FACT - 0.05713515525517 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FACT - 0.02052281114008 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FACT - 0.04848447955913 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00905844390357;
MPRINT(EM_DIAGRAM):   if not missing( T_FAIL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FAIL - 0.00134660421545 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FAIL - 0.01945142539916 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FAIL - 0.00548834434779 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FAIL - 0.00218119207284 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00189340716007;
MPRINT(EM_DIAGRAM):   if not missing( T_FALS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FALS - 0.00489417989417 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FALS - 0.00936140942221 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FALS - 0.00388692474285 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FALS - 0.00170798328382 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00200115519851;
MPRINT(EM_DIAGRAM):   if not missing( T_FAMILI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FAMILI - 0.00321304227687 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FAMILI - 0.00708566555032 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FAMILI - 0.00307499729871 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FAMILI - 0.00926731138402 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0010617098683;
MPRINT(EM_DIAGRAM):   if not missing( T_FAST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FAST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FAST - 0.00051785362004 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FAST - 0.00991639800025 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FAST - 0.00109405390386 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00405268017018;
MPRINT(EM_DIAGRAM):   if not missing( T_FATHER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FATHER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FATHER - 0.01275342194917 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FATHER - 0.00326971300573 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FATHER - 0.01263703646779 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00213448164764;
MPRINT(EM_DIAGRAM):   if not missing( T_FAVOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FAVOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FAVOR - 0.03716093009495 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FAVOR - 0.00297720182842 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FAVOR - 0.0014692236313 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00370574060672;
MPRINT(EM_DIAGRAM):   if not missing( T_FAX ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FAX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FAX - 0.02275386245704 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FAX - 0.01948369283476 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FAX - 0.00020053140823 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00775350103067;
MPRINT(EM_DIAGRAM):   if not missing( T_FEATUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FEATUR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FEATUR - 0.00005498508529 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FEATUR - 0.00556692415511 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FEATUR - 0.00046440075318 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00181106049682;
MPRINT(EM_DIAGRAM):   if not missing( T_FEDER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FEDER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FEDER - 0.00311402464512 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FEDER - 0.00453568601319 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FEDER - 0.00050753692331 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00185249003726;
MPRINT(EM_DIAGRAM):   if not missing( T_FEED ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FEED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FEED - 0.00177864125489 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FEED - 0.00489337293114 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FEED - 0.00457676821971 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00169932310143;
MPRINT(EM_DIAGRAM):   if not missing( T_FEEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FEEL - 0.00544217687074 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FEEL - 0.02073274380074 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FEEL - 0.01061209346103 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FEEL - 0.00694175814312 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00374578836291;
MPRINT(EM_DIAGRAM):   if not missing( T_FIELD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FIELD - 0.00288461538461 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FIELD - 0.00342562279844 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FIELD - 0.00729820515598 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FIELD - 0.00382950543989 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00242494212998;
MPRINT(EM_DIAGRAM):   if not missing( T_FIGHT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FIGHT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FIGHT - 0.02046273420274 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FIGHT - 0.00172814698473 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FIGHT - 0.01455334333193 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00140645077343;
MPRINT(EM_DIAGRAM):   if not missing( T_FIGUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FIGUR - 0.00347985347985 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FIGUR - 0.00291189696526 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FIGUR - 0.00743565077796 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FIGUR - 0.00565267583111 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00226855640098;
MPRINT(EM_DIAGRAM):   if not missing( T_FILE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FILE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FILE - 0.00134358076379 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FILE - 0.01196500944186 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FILE - 0.00239935255717 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0025055111111;
MPRINT(EM_DIAGRAM):   if not missing( T_FILL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FILL - 0.00309973045822 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FILL - 0.00186646881599 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FILL - 0.00470820680296 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FILL - 0.00618037753536 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00211066261555;
MPRINT(EM_DIAGRAM):   if not missing( T_FILTER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FILTER - 0.00291732077446 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FILTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FILTER - 0.00531294070416 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FILTER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219406399074;
MPRINT(EM_DIAGRAM):   if not missing( T_FINAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FINAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FINAL - 0.03736855508369 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FINAL - 0.0077837334009 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FINAL - 0.01194119107621 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00424070680507;
MPRINT(EM_DIAGRAM):   if not missing( T_FIND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FIND - 0.01905247761539 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FIND - 0.01121385726814 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FIND - 0.02846844577353 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FIND - 0.00998118079804 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00694155278948;
MPRINT(EM_DIAGRAM):   if not missing( T_FINE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FINE - 0.00359788359788 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FINE - 0.00290651505565 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FINE - 0.01384728202702 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FINE - 0.00190421647934 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00461712815511;
MPRINT(EM_DIAGRAM):   if not missing( T_FIRE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FIRE - 0.00243902439024 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FIRE - 0.01115892032563 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FIRE - 0.00413691562432 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FIRE - 0.01184577276946 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00153737000258;
MPRINT(EM_DIAGRAM):   if not missing( T_FIX ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FIX - 0.00514069264069 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FIX - 0.0007579424761 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FIX - 0.00463243008394 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FIX - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00140058131075;
MPRINT(EM_DIAGRAM):   if not missing( T_FLAME ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FLAME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FLAME - 0.00257043828103 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FLAME - 0.00782608729306 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FLAME - 0.00180804697652 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00298285084094;
MPRINT(EM_DIAGRAM):   if not missing( T_FLASH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FLASH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FLASH - 0.00113583763574 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FLASH - 0.00282055478837 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FLASH - 0.00073668486761 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00127224231704;
MPRINT(EM_DIAGRAM):   if not missing( T_FLOOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FLOOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FLOOR - 0.00004288836653 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FLOOR - 0.00671597784313 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FLOOR - 0.00052106296845 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00253573530158;
MPRINT(EM_DIAGRAM):   if not missing( T_FLUKE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FLUKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FLUKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FLUKE - 0.00134802834114 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FLUKE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00068737291275;
MPRINT(EM_DIAGRAM):   if not missing( T_FOCU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FOCU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FOCU - 0.00209920096646 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FOCU - 0.00231493031883 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FOCU - 0.00005747043864 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00090487670647;
MPRINT(EM_DIAGRAM):   if not missing( T_FOLK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FOLK - 0.00301810865191 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FOLK - 0.00246303049152 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FOLK - 0.00554836549546 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FOLK - 0.00015030662551 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00196403375188;
MPRINT(EM_DIAGRAM):   if not missing( T_FOLLOWUP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FOLLOWUP - 0.00836784931679 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FOLLOWUP - 0.00563035915558 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FOLLOWUP - 0.01114003045074 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FOLLOWUP - 0.03840161618981 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00246291976259;
MPRINT(EM_DIAGRAM):   if not missing( T_FONT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FONT - 0.00420768322781 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00164279251308;
MPRINT(EM_DIAGRAM):   if not missing( T_FOOD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FOOD - 0.00139682539682 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FOOD - 0.00034995799453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FOOD - 0.01265742218896 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FOOD - 0.00408963081967 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00394717678326;
MPRINT(EM_DIAGRAM):   if not missing( T_FORC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FORC - 0.00535714285714 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FORC - 0.04472889793432 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FORC - 0.01048616623488 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FORC - 0.04987164683845 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00640848260229;
MPRINT(EM_DIAGRAM):   if not missing( T_FORGET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FORGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FORGET - 0.0138664250434 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FORGET - 0.00341777375827 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FORGET - 0.008578825767 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0021553496202;
MPRINT(EM_DIAGRAM):   if not missing( T_FORM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FORM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FORM - 0.00589329563745 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FORM - 0.00372403469494 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FORM - 0.00299953571996 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00082234008937;
MPRINT(EM_DIAGRAM):   if not missing( T_FORMAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FORMAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FORMAT - 0.00016044280493 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FORMAT - 0.004149145563 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FORMAT - 0.00043303433343 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00139954146674;
MPRINT(EM_DIAGRAM):   if not missing( T_FOURD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FOURD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FOURD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FOURD - 0.00227557117419 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FOURD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00150868082706;
MPRINT(EM_DIAGRAM):   if not missing( T_FRAME ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FRAME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FRAME - 0.00005921367788 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FRAME - 0.00376528646382 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FRAME - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00152748476207;
MPRINT(EM_DIAGRAM):   if not missing( T_FRANC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FRANC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FRANC - 0.00428432366453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FRANC - 0.00300503935635 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FRANC - 0.00369047887917 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0015476583055;
MPRINT(EM_DIAGRAM):   if not missing( T_FRANK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FRANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FRANK - 0.00024424841943 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FRANK - 0.00476769391838 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FRANK - 0.00013820671472 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00291720449836;
MPRINT(EM_DIAGRAM):   if not missing( T_FREE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FREE - 0.01429955890402 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FREE - 0.01060116505052 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FREE - 0.01095716674602 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FREE - 0.00983289236892 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00385845583978;
MPRINT(EM_DIAGRAM):   if not missing( T_FREEDOM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FREEDOM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FREEDOM - 0.0310468808521 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FREEDOM - 0.00430473485806 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FREEDOM - 0.00767998593581 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00373966079134;
MPRINT(EM_DIAGRAM):   if not missing( T_FREEMAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FREEMAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FREEMAN - 0.00867807912577 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FREEMAN - 0.00204022748314 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FREEMAN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00142842304278;
MPRINT(EM_DIAGRAM):   if not missing( T_FREQUENC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FREQUENC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FREQUENC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FREQUENC - 0.00645411749043 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FREQUENC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00173595481124;
MPRINT(EM_DIAGRAM):   if not missing( T_FREQUENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FREQUENT - 0.00558126084441 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FREQUENT - 0.00062018273697 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FREQUENT - 0.00443679431957 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FREQUENT - 0.00063119521532 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00106085287668;
MPRINT(EM_DIAGRAM):   if not missing( T_FRI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FRI - 0.00218487394957 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FRI - 0.01331533962697 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FRI - 0.02708197817934 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FRI - 0.00988268486734 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00708758507999;
MPRINT(EM_DIAGRAM):   if not missing( T_FRIEND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FRIEND - 0.00539908685846 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FRIEND - 0.00174620431637 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FRIEND - 0.01118748088625 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FRIEND - 0.0016223195211 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00303918802304;
MPRINT(EM_DIAGRAM):   if not missing( T_FULL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FULL - 0.0033269045323 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FULL - 0.00743750984664 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FULL - 0.00481865079245 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FULL - 0.00612724977977 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00111066612322;
MPRINT(EM_DIAGRAM):   if not missing( T_FUNCTION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FUNCTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FUNCTION - 0.0007266469497 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FUNCTION - 0.01571726940483 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FUNCTION - 0.00073753323104 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00494034847805;
MPRINT(EM_DIAGRAM):   if not missing( T_FUTUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_FUTUR - 0.01394438894438 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_FUTUR - 0.00504275358057 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_FUTUR - 0.0040054353944 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_FUTUR - 0.00788812401878 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00167553344557;
MPRINT(EM_DIAGRAM):   if not missing( T_GAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GAIN - 0.01325776220084 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GAIN - 0.00100053240044 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GAIN - 0.00546718015304 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GAIN - 0.0010437433116 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00181832177856;
MPRINT(EM_DIAGRAM):   if not missing( T_GAME ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GAME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GAME - 0.00107489918414 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GAME - 0.00528286456841 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GAME - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00200891508339;
MPRINT(EM_DIAGRAM):   if not missing( T_GARFIEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GARFIEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GARFIEL - 0.00991875869034 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GARFIEL - 0.00136656018607 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GARFIEL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00143371925356;
MPRINT(EM_DIAGRAM):   if not missing( T_GARI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GARI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GARI - 0.00186263904387 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GARI - 0.00382119052397 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GARI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00146311468555;
MPRINT(EM_DIAGRAM):   if not missing( T_GATEWAI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GATEWAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GATEWAI - 0.00617393629581 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GATEWAI - 0.00554653145119 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GATEWAI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0029105266781;
MPRINT(EM_DIAGRAM):   if not missing( T_GAZA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GAZA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GAZA - 0.02915560800869 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GAZA - 0.00007805883642 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GAZA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00140616537344;
MPRINT(EM_DIAGRAM):   if not missing( T_GEB ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GEB - 0.52752723698859 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GEB - 0.00272736661976 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00745996646351;
MPRINT(EM_DIAGRAM):   if not missing( T_GENER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GENER - 0.01128642434417 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GENER - 0.01217483039024 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GENER - 0.02445348179829 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GENER - 0.02131874664975 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00692775045609;
MPRINT(EM_DIAGRAM):   if not missing( T_GENOCID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GENOCID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GENOCID - 0.00216264077435 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GENOCID - 0.00080623450055 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GENOCID - 0.16370120295094 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0033964781147;
MPRINT(EM_DIAGRAM):   if not missing( T_GEORG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GEORG - 0.00428571428571 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GEORG - 0.02560009729502 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GEORG - 0.00465608726548 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GEORG - 0.00237674409027 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00287185277822;
MPRINT(EM_DIAGRAM):   if not missing( T_GEORGIA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GEORGIA - 0.00002616225832 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GEORGIA - 0.00493033486745 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GEORGIA - 0.00146383209512 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194129598548;
MPRINT(EM_DIAGRAM):   if not missing( T_GERMAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GERMAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GERMAN - 0.00369975654415 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GERMAN - 0.00205309044001 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GERMAN - 0.0199485700766 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00124697955099;
MPRINT(EM_DIAGRAM):   if not missing( T_GERMANI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GERMANI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GERMANI - 0.01556749754667 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GERMANI - 0.0091606633091 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GERMANI - 0.01397371638777 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00466772492892;
MPRINT(EM_DIAGRAM):   if not missing( T_GILBERT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GILBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GILBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GILBERT - 0.00381834559875 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GILBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00183758917774;
MPRINT(EM_DIAGRAM):   if not missing( T_GIVE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GIVE - 0.0173693039619 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GIVE - 0.02224527973115 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GIVE - 0.01542062487326 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GIVE - 0.01023699192578 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0039867412386;
MPRINT(EM_DIAGRAM):   if not missing( T_GOOD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GOOD - 0.0430146313931 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GOOD - 0.01232991559963 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GOOD - 0.03948584175299 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GOOD - 0.00579305165116 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01052053368232;
MPRINT(EM_DIAGRAM):   if not missing( T_GORDON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GORDON - 0.52763888332427 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GORDON - 0.00416197496039 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00770529986509;
MPRINT(EM_DIAGRAM):   if not missing( T_GOVERN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GOVERN - 0.0468083053692 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GOVERN - 0.00534960667051 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GOVERN - 0.10950420017627 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00484733616596;
MPRINT(EM_DIAGRAM):   if not missing( T_GRANT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GRANT - 0.00338455553394 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GRANT - 0.00563279674196 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GRANT - 0.00238168417136 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GRANT - 0.00659312171429 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00104327323121;
MPRINT(EM_DIAGRAM):   if not missing( T_GRAPHIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GRAPHIC - 0.00474297682108 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GRAPHIC - 0.00016748718469 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00115008148989;
MPRINT(EM_DIAGRAM):   if not missing( T_GREAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GREAT - 0.02212939274748 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GREAT - 0.01041834666574 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GREAT - 0.01045988368702 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GREAT - 0.00469934620242 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00269364504316;
MPRINT(EM_DIAGRAM):   if not missing( T_GREATLI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GREATLI - 0.00485175202156 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GREATLI - 0.00266418346209 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GREATLI - 0.01261734878701 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GREATLI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00443603176861;
MPRINT(EM_DIAGRAM):   if not missing( T_GREEK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GREEK - 0.0034575224565 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GREEK - 0.00443410881989 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GREEK - 0.05675253787213 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00300479601726;
MPRINT(EM_DIAGRAM):   if not missing( T_GREEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GREEN - 0.00920241163475 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GREEN - 0.00212765228673 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GREEN - 0.0040912528202 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GREEN - 0.00046901852618 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00202038618805;
MPRINT(EM_DIAGRAM):   if not missing( T_GREG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GREG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GREG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GREG - 0.00191013646021 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GREG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00062803068226;
MPRINT(EM_DIAGRAM):   if not missing( T_GROUND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GROUND - 0.00111245887672 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GROUND - 0.00550597105706 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GROUND - 0.00174630594838 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00185029919574;
MPRINT(EM_DIAGRAM):   if not missing( T_GROUP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GROUP - 0.00520348490273 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GROUP - 0.01325798429823 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GROUP - 0.01420523236172 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GROUP - 0.00572633939084 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00346574744131;
MPRINT(EM_DIAGRAM):   if not missing( T_GUESS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GUESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GUESS - 0.012617966265 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GUESS - 0.0105964766917 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GUESS - 0.0037388321883 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00348400287325;
MPRINT(EM_DIAGRAM):   if not missing( T_GUEST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GUEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GUEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GUEST - 0.00674508405108 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GUEST - 0.00022044971742 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00255283622948;
MPRINT(EM_DIAGRAM):   if not missing( T_GUI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_GUI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_GUI - 0.01756438283454 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_GUI - 0.00795385732629 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_GUI - 0.01009905453167 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00438034739676;
MPRINT(EM_DIAGRAM):   if not missing( T_HAMAZA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HAMAZA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HAMAZA - 0.01483665956559 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HAMAZA - 0.00007810371792 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HAMAZA - 0.0002905884771 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00103194638817;
MPRINT(EM_DIAGRAM):   if not missing( T_HAMID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HAMID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HAMID - 0.0130601718267 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HAMID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HAMID - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00130576514339;
MPRINT(EM_DIAGRAM):   if not missing( T_HAND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HAND - 0.01045864661654 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HAND - 0.00648516084556 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HAND - 0.00970323137246 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HAND - 0.01740783389597 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00271427476084;
MPRINT(EM_DIAGRAM):   if not missing( T_HANDL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HANDL - 0.00344827586206 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HANDL - 0.00121432425153 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HANDL - 0.00638416913775 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HANDL - 0.00105973905092 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00154236398924;
MPRINT(EM_DIAGRAM):   if not missing( T_HANG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HANG - 0.00029853377784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HANG - 0.00367429804913 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HANG - 0.00161327614879 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00177896025935;
MPRINT(EM_DIAGRAM):   if not missing( T_HAPPEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HAPPEN - 0.00454472667587 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HAPPEN - 0.02225414831932 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HAPPEN - 0.01316521654482 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HAPPEN - 0.02700126894819 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00501228233194;
MPRINT(EM_DIAGRAM):   if not missing( T_HAPPI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HAPPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HAPPI - 0.01406179002645 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HAPPI - 0.0018067160713 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HAPPI - 0.00085951645944 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00130082062226;
MPRINT(EM_DIAGRAM):   if not missing( T_HARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HARD - 0.02375816857499 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HARD - 0.009533036405 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HARD - 0.00874889762476 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HARD - 0.00753172031131 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00248526078029;
MPRINT(EM_DIAGRAM):   if not missing( T_HARDWAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HARDWAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HARDWAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HARDWAR - 0.0076032179904 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HARDWAR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00237089784904;
MPRINT(EM_DIAGRAM):   if not missing( T_HARRI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HARRI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HARRI - 0.01809468071487 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HARRI - 0.00375867339251 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HARRI - 0.00028701186878 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0026838604867;
MPRINT(EM_DIAGRAM):   if not missing( T_HARVARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HARVARD - 0.00274509803921 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HARVARD - 0.01321714645865 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HARVARD - 0.00332364480994 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HARVARD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00160851728566;
MPRINT(EM_DIAGRAM):   if not missing( T_HATE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HATE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HATE - 0.01521351269675 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HATE - 0.00338262740771 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HATE - 0.00523906477874 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00174716682227;
MPRINT(EM_DIAGRAM):   if not missing( T_HAVEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HAVEN - 0.00544217687074 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HAVEN - 0.00380098474895 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HAVEN - 0.00777376615327 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HAVEN - 0.00276741728851 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00250087600238;
MPRINT(EM_DIAGRAM):   if not missing( T_HEAD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEAD - 0.01307570478302 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEAD - 0.01859727539789 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEAD - 0.00974078742556 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEAD - 0.02965375234744 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00455817279962;
MPRINT(EM_DIAGRAM):   if not missing( T_HEADACH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEADACH - 0.01783824640967 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEADACH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEADACH - 0.00279580551595 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEADACH - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00100724295966;
MPRINT(EM_DIAGRAM):   if not missing( T_HEALTH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEALTH - 0.02246971771367 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEALTH - 0.00012778834161 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEALTH - 0.00840687264089 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEALTH - 0.00101964787072 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00233145980299;
MPRINT(EM_DIAGRAM):   if not missing( T_HEAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEAR - 0.00906305784725 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEAR - 0.01200682925568 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEAR - 0.01050375968925 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEAR - 0.00295606925004 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00335092305857;
MPRINT(EM_DIAGRAM):   if not missing( T_HEARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEARD - 0.02987557236885 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEARD - 0.01030944532864 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEARD - 0.01514124375323 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEARD - 0.01253362668158 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00597438096899;
MPRINT(EM_DIAGRAM):   if not missing( T_HEART ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEART - 0.00373376623376 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEART - 0.00412773998754 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEART - 0.00271586383954 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEART - 0.00544188208935 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00094210331067;
MPRINT(EM_DIAGRAM):   if not missing( T_HEAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEAT - 0.00668265497011 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEAT - 0.00295710059466 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00273442828722;
MPRINT(EM_DIAGRAM):   if not missing( T_HEAVI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEAVI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEAVI - 0.00133326953971 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEAVI - 0.00278454041244 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEAVI - 0.0046485600805 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00115029443936;
MPRINT(EM_DIAGRAM):   if not missing( T_HEIGHT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEIGHT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEIGHT - 0.00644888617898 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEIGHT - 0.00273524686469 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEIGHT - 0.00049471371767 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00136432012983;
MPRINT(EM_DIAGRAM):   if not missing( T_HELP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HELP - 0.00187969924812 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HELP - 0.00369809279955 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HELP - 0.00769876219873 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HELP - 0.00427970280367 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00203812864969;
MPRINT(EM_DIAGRAM):   if not missing( T_HENRI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HENRI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HENRI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HENRI - 0.0032113483166 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HENRI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00172495919791;
MPRINT(EM_DIAGRAM):   if not missing( T_HENRIK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HENRIK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HENRIK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HENRIK - 0.00149102332153 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HENRIK - 0.0315664126722 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00170641002758;
MPRINT(EM_DIAGRAM):   if not missing( T_HERNIA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HERNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HERNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HERNIA - 0.00148298063566 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HERNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00087033893902;
MPRINT(EM_DIAGRAM):   if not missing( T_HERNLEM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HERNLEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HERNLEM - 0.02624058864767 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HERNLEM - 0.00028905179092 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HERNLEM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00234978253817;
MPRINT(EM_DIAGRAM):   if not missing( T_HEWLETT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEWLETT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEWLETT - 0.00055034179121 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEWLETT - 0.00376728174332 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEWLETT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00129950752453;
MPRINT(EM_DIAGRAM):   if not missing( T_HEZBOLLAH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HEZBOLLAH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HEZBOLLAH - 0.01503160757595 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HEZBOLLAH - 0.00055216078922 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HEZBOLLAH - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0007727259057;
MPRINT(EM_DIAGRAM):   if not missing( T_HIGH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HIGH - 0.01012546397869 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HIGH - 0.00388221132141 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HIGH - 0.01012087585519 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HIGH - 0.00158183710897 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194351445074;
MPRINT(EM_DIAGRAM):   if not missing( T_HIGHER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HIGHER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HIGHER - 0.0017435250857 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HIGHER - 0.00628685706442 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HIGHER - 0.00445569693898 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194429327707;
MPRINT(EM_DIAGRAM):   if not missing( T_HINT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HINT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HINT - 0.00029907125291 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HINT - 0.00519227332986 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HINT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0017958697226;
MPRINT(EM_DIAGRAM):   if not missing( T_HISTOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HISTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HISTOR - 0.01090160479103 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HISTOR - 0.00207196933003 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HISTOR - 0.07046892119537 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.002311361812;
MPRINT(EM_DIAGRAM):   if not missing( T_HISTORI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HISTORI - 0.00932316973806 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HISTORI - 0.01636014130822 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HISTORI - 0.00432534336878 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HISTORI - 0.05086921402969 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00239989670906;
MPRINT(EM_DIAGRAM):   if not missing( T_HOLD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HOLD - 0.00526315789473 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HOLD - 0.00779651920625 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HOLD - 0.00880846732335 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HOLD - 0.00305796901775 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00320484943735;
MPRINT(EM_DIAGRAM):   if not missing( T_HOLOCAUST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HOLOCAUST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HOLOCAUST - 0.0352657203146 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HOLOCAUST - 0.00246579857295 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HOLOCAUST - 0.00776569642413 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00325904151938;
MPRINT(EM_DIAGRAM):   if not missing( T_HOME ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HOME - 0.00412962084058 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HOME - 0.02150093935518 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HOME - 0.0094087909114 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HOME - 0.00914848237528 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00278083727473;
MPRINT(EM_DIAGRAM):   if not missing( T_HOOK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HOOK - 0.00282065192278 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00095528457773;
MPRINT(EM_DIAGRAM):   if not missing( T_HOPE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HOPE - 0.02901513475551 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HOPE - 0.03069977501236 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HOPE - 0.01568990455675 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HOPE - 0.02534582597562 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00697338187503;
MPRINT(EM_DIAGRAM):   if not missing( T_HOSPIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HOSPIT - 0.02165279234764 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HOSPIT - 0.00243711230547 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HOSPIT - 0.00610732416884 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HOSPIT - 0.00282691641189 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00181211360165;
MPRINT(EM_DIAGRAM):   if not missing( T_HOST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HOST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HOST - 0.00014389091295 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HOST - 0.00317662058383 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HOST - 0.00025272608753 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00078986480585;
MPRINT(EM_DIAGRAM):   if not missing( T_HOUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HOUR - 0.00111111111111 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HOUR - 0.00046435290902 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HOUR - 0.00273404768314 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HOUR - 0.00256800726112 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00061849357484;
MPRINT(EM_DIAGRAM):   if not missing( T_HOUS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HOUS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HOUS - 0.01908988106097 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HOUS - 0.00652169889392 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HOUS - 0.00708930782493 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00301560441857;
MPRINT(EM_DIAGRAM):   if not missing( T_HOWARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HOWARD - 0.00244360902255 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HOWARD - 0.00016304211503 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HOWARD - 0.00331218854256 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HOWARD - 0.00057859824698 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00177949937958;
MPRINT(EM_DIAGRAM):   if not missing( T_HUMAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HUMAN - 0.02228910168718 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HUMAN - 0.04749369899317 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HUMAN - 0.00903009966298 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HUMAN - 0.03487802636056 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00594234893375;
MPRINT(EM_DIAGRAM):   if not missing( T_HUNTSVIL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_HUNTSVIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_HUNTSVIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_HUNTSVIL - 0.00259722277705 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_HUNTSVIL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00124012759529;
MPRINT(EM_DIAGRAM):   if not missing( T_ICON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ICON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ICON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ICON - 0.00166619960676 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ICON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00055107259938;
MPRINT(EM_DIAGRAM):   if not missing( T_IDEA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IDEA - 0.0036968766001 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IDEA - 0.0037512053666 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IDEA - 0.01188310297268 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IDEA - 0.00230630162752 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219729366702;
MPRINT(EM_DIAGRAM):   if not missing( T_IGNOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IGNOR - 0.00751400560224 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IGNOR - 0.01945129482383 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IGNOR - 0.00421754080427 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IGNOR - 0.01024791787871 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00256835669036;
MPRINT(EM_DIAGRAM):   if not missing( T_ILLEG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ILLEG - 0.00255516840882 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ILLEG - 0.00111389147085 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ILLEG - 0.00300065155668 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ILLEG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00117388870217;
MPRINT(EM_DIAGRAM):   if not missing( T_ILLINOI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ILLINOI - 0.00437317784256 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ILLINOI - 0.01118965583736 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ILLINOI - 0.00450723315866 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ILLINOI - 0.0036972846203 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0025342188591;
MPRINT(EM_DIAGRAM):   if not missing( T_IMAG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMAG - 0.00152597402597 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMAG - 0.00379474200228 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMAG - 0.0103334729267 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IMAG - 0.0006736585897 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00371744239839;
MPRINT(EM_DIAGRAM):   if not missing( T_IMAGIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMAGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMAGIN - 0.01029979982503 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMAGIN - 0.00395277616959 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IMAGIN - 0.00326463382814 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00175903409799;
MPRINT(EM_DIAGRAM):   if not missing( T_IMAK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMAK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMAK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMAK - 0.0022519230009 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IMAK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00088218753538;
MPRINT(EM_DIAGRAM):   if not missing( T_IMPLEMENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMPLEMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMPLEMENT - 0.00220100532421 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMPLEMENT - 0.01189547107411 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IMPLEMENT - 0.00329868192084 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00481758794375;
MPRINT(EM_DIAGRAM):   if not missing( T_IMPORT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMPORT - 0.00418118466898 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMPORT - 0.00938506538118 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMPORT - 0.01182274479025 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IMPORT - 0.01433143091656 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00405026322531;
MPRINT(EM_DIAGRAM):   if not missing( T_IMPRESS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMPRESS - 0.003231292517 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMPRESS - 0.0024083716105 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMPRESS - 0.00273136183652 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IMPRESS - 0.00158615626058 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00078006766729;
MPRINT(EM_DIAGRAM):   if not missing( T_IMPROV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IMPROV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IMPROV - 0.00120203018543 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IMPROV - 0.00526336022511 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IMPROV - 0.00182216446556 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00143804691246;
MPRINT(EM_DIAGRAM):   if not missing( T_INCLUD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INCLUD - 0.00977624759176 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INCLUD - 0.02598331861856 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INCLUD - 0.02151521119906 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INCLUD - 0.01943964996655 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00639259130048;
MPRINT(EM_DIAGRAM):   if not missing( T_INCREAS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INCREAS - 0.00676691729323 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INCREAS - 0.00325473451326 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INCREAS - 0.00625188112971 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INCREAS - 0.00536333907651 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0022007484701;
MPRINT(EM_DIAGRAM):   if not missing( T_INDIVIDU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INDIVIDU - 0.01160369311054 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INDIVIDU - 0.00964438901354 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INDIVIDU - 0.00476161033641 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INDIVIDU - 0.00546302192031 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00195896754419;
MPRINT(EM_DIAGRAM):   if not missing( T_INDUSTRI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INDUSTRI - 0.00204081632653 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INDUSTRI - 0.00085826569799 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INDUSTRI - 0.00342820103963 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INDUSTRI - 0.00048475233562 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00099527413339;
MPRINT(EM_DIAGRAM):   if not missing( T_INFECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INFECT - 0.01129843050248 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INFECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INFECT - 0.00557781160575 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INFECT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00206684941607;
MPRINT(EM_DIAGRAM):   if not missing( T_INFO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INFO - 0.00226480836236 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INFO - 0.00012551654887 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INFO - 0.01074334161642 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INFO - 0.00021419741956 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00198648562754;
MPRINT(EM_DIAGRAM):   if not missing( T_INFORM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INFORM - 0.02103546342613 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INFORM - 0.01093274554478 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INFORM - 0.0244284974262 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INFORM - 0.00711520224356 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00588961957597;
MPRINT(EM_DIAGRAM):   if not missing( T_INJECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INJECT - 0.0026592798873 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00126911944409;
MPRINT(EM_DIAGRAM):   if not missing( T_INPUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INPUT - 0.00025431764991 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INPUT - 0.00893730954361 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00251815963322;
MPRINT(EM_DIAGRAM):   if not missing( T_INSTAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INSTAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INSTAL - 0.00187161754566 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INSTAL - 0.00857145517153 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INSTAL - 0.00010583602101 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00225285122968;
MPRINT(EM_DIAGRAM):   if not missing( T_INSTITUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INSTITUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INSTITUT - 0.00547567939591 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INSTITUT - 0.01184912239069 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INSTITUT - 0.00086294900352 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00320854425513;
MPRINT(EM_DIAGRAM):   if not missing( T_INSTRUMENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INSTRUMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INSTRUMENT - 0.0001609436981 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INSTRUMENT - 0.00338261765347 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INSTRUMENT - 0.00045558883499 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00135281980465;
MPRINT(EM_DIAGRAM):   if not missing( T_INTEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INTEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INTEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INTEL - 0.00215079201431 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INTEL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00095281237059;
MPRINT(EM_DIAGRAM):   if not missing( T_INTELLECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INTELLECT - 0.52354950753203 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INTELLECT - 0.00089912552692 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INTELLECT - 0.00124192899153 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INTELLECT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00708111630147;
MPRINT(EM_DIAGRAM):   if not missing( T_INTELLIG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INTELLIG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INTELLIG - 0.00947144739986 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INTELLIG - 0.00533681890107 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INTELLIG - 0.00229398397026 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00177905851635;
MPRINT(EM_DIAGRAM):   if not missing( T_INTEND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INTEND - 0.0047619047619 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INTEND - 0.00260822947554 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INTEND - 0.00368298126347 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INTEND - 0.00069952938518 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00101157669027;
MPRINT(EM_DIAGRAM):   if not missing( T_INTEREST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INTEREST - 0.0164850917898 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INTEREST - 0.0149460043888 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INTEREST - 0.02041506721228 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INTEREST - 0.00437822145635 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00549624250428;
MPRINT(EM_DIAGRAM):   if not missing( T_INTERFAC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INTERFAC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INTERFAC - 0.0026090130161 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INTERFAC - 0.00817129854253 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INTERFAC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00292204328048;
MPRINT(EM_DIAGRAM):   if not missing( T_INTERGRAPH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INTERGRAPH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INTERGRAPH - 0.00757973256176 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INTERGRAPH - 0.0027812646316 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INTERGRAPH - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00176890623891;
MPRINT(EM_DIAGRAM):   if not missing( T_INTERN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INTERN - 0.01140989729225 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INTERN - 0.01785127336272 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INTERN - 0.0150877569517 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INTERN - 0.03122671780232 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00621639694053;
MPRINT(EM_DIAGRAM):   if not missing( T_INTERNET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INTERNET - 0.00110837438423 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INTERNET - 0.00283073143613 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INTERNET - 0.01161741900148 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INTERNET - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023033906012;
MPRINT(EM_DIAGRAM):   if not missing( T_INTERVIEW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INTERVIEW - 0.00226480836236 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INTERVIEW - 0.00380622635643 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INTERVIEW - 0.00327567836257 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INTERVIEW - 0.00160082167862 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00131283602566;
MPRINT(EM_DIAGRAM):   if not missing( T_INVENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INVENT - 0.00019257786479 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INVENT - 0.00367739466976 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00107987433874;
MPRINT(EM_DIAGRAM):   if not missing( T_INVOLV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_INVOLV - 0.01317920465243 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_INVOLV - 0.00833631572598 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_INVOLV - 0.00601715059418 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_INVOLV - 0.01172344900998 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00150034024945;
MPRINT(EM_DIAGRAM):   if not missing( T_IRAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IRAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IRAN - 0.00326649853396 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IRAN - 0.00324145157607 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IRAN - 0.00495990999793 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00186200990686;
MPRINT(EM_DIAGRAM):   if not missing( T_IRVIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_IRVIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_IRVIN - 0.03307138285559 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_IRVIN - 0.00011734224023 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_IRVIN - 0.00172168575492 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00278842131106;
MPRINT(EM_DIAGRAM):   if not missing( T_ISLAM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ISLAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ISLAM - 0.02763024810799 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ISLAM - 0.00145986151024 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ISLAM - 0.00412952843248 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00258012615718;
MPRINT(EM_DIAGRAM):   if not missing( T_ISLAND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ISLAND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ISLAND - 0.00213850676967 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ISLAND - 0.00317030447289 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ISLAND - 0.03081893417958 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178398874004;
MPRINT(EM_DIAGRAM):   if not missing( T_ISN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ISN - 0.04446610119314 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ISN - 0.02232425631916 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ISN - 0.01585018727493 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ISN - 0.00832228427968 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00721791445252;
MPRINT(EM_DIAGRAM):   if not missing( T_ISRA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ISRA - 0.11415514293679 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ISRA - 0.0012706657939 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ISRA - 0.00024132573925 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00454165303342;
MPRINT(EM_DIAGRAM):   if not missing( T_ISRAEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ISRAEL - 0.15705107170343 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ISRAEL - 0.00191598519262 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ISRAEL - 0.00089711042657 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00756701302047;
MPRINT(EM_DIAGRAM):   if not missing( T_ISSU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ISSU - 0.00418719211822 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ISSU - 0.01117615862164 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ISSU - 0.00842927543739 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ISSU - 0.01400457033283 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00241368153843;
MPRINT(EM_DIAGRAM):   if not missing( T_ITEM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ITEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ITEM - 0.00035706904583 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ITEM - 0.00680595907936 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ITEM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00283488644501;
MPRINT(EM_DIAGRAM):   if not missing( T_JACK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JACK - 0.00510560034709 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JACK - 0.00520651813527 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JACK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219587028146;
MPRINT(EM_DIAGRAM):   if not missing( T_JAKE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JAKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JAKE - 0.03795595773126 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JAKE - 0.00027526237862 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JAKE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00222287332558;
MPRINT(EM_DIAGRAM):   if not missing( T_JASON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JASON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JASON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JASON - 0.00232276451131 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JASON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00078452691979;
MPRINT(EM_DIAGRAM):   if not missing( T_JEFF ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JEFF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JEFF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JEFF - 0.00395324348847 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JEFF - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00177506348629;
MPRINT(EM_DIAGRAM):   if not missing( T_JEFFERSON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JEFFERSON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JEFFERSON - 0.00830063320614 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JEFFERSON - 0.00096101202605 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JEFFERSON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00108498431545;
MPRINT(EM_DIAGRAM):   if not missing( T_JERUSALEM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JERUSALEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JERUSALEM - 0.02663323742653 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JERUSALEM - 0.00048245174543 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JERUSALEM - 0.00259315511544 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00164044151436;
MPRINT(EM_DIAGRAM):   if not missing( T_JESS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JESS - 0.00616246498599 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JESS - 0.00177850256906 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JESS - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00098484340869;
MPRINT(EM_DIAGRAM):   if not missing( T_JEW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JEW - 0.00108225108225 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JEW - 0.0865133846299 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JEW - 0.00123027317977 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JEW - 0.00927130468047 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00429198045122;
MPRINT(EM_DIAGRAM):   if not missing( T_JEWISH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JEWISH - 0.07703175244183 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JEWISH - 0.0018907952664 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JEWISH - 0.01109713568211 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00405993378627;
MPRINT(EM_DIAGRAM):   if not missing( T_JIM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JIM - 0.0087869399591 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JIM - 0.00446861889155 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JIM - 0.00542982661595 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JIM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00246194433855;
MPRINT(EM_DIAGRAM):   if not missing( T_JIMMI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JIMMI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JIMMI - 0.04882310954297 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JIMMI - 0.00024501526378 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JIMMI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0040003533925;
MPRINT(EM_DIAGRAM):   if not missing( T_JOEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JOEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JOEL - 0.0000260223532 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JOEL - 0.0021641617819 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JOEL - 0.00557666593015 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00077228625374;
MPRINT(EM_DIAGRAM):   if not missing( T_JOHN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JOHN - 0.0136011723275 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JOHN - 0.00708057425429 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JOHN - 0.01405944602138 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JOHN - 0.00204639814371 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00403753054142;
MPRINT(EM_DIAGRAM):   if not missing( T_JOSEPH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JOSEPH - 0.00306122448979 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JOSEPH - 0.00314155755355 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JOSEPH - 0.00378566199501 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JOSEPH - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00160166102497;
MPRINT(EM_DIAGRAM):   if not missing( T_JOYSTICK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JOYSTICK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JOYSTICK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JOYSTICK - 0.00216426537927 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JOYSTICK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00094183560601;
MPRINT(EM_DIAGRAM):   if not missing( T_JUSTIFI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_JUSTIFI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_JUSTIFI - 0.0302146239377 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_JUSTIFI - 0.00209459538817 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_JUSTIFI - 0.00650203065369 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00272608360655;
MPRINT(EM_DIAGRAM):   if not missing( T_KEI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KEI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KEI - 0.00057066832998 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KEI - 0.00438393402172 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KEI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00131549354222;
MPRINT(EM_DIAGRAM):   if not missing( T_KEITH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KEITH - 0.00446428571428 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KEITH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KEITH - 0.00267836640787 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KEITH - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00149674547113;
MPRINT(EM_DIAGRAM):   if not missing( T_KEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KEN - 0.00647878198898 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KEN - 0.00402721162431 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KEN - 0.00829636582297 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0012054453164;
MPRINT(EM_DIAGRAM):   if not missing( T_KENNETH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KENNETH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KENNETH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KENNETH - 0.00493416125117 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KENNETH - 0.00066102591221 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00223860566422;
MPRINT(EM_DIAGRAM):   if not missing( T_KEYBOARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KEYBOARD - 0.00413505027088 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00128522091314;
MPRINT(EM_DIAGRAM):   if not missing( T_KEYWORD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KEYWORD - 0.00520466807412 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KEYWORD - 0.00133089890503 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KEYWORD - 0.02042696650539 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KEYWORD - 0.00253636802642 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00455869962824;
MPRINT(EM_DIAGRAM):   if not missing( T_KIDNEI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KIDNEI - 0.00688775510204 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KIDNEI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KIDNEI - 0.00228320060634 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KIDNEI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00146625350814;
MPRINT(EM_DIAGRAM):   if not missing( T_KILL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KILL - 0.00777367286801 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KILL - 0.07203680123132 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KILL - 0.00357438648685 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KILL - 0.03434018164234 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00467303917338;
MPRINT(EM_DIAGRAM):   if not missing( T_KIND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KIND - 0.01197685698447 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KIND - 0.00940855402262 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KIND - 0.01285623966118 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KIND - 0.00677816119563 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00342577386398;
MPRINT(EM_DIAGRAM):   if not missing( T_KIRLIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KIRLIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KIRLIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KIRLIAN - 0.00375448961001 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KIRLIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00182585141868;
MPRINT(EM_DIAGRAM):   if not missing( T_KLUTE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KLUTE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KLUTE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KLUTE - 0.00178199620167 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KLUTE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0011039233504;
MPRINT(EM_DIAGRAM):   if not missing( T_KNOW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KNOW - 0.0020757020757 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KNOW - 0.00151852844582 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KNOW - 0.0034326668348 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KNOW - 0.00348797921805 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00176714374786;
MPRINT(EM_DIAGRAM):   if not missing( T_KNOWLEDG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KNOWLEDG - 0.0079617146314 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KNOWLEDG - 0.00431432790095 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KNOWLEDG - 0.00739749662392 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KNOWLEDG - 0.00298309471221 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00242208081217;
MPRINT(EM_DIAGRAM):   if not missing( T_KRILLEAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_KRILLEAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_KRILLEAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_KRILLEAN - 0.00404797591372 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_KRILLEAN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00138569801364;
MPRINT(EM_DIAGRAM):   if not missing( T_LAB ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LAB - 0.00291005291005 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LAB - 0.00652019022082 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LAB - 0.00462961663253 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LAB - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00148018270912;
MPRINT(EM_DIAGRAM):   if not missing( T_LABEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LABEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LABEL - 0.00269863737369 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LABEL - 0.00293814599231 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LABEL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00112659308084;
MPRINT(EM_DIAGRAM):   if not missing( T_LABORATORI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LABORATORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LABORATORI - 0.00064677076596 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LABORATORI - 0.01220769549128 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LABORATORI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00466305087958;
MPRINT(EM_DIAGRAM):   if not missing( T_LACK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LACK - 0.00378479614862 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LACK - 0.00338292436638 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LACK - 0.00523297448328 )**2;
MPRINT(EM_DIAGRAM):   end;
Sistema SAS
 
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00106242012699;
MPRINT(EM_DIAGRAM):   if not missing( T_LAND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LAND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LAND - 0.02539578845584 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LAND - 0.00208930570574 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LAND - 0.01419515167543 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00140020859994;
MPRINT(EM_DIAGRAM):   if not missing( T_LANGUAG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LANGUAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LANGUAG - 0.00462133491382 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LANGUAG - 0.00325147826154 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LANGUAG - 0.00103857055604 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00133076770781;
MPRINT(EM_DIAGRAM):   if not missing( T_LARG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LARG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LARG - 0.00561382825079 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LARG - 0.00692802487303 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LARG - 0.0049208565234 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0014863309173;
MPRINT(EM_DIAGRAM):   if not missing( T_LARRI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LARRI - 0.0017006802721 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LARRI - 0.0009790249255 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LARRI - 0.00308113135354 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LARRI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0011801363687;
MPRINT(EM_DIAGRAM):   if not missing( T_LASER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LASER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LASER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LASER - 0.00339598830928 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LASER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00135488816029;
MPRINT(EM_DIAGRAM):   if not missing( T_LAW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LAW - 0.01662785791008 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LAW - 0.01246698431323 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LAW - 0.00319720877244 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LAW - 0.00602329823097 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00142576413984;
MPRINT(EM_DIAGRAM):   if not missing( T_LEAD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LEAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LEAD - 0.006095471471 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LEAD - 0.01130763656576 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LEAD - 0.00487651116179 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00436866455648;
MPRINT(EM_DIAGRAM):   if not missing( T_LEADER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LEADER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LEADER - 0.02247245278316 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LEADER - 0.00044126579557 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LEADER - 0.01124649122113 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00170270372689;
MPRINT(EM_DIAGRAM):   if not missing( T_LEARN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LEARN - 0.00592705167173 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LEARN - 0.01088962383285 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LEARN - 0.00537942143853 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LEARN - 0.01163480464502 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0017132359204;
MPRINT(EM_DIAGRAM):   if not missing( T_LEAV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LEAV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LEAV - 0.03564415418754 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LEAV - 0.00656424418582 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LEAV - 0.00800493009595 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00397140170257;
MPRINT(EM_DIAGRAM):   if not missing( T_LEBANES ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LEBANES - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LEBANES - 0.05121150929548 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LEBANES - 0.00018456041065 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LEBANES - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00367030986612;
MPRINT(EM_DIAGRAM):   if not missing( T_LEBANON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LEBANON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LEBANON - 0.06023215040581 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LEBANON - 0.00008801046097 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LEBANON - 0.00117621188264 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00404830395532;
MPRINT(EM_DIAGRAM):   if not missing( T_LEFT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LEFT - 0.00869342079389 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LEFT - 0.01024430395202 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LEFT - 0.00929995262834 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LEFT - 0.01183349524153 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00267645904414;
MPRINT(EM_DIAGRAM):   if not missing( T_LEGAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LEGAL - 0.01428571428571 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LEGAL - 0.00739538335331 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LEGAL - 0.00450089731914 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LEGAL - 0.00299318891158 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00189657860295;
MPRINT(EM_DIAGRAM):   if not missing( T_LET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LET - 0.01693300271404 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LET - 0.0080328366169 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LET - 0.02156944836586 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00388391863536;
MPRINT(EM_DIAGRAM):   if not missing( T_LETTER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LETTER - 0.0018221574344 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LETTER - 0.00231066978281 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LETTER - 0.00313135812108 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LETTER - 0.01126979502497 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00100993062275;
MPRINT(EM_DIAGRAM):   if not missing( T_LEVEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LEVEL - 0.00797478350852 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LEVEL - 0.00150807009434 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LEVEL - 0.00916509164629 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LEVEL - 0.00156866125154 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229007745831;
MPRINT(EM_DIAGRAM):   if not missing( T_LIBRARI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LIBRARI - 0.00823846013501 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LIBRARI - 0.00031015788639 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LIBRARI - 0.00646970686168 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LIBRARI - 0.0022700190192 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00196673031209;
MPRINT(EM_DIAGRAM):   if not missing( T_LICENS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LICENS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LICENS - 0.00028188238086 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LICENS - 0.00460349444379 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LICENS - 0.00136213736079 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00137212566196;
MPRINT(EM_DIAGRAM):   if not missing( T_LIFE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LIFE - 0.00486196906677 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LIFE - 0.0062138208667 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LIFE - 0.00417787314262 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LIFE - 0.00523880397912 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00090490893758;
MPRINT(EM_DIAGRAM):   if not missing( T_LIGHT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LIGHT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LIGHT - 0.00168740578263 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LIGHT - 0.00627992109708 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LIGHT - 0.00103507644369 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00154979034131;
MPRINT(EM_DIAGRAM):   if not missing( T_LIMIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LIMIT - 0.00515109666559 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LIMIT - 0.00574017436111 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LIMIT - 0.00902761206505 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LIMIT - 0.00034264530033 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00307023576502;
MPRINT(EM_DIAGRAM):   if not missing( T_LINK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LINK - 0.00176870748299 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LINK - 0.0004754119941 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LINK - 0.00540052312709 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LINK - 0.00014020707506 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00170406458508;
MPRINT(EM_DIAGRAM):   if not missing( T_LINUX ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LINUX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LINUX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LINUX - 0.00274471561987 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LINUX - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00084709391139;
MPRINT(EM_DIAGRAM):   if not missing( T_LIST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LIST - 0.00224114277562 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LIST - 0.0104348064236 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LIST - 0.0029452642463 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00317252187615;
MPRINT(EM_DIAGRAM):   if not missing( T_LISTEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LISTEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LISTEN - 0.01009063845228 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LISTEN - 0.0037965487335 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LISTEN - 0.00026476623347 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00199063017054;
MPRINT(EM_DIAGRAM):   if not missing( T_LITERATUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LITERATUR - 0.03447760719572 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LITERATUR - 0.00247457415545 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LITERATUR - 0.00470860854339 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LITERATUR - 0.00043378105834 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00220424400083;
MPRINT(EM_DIAGRAM):   if not missing( T_LIVE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LIVE - 0.01449056235466 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LIVE - 0.03402128545972 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LIVE - 0.00864455778602 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LIVE - 0.03077130653044 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00308449074548;
MPRINT(EM_DIAGRAM):   if not missing( T_LIVNI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LIVNI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LIVNI - 0.03620587404293 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LIVNI - 0.00013619966134 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LIVNI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00204354647166;
MPRINT(EM_DIAGRAM):   if not missing( T_LOAD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LOAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LOAD - 0.0009902570556 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LOAD - 0.00457616764975 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LOAD - 0.00073690186139 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0011844264205;
MPRINT(EM_DIAGRAM):   if not missing( T_LOCAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LOCAL - 0.01346511627906 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LOCAL - 0.00283303470444 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LOCAL - 0.00891102570343 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LOCAL - 0.00544363920628 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00236816157294;
MPRINT(EM_DIAGRAM):   if not missing( T_LOCAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LOCAT - 0.0035238095238 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LOCAT - 0.00114045653871 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LOCAT - 0.00934968008496 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LOCAT - 0.00093126363045 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0035227590243;
MPRINT(EM_DIAGRAM):   if not missing( T_LOGIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LOGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LOGIC - 0.00263521897217 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LOGIC - 0.00389854565474 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LOGIC - 0.00063848144952 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00106227569748;
MPRINT(EM_DIAGRAM):   if not missing( T_LOGIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LOGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LOGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LOGIN - 0.00261435310814 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LOGIN - 0.00130872020939 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00069919543688;
MPRINT(EM_DIAGRAM):   if not missing( T_LONG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LONG - 0.02260376635992 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LONG - 0.00631142492407 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LONG - 0.01404198473568 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LONG - 0.00706274386029 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0029548016993;
MPRINT(EM_DIAGRAM):   if not missing( T_LONGER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LONGER - 0.00920446276982 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LONGER - 0.0022642759277 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LONGER - 0.00716582843199 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LONGER - 0.08344554955715 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00299604818357;
MPRINT(EM_DIAGRAM):   if not missing( T_LOOK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LOOK - 0.00444444444444 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LOOK - 0.00229941411301 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LOOK - 0.0101406750952 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LOOK - 0.0083977789413 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00449624703326;
MPRINT(EM_DIAGRAM):   if not missing( T_LOOP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LOOP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LOOP - 0.00032948094079 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LOOP - 0.0032741730023 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LOOP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00109396820135;
MPRINT(EM_DIAGRAM):   if not missing( T_LOST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LOST - 0.02426093050688 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LOST - 0.00404898666282 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LOST - 0.00659640136204 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LOST - 0.00815365864575 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00329640452097;
MPRINT(EM_DIAGRAM):   if not missing( T_LOT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LOT - 0.00489795918367 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LOT - 0.00426739935284 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LOT - 0.01102002575189 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LOT - 0.00411836971804 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00401396698521;
MPRINT(EM_DIAGRAM):   if not missing( T_LOVE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LOVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LOVE - 0.00850594258236 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LOVE - 0.00501201134437 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LOVE - 0.00342957874369 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00208679847332;
MPRINT(EM_DIAGRAM):   if not missing( T_LUCK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LUCK - 0.00836236933797 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LUCK - 0.00031060723714 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LUCK - 0.00580365207822 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LUCK - 0.00304832935071 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00206661211248;
MPRINT(EM_DIAGRAM):   if not missing( T_LUNG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LUNG - 0.00173847316704 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LUNG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LUNG - 0.00210949153684 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LUNG - 0.00036202389365 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00075559218664;
MPRINT(EM_DIAGRAM):   if not missing( T_LYME ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_LYME - 0.05202340681263 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_LYME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_LYME - 0.00146824895063 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_LYME - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00148488255884;
MPRINT(EM_DIAGRAM):   if not missing( T_MACHIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MACHIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MACHIN - 0.01768015920682 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MACHIN - 0.01414363508547 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MACHIN - 0.0008101569628 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00445586487322;
MPRINT(EM_DIAGRAM):   if not missing( T_MAHAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MAHAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MAHAN - 0.00005845735772 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MAHAN - 0.00284340475807 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MAHAN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00149597058008;
MPRINT(EM_DIAGRAM):   if not missing( T_MAIL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MAIL - 0.00252613240418 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MAIL - 0.00497237735277 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MAIL - 0.02415557506169 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MAIL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00543251060544;
MPRINT(EM_DIAGRAM):   if not missing( T_MAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MAIN - 0.00181446460516 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MAIN - 0.00259327937458 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MAIN - 0.00685798068797 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MAIN - 0.00070124680837 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00190048316924;
MPRINT(EM_DIAGRAM):   if not missing( T_MAINTAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MAINTAIN - 0.04932412568955 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MAINTAIN - 0.00788019581515 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MAINTAIN - 0.00360827278359 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MAINTAIN - 0.00059866629137 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0018765304159;
MPRINT(EM_DIAGRAM):   if not missing( T_MAJOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MAJOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MAJOR - 0.01286345791687 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MAJOR - 0.00895410623402 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MAJOR - 0.0092795563307 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00262997317414;
MPRINT(EM_DIAGRAM):   if not missing( T_MAKE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MAKE - 0.00664768232874 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MAKE - 0.01448650548816 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MAKE - 0.01173268152573 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MAKE - 0.0055252904768 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00445596680019;
MPRINT(EM_DIAGRAM):   if not missing( T_MAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MAN - 0.00505449650664 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MAN - 0.00728052517367 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MAN - 0.00330312253802 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00280303563129;
MPRINT(EM_DIAGRAM):   if not missing( T_MANAG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MANAG - 0.01037986367267 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MANAG - 0.00179491702249 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MANAG - 0.01421701619126 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MANAG - 0.00087009951635 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00477039637363;
MPRINT(EM_DIAGRAM):   if not missing( T_MANUAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MANUAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MANUAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MANUAL - 0.00466528200542 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MANUAL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00120482516905;
MPRINT(EM_DIAGRAM):   if not missing( T_MAP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MAP - 0.00259570494864 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MAP - 0.0004368328878 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MAP - 0.00290872463888 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MAP - 0.00028775650828 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00077081994028;
MPRINT(EM_DIAGRAM):   if not missing( T_MARC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MARC - 0.00163265306122 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MARC - 0.00617802621608 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MARC - 0.00248809251681 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MARC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00138131212656;
MPRINT(EM_DIAGRAM):   if not missing( T_MARK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MARK - 0.00287929125138 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MARK - 0.00866572447668 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MARK - 0.01024108456541 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MARK - 0.00196014636332 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00316774788826;
MPRINT(EM_DIAGRAM):   if not missing( T_MARKET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MARKET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MARKET - 0.00196754344614 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MARKET - 0.00327368112816 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MARKET - 0.00028864784686 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00114888976667;
MPRINT(EM_DIAGRAM):   if not missing( T_MARTIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MARTIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MARTIN - 0.00088340170751 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MARTIN - 0.00383820755312 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MARTIN - 0.00036863561453 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00153732389371;
MPRINT(EM_DIAGRAM):   if not missing( T_MASK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MASK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MASK - 0.0000934447618 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MASK - 0.00276853288909 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MASK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00106075604379;
MPRINT(EM_DIAGRAM):   if not missing( T_MASS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MASS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MASS - 0.00519414960199 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MASS - 0.00697610887221 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MASS - 0.0090533932888 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00356454329151;
MPRINT(EM_DIAGRAM):   if not missing( T_MASSACR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MASSACR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MASSACR - 0.02377409318428 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MASSACR - 0.00085246276876 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MASSACR - 0.12876481593259 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00466742406319;
MPRINT(EM_DIAGRAM):   if not missing( T_MATERI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MATERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MATERI - 0.00150954829398 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MATERI - 0.00373758224342 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MATERI - 0.00388059993095 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00133407689571;
MPRINT(EM_DIAGRAM):   if not missing( T_MATH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MATH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MATH - 0.00044549535656 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MATH - 0.00452247179984 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MATH - 0.00704548065498 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00156323380686;
MPRINT(EM_DIAGRAM):   if not missing( T_MATTER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MATTER - 0.01642998849674 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MATTER - 0.0237281898554 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MATTER - 0.00914929718574 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MATTER - 0.00376018355865 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00398519482548;
MPRINT(EM_DIAGRAM):   if not missing( T_MCGILL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MCGILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MCGILL - 0.0060361947031 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MCGILL - 0.0013595626221 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MCGILL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00069461155148;
MPRINT(EM_DIAGRAM):   if not missing( T_MEAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MEAN - 0.0021978021978 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MEAN - 0.01101022382508 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MEAN - 0.00840372751104 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MEAN - 0.00329004709382 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00272984949736;
MPRINT(EM_DIAGRAM):   if not missing( T_MEASUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MEASUR - 0.00211466165413 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MEASUR - 0.00229523429729 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MEASUR - 0.0057238505723 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MEASUR - 0.00069836022542 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00185017373208;
MPRINT(EM_DIAGRAM):   if not missing( T_MECHAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MECHAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MECHAN - 0.00252232223035 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MECHAN - 0.00522136426437 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MECHAN - 0.00040596968759 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00159789490913;
MPRINT(EM_DIAGRAM):   if not missing( T_MED ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MED - 0.21725781376542 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MED - 0.0640471177677 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01588003300758;
MPRINT(EM_DIAGRAM):   if not missing( T_MEDIA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MEDIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MEDIA - 0.01470618911139 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MEDIA - 0.00284443456097 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MEDIA - 0.00089521261342 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00181576148388;
MPRINT(EM_DIAGRAM):   if not missing( T_MEDIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MEDIC - 0.06489218354923 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MEDIC - 0.00131502163582 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MEDIC - 0.01823212924422 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MEDIC - 0.00208699132124 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00577261567568;
MPRINT(EM_DIAGRAM):   if not missing( T_MEDICIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MEDICIN - 0.01577342892244 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MEDICIN - 0.00902740475287 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MEDICIN - 0.00018382045754 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00195561474876;
MPRINT(EM_DIAGRAM):   if not missing( T_MELLON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MELLON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MELLON - 0.00130141941892 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MELLON - 0.00583748240555 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MELLON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00266728363251;
MPRINT(EM_DIAGRAM):   if not missing( T_MEMBER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MEMBER - 0.0051948051948 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MEMBER - 0.02694370101001 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MEMBER - 0.00517957058464 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MEMBER - 0.01968853937597 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00246757238331;
MPRINT(EM_DIAGRAM):   if not missing( T_MEMORI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MEMORI - 0.00370883608177 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MEMORI - 0.00797355784043 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MEMORI - 0.00260743443647 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00244757624292;
MPRINT(EM_DIAGRAM):   if not missing( T_MENTION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MENTION - 0.01795614797643 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MENTION - 0.02384379954857 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MENTION - 0.01503715725088 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MENTION - 0.01127872060936 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00639652634054;
MPRINT(EM_DIAGRAM):   if not missing( T_MENU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MENU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MENU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MENU - 0.00440299075285 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MENU - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0014378349836;
MPRINT(EM_DIAGRAM):   if not missing( T_MESSAG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MESSAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MESSAG - 0.00040024857543 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MESSAG - 0.00315957403525 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MESSAG - 0.00274416400758 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00110866187007;
MPRINT(EM_DIAGRAM):   if not missing( T_METAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_METAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_METAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_METAL - 0.00313628458241 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_METAL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00096887701045;
MPRINT(EM_DIAGRAM):   if not missing( T_METHOD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_METHOD - 0.00389491169784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_METHOD - 0.00257625089394 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_METHOD - 0.00534636874808 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_METHOD - 0.00876244800366 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00129091583658;
MPRINT(EM_DIAGRAM):   if not missing( T_METHODOLOG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_METHODOLOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_METHODOLOG - 0.00096664628625 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_METHODOLOG - 0.00338866620244 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_METHODOLOG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00132434197705;
MPRINT(EM_DIAGRAM):   if not missing( T_MICHAEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MICHAEL - 0.00145676691729 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MICHAEL - 0.00049699671383 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MICHAEL - 0.0086972207504 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MICHAEL - 0.00035581483451 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00222087040818;
MPRINT(EM_DIAGRAM):   if not missing( T_MIDDL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MIDDL - 0.00382916053019 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MIDDL - 0.02183953458866 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MIDDL - 0.0071205714201 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MIDDL - 0.00476005624977 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00365002484221;
MPRINT(EM_DIAGRAM):   if not missing( T_MIGRAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MIGRAIN - 0.05428703785345 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MIGRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MIGRAIN - 0.00216790068238 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MIGRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00190627301225;
MPRINT(EM_DIAGRAM):   if not missing( T_MIKE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MIKE - 0.00153846153846 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MIKE - 0.00173854272852 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MIKE - 0.00499334664874 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MIKE - 0.0000584883274 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0015123279714;
MPRINT(EM_DIAGRAM):   if not missing( T_MILE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MILE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MILE - 0.00075414347372 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MILE - 0.00128005201452 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MILE - 0.00329831869018 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00044868641264;
MPRINT(EM_DIAGRAM):   if not missing( T_MILITARI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MILITARI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MILITARI - 0.01746972964252 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MILITARI - 0.00287602519587 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MILITARI - 0.01581206899289 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00147527848669;
MPRINT(EM_DIAGRAM):   if not missing( T_MILLION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MILLION - 0.01086309523809 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MILLION - 0.01368329613403 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MILLION - 0.00308072910705 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MILLION - 0.17063427934287 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00524277116632;
MPRINT(EM_DIAGRAM):   if not missing( T_MIND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MIND - 0.00257475083056 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MIND - 0.01226246388662 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MIND - 0.01002746143421 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MIND - 0.00475865780298 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00323808521865;
MPRINT(EM_DIAGRAM):   if not missing( T_MINUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MINUT - 0.00651629072681 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MINUT - 0.00107800463476 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MINUT - 0.00632396049274 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MINUT - 0.00021947966436 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00204054070681;
MPRINT(EM_DIAGRAM):   if not missing( T_MISC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MISC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MISC - 0.0011918520342 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MISC - 0.00465974597261 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MISC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178217939395;
MPRINT(EM_DIAGRAM):   if not missing( T_MISS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MISS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MISS - 0.00222838973194 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MISS - 0.00581007279309 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MISS - 0.00239572312141 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00191616964231;
MPRINT(EM_DIAGRAM):   if not missing( T_MISTAK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MISTAK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MISTAK - 0.00445113646421 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MISTAK - 0.00412747279316 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MISTAK - 0.00252877572375 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00151864190518;
MPRINT(EM_DIAGRAM):   if not missing( T_MODE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MODE - 0.00322802197802 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MODE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MODE - 0.00632964101106 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MODE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00189671735661;
MPRINT(EM_DIAGRAM):   if not missing( T_MODEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MODEL - 0.00175824175824 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MODEL - 0.00060740418085 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MODEL - 0.00489557797377 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MODEL - 0.00032453535351 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00142222836541;
MPRINT(EM_DIAGRAM):   if not missing( T_MODIFI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MODIFI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MODIFI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MODIFI - 0.00587845229542 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MODIFI - 0.00092606643657 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00195764830047;
MPRINT(EM_DIAGRAM):   if not missing( T_MODUL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MODUL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MODUL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MODUL - 0.00252280098925 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MODUL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00076654139153;
MPRINT(EM_DIAGRAM):   if not missing( T_MON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MON - 0.01684778611965 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MON - 0.01235562082413 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MON - 0.01046111110474 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00256503596773;
MPRINT(EM_DIAGRAM):   if not missing( T_MONEI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MONEI - 0.00658018796192 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MONEI - 0.00229778864435 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MONEI - 0.00600311884583 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MONEI - 0.00068409469694 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00187557627564;
MPRINT(EM_DIAGRAM):   if not missing( T_MONITOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MONITOR - 0.00176870748299 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MONITOR - 0.0019725883118 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MONITOR - 0.00527336283166 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MONITOR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00231943150303;
MPRINT(EM_DIAGRAM):   if not missing( T_MONTH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MONTH - 0.00669160626607 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MONTH - 0.00587194629505 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MONTH - 0.01044865624411 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MONTH - 0.01465021106648 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00346354313351;
MPRINT(EM_DIAGRAM):   if not missing( T_MORAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MORAL - 0.00501253132832 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MORAL - 0.01100487294641 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MORAL - 0.00253444957424 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MORAL - 0.00394966793195 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00201190877501;
MPRINT(EM_DIAGRAM):   if not missing( T_MOTIF ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MOTIF - 0.01097691566995 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00293609315228;
MPRINT(EM_DIAGRAM):   if not missing( T_MOTOROLA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MOTOROLA - 0.0074679560036 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00286625253481;
MPRINT(EM_DIAGRAM):   if not missing( T_MOUNTAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MOUNTAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MOUNTAIN - 0.00131327292303 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MOUNTAIN - 0.00288812612659 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MOUNTAIN - 0.10025929299866 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00202214134823;
MPRINT(EM_DIAGRAM):   if not missing( T_MOUS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MOUS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MOUS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MOUS - 0.00618507888505 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MOUS - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00232660840511;
MPRINT(EM_DIAGRAM):   if not missing( T_MOVE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MOVE - 0.00506912442396 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MOVE - 0.01359275180046 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MOVE - 0.01461658732378 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MOVE - 0.0056892208085 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00596126917315;
MPRINT(EM_DIAGRAM):   if not missing( T_MOVEMENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MOVEMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MOVEMENT - 0.00911334735049 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MOVEMENT - 0.00184541929642 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MOVEMENT - 0.00518898817585 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0008510564792;
MPRINT(EM_DIAGRAM):   if not missing( T_MSG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MSG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MSG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MSG - 0.00705701480748 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MSG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00269087752533;
MPRINT(EM_DIAGRAM):   if not missing( T_MULTI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MULTI - 0.00252228745379 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MULTI - 0.00059051824497 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MULTI - 0.00353573827459 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MULTI - 0.00008652467668 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0014539703943;
MPRINT(EM_DIAGRAM):   if not missing( T_MULTIPL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MULTIPL - 0.01471804511278 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MULTIPL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MULTIPL - 0.00781998477346 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MULTIPL - 0.00073993748803 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00332576861483;
MPRINT(EM_DIAGRAM):   if not missing( T_MURDER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MURDER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MURDER - 0.03078845731172 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MURDER - 0.00185636780821 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MURDER - 0.03255958638285 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00258729287262;
MPRINT(EM_DIAGRAM):   if not missing( T_MUSCL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MUSCL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MUSCL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MUSCL - 0.00311177583874 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MUSCL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00094511959512;
MPRINT(EM_DIAGRAM):   if not missing( T_MUSLIM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_MUSLIM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_MUSLIM - 0.0210004698586 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_MUSLIM - 0.00206750602599 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_MUSLIM - 0.09227209843841 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00267635098816;
MPRINT(EM_DIAGRAM):   if not missing( T_NAFTALI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NAFTALI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NAFTALI - 0.01480638063638 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NAFTALI - 0.00015234081186 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NAFTALI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00138175369683;
MPRINT(EM_DIAGRAM):   if not missing( T_NAME ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NAME - 0.00672268907563 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NAME - 0.01075093806289 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NAME - 0.00953681362701 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NAME - 0.00927042724491 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00368308328296;
MPRINT(EM_DIAGRAM):   if not missing( T_NASA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NASA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NASA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NASA - 0.00663726273532 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NASA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00238580392839;
MPRINT(EM_DIAGRAM):   if not missing( T_NATION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NATION - 0.00225563909774 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NATION - 0.01912941109305 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NATION - 0.00786674620371 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NATION - 0.02467565165695 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023241280317;
MPRINT(EM_DIAGRAM):   if not missing( T_NATUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NATUR - 0.00884859043395 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NATUR - 0.00273432198709 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NATUR - 0.00829771351926 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NATUR - 0.00295566465638 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00258588927176;
MPRINT(EM_DIAGRAM):   if not missing( T_NAZI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NAZI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NAZI - 0.03218813825339 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NAZI - 0.00031109786153 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NAZI - 0.04067911686727 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00265387840865;
MPRINT(EM_DIAGRAM):   if not missing( T_NECESSARILI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NECESSARILI - 0.00570467783582 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NECESSARILI - 0.00231926523319 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NECESSARILI - 0.00464652189353 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NECESSARILI - 0.00082400902073 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00143041297526;
MPRINT(EM_DIAGRAM):   if not missing( T_NEED ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NEED - 0.01118541033434 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NEED - 0.00383158257085 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NEED - 0.01116398605382 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NEED - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00410717982576;
MPRINT(EM_DIAGRAM):   if not missing( T_NEEDL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NEEDL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NEEDL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NEEDL - 0.00337756815188 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NEEDL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00185773368082;
MPRINT(EM_DIAGRAM):   if not missing( T_NEGOTI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NEGOTI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NEGOTI - 0.02205304823802 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NEGOTI - 0.00008320811087 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NEGOTI - 0.00209832888282 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00132023898709;
MPRINT(EM_DIAGRAM):   if not missing( T_NET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NET - 0.00281954887218 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NET - 0.0145443437418 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NET - 0.00899904994606 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NET - 0.00491068981457 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00324352254685;
MPRINT(EM_DIAGRAM):   if not missing( T_NETANYAHU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NETANYAHU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NETANYAHU - 0.01331596521722 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NETANYAHU - 0.00091682874062 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NETANYAHU - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00154728284925;
MPRINT(EM_DIAGRAM):   if not missing( T_NETCOM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NETCOM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NETCOM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NETCOM - 0.00572010312646 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NETCOM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00208963846776;
MPRINT(EM_DIAGRAM):   if not missing( T_NETNEW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NETNEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NETNEW - 0.00068537747164 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NETNEW - 0.00462422120748 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NETNEW - 0.00204918032786 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00213217876406;
MPRINT(EM_DIAGRAM):   if not missing( T_NETWORK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NETWORK - 0.00256991685563 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NETWORK - 0.01304455453478 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NETWORK - 0.01348915571318 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NETWORK - 0.00611217126865 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00387809117101;
MPRINT(EM_DIAGRAM):   if not missing( T_NEUTRAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NEUTRAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NEUTRAL - 0.01568013869739 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NEUTRAL - 0.00331971170273 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NEUTRAL - 0.0019075393551 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00246448468608;
MPRINT(EM_DIAGRAM):   if not missing( T_NEW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NEW - 0.01643782890944 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NEW - 0.02636557601525 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NEW - 0.03514098551917 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NEW - 0.0077317623502 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00609636093392;
MPRINT(EM_DIAGRAM):   if not missing( T_NEWS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NEWS - 0.01534081958848 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NEWS - 0.01711483332463 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00584575256874;
MPRINT(EM_DIAGRAM):   if not missing( T_NEWSREAD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NEWSREAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NEWSREAD - 0.00107853987849 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NEWSREAD - 0.01939141936433 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NEWSREAD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00650673348804;
MPRINT(EM_DIAGRAM):   if not missing( T_NICE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NICE - 0.00486322188449 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NICE - 0.01106138531665 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NICE - 0.00686550656728 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NICE - 0.00098125600322 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00235840967313;
MPRINT(EM_DIAGRAM):   if not missing( T_NIGHT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NIGHT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NIGHT - 0.00035117657158 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NIGHT - 0.00402329444166 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NIGHT - 0.00582304258613 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00124865194761;
MPRINT(EM_DIAGRAM):   if not missing( T_NNTP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NNTP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NNTP - 0.00598457950164 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NNTP - 0.00250771110715 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NNTP - 0.00207804202262 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00152263773756;
MPRINT(EM_DIAGRAM):   if not missing( T_NOIS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NOIS - 0.00510204030232 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NOIS - 0.00460478349112 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NOIS - 0.00273275125329 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00153852325528;
MPRINT(EM_DIAGRAM):   if not missing( T_NORMAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NORMAL - 0.02080494067336 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NORMAL - 0.00506642939954 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NORMAL - 0.01100384348695 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NORMAL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00374738845374;
MPRINT(EM_DIAGRAM):   if not missing( T_NORTH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NORTH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NORTH - 0.00342950526142 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NORTH - 0.00375069677249 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NORTH - 0.00848356252166 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00159797990343;
MPRINT(EM_DIAGRAM):   if not missing( T_NOTE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NOTE - 0.00828457257028 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NOTE - 0.01293245621776 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NOTE - 0.01004952935306 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NOTE - 0.00397898256965 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00313313921835;
MPRINT(EM_DIAGRAM):   if not missing( T_NOTIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NOTIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NOTIC - 0.00335260031312 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NOTIC - 0.01277825528517 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NOTIC - 0.00145425700687 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00473147168119;
MPRINT(EM_DIAGRAM):   if not missing( T_NUCLEAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NUCLEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NUCLEAR - 0.00374057239736 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NUCLEAR - 0.00554975534107 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NUCLEAR - 0.00108806035108 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00269911511361;
MPRINT(EM_DIAGRAM):   if not missing( T_NULL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NULL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NULL - 0.00010484798583 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NULL - 0.00235036185096 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NULL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00079521970989;
MPRINT(EM_DIAGRAM):   if not missing( T_NUMBER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_NUMBER - 0.00412636096336 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_NUMBER - 0.01047435899475 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_NUMBER - 0.01437878546631 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_NUMBER - 0.01194757021292 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00412508625723;
MPRINT(EM_DIAGRAM):   if not missing( T_OBJECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OBJECT - 0.00213700234192 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OBJECT - 0.01840909401152 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OBJECT - 0.00992744717336 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OBJECT - 0.0039541360779 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0041305268571;
MPRINT(EM_DIAGRAM):   if not missing( T_OBSERV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OBSERV - 0.00371727038393 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OBSERV - 0.00977539549127 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OBSERV - 0.00564989161458 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OBSERV - 0.00655101021344 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00291270759552;
MPRINT(EM_DIAGRAM):   if not missing( T_OBTAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OBTAIN - 0.0031746031746 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OBTAIN - 0.00353405280795 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OBTAIN - 0.00710034253083 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OBTAIN - 0.00573223905545 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0025307112198;
MPRINT(EM_DIAGRAM):   if not missing( T_OCCUP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OCCUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OCCUP - 0.02792509856021 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OCCUP - 0.00066025330082 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OCCUP - 0.01337419827118 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00158589771406;
MPRINT(EM_DIAGRAM):   if not missing( T_OCCUPI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OCCUPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OCCUPI - 0.05407635649363 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OCCUPI - 0.00084243935969 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OCCUPI - 0.01236015961522 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00340038509527;
MPRINT(EM_DIAGRAM):   if not missing( T_OCCUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OCCUR - 0.00671986743415 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OCCUR - 0.00840437455014 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OCCUR - 0.01198306471563 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OCCUR - 0.01123109964608 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00456375749957;
MPRINT(EM_DIAGRAM):   if not missing( T_ODOMET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ODOMET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ODOMET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ODOMET - 0.00184540051842 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ODOMET - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00095590642456;
MPRINT(EM_DIAGRAM):   if not missing( T_OFFER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OFFER - 0.00202156334231 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OFFER - 0.00355439728563 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OFFER - 0.00586006237192 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OFFER - 0.00239281137086 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00168300778834;
MPRINT(EM_DIAGRAM):   if not missing( T_OFFIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OFFIC - 0.01158064809298 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OFFIC - 0.00568278207311 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OFFIC - 0.01165773118232 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OFFIC - 0.04779424322037 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0047085335139;
MPRINT(EM_DIAGRAM):   if not missing( T_OFFICI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OFFICI - 0.00733082706766 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OFFICI - 0.01641883098798 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OFFICI - 0.00632043210226 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OFFICI - 0.05461017883154 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00452345220767;
MPRINT(EM_DIAGRAM):   if not missing( T_OHIO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OHIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OHIO - 0.01097553334059 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OHIO - 0.0045507880401 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OHIO - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00256982059258;
MPRINT(EM_DIAGRAM):   if not missing( T_OLWM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OLWM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OLWM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OLWM - 0.00452521627385 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OLWM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00183413139659;
MPRINT(EM_DIAGRAM):   if not missing( T_OMRAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OMRAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OMRAN - 0.01576928487912 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OMRAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OMRAN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0011796546841;
MPRINT(EM_DIAGRAM):   if not missing( T_OPEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OPEN - 0.00182823129251 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OPEN - 0.00501249098784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OPEN - 0.00833741665818 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OPEN - 0.00446844066473 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194180630613;
MPRINT(EM_DIAGRAM):   if not missing( T_OPENLOOK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OPENLOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OPENLOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OPENLOOK - 0.00412870814146 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OPENLOOK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00186932660163;
MPRINT(EM_DIAGRAM):   if not missing( T_OPENWINDOW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OPENWINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OPENWINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OPENWINDOW - 0.00900543260511 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OPENWINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00405802432923;
MPRINT(EM_DIAGRAM):   if not missing( T_OPER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OPER - 0.00272108843537 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OPER - 0.00616445465198 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OPER - 0.01038921855924 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OPER - 0.00619574719113 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00267764526657;
MPRINT(EM_DIAGRAM):   if not missing( T_OPINION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OPINION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OPINION - 0.06854554760998 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OPINION - 0.01406400555679 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OPINION - 0.00986587818401 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00691079636555;
MPRINT(EM_DIAGRAM):   if not missing( T_OPTION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OPTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OPTION - 0.00295882086168 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OPTION - 0.00673406118017 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OPTION - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00184418931238;
MPRINT(EM_DIAGRAM):   if not missing( T_ORDER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ORDER - 0.00515685233025 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ORDER - 0.00744812178141 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ORDER - 0.00772579057404 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ORDER - 0.00822548556459 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178081985251;
MPRINT(EM_DIAGRAM):   if not missing( T_ORG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ORG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ORG - 0.00768727958763 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ORG - 0.00365063116952 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ORG - 0.00423843476761 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0013421458959;
MPRINT(EM_DIAGRAM):   if not missing( T_ORGAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ORGAN - 0.01450949987701 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ORGAN - 0.01366211975476 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ORGAN - 0.00502516896267 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ORGAN - 0.0243858639181 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00226659111912;
MPRINT(EM_DIAGRAM):   if not missing( T_ORIGIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ORIGIN - 0.003125 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ORIGIN - 0.00907587770161 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ORIGIN - 0.01625084542416 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ORIGIN - 0.00361496701619 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00440179949478;
MPRINT(EM_DIAGRAM):   if not missing( T_OSCIL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OSCIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OSCIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OSCIL - 0.00121462195834 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OSCIL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00045301715535;
MPRINT(EM_DIAGRAM):   if not missing( T_OUTLET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OUTLET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OUTLET - 0.00226214577996 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OUTLET - 0.00447814931539 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OUTLET - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00249421422049;
MPRINT(EM_DIAGRAM):   if not missing( T_OUTPUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OUTPUT - 0.00979179857667 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00263837166284;
MPRINT(EM_DIAGRAM):   if not missing( T_OWNER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_OWNER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_OWNER - 0.01450800883548 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_OWNER - 0.00381477904668 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_OWNER - 0.003420773366 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00184720179662;
MPRINT(EM_DIAGRAM):   if not missing( T_PACKAG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PACKAG - 0.00125786163522 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PACKAG - 0.00011705587745 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PACKAG - 0.00630573280185 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PACKAG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00176573338729;
MPRINT(EM_DIAGRAM):   if not missing( T_PACKARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PACKARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PACKARD - 0.00055034179121 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PACKARD - 0.00413825977113 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PACKARD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00135684094824;
MPRINT(EM_DIAGRAM):   if not missing( T_PACKET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PACKET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PACKET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PACKET - 0.00189124642549 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PACKET - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00091294979784;
MPRINT(EM_DIAGRAM):   if not missing( T_PAGE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PAGE - 0.00618357638386 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PAGE - 0.00236190614054 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PAGE - 0.00629379996778 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PAGE - 0.02062809796959 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00186781837585;
MPRINT(EM_DIAGRAM):   if not missing( T_PAID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PAID - 0.0032967032967 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PAID - 0.00246913512405 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PAID - 0.00275265036834 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PAID - 0.00233024413352 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00095766523122;
MPRINT(EM_DIAGRAM):   if not missing( T_PAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PAIN - 0.01427404560409 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PAIN - 0.00548830697521 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PAIN - 0.00029642469879 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00175256121979;
MPRINT(EM_DIAGRAM):   if not missing( T_PALESTIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PALESTIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PALESTIN - 0.04817741017004 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PALESTIN - 0.00036057026775 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PALESTIN - 0.00150460292761 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0030773005993;
MPRINT(EM_DIAGRAM):   if not missing( T_PALESTINIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PALESTINIAN - 0.05494559733409 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PALESTINIAN - 0.00012392487493 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PALESTINIAN - 0.00176023157988 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00260941378693;
MPRINT(EM_DIAGRAM):   if not missing( T_PAPER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PAPER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PAPER - 0.0056432704975 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PAPER - 0.00574524836633 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PAPER - 0.00097412503514 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00182793831154;
MPRINT(EM_DIAGRAM):   if not missing( T_PARENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PARENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PARENT - 0.00122042560604 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PARENT - 0.00319732731466 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PARENT - 0.00226908444134 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00100272967776;
MPRINT(EM_DIAGRAM):   if not missing( T_PART ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PART - 0.00119047619047 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PART - 0.01132497736073 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PART - 0.00710163931776 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PART - 0.00312672452926 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00114007849037;
MPRINT(EM_DIAGRAM):   if not missing( T_PARTI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PARTI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PARTI - 0.00939379866704 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PARTI - 0.00205659134476 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PARTI - 0.00518642211197 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00088257477843;
MPRINT(EM_DIAGRAM):   if not missing( T_PASS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PASS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PASS - 0.00228877294095 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PASS - 0.00450825537938 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PASS - 0.04027093285879 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00110880111603;
MPRINT(EM_DIAGRAM):   if not missing( T_PATCH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PATCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PATCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PATCH - 0.00817815121959 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PATCH - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00304626901563;
MPRINT(EM_DIAGRAM):   if not missing( T_PATIENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PATIENT - 0.0555458558462 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PATIENT - 0.01381856742062 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PATIENT - 0.00040625149357 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00504883490175;
MPRINT(EM_DIAGRAM):   if not missing( T_PATRICK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PATRICK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PATRICK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PATRICK - 0.00417169410221 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PATRICK - 0.0016399100737 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00203962976377;
MPRINT(EM_DIAGRAM):   if not missing( T_PAUL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PAUL - 0.00174216027874 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PAUL - 0.00357930258051 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PAUL - 0.00487170463937 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PAUL - 0.00142843711564 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00163838002603;
MPRINT(EM_DIAGRAM):   if not missing( T_PEAC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PEAC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PEAC - 0.07738274308604 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PEAC - 0.00096875207427 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PEAC - 0.01702365249229 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00568974473424;
MPRINT(EM_DIAGRAM):   if not missing( T_PERFORM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PERFORM - 0.00833228074607 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PERFORM - 0.00056870834655 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PERFORM - 0.00606525982725 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PERFORM - 0.00718697865914 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00186142275101;
MPRINT(EM_DIAGRAM):   if not missing( T_PERIOD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PERIOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PERIOD - 0.00458409395392 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PERIOD - 0.00557206428886 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PERIOD - 0.01163119577667 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00205552971612;
MPRINT(EM_DIAGRAM):   if not missing( T_PERSIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PERSIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PERSIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PERSIAN - 0.00078783398685 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PERSIAN - 0.02577245837979 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00105746971656;
MPRINT(EM_DIAGRAM):   if not missing( T_PERSON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PERSON - 0.01154901540539 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PERSON - 0.01105369338307 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PERSON - 0.01043142025461 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PERSON - 0.01620090403013 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229967059068;
MPRINT(EM_DIAGRAM):   if not missing( T_PETER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PETER - 0.00505418719211 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PETER - 0.00867333654904 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PETER - 0.00410624016939 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PETER - 0.00308043325162 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00177823292769;
MPRINT(EM_DIAGRAM):   if not missing( T_PHONE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PHONE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PHONE - 0.0011549686425 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PHONE - 0.01745678652206 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PHONE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00507930156386;
MPRINT(EM_DIAGRAM):   if not missing( T_PHOTOGRAPHI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PHOTOGRAPHI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PHOTOGRAPHI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PHOTOGRAPHI - 0.00325447272638 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PHOTOGRAPHI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00100984165347;
MPRINT(EM_DIAGRAM):   if not missing( T_PHYSIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PHYSIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PHYSIC - 0.00527201983201 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PHYSIC - 0.00746748187117 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PHYSIC - 0.0001985746751 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00299009407027;
MPRINT(EM_DIAGRAM):   if not missing( T_PHYSICIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PHYSICIAN - 0.04128065919302 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PHYSICIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PHYSICIAN - 0.00498112580644 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PHYSICIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00203702940611;
MPRINT(EM_DIAGRAM):   if not missing( T_PICA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PICA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PICA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PICA - 0.00192949520233 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PICA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00143039172779;
MPRINT(EM_DIAGRAM):   if not missing( T_PICK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PICK - 0.00505226480836 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PICK - 0.00583511971929 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PICK - 0.00870219936076 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PICK - 0.00667584863997 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00396105854508;
MPRINT(EM_DIAGRAM):   if not missing( T_PICTUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PICTUR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PICTUR - 0.00486556178557 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PICTUR - 0.00435942893095 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PICTUR - 0.00334924631861 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00167325067618;
MPRINT(EM_DIAGRAM):   if not missing( T_PILL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PILL - 0.00970350404312 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PILL - 0.00303535510228 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PILL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0018822669624;
MPRINT(EM_DIAGRAM):   if not missing( T_PIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PIN - 0.00128097361175 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PIN - 0.00264725129743 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PIN - 0.0038234038365 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00094977654722;
MPRINT(EM_DIAGRAM):   if not missing( T_PITT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PITT - 0.29190149607048 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PITT - 0.00063361719383 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PITT - 0.00442925425822 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00327917408148;
MPRINT(EM_DIAGRAM):   if not missing( T_PITTSBURGH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PITTSBURGH - 0.24676279229252 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PITTSBURGH - 0.00057025547445 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PITTSBURGH - 0.00881630260853 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00478154657828;
MPRINT(EM_DIAGRAM):   if not missing( T_PIXEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PIXEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PIXEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PIXEL - 0.00421699789683 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PIXEL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00134989920958;
MPRINT(EM_DIAGRAM):   if not missing( T_PIXMAP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PIXMAP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PIXMAP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PIXMAP - 0.00527512838478 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PIXMAP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0022680482202;
MPRINT(EM_DIAGRAM):   if not missing( T_PLACE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PLACE - 0.00810999348438 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PLACE - 0.0097578048097 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PLACE - 0.01418496441975 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PLACE - 0.01437118410321 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00360256293573;
MPRINT(EM_DIAGRAM):   if not missing( T_PLAI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PLAI - 0.02167487684729 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PLAI - 0.01213534354029 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PLAI - 0.00699361936329 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PLAI - 0.0041194818203 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00363428217892;
MPRINT(EM_DIAGRAM):   if not missing( T_PLAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PLAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PLAIN - 0.00426012530395 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PLAIN - 0.00548815927909 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PLAIN - 0.01681123493141 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0021891191924;
MPRINT(EM_DIAGRAM):   if not missing( T_PLAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PLAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PLAN - 0.01187123444595 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PLAN - 0.00769910476203 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PLAN - 0.01176134710322 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00326712495699;
MPRINT(EM_DIAGRAM):   if not missing( T_PLANE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PLANE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PLANE - 0.00010385910169 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PLANE - 0.00249111057327 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PLANE - 0.01315397051695 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00094951678889;
MPRINT(EM_DIAGRAM):   if not missing( T_PLAYER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PLAYER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PLAYER - 0.00054656086858 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PLAYER - 0.00320613018649 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PLAYER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00149470457972;
MPRINT(EM_DIAGRAM):   if not missing( T_PLUG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PLUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PLUG - 0.00041540561391 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PLUG - 0.00365919565405 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PLUG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00107198085346;
MPRINT(EM_DIAGRAM):   if not missing( T_POINT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POINT - 0.00826669849226 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POINT - 0.02201650611762 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POINT - 0.01118186742397 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POINT - 0.00701532135592 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219530643596;
MPRINT(EM_DIAGRAM):   if not missing( T_POINTER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POINTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POINTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POINTER - 0.00448333415535 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POINTER - 0.00021525003444 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00134419061705;
MPRINT(EM_DIAGRAM):   if not missing( T_POLIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POLIC - 0.01039892909986 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POLIC - 0.0067397196399 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POLIC - 0.00351290157718 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0034268151432;
MPRINT(EM_DIAGRAM):   if not missing( T_POLICI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POLICI - 0.0992303193215 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POLICI - 0.00315664426747 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POLICI - 0.03522416715925 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00773216228441;
MPRINT(EM_DIAGRAM):   if not missing( T_POLIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POLIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POLIT - 0.05334597266535 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POLIT - 0.00488618378374 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POLIT - 0.05580160582716 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00503313832048;
MPRINT(EM_DIAGRAM):   if not missing( T_POPUL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POPUL - 0.00875713544369 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POPUL - 0.01542515665133 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POPUL - 0.00326882522488 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POPUL - 0.05334341046502 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00230754610035;
MPRINT(EM_DIAGRAM):   if not missing( T_POPULAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POPULAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POPULAR - 0.00111631303981 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POPULAR - 0.00408819112731 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POPULAR - 0.00194361375097 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00148981795768;
MPRINT(EM_DIAGRAM):   if not missing( T_POPUP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POPUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POPUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POPUP - 0.00294614680811 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POPUP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00144096775148;
MPRINT(EM_DIAGRAM):   if not missing( T_PORT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PORT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PORT - 0.00012110402836 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PORT - 0.00568645772695 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PORT - 0.00032201405152 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00207399290283;
MPRINT(EM_DIAGRAM):   if not missing( T_POSIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POSIT - 0.00717637482343 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POSIT - 0.00610572879821 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POSIT - 0.00885673357234 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POSIT - 0.01111316001647 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00263257033987;
MPRINT(EM_DIAGRAM):   if not missing( T_POSSIBL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POSSIBL - 0.00876623376623 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POSSIBL - 0.00727418275262 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POSSIBL - 0.00902096984164 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POSSIBL - 0.00284766236114 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0035966196585;
MPRINT(EM_DIAGRAM):   if not missing( T_POST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POST - 0.00683475923355 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POST - 0.02810638601235 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POST - 0.0272759545368 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POST - 0.02297131820552 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0077906236798;
MPRINT(EM_DIAGRAM):   if not missing( T_POSTER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POSTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POSTER - 0.00747160104638 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POSTER - 0.00614208581335 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POSTER - 0.00148256535812 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178737444619;
MPRINT(EM_DIAGRAM):   if not missing( T_POSTSCRIPT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POSTSCRIPT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POSTSCRIPT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POSTSCRIPT - 0.00246557558703 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POSTSCRIPT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00112495060757;
MPRINT(EM_DIAGRAM):   if not missing( T_POWER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_POWER - 0.00381835828389 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_POWER - 0.00704483141715 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_POWER - 0.01205590066435 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_POWER - 0.00614302397385 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00274036787096;
MPRINT(EM_DIAGRAM):   if not missing( T_PRACTIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRACTIC - 0.02549467224253 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRACTIC - 0.01199122930893 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRACTIC - 0.00584203695716 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRACTIC - 0.00295177278895 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00236816989023;
MPRINT(EM_DIAGRAM):   if not missing( T_PREFER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PREFER - 0.00641025641025 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PREFER - 0.00161987647954 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PREFER - 0.0071690404523 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PREFER - 0.00056063210256 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00198814560311;
MPRINT(EM_DIAGRAM):   if not missing( T_PRESENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRESENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRESENT - 0.00704097258211 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRESENT - 0.00560324086414 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRESENT - 0.00251596294548 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00140173677547;
MPRINT(EM_DIAGRAM):   if not missing( T_PRESID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRESID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRESID - 0.04267327577066 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRESID - 0.00127142154279 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRESID - 0.02769733301252 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00335625973502;
MPRINT(EM_DIAGRAM):   if not missing( T_PRESS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRESS - 0.01626753593913 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRESS - 0.00691444687406 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRESS - 0.01198089946469 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00288018755775;
MPRINT(EM_DIAGRAM):   if not missing( T_PRETTI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRETTI - 0.00498120300751 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRETTI - 0.00217554664151 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRETTI - 0.0139721485858 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRETTI - 0.00257730555661 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0048426910058;
MPRINT(EM_DIAGRAM):   if not missing( T_PREVENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PREVENT - 0.00683119518735 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PREVENT - 0.00809112362135 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PREVENT - 0.00793414766505 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PREVENT - 0.00543182070812 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00265882876966;
MPRINT(EM_DIAGRAM):   if not missing( T_PREVIOU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PREVIOU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PREVIOU - 0.01181767121547 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PREVIOU - 0.00391955098424 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PREVIOU - 0.00236509811188 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00163161394592;
MPRINT(EM_DIAGRAM):   if not missing( T_PRICE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRICE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRICE - 0.00454321213835 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRICE - 0.00881367966888 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRICE - 0.00317170167891 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00320433281866;
MPRINT(EM_DIAGRAM):   if not missing( T_PRINT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRINT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRINT - 0.000676481251 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRINT - 0.00403498792182 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRINT - 0.00147028281705 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00113284002233;
MPRINT(EM_DIAGRAM):   if not missing( T_PRINTER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRINTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRINTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRINTER - 0.002299778287 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRINTER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00107692503973;
MPRINT(EM_DIAGRAM):   if not missing( T_PRIVAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRIVAT - 0.00523138832997 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRIVAT - 0.00728932916801 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRIVAT - 0.00759334894325 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRIVAT - 0.00133256986524 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00334158157661;
MPRINT(EM_DIAGRAM):   if not missing( T_PROBLEM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROBLEM - 0.01357277487059 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROBLEM - 0.00980559867061 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROBLEM - 0.04316262971065 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROBLEM - 0.01696428531045 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01039754221923;
MPRINT(EM_DIAGRAM):   if not missing( T_PROCESS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROCESS - 0.00979502682161 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROCESS - 0.00795825923207 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROCESS - 0.01037066477809 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROCESS - 0.00109031592291 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00316088484446;
MPRINT(EM_DIAGRAM):   if not missing( T_PRODUC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRODUC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRODUC - 0.00116225872773 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRODUC - 0.00939751905902 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRODUC - 0.00168821913837 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00273202554143;
MPRINT(EM_DIAGRAM):   if not missing( T_PRODUCT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PRODUCT - 0.00424137266242 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PRODUCT - 0.00186621634694 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PRODUCT - 0.01517915279727 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PRODUCT - 0.00142167312723 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00427694699893;
MPRINT(EM_DIAGRAM):   if not missing( T_PROGRAM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROGRAM - 0.00429613132655 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROGRAM - 0.0009607114963 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROGRAM - 0.02448681293499 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROGRAM - 0.0008828522653 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00600993010939;
MPRINT(EM_DIAGRAM):   if not missing( T_PROGRAMM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROGRAMM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROGRAMM - 0.0002454554699 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROGRAMM - 0.00603401671046 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROGRAMM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00181832885802;
MPRINT(EM_DIAGRAM):   if not missing( T_PROJECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROJECT - 0.00060737519257 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROJECT - 0.01225788128029 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROJECT - 0.00181719764924 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00372018245335;
MPRINT(EM_DIAGRAM):   if not missing( T_PROLIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROLIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROLIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROLIN - 0.00294961956413 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROLIN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00213148324558;
MPRINT(EM_DIAGRAM):   if not missing( T_PROPAGANDA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROPAGANDA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROPAGANDA - 0.01800294672993 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROPAGANDA - 0.00047536869649 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROPAGANDA - 0.00135604154698 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00091518490527;
MPRINT(EM_DIAGRAM):   if not missing( T_PROPER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROPER - 0.00319396051103 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROPER - 0.00230453146097 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROPER - 0.00405407206077 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROPER - 0.00032668092183 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00131814963722;
MPRINT(EM_DIAGRAM):   if not missing( T_PROPOS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROPOS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROPOS - 0.0253348891872 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROPOS - 0.00224500062067 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROPOS - 0.00135358700556 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00245773705127;
MPRINT(EM_DIAGRAM):   if not missing( T_PROTECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROTECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROTECT - 0.00493679407317 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROTECT - 0.00985479628768 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROTECT - 0.00411847800712 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00412400109075;
MPRINT(EM_DIAGRAM):   if not missing( T_PROTOCOL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROTOCOL - 0.00271629778672 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROTOCOL - 0.00032683610936 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROTOCOL - 0.00269443669534 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROTOCOL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00085232369347;
MPRINT(EM_DIAGRAM):   if not missing( T_PROVE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROVE - 0.00191637630662 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROVE - 0.00668846424455 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROVE - 0.00223039049645 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROVE - 0.00419865664834 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00078187590442;
MPRINT(EM_DIAGRAM):   if not missing( T_PROVID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PROVID - 0.01820586674783 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PROVID - 0.01043971663167 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PROVID - 0.01015318320368 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PROVID - 0.00195260499439 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00303448001038;
MPRINT(EM_DIAGRAM):   if not missing( T_PUBLIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PUBLIC - 0.00455875500885 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PUBLIC - 0.00582552527068 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PUBLIC - 0.01003136258772 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PUBLIC - 0.00989271621302 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00210583570684;
MPRINT(EM_DIAGRAM):   if not missing( T_PUBLISH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PUBLISH - 0.01392320085929 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PUBLISH - 0.00587945118916 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PUBLISH - 0.00417009909363 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PUBLISH - 0.02757368866307 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0016574377436;
MPRINT(EM_DIAGRAM):   if not missing( T_PULL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PULL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PULL - 0.00596906575466 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PULL - 0.00597929346775 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PULL - 0.00439664617143 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00255086197063;
MPRINT(EM_DIAGRAM):   if not missing( T_PURPOS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PURPOS - 0.00187353629976 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PURPOS - 0.01475519409943 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PURPOS - 0.005228317761 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PURPOS - 0.0046957812786 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00155600499197;
MPRINT(EM_DIAGRAM):   if not missing( T_PUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PUT - 0.00200063856437 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PUT - 0.0047336607835 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PUT - 0.00075766875278 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00110952160226;
MPRINT(EM_DIAGRAM):   if not missing( T_QUACK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_QUACK - 0.01280076845553 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_QUACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_QUACK - 0.00296019289112 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_QUACK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00130076682807;
MPRINT(EM_DIAGRAM):   if not missing( T_QUALITI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_QUALITI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_QUALITI - 0.00335718269326 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_QUALITI - 0.00341929145423 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_QUALITI - 0.00063470187146 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00105714210452;
MPRINT(EM_DIAGRAM):   if not missing( T_QUESTION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_QUESTION - 0.0256315090675 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_QUESTION - 0.03812389870319 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_QUESTION - 0.0306338342245 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_QUESTION - 0.00383495782557 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00821767592665;
MPRINT(EM_DIAGRAM):   if not missing( T_QUOT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_QUOT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_QUOT - 0.00209943235236 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_QUOT - 0.00402256722 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_QUOT - 0.00795091446587 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178616549983;
MPRINT(EM_DIAGRAM):   if not missing( T_RACE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RACE - 0.00791783380018 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RACE - 0.01636814120015 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RACE - 0.00147308094925 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RACE - 0.0164989155716 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00151851561985;
MPRINT(EM_DIAGRAM):   if not missing( T_RACISM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RACISM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RACISM - 0.00861480156626 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RACISM - 0.00198160332887 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RACISM - 0.00066189100433 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00164010490188;
MPRINT(EM_DIAGRAM):   if not missing( T_RACIST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RACIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RACIST - 0.00895683785318 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RACIST - 0.00090498701584 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RACIST - 0.00165880177133 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00078658600239;
MPRINT(EM_DIAGRAM):   if not missing( T_RADAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RADAR - 0.00451093923667 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178172574485;
MPRINT(EM_DIAGRAM):   if not missing( T_RADIO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RADIO - 0.00297619047619 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RADIO - 0.0030501731743 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RADIO - 0.01245133141205 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RADIO - 0.0015099807027 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00390177164566;
MPRINT(EM_DIAGRAM):   if not missing( T_RAINER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RAINER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RAINER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RAINER - 0.00293974710234 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RAINER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00145332779925;
MPRINT(EM_DIAGRAM):   if not missing( T_RANG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RANG - 0.00426260455117 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RANG - 0.00745225986694 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RANG - 0.00526393389104 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00322759330005;
MPRINT(EM_DIAGRAM):   if not missing( T_RATE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RATE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RATE - 0.00042521880502 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RATE - 0.00692996805508 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RATE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.002185655916;
MPRINT(EM_DIAGRAM):   if not missing( T_REACTION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REACTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REACTION - 0.00327356447563 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REACTION - 0.00520540747801 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REACTION - 0.00106352927536 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00166663539283;
MPRINT(EM_DIAGRAM):   if not missing( T_READ ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_READ - 0.02347783194419 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_READ - 0.01797481489036 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_READ - 0.0169404938884 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_READ - 0.00963642614594 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00375545385412;
MPRINT(EM_DIAGRAM):   if not missing( T_READER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_READER - 0.00233990147783 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_READER - 0.00835606078041 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_READER - 0.00283355495854 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_READER - 0.00229026036644 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00118804311301;
MPRINT(EM_DIAGRAM):   if not missing( T_REAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REAL - 0.00200501253132 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REAL - 0.01255747260185 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REAL - 0.01188596737491 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REAL - 0.00467346690632 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00343781107705;
MPRINT(EM_DIAGRAM):   if not missing( T_REALIZ ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REALIZ - 0.0031561461794 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REALIZ - 0.01459003557542 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REALIZ - 0.00477427800242 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REALIZ - 0.0028507208164 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00180238236226;
MPRINT(EM_DIAGRAM):   if not missing( T_REASON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REASON - 0.00800260247234 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REASON - 0.03118763909673 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REASON - 0.02380059487808 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REASON - 0.01126270213742 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00845976378128;
MPRINT(EM_DIAGRAM):   if not missing( T_REC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REC - 0.00598437614152 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00254905578798;
MPRINT(EM_DIAGRAM):   if not missing( T_RECAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RECAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RECAL - 0.00261995927132 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RECAL - 0.00836928928959 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RECAL - 0.00209888869234 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00274476464932;
MPRINT(EM_DIAGRAM):   if not missing( T_RECEIV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RECEIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RECEIV - 0.00547084507809 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RECEIV - 0.00941931389077 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RECEIV - 0.00427790808361 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00234927298682;
MPRINT(EM_DIAGRAM):   if not missing( T_RECOGN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RECOGN - 0.003683737646 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RECOGN - 0.0261235306744 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RECOGN - 0.00347230362052 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RECOGN - 0.02876225288015 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00288446802896;
MPRINT(EM_DIAGRAM):   if not missing( T_RECOMMEND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RECOMMEND - 0.00518207282913 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RECOMMEND - 0.00174835824693 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RECOMMEND - 0.00549616607816 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RECOMMEND - 0.00099876774514 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0017118362623;
MPRINT(EM_DIAGRAM):   if not missing( T_REDUC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REDUC - 0.00431547619047 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REDUC - 0.00047647477241 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REDUC - 0.0046686642403 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REDUC - 0.00050361211447 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00119131469915;
MPRINT(EM_DIAGRAM):   if not missing( T_REDUND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REDUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REDUND - 0.04541397284421 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REDUND - 0.00029148610138 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REDUND - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00381025480066;
MPRINT(EM_DIAGRAM):   if not missing( T_REGION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REGION - 0.00274725274725 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REGION - 0.00513506650037 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REGION - 0.00314792421712 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REGION - 0.04333772607048 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00143364789401;
MPRINT(EM_DIAGRAM):   if not missing( T_REGIST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REGIST - 0.00291545189504 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REGIST - 0.00036206958849 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REGIST - 0.00542410995604 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REGIST - 0.00064505244047 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00176727502088;
MPRINT(EM_DIAGRAM):   if not missing( T_REILLI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REILLI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REILLI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REILLI - 0.00284363337872 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REILLI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00131211375829;
MPRINT(EM_DIAGRAM):   if not missing( T_RELAI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RELAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RELAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RELAI - 0.00216728480022 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RELAI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00099491788712;
MPRINT(EM_DIAGRAM):   if not missing( T_RELAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RELAT - 0.01484295644205 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RELAT - 0.00333162865616 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RELAT - 0.00982435530657 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RELAT - 0.00875880191859 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00281734161306;
MPRINT(EM_DIAGRAM):   if not missing( T_RELEAS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RELEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RELEAS - 0.00070630897316 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RELEAS - 0.00730903274818 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RELEAS - 0.00087671583036 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00214671550232;
MPRINT(EM_DIAGRAM):   if not missing( T_RELIABL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RELIABL - 0.0035294117647 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RELIABL - 0.00548856553301 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RELIABL - 0.0038173203328 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RELIABL - 0.00160752887161 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00159110907268;
MPRINT(EM_DIAGRAM):   if not missing( T_RELIGION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RELIGION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RELIGION - 0.01570534126113 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RELIGION - 0.00064659158756 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RELIGION - 0.00482125917951 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.001262416935;
MPRINT(EM_DIAGRAM):   if not missing( T_REMAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REMAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REMAIN - 0.01021202073954 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REMAIN - 0.0037219892428 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REMAIN - 0.01446239130303 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00140240090682;
MPRINT(EM_DIAGRAM):   if not missing( T_REMEMB ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REMEMB - 0.0031994047619 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REMEMB - 0.01198049142422 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REMEMB - 0.01119717627697 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REMEMB - 0.02594839193469 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00331829295085;
MPRINT(EM_DIAGRAM):   if not missing( T_REMOT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REMOT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REMOT - 0.00084783321959 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REMOT - 0.0049216108546 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REMOT - 0.00117283651204 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00200268255672;
MPRINT(EM_DIAGRAM):   if not missing( T_REMOV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REMOV - 0.00612244897959 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REMOV - 0.00269332880792 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REMOV - 0.00796991704633 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REMOV - 0.00798541712729 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00275593331086;
MPRINT(EM_DIAGRAM):   if not missing( T_REPEAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REPEAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REPEAT - 0.0032242590479 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REPEAT - 0.00270474657892 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REPEAT - 0.01135494487574 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00094437150487;
MPRINT(EM_DIAGRAM):   if not missing( T_REPLAC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REPLAC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REPLAC - 0.02022475533099 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REPLAC - 0.00499932777891 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REPLAC - 0.00161819950224 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00203415958116;
MPRINT(EM_DIAGRAM):   if not missing( T_REPLI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REPLI - 0.130629912195 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REPLI - 0.02228422590714 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REPLI - 0.03514274160396 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REPLI - 0.02725860477511 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00610141205665;
MPRINT(EM_DIAGRAM):   if not missing( T_REPORT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REPORT - 0.00198412698412 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REPORT - 0.0379425308602 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REPORT - 0.0081680034974 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REPORT - 0.01457142306712 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00395186228763;
MPRINT(EM_DIAGRAM):   if not missing( T_REQUEST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REQUEST - 0.00298701298701 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REQUEST - 0.00174422236157 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REQUEST - 0.0081691920722 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REQUEST - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00241160236876;
MPRINT(EM_DIAGRAM):   if not missing( T_REQUIR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REQUIR - 0.00731707317073 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REQUIR - 0.00463268752791 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REQUIR - 0.01912210491463 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REQUIR - 0.00632873189958 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00622638521405;
MPRINT(EM_DIAGRAM):   if not missing( T_RESEARCH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RESEARCH - 0.01394569096134 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RESEARCH - 0.03768827592619 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RESEARCH - 0.02059312043711 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RESEARCH - 0.00206525131403 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00604738146756;
MPRINT(EM_DIAGRAM):   if not missing( T_RESERV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RESERV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RESERV - 0.02567602446502 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RESERV - 0.00321811317429 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RESERV - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00313934617725;
MPRINT(EM_DIAGRAM):   if not missing( T_RESIST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RESIST - 0.01800391389432 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RESIST - 0.01775275621739 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RESIST - 0.00748586170496 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RESIST - 0.00358425039561 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00398932438836;
MPRINT(EM_DIAGRAM):   if not missing( T_RESISTOR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RESISTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RESISTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RESISTOR - 0.00368773405065 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RESISTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00131210220502;
MPRINT(EM_DIAGRAM):   if not missing( T_RESOURC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RESOURC - 0.0035303776683 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RESOURC - 0.00159453726132 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RESOURC - 0.0066838693567 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RESOURC - 0.00346084954594 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00203096574457;
MPRINT(EM_DIAGRAM):   if not missing( T_RESPOND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RESPOND - 0.03768601190476 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RESPOND - 0.00685130457965 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RESPOND - 0.01336435487475 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RESPOND - 0.0034728532325 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00626695844593;
MPRINT(EM_DIAGRAM):   if not missing( T_RESPONS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RESPONS - 0.00566893424036 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RESPONS - 0.01209073844786 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RESPONS - 0.01351838333692 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RESPONS - 0.01774755895753 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00369205432189;
MPRINT(EM_DIAGRAM):   if not missing( T_REST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REST - 0.00416666666666 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REST - 0.00619640385014 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REST - 0.00552658094749 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REST - 0.0120147807662 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00181818499783;
MPRINT(EM_DIAGRAM):   if not missing( T_RESULT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RESULT - 0.00969289213706 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RESULT - 0.00420444901911 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RESULT - 0.01131190985923 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RESULT - 0.00417952282526 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00223603121064;
MPRINT(EM_DIAGRAM):   if not missing( T_RETURN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RETURN - 0.00201276386843 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RETURN - 0.00861222505341 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RETURN - 0.00753683636486 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RETURN - 0.01432038839203 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229524757316;
MPRINT(EM_DIAGRAM):   if not missing( T_REVIEW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_REVIEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_REVIEW - 0.00122633956043 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_REVIEW - 0.00234598115062 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_REVIEW - 0.00225267209953 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00061142144728;
MPRINT(EM_DIAGRAM):   if not missing( T_RICH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RICH - 0.00416666666666 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RICH - 0.00144707637627 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RICH - 0.0026613383201 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RICH - 0.00146361501889 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00091823619144;
MPRINT(EM_DIAGRAM):   if not missing( T_RICHARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RICHARD - 0.00791811846689 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RICHARD - 0.00118139719046 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RICHARD - 0.00719297267317 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RICHARD - 0.00083701179573 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.002406514655;
MPRINT(EM_DIAGRAM):   if not missing( T_RICHARDSON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RICHARDSON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RICHARDSON - 0.0005549152687 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RICHARDSON - 0.00408240441733 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RICHARDSON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178729114056;
MPRINT(EM_DIAGRAM):   if not missing( T_RIGHT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RIGHT - 0.00591857190587 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RIGHT - 0.03648263399056 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RIGHT - 0.0036317539791 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RIGHT - 0.02340551522687 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0030977418929;
MPRINT(EM_DIAGRAM):   if not missing( T_RIND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RIND - 0.00370825207881 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RIND - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00172210910491;
MPRINT(EM_DIAGRAM):   if not missing( T_RING ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RING - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RING - 0.00005662725916 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RING - 0.00262926699571 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RING - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00089365655714;
MPRINT(EM_DIAGRAM):   if not missing( T_RISK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RISK - 0.01003188082777 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RISK - 0.00233061527568 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RISK - 0.0069341382087 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RISK - 0.00023040187672 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00239856187009;
MPRINT(EM_DIAGRAM):   if not missing( T_RIVER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RIVER - 0.01282051282051 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RIVER - 0.01067565633854 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RIVER - 0.00092026658444 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RIVER - 0.00054897793968 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00124024958924;
MPRINT(EM_DIAGRAM):   if not missing( T_ROAD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ROAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ROAD - 0.00956899741881 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ROAD - 0.0037893854878 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ROAD - 0.09270933942721 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023558181303;
MPRINT(EM_DIAGRAM):   if not missing( T_ROBERT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ROBERT - 0.00275667728497 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ROBERT - 0.00009837331623 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ROBERT - 0.00570574949216 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ROBERT - 0.00164241587491 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00145376466257;
MPRINT(EM_DIAGRAM):   if not missing( T_ROCHEST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ROCHEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ROCHEST - 0.00410758481959 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ROCHEST - 0.00487903950083 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ROCHEST - 0.00558166250753 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00261609328162;
MPRINT(EM_DIAGRAM):   if not missing( T_RON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RON - 0.00160782540734 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00053962960065;
MPRINT(EM_DIAGRAM):   if not missing( T_ROOM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ROOM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ROOM - 0.001449630209 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ROOM - 0.00521410046418 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ROOM - 0.00021293438614 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00211275732932;
MPRINT(EM_DIAGRAM):   if not missing( T_ROOT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ROOT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ROOT - 0.00079875559749 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ROOT - 0.00489438924375 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ROOT - 0.00155517423749 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00157439282124;
MPRINT(EM_DIAGRAM):   if not missing( T_RUI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RUI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RUI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RUI - 0.00192949520233 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RUI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00143039172779;
MPRINT(EM_DIAGRAM):   if not missing( T_RULE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RULE - 0.00520737942612 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RULE - 0.00791031034133 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RULE - 0.0020275546071 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RULE - 0.0050095445102 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0006821916036;
MPRINT(EM_DIAGRAM):   if not missing( T_RUN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RUN - 0.00195011337868 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RUN - 0.00195398617311 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RUN - 0.02689975171709 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RUN - 0.00009622140769 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00740297854665;
MPRINT(EM_DIAGRAM):   if not missing( T_RUSSEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RUSSEL - 0.00652709359605 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RUSSEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RUSSEL - 0.0058164753035 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RUSSEL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00243559523111;
MPRINT(EM_DIAGRAM):   if not missing( T_RUSSIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_RUSSIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_RUSSIAN - 0.00364734461602 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_RUSSIAN - 0.00198992760712 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_RUSSIAN - 0.09337420855453 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00273410123221;
MPRINT(EM_DIAGRAM):   if not missing( T_SALAH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SALAH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SALAH - 0.02526589952505 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SALAH - 0.00061199543192 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SALAH - 0.00008666784182 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00262154017724;
MPRINT(EM_DIAGRAM):   if not missing( T_SALE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SALE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SALE - 0.00148005656714 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SALE - 0.00422053822779 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SALE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00139319212018;
MPRINT(EM_DIAGRAM):   if not missing( T_SALMON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SALMON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SALMON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SALMON - 0.00116244226499 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SALMON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00068369770168;
MPRINT(EM_DIAGRAM):   if not missing( T_SAMPL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SAMPL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SAMPL - 0.00068437482843 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SAMPL - 0.00423364384504 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SAMPL - 0.00101087336388 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00117289468257;
MPRINT(EM_DIAGRAM):   if not missing( T_SAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SAT - 0.00928717731818 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SAT - 0.01142643471431 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SAT - 0.0155067315117 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00422799501443;
MPRINT(EM_DIAGRAM):   if not missing( T_SAVE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SAVE - 0.00762955544935 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SAVE - 0.00338172389978 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SAVE - 0.004249109997 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SAVE - 0.00380086085488 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00131848459625;
MPRINT(EM_DIAGRAM):   if not missing( T_SCHEMAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SCHEMAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SCHEMAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SCHEMAT - 0.00298483948751 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SCHEMAT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00105845326326;
MPRINT(EM_DIAGRAM):   if not missing( T_SCHOOL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SCHOOL - 0.01822095586502 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SCHOOL - 0.00656081609246 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SCHOOL - 0.01501458674264 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SCHOOL - 0.00477303457625 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00487685785717;
MPRINT(EM_DIAGRAM):   if not missing( T_SCHWARTZ ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SCHWARTZ - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SCHWARTZ - 0.00525472971333 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SCHWARTZ - 0.00079918726345 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SCHWARTZ - 0.00109674440083 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00073958729544;
MPRINT(EM_DIAGRAM):   if not missing( T_SCI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SCI - 0.05113323107936 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SCI - 0.0006328065055 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SCI - 0.03257258016614 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SCI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194851612595;
MPRINT(EM_DIAGRAM):   if not missing( T_SCIENC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SCIENC - 0.21557135672408 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SCIENC - 0.01546366257058 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SCIENC - 0.03011903171089 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SCIENC - 0.00561989767091 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01027128116445;
MPRINT(EM_DIAGRAM):   if not missing( T_SCIENTIF ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SCIENTIF - 0.00547536087605 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SCIENTIF - 0.00020252582608 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SCIENTIF - 0.00640907146565 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SCIENTIF - 0.00021943035878 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194238511345;
MPRINT(EM_DIAGRAM):   if not missing( T_SCIENTIST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SCIENTIST - 0.01051212938005 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SCIENTIST - 0.00033304205038 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SCIENTIST - 0.00761296133224 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SCIENTIST - 0.0010003651949 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00279142880175;
MPRINT(EM_DIAGRAM):   if not missing( T_SCOPE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SCOPE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SCOPE - 0.00001237164419 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SCOPE - 0.00328228609464 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SCOPE - 0.00014957520641 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00126638446018;
MPRINT(EM_DIAGRAM):   if not missing( T_SCOTT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SCOTT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SCOTT - 0.00025130197448 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SCOTT - 0.00362741213299 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SCOTT - 0.00016280189133 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00103158038883;
MPRINT(EM_DIAGRAM):   if not missing( T_SCREEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SCREEN - 0.00045622320601 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SCREEN - 0.00866026026779 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00239287393542;
MPRINT(EM_DIAGRAM):   if not missing( T_SDSU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SDSU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SDSU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SDSU - 0.00198941747774 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SDSU - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00103122265627;
MPRINT(EM_DIAGRAM):   if not missing( T_SEA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SEA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SEA - 0.01040451801391 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SEA - 0.00257949181607 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SEA - 0.0038448089537 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0018209183964;
MPRINT(EM_DIAGRAM):   if not missing( T_SEARCH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SEARCH - 0.00306122448979 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SEARCH - 0.00214510673894 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SEARCH - 0.00526943864706 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SEARCH - 0.01896254560468 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00221748517887;
MPRINT(EM_DIAGRAM):   if not missing( T_SEATTL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SEATTL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SEATTL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SEATTL - 0.00444386234033 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SEATTL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00172386986124;
MPRINT(EM_DIAGRAM):   if not missing( T_SECTION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SECTION - 0.00994152046783 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SECTION - 0.001293355274 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SECTION - 0.00505599272355 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SECTION - 0.01503743976016 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00203503232241;
MPRINT(EM_DIAGRAM):   if not missing( T_SECUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SECUR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SECUR - 0.01859253033601 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SECUR - 0.00272121693035 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SECUR - 0.00616154513863 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00162605383224;
MPRINT(EM_DIAGRAM):   if not missing( T_SEEK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SEEK - 0.00462776659959 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SEEK - 0.0056652376887 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SEEK - 0.00388326345842 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SEEK - 0.00273690179826 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00214266093353;
MPRINT(EM_DIAGRAM):   if not missing( T_SEIZUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SEIZUR - 0.01390622149242 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SEIZUR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SEIZUR - 0.00489950142374 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SEIZUR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00256416842995;
MPRINT(EM_DIAGRAM):   if not missing( T_SELECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SELECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SELECT - 0.0031545013139 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SELECT - 0.00530792378089 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SELECT - 0.00074185078185 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00126042626409;
MPRINT(EM_DIAGRAM):   if not missing( T_SELL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SELL - 0.00297618050675 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SELL - 0.01170703449117 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SELL - 0.0001617773943 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00410242352789;
MPRINT(EM_DIAGRAM):   if not missing( T_SEMIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SEMIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SEMIT - 0.03089830003051 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SEMIT - 0.00045291792466 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SEMIT - 0.00466036209769 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00276211193217;
MPRINT(EM_DIAGRAM):   if not missing( T_SEND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SEND - 0.00236386154769 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SEND - 0.01904298653141 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SEND - 0.00362098952065 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00502622487998;
MPRINT(EM_DIAGRAM):   if not missing( T_SENS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SENS - 0.00287187039764 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SENS - 0.00671131335197 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SENS - 0.007440659076 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SENS - 0.00707875203816 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00246544679752;
MPRINT(EM_DIAGRAM):   if not missing( T_SENSIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SENSIT - 0.00870535714285 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SENSIT - 0.00033649117357 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SENSIT - 0.00810681099904 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SENSIT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00211305308294;
MPRINT(EM_DIAGRAM):   if not missing( T_SEPAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SEPAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SEPAR - 0.01090428142109 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SEPAR - 0.00508766721802 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SEPAR - 0.00134391346669 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00200099535328;
MPRINT(EM_DIAGRAM):   if not missing( T_SEQUENC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SEQUENC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SEQUENC - 0.000033792917 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SEQUENC - 0.00295916779808 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SEQUENC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00092593713552;
MPRINT(EM_DIAGRAM):   if not missing( T_SERA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SERA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SERA - 0.00010393265164 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SERA - 0.00027479157828 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SERA - 0.26354182379519 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0057059610056;
MPRINT(EM_DIAGRAM):   if not missing( T_SERDAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SERDAR - 0.00002798186774 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SERDAR - 0.00251269130174 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SERDAR - 0.0770082424445 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0016942279763;
MPRINT(EM_DIAGRAM):   if not missing( T_SERI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SERI - 0.00007030738199 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SERI - 0.00553956096144 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SERI - 0.00064456655586 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00171414020576;
MPRINT(EM_DIAGRAM):   if not missing( T_SERIAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SERIAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SERIAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SERIAL - 0.00371803243919 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SERIAL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00119307495961;
MPRINT(EM_DIAGRAM):   if not missing( T_SERV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SERV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SERV - 0.01022339929944 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SERV - 0.00994484332981 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SERV - 0.17659216379308 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00775960327004;
MPRINT(EM_DIAGRAM):   if not missing( T_SERVER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SERVER - 0.0001754632229 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SERVER - 0.01559857585289 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SERVER - 0.00026159748866 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00428936570397;
MPRINT(EM_DIAGRAM):   if not missing( T_SERVIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SERVIC - 0.01024017067787 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SERVIC - 0.00403180903966 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SERVIC - 0.02641435190441 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SERVIC - 0.02054434831063 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00946954762195;
MPRINT(EM_DIAGRAM):   if not missing( T_SET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SET - 0.00446428571428 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SET - 0.00031678513356 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SET - 0.00807607014648 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SET - 0.00068129219915 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219747515396;
MPRINT(EM_DIAGRAM):   if not missing( T_SEXUAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SEXUAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SEXUAL - 0.01615983141373 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SEXUAL - 0.0023466277076 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SEXUAL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00154762835785;
MPRINT(EM_DIAGRAM):   if not missing( T_SHACK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHACK - 0.00325879806879 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHACK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00108985445886;
MPRINT(EM_DIAGRAM):   if not missing( T_SHAME ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHAME - 0.52354950753203 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHAME - 0.00632178492963 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHAME - 0.00151651160343 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHAME - 0.00165032134425 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00747682260613;
MPRINT(EM_DIAGRAM):   if not missing( T_SHARE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHARE - 0.00844028378871 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHARE - 0.00321434771922 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHARE - 0.00613770187006 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHARE - 0.00038929005493 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00205546571143;
MPRINT(EM_DIAGRAM):   if not missing( T_SHELL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHELL - 0.00969127185381 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHELL - 0.00361383161534 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHELL - 0.00548511910127 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00164068183749;
MPRINT(EM_DIAGRAM):   if not missing( T_SHNEKENDORF ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHNEKENDORF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHNEKENDORF - 0.01972571003937 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHNEKENDORF - 0.00003638268766 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHNEKENDORF - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00109772369237;
MPRINT(EM_DIAGRAM):   if not missing( T_SHOOT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHOOT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHOOT - 0.00116376097405 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHOOT - 0.00097747876205 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHOOT - 0.00981290410782 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00045769252022;
MPRINT(EM_DIAGRAM):   if not missing( T_SHORT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHORT - 0.00256696428571 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHORT - 0.00153463479136 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHORT - 0.00793474601168 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHORT - 0.00435573535229 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00191409297358;
MPRINT(EM_DIAGRAM):   if not missing( T_SHOSTACK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHOSTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHOSTACK - 0.03584556274492 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHOSTACK - 0.00015556168374 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHOSTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00259487200938;
MPRINT(EM_DIAGRAM):   if not missing( T_SHOT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHOT - 0.00195238095238 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHOT - 0.00166015092432 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHOT - 0.00204624766539 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHOT - 0.01095138374655 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00083823566593;
MPRINT(EM_DIAGRAM):   if not missing( T_SHOULDN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHOULDN - 0.00570290751623 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHOULDN - 0.00173117404254 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHOULDN - 0.00370058883052 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHOULDN - 0.00129713881604 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0011284787145;
MPRINT(EM_DIAGRAM):   if not missing( T_SHOW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SHOW - 0.02667382095923 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SHOW - 0.02092405278922 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SHOW - 0.01896710826094 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SHOW - 0.01850908161804 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00643307433223;
MPRINT(EM_DIAGRAM):   if not missing( T_SICK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SICK - 0.00745192307692 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SICK - 0.00555275581149 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SICK - 0.0036645844284 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SICK - 0.00012950986781 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00159533594741;
MPRINT(EM_DIAGRAM):   if not missing( T_SIDE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SIDE - 0.00439024390243 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SIDE - 0.02223404338821 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SIDE - 0.01081379499258 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SIDE - 0.0151966194287 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00351439601268;
MPRINT(EM_DIAGRAM):   if not missing( T_SIGN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SIGN - 0.00285714285714 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SIGN - 0.00719452161306 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SIGN - 0.0037546213568 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SIGN - 0.00872328276703 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00141231610633;
MPRINT(EM_DIAGRAM):   if not missing( T_SIGNAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SIGNAL - 0.00028723979453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SIGNAL - 0.00955930851623 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0027011007046;
MPRINT(EM_DIAGRAM):   if not missing( T_SIGNIFIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SIGNIFIC - 0.01063829787234 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SIGNIFIC - 0.01017934434248 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SIGNIFIC - 0.0074380865739 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SIGNIFIC - 0.00179064798173 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00368201365004;
MPRINT(EM_DIAGRAM):   if not missing( T_SIMILAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SIMILAR - 0.00300751879699 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SIMILAR - 0.00411338489593 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SIMILAR - 0.01012952839069 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SIMILAR - 0.00858948120656 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00277799614907;
MPRINT(EM_DIAGRAM):   if not missing( T_SIMM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SIMM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SIMM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SIMM - 0.00317544144176 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SIMM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00159675486079;
MPRINT(EM_DIAGRAM):   if not missing( T_SIMPL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SIMPL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SIMPL - 0.00623540983481 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SIMPL - 0.01484690220662 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SIMPL - 0.00739822866419 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00567540966701;
MPRINT(EM_DIAGRAM):   if not missing( T_SIMPLI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SIMPLI - 0.00417439703153 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SIMPLI - 0.01272780441729 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SIMPLI - 0.0068334473413 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SIMPLI - 0.03676927924841 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00283070877708;
MPRINT(EM_DIAGRAM):   if not missing( T_SINGL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SINGL - 0.01477566867989 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SINGL - 0.00328998785882 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SINGL - 0.01252671141689 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SINGL - 0.12288435044345 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00633256548598;
MPRINT(EM_DIAGRAM):   if not missing( T_SITE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SITE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SITE - 0.00290394166956 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SITE - 0.00851831384446 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SITE - 0.00053407751953 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00248044397792;
MPRINT(EM_DIAGRAM):   if not missing( T_SITUAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SITUAT - 0.00181639666175 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SITUAT - 0.01193725874688 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SITUAT - 0.00432826856115 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SITUAT - 0.00702433006638 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00139242410679;
MPRINT(EM_DIAGRAM):   if not missing( T_SIZE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SIZE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SIZE - 0.00046208948144 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SIZE - 0.0078510916197 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SIZE - 0.00039544138996 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219944389136;
MPRINT(EM_DIAGRAM):   if not missing( T_SKEPTIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SKEPTIC - 0.38857190012143 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SKEPTIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SKEPTIC - 0.00233364057438 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SKEPTIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.004485878934;
MPRINT(EM_DIAGRAM):   if not missing( T_SKIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SKIN - 0.00293819655521 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SKIN - 0.0005781909028 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SKIN - 0.00234149533484 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SKIN - 0.00038029243061 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00065849451212;
MPRINT(EM_DIAGRAM):   if not missing( T_SLEEP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SLEEP - 0.00269541778975 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SLEEP - 8.247762794342E-6 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SLEEP - 0.00149664068343 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SLEEP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00048042412951;
MPRINT(EM_DIAGRAM):   if not missing( T_SLOW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SLOW - 0.0064935064935 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SLOW - 0.00033496198708 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SLOW - 0.00422539564884 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SLOW - 0.00051069914713 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00135796155519;
MPRINT(EM_DIAGRAM):   if not missing( T_SMALL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SMALL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SMALL - 0.007625593083 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SMALL - 0.01133793477592 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SMALL - 0.01314882865822 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0030560049115;
MPRINT(EM_DIAGRAM):   if not missing( T_SMOKE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SMOKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SMOKE - 0.00043930792105 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SMOKE - 0.00472175884046 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SMOKE - 0.00185473604247 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00223068716621;
MPRINT(EM_DIAGRAM):   if not missing( T_SOCIETI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SOCIETI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SOCIETI - 0.02860165749827 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SOCIETI - 0.00334818090176 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SOCIETI - 0.01315353875617 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00308072036778;
MPRINT(EM_DIAGRAM):   if not missing( T_SOFTWAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SOFTWAR - 0.00184873949579 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SOFTWAR - 0.00483495863792 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SOFTWAR - 0.01933469037826 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SOFTWAR - 0.00021265078874 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0058381351654;
MPRINT(EM_DIAGRAM):   if not missing( T_SOLARI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SOLARI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SOLARI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SOLARI - 0.00182434051247 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SOLARI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00058502663673;
MPRINT(EM_DIAGRAM):   if not missing( T_SOLDIER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SOLDIER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SOLDIER - 0.05597635975262 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SOLDIER - 0.00145906175752 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SOLDIER - 0.03157483227551 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00408051947514;
MPRINT(EM_DIAGRAM):   if not missing( T_SOLUT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SOLUT - 0.00357142857142 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SOLUT - 0.03746037908878 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SOLUT - 0.00813522270517 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SOLUT - 0.00856846755403 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00545506631874;
MPRINT(EM_DIAGRAM):   if not missing( T_SORT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SORT - 0.03036352221157 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SORT - 0.01264971307938 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SORT - 0.01464354604187 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SORT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00651428101344;
MPRINT(EM_DIAGRAM):   if not missing( T_SOUND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SOUND - 0.00686052300597 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SOUND - 0.00577809438179 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SOUND - 0.00869252197084 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SOUND - 0.00040119282057 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00220193396153;
MPRINT(EM_DIAGRAM):   if not missing( T_SOURC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SOURC - 0.00230154243721 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SOURC - 0.00550072430824 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SOURC - 0.00988443946263 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SOURC - 0.01592221596398 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00201442174899;
MPRINT(EM_DIAGRAM):   if not missing( T_SOUTH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SOUTH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SOUTH - 0.00604781750144 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SOUTH - 0.00370973919553 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SOUTH - 0.00087744284085 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00131800518319;
MPRINT(EM_DIAGRAM):   if not missing( T_SOVIET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SOVIET - 0.00365853658536 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SOVIET - 0.00372700913018 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SOVIET - 0.00115617346329 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SOVIET - 0.16902504412855 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00407462544397;
MPRINT(EM_DIAGRAM):   if not missing( T_SPACE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SPACE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SPACE - 0.00169376218615 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SPACE - 0.01086006503299 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SPACE - 0.00506771736183 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00361184842934;
MPRINT(EM_DIAGRAM):   if not missing( T_SPARC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SPARC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SPARC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SPARC - 0.00689620973793 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SPARC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00261452683122;
MPRINT(EM_DIAGRAM):   if not missing( T_SPEAK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SPEAK - 0.00607993197278 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SPEAK - 0.01140032032126 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SPEAK - 0.00299142727953 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SPEAK - 0.00266994886338 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00101892918019;
MPRINT(EM_DIAGRAM):   if not missing( T_SPEC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SPEC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SPEC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SPEC - 0.00471760070944 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SPEC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00132928365388;
MPRINT(EM_DIAGRAM):   if not missing( T_SPECIAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SPECIAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SPECIAL - 0.0009998035908 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SPECIAL - 0.01406663997232 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SPECIAL - 0.00457981209313 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00560383314208;
MPRINT(EM_DIAGRAM):   if not missing( T_SPECIF ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SPECIF - 0.00437317784256 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SPECIF - 0.0053629205761 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SPECIF - 0.01007681538869 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SPECIF - 0.00081532215435 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00240208214187;
MPRINT(EM_DIAGRAM):   if not missing( T_SPEED ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SPEED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SPEED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SPEED - 0.0078401293671 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SPEED - 0.00024319942352 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00296717653045;
MPRINT(EM_DIAGRAM):   if not missing( T_SPELL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SPELL - 0.00294486215538 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SPELL - 0.00071251055024 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SPELL - 0.00474693110343 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SPELL - 0.00682960922811 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00183502743525;
MPRINT(EM_DIAGRAM):   if not missing( T_SPOCK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SPOCK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SPOCK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SPOCK - 0.0016688016958 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SPOCK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00104844469206;
MPRINT(EM_DIAGRAM):   if not missing( T_SPOT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SPOT - 0.01285714285714 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SPOT - 0.00038825904643 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SPOT - 0.00375278238974 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SPOT - 0.00240500101747 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00212156505173;
MPRINT(EM_DIAGRAM):   if not missing( T_STAI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STAI - 0.0032967032967 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STAI - 0.00997921126862 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STAI - 0.00608568048202 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STAI - 0.016543093832 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00238548543927;
MPRINT(EM_DIAGRAM):   if not missing( T_STAND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STAND - 0.0023199023199 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STAND - 0.00436546293469 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STAND - 0.00452524082659 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STAND - 0.00265456579307 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0012279587175;
MPRINT(EM_DIAGRAM):   if not missing( T_STANDARD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STANDARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STANDARD - 0.01758203795909 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STANDARD - 0.00848785303675 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STANDARD - 0.00015274887052 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229514349459;
MPRINT(EM_DIAGRAM):   if not missing( T_START ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_START - 0.0235194584452 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_START - 0.02641060774103 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_START - 0.02195792409218 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_START - 0.01573701071426 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00725482807573;
MPRINT(EM_DIAGRAM):   if not missing( T_STATE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STATE - 0.01096320839572 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STATE - 0.06206635019086 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STATE - 0.01985074630994 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STATE - 0.02754992306492 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00702601847959;
MPRINT(EM_DIAGRAM):   if not missing( T_STATEMENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STATEMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STATEMENT - 0.01477539740134 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STATEMENT - 0.0026672681575 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STATEMENT - 0.00567864379062 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00132408250005;
MPRINT(EM_DIAGRAM):   if not missing( T_STATIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STATIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STATIC - 0.00057659164639 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STATIC - 0.00472106867905 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STATIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00212029004258;
MPRINT(EM_DIAGRAM):   if not missing( T_STATU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STATU - 0.00309278350515 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STATU - 0.00482085525528 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STATU - 0.00146742973351 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STATU - 0.00053126897389 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0005472670099;
MPRINT(EM_DIAGRAM):   if not missing( T_STEIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STEIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STEIN - 0.01321358757061 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STEIN - 0.00083982316773 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STEIN - 0.0002193769694 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0013139600747;
MPRINT(EM_DIAGRAM):   if not missing( T_STEPHEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STEPHEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STEPHEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STEPHEN - 0.00457499356807 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STEPHEN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00153144247579;
MPRINT(EM_DIAGRAM):   if not missing( T_STEVE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STEVE - 0.00780009920634 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STEVE - 0.01660182190624 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STEVE - 0.01142136586987 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STEVE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00433669128972;
MPRINT(EM_DIAGRAM):   if not missing( T_STEVEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STEVEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STEVEN - 0.00574723030222 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STEVEN - 0.00436401531528 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STEVEN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00215532386186;
MPRINT(EM_DIAGRAM):   if not missing( T_STONE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STONE - 0.00568513119533 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STONE - 0.00120355083586 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STONE - 0.00242720822669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STONE - 0.00216553582884 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00125906880844;
MPRINT(EM_DIAGRAM):   if not missing( T_STOP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STOP - 0.00561224489795 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STOP - 0.02403240245301 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STOP - 0.00967114665516 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STOP - 0.00904590419148 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00427562942212;
MPRINT(EM_DIAGRAM):   if not missing( T_STORE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STORE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STORE - 0.00001617999155 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STORE - 0.00471909628184 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STORE - 0.00017930068971 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00109093900245;
MPRINT(EM_DIAGRAM):   if not missing( T_STORI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STORI - 0.00619529118362 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STORI - 0.00832851068298 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STORI - 0.00422973410164 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STORI - 0.01345361223147 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00170064291818;
MPRINT(EM_DIAGRAM):   if not missing( T_STRING ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STRING - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STRING - 0.00013101253977 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STRING - 0.00281598755384 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STRING - 0.00088500574628 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.001010057135;
MPRINT(EM_DIAGRAM):   if not missing( T_STRIP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STRIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STRIP - 0.01080346864455 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STRIP - 0.00241335024834 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STRIP - 0.00016300298062 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00123548914304;
MPRINT(EM_DIAGRAM):   if not missing( T_STUDENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STUDENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STUDENT - 0.02110091457923 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STUDENT - 0.01273087954301 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STUDENT - 0.00433034333436 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00659169537532;
MPRINT(EM_DIAGRAM):   if not missing( T_STUDI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STUDI - 0.01419887933765 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STUDI - 0.00314745431006 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STUDI - 0.01205311005144 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STUDI - 0.03178345504879 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00414494438826;
MPRINT(EM_DIAGRAM):   if not missing( T_STUFF ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STUFF - 0.00510204081632 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STUFF - 0.00338301871321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STUFF - 0.0202351024879 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STUFF - 0.00586351923703 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0082002771439;
MPRINT(EM_DIAGRAM):   if not missing( T_STUPID ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STUPID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STUPID - 0.01204163015817 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STUPID - 0.00198825315043 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STUPID - 0.0023957576247 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00128630756483;
MPRINT(EM_DIAGRAM):   if not missing( T_STYLE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_STYLE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_STYLE - 0.00094284341939 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_STYLE - 0.00344803712925 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_STYLE - 0.00017109920545 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00121592822008;
MPRINT(EM_DIAGRAM):   if not missing( T_SUBSCRIB ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUBSCRIB - 0.000048941466 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUBSCRIB - 0.00201887406452 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUBSCRIB - 0.00008364001338 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00126038052881;
MPRINT(EM_DIAGRAM):   if not missing( T_SUBSCRIV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUBSCRIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUBSCRIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUBSCRIV - 0.00101689612015 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUBSCRIV - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00073005194439;
MPRINT(EM_DIAGRAM):   if not missing( T_SUFFER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUFFER - 0.00348555857103 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUFFER - 0.01374040817574 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUFFER - 0.00145067766654 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUFFER - 0.00306515830568 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00100423999285;
MPRINT(EM_DIAGRAM):   if not missing( T_SUGGEST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUGGEST - 0.0183776138032 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUGGEST - 0.01230819486621 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUGGEST - 0.02417820854507 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUGGEST - 0.00227063357788 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00745529695284;
MPRINT(EM_DIAGRAM):   if not missing( T_SUIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUIT - 0.00522867985398 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUIT - 0.00405476496305 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUIT - 0.00272424260955 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00172774630671;
MPRINT(EM_DIAGRAM):   if not missing( T_SUMMARI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUMMARI - 0.00738548940703 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUMMARI - 0.00253694652759 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUMMARI - 0.01621075212603 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUMMARI - 0.01212001183771 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00560891920532;
MPRINT(EM_DIAGRAM):   if not missing( T_SUN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUN - 0.0089848773952 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUN - 0.01294731894601 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUN - 0.00597323313139 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00428325704696;
MPRINT(EM_DIAGRAM):   if not missing( T_SUNO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUNO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUNO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUNO - 0.00595550421484 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUNO - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00202484170045;
MPRINT(EM_DIAGRAM):   if not missing( T_SUPERSTIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUPERSTIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUPERSTIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUPERSTIT - 0.00715219665313 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUPERSTIT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00220367835024;
MPRINT(EM_DIAGRAM):   if not missing( T_SUPPLI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUPPLI - 0.00416743970315 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUPPLI - 0.00085294968005 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUPPLI - 0.0051692580532 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUPPLI - 0.00145786628375 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00111679193172;
MPRINT(EM_DIAGRAM):   if not missing( T_SUPPORT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUPPORT - 0.00209094163981 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUPPORT - 0.0103968667428 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUPPORT - 0.01046826790141 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUPPORT - 0.01232769308611 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023391841892;
MPRINT(EM_DIAGRAM):   if not missing( T_SUPPOS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUPPOS - 0.01088092571855 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUPPOS - 0.00158589120161 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUPPOS - 0.0079101539019 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUPPOS - 0.00592870556061 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00236652154238;
MPRINT(EM_DIAGRAM):   if not missing( T_SURGERI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SURGERI - 0.01016118163295 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SURGERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SURGERI - 0.00280555893018 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SURGERI - 0.00026286861348 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00110344330597;
MPRINT(EM_DIAGRAM):   if not missing( T_SURPRIS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SURPRIS - 0.00554945054945 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SURPRIS - 0.0100007756286 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SURPRIS - 0.00562737368914 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SURPRIS - 0.00110990455834 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00278170660358;
MPRINT(EM_DIAGRAM):   if not missing( T_SURREND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SURREND - 0.52354950753203 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SURREND - 0.00275849909191 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SURREND - 0.00084584119357 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SURREND - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00699060668642;
MPRINT(EM_DIAGRAM):   if not missing( T_SUSPECT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SUSPECT - 0.01615576894458 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SUSPECT - 0.00500620004583 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SUSPECT - 0.00801087348417 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SUSPECT - 0.00064819829822 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00302113737066;
MPRINT(EM_DIAGRAM):   if not missing( T_SWITCH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SWITCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SWITCH - 0.00148853840107 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SWITCH - 0.00793519157938 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SWITCH - 0.00011144664941 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00319721638896;
MPRINT(EM_DIAGRAM):   if not missing( T_SYMBOL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SYMBOL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SYMBOL - 0.00028054314074 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SYMBOL - 0.0021901593273 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SYMBOL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00071496342092;
MPRINT(EM_DIAGRAM):   if not missing( T_SYMPTOM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SYMPTOM - 0.0089457070707 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SYMPTOM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SYMPTOM - 0.01064778744838 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SYMPTOM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00418479108253;
MPRINT(EM_DIAGRAM):   if not missing( T_SYNDROM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SYNDROM - 0.01048752834467 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SYNDROM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SYNDROM - 0.00500337845878 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SYNDROM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00175745452501;
MPRINT(EM_DIAGRAM):   if not missing( T_SYRIA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SYRIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SYRIA - 0.02636387785484 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SYRIA - 0.00153078903917 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SYRIA - 0.00269892043182 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00236659583497;
MPRINT(EM_DIAGRAM):   if not missing( T_SYSTEM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_SYSTEM - 0.0071316997287 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_SYSTEM - 0.01640498400601 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_SYSTEM - 0.04552559658471 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_SYSTEM - 0.01052067305091 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01019489070689;
MPRINT(EM_DIAGRAM):   if not missing( T_TABL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TABL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TABL - 0.00294041946618 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TABL - 0.00365324226756 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TABL - 0.00140334041177 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00125785212404;
MPRINT(EM_DIAGRAM):   if not missing( T_TAKE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TAKE - 0.00591133004926 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TAKE - 0.00219232671161 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TAKE - 0.00584057074422 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TAKE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00210539610188;
MPRINT(EM_DIAGRAM):   if not missing( T_TALK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TALK - 0.00707911231854 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TALK - 0.01952422000166 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TALK - 0.0054287608153 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TALK - 0.00821580381483 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00169307087435;
MPRINT(EM_DIAGRAM):   if not missing( T_TAPE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TAPE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TAPE - 0.00015600282208 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TAPE - 0.0031852116356 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TAPE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00133896717975;
MPRINT(EM_DIAGRAM):   if not missing( T_TARGET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TARGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TARGET - 0.02133705101794 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TARGET - 0.00249224380854 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TARGET - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00210095133971;
MPRINT(EM_DIAGRAM):   if not missing( T_TAST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TAST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TAST - 0.00012963184555 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TAST - 0.00502302821952 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TAST - 0.00065442027242 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00195226142129;
MPRINT(EM_DIAGRAM):   if not missing( T_TCP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TCP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TCP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TCP - 0.0016507611758 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TCP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00067826870759;
MPRINT(EM_DIAGRAM):   if not missing( T_TECHNIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TECHNIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TECHNIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TECHNIC - 0.00335378226263 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TECHNIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00091167754335;
MPRINT(EM_DIAGRAM):   if not missing( T_TECHNOLOG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TECHNOLOG - 0.00302521008403 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TECHNOLOG - 0.00384669058554 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TECHNOLOG - 0.01272776514241 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TECHNOLOG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00307390350034;
MPRINT(EM_DIAGRAM):   if not missing( T_TEKTRONIX ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TEKTRONIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TEKTRONIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TEKTRONIX - 0.00165031396356 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TEKTRONIX - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00064898600831;
MPRINT(EM_DIAGRAM):   if not missing( T_TEL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TEL - 0.02878394809816 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TEL - 0.0087071047843 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TEL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00513095199307;
MPRINT(EM_DIAGRAM):   if not missing( T_TELEPHON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TELEPHON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TELEPHON - 0.00023652884023 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TELEPHON - 0.00309763837259 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TELEPHON - 0.00126775437672 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00089863551638;
MPRINT(EM_DIAGRAM):   if not missing( T_TELL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TELL - 0.00231130600539 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TELL - 0.00659023386417 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TELL - 0.00170574614031 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00239379790433;
MPRINT(EM_DIAGRAM):   if not missing( T_TEMPERATUR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TEMPERATUR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TEMPERATUR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TEMPERATUR - 0.00565271462211 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TEMPERATUR - 0.00082310172165 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00252716550879;
MPRINT(EM_DIAGRAM):   if not missing( T_TERM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TERM - 0.01924554623728 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TERM - 0.00475233058757 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TERM - 0.00669698246958 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TERM - 0.00369332143476 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00179022783154;
MPRINT(EM_DIAGRAM):   if not missing( T_TERMIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TERMIN - 0.00833913404765 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TERMIN - 0.0004418886005 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00297309134992;
MPRINT(EM_DIAGRAM):   if not missing( T_TERRITORI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TERRITORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TERRITORI - 0.04298901416572 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TERRITORI - 0.00108840971254 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TERRITORI - 0.02469069067502 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00277230566474;
MPRINT(EM_DIAGRAM):   if not missing( T_TERROR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TERROR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TERROR - 0.0206870518653 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TERROR - 0.00019947409649 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TERROR - 0.00871520033412 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00073502158447;
MPRINT(EM_DIAGRAM):   if not missing( T_TERRORIST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TERRORIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TERRORIST - 0.03360302938289 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TERRORIST - 0.00040660725941 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TERRORIST - 0.0121696018197 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00203276123743;
MPRINT(EM_DIAGRAM):   if not missing( T_TEST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TEST - 0.01666452783799 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TEST - 0.00068485738116 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TEST - 0.01131980543021 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TEST - 0.00041977818037 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00299203737115;
MPRINT(EM_DIAGRAM):   if not missing( T_TEXA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TEXA - 0.0007480987499 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TEXA - 0.00567988691137 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00177430485161;
MPRINT(EM_DIAGRAM):   if not missing( T_TEXT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TEXT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TEXT - 0.00051256874236 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TEXT - 0.00571249420635 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TEXT - 0.00264303606567 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0015243432803;
MPRINT(EM_DIAGRAM):   if not missing( T_THAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THAT - 0.02448026262343 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THAT - 0.0180718197967 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THAT - 0.02441631383598 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THAT - 0.00968878594677 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00801117666596;
MPRINT(EM_DIAGRAM):   if not missing( T_THEE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THEE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THEE - 0.0042624058417 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THEE - 0.00041718815185 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THEE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0006287867131;
MPRINT(EM_DIAGRAM):   if not missing( T_THEORI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THEORI - 0.00646900269541 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THEORI - 0.00484223821275 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THEORI - 0.00726275868232 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THEORI - 0.00101299610692 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00269457529583;
MPRINT(EM_DIAGRAM):   if not missing( T_THERAPI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THERAPI - 0.00985271802087 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THERAPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THERAPI - 0.00322728873291 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THERAPI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00091012445873;
MPRINT(EM_DIAGRAM):   if not missing( T_THERE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THERE - 0.00710618008435 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THERE - 0.00264567797252 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THERE - 0.00889833457553 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THERE - 0.00201502105078 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00209978071696;
MPRINT(EM_DIAGRAM):   if not missing( T_THEY ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THEY - 0.01061814371995 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THEY - 0.00328741497587 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THEY - 0.00746475073215 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THEY - 0.001985163752 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00201355552124;
MPRINT(EM_DIAGRAM):   if not missing( T_THINK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THINK - 0.00283757338551 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THINK - 0.01766033451903 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THINK - 0.00626771464703 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THINK - 0.0009709263174 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00237594694677;
MPRINT(EM_DIAGRAM):   if not missing( T_THOMA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THOMA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THOMA - 0.0035907382411 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THOMA - 0.00371426061453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THOMA - 0.00133486304268 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00152350196246;
MPRINT(EM_DIAGRAM):   if not missing( T_THOUGHT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THOUGHT - 0.02955711230115 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THOUGHT - 0.01503364577163 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THOUGHT - 0.01643881687578 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THOUGHT - 0.01212658896076 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00538485421937;
MPRINT(EM_DIAGRAM):   if not missing( T_THREAD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THREAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THREAD - 0.00042149483126 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THREAD - 0.00180904225553 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THREAD - 0.00004700628709 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00061223644834;
MPRINT(EM_DIAGRAM):   if not missing( T_THROW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THROW - 0.00686274509803 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THROW - 0.01067096176689 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THROW - 0.00411047524662 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THROW - 0.00224097766384 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00207371877739;
MPRINT(EM_DIAGRAM):   if not missing( T_THU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_THU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_THU - 0.02188165086881 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_THU - 0.02144858426643 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_THU - 0.00912131121065 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00595455629046;
MPRINT(EM_DIAGRAM):   if not missing( T_TIM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TIM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TIM - 0.02131691446108 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TIM - 0.00172733378725 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TIM - 0.00217942402147 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00149922256172;
MPRINT(EM_DIAGRAM):   if not missing( T_TIME ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TIME - 0.02096924102294 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TIME - 0.024400542765 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TIME - 0.03200085486273 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TIME - 0.03320408075301 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00594474521637;
MPRINT(EM_DIAGRAM):   if not missing( T_TIMER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TIMER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TIMER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TIMER - 0.00143776149778 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TIMER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00049821510887;
MPRINT(EM_DIAGRAM):   if not missing( T_TITL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TITL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TITL - 0.00165188527469 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TITL - 0.0049345591284 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TITL - 0.00364321123847 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00202914897173;
MPRINT(EM_DIAGRAM):   if not missing( T_TODAI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TODAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TODAI - 0.02656746300398 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TODAI - 0.00787705236877 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TODAI - 0.16775660378632 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0063052776677;
MPRINT(EM_DIAGRAM):   if not missing( T_TOLD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TOLD - 0.00128205128205 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TOLD - 0.0056074550907 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TOLD - 0.00609094820472 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TOLD - 0.00878918786094 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00159316724292;
MPRINT(EM_DIAGRAM):   if not missing( T_TOM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TOM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TOM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TOM - 0.00392693075344 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TOM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00125047260692;
MPRINT(EM_DIAGRAM):   if not missing( T_TONIGHT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TONIGHT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TONIGHT - 0.01112768435307 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TONIGHT - 0.00087516575242 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TONIGHT - 0.00031066290684 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00090342592586;
MPRINT(EM_DIAGRAM):   if not missing( T_TOOL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TOOL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TOOL - 0.00005077288353 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TOOL - 0.00519235362864 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TOOL - 0.00142477308542 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00162638399401;
MPRINT(EM_DIAGRAM):   if not missing( T_TOOLKIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TOOLKIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TOOLKIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TOOLKIT - 0.00414564018594 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TOOLKIT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00162855284334;
MPRINT(EM_DIAGRAM):   if not missing( T_TOPIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TOPIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TOPIC - 0.00180815256065 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TOPIC - 0.00392416713717 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TOPIC - 0.00066595159129 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0013586228038;
MPRINT(EM_DIAGRAM):   if not missing( T_TORONTO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TORONTO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TORONTO - 0.00152757347839 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TORONTO - 0.00411842211159 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TORONTO - 0.00012099519958 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00193871732278;
MPRINT(EM_DIAGRAM):   if not missing( T_TOTAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TOTAL - 0.01364440539355 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TOTAL - 0.0134017263508 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TOTAL - 0.00590686069589 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TOTAL - 0.00415662314708 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00234770058437;
MPRINT(EM_DIAGRAM):   if not missing( T_TOWER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TOWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TOWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TOWER - 0.00545406085223 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TOWER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00278996762479;
MPRINT(EM_DIAGRAM):   if not missing( T_TRACE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TRACE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TRACE - 0.00042617333708 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TRACE - 0.00394540591706 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TRACE - 0.00057279183393 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00146016815621;
MPRINT(EM_DIAGRAM):   if not missing( T_TRAFFIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TRAFFIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TRAFFIC - 0.00016202615459 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TRAFFIC - 0.00366044148287 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TRAFFIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00141502106483;
MPRINT(EM_DIAGRAM):   if not missing( T_TRAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TRAIN - 0.00805280704185 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TRAIN - 0.00530897105634 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TRAIN - 0.00276978828708 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TRAIN - 0.00669958460251 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00101172854011;
MPRINT(EM_DIAGRAM):   if not missing( T_TRANSFORM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TRANSFORM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TRANSFORM - 0.0002803002716 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TRANSFORM - 0.00524239097002 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TRANSFORM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00249524019132;
MPRINT(EM_DIAGRAM):   if not missing( T_TRANSLAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TRANSLAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TRANSLAT - 0.00224421012067 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TRANSLAT - 0.00429186621862 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TRANSLAT - 0.00638879944149 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00155357241987;
MPRINT(EM_DIAGRAM):   if not missing( T_TRANSMIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TRANSMIT - 0.00145502645502 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TRANSMIT - 0.00024941352937 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TRANSMIT - 0.00159001129635 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TRANSMIT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00053777962729;
MPRINT(EM_DIAGRAM):   if not missing( T_TREAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TREAT - 0.03231453002995 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TREAT - 0.0063336054967 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TREAT - 0.00732475920719 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TREAT - 0.00572160959458 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00250027186782;
MPRINT(EM_DIAGRAM):   if not missing( T_TREATMENT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TREATMENT - 0.04110616920455 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TREATMENT - 0.00317997455108 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TREATMENT - 0.00903260311085 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TREATMENT - 0.00206186370942 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00309383652357;
MPRINT(EM_DIAGRAM):   if not missing( T_TROOP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TROOP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TROOP - 0.02022575189909 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TROOP - 0.00231239823788 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TROOP - 0.05517320516658 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00249294190135;
MPRINT(EM_DIAGRAM):   if not missing( T_TROUBL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TROUBL - 0.00896471949103 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TROUBL - 0.00138810107413 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TROUBL - 0.00551389804552 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TROUBL - 0.00126287172872 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00193508033221;
MPRINT(EM_DIAGRAM):   if not missing( T_TRUE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TRUE - 0.007212543554 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TRUE - 0.02646812595708 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TRUE - 0.00899457934301 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TRUE - 0.00195510526699 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00342821558826;
MPRINT(EM_DIAGRAM):   if not missing( T_TRUTH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TRUTH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TRUTH - 0.02655795404674 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TRUTH - 0.00325879786383 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TRUTH - 0.00582898528879 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00336069992003;
MPRINT(EM_DIAGRAM):   if not missing( T_TUBE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TUBE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TUBE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TUBE - 0.00471674364966 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TUBE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00160006403669;
MPRINT(EM_DIAGRAM):   if not missing( T_TUE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TUE - 0.02400282248607 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TUE - 0.02953469244051 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TUE - 0.01113863874479 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00859116671322;
MPRINT(EM_DIAGRAM):   if not missing( T_TURK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TURK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TURK - 0.00266888650313 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TURK - 0.0019491234466 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TURK - 0.25875203703736 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00539001822325;
MPRINT(EM_DIAGRAM):   if not missing( T_TURKEI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TURKEI - 0.0032029478458 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TURKEI - 0.00327012364976 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TURKEI - 0.00360362518282 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TURKEI - 0.07891292385084 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00250523850531;
MPRINT(EM_DIAGRAM):   if not missing( T_TURKISH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TURKISH - 0.0025722916714 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TURKISH - 0.00303241101804 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TURKISH - 0.16107984900494 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00313015511446;
MPRINT(EM_DIAGRAM):   if not missing( T_TURN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TURN - 0.00698910754249 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TURN - 0.00394705354018 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TURN - 0.00702509667349 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TURN - 0.00306619134853 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00150734522354;
MPRINT(EM_DIAGRAM):   if not missing( T_TYPE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TYPE - 0.01855412828763 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TYPE - 0.00131667911945 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TYPE - 0.01040242714298 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TYPE - 0.00054599173206 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00182027955585;
MPRINT(EM_DIAGRAM):   if not missing( T_TYPIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_TYPIC - 0.0040293040293 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_TYPIC - 0.02098834070212 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_TYPIC - 0.00536926444231 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_TYPIC - 0.00715491875751 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00362161387019;
MPRINT(EM_DIAGRAM):   if not missing( T_UNDEFIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_UNDEFIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_UNDEFIN - 0.00010014074727 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_UNDEFIN - 0.00185799245319 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_UNDEFIN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00065476196206;
MPRINT(EM_DIAGRAM):   if not missing( T_UNDERSTAND ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_UNDERSTAND - 0.0073343947508 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_UNDERSTAND - 0.0109871297848 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_UNDERSTAND - 0.00663251776757 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_UNDERSTAND - 0.00497946164553 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00170336760193;
MPRINT(EM_DIAGRAM):   if not missing( T_UNIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_UNIT - 0.00293627655143 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_UNIT - 0.01510418382323 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_UNIT - 0.00987834971571 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_UNIT - 0.02248861513745 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00370882240867;
MPRINT(EM_DIAGRAM):   if not missing( T_UNIV ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_UNIV - 0.2884461778187 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_UNIV - 0.00234803497051 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_UNIV - 0.01010677470959 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_UNIV - 0.00207804202262 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00592342750402;
MPRINT(EM_DIAGRAM):   if not missing( T_UNIVERS ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_UNIVERS - 0.00178762414056 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_UNIVERS - 0.05116996197073 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_UNIVERS - 0.0455682930697 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_UNIVERS - 0.01726033227484 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00719594216449;
MPRINT(EM_DIAGRAM):   if not missing( T_UNIX ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_UNIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_UNIX - 0.00178013391206 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_UNIX - 0.01063579653962 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_UNIX - 0.00204918032786 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00265671058408;
MPRINT(EM_DIAGRAM):   if not missing( T_UNKNOWN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_UNKNOWN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_UNKNOWN - 0.00005677919523 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_UNKNOWN - 0.00104129978476 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_UNKNOWN - 0.00036878491563 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00036720441211;
MPRINT(EM_DIAGRAM):   if not missing( T_UPDAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_UPDAT - 0.00545229220757 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_UPDAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_UPDAT - 0.00330483383397 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_UPDAT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00091640887126;
MPRINT(EM_DIAGRAM):   if not missing( T_URBANA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_URBANA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_URBANA - 0.01116491254897 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_URBANA - 0.00297017737454 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_URBANA - 0.00224115146969 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00179486921608;
MPRINT(EM_DIAGRAM):   if not missing( T_USA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_USA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_USA - 0.02852789191778 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_USA - 0.00423516260721 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_USA - 0.00201558720773 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0036393964911;
MPRINT(EM_DIAGRAM):   if not missing( T_USENET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_USENET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_USENET - 0.01733852931888 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_USENET - 0.02973451966721 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_USENET - 0.01888138523095 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00732864598104;
MPRINT(EM_DIAGRAM):   if not missing( T_USER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_USER - 0.00122448979591 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_USER - 0.00059110413668 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_USER - 0.01291341713256 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_USER - 0.00102789529349 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00268311839465;
MPRINT(EM_DIAGRAM):   if not missing( T_UTEXA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_UTEXA - 0.00481229326258 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00277973983993;
MPRINT(EM_DIAGRAM):   if not missing( T_UUCP ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_UUCP - 0.02012186724282 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_UUCP - 0.01721468015947 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_UUCP - 0.01179991385228 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_UUCP - 0.08559478037792 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00562613382866;
MPRINT(EM_DIAGRAM):   if not missing( T_VALU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VALU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VALU - 0.00062083557176 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VALU - 0.00338473975814 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VALU - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00115956655651;
MPRINT(EM_DIAGRAM):   if not missing( T_VANDERBYL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VANDERBYL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VANDERBYL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VANDERBYL - 0.00322762126607 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VANDERBYL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00157731909597;
MPRINT(EM_DIAGRAM):   if not missing( T_VARIABL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VARIABL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VARIABL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VARIABL - 0.00439199358898 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VARIABL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00187883005965;
MPRINT(EM_DIAGRAM):   if not missing( T_VAX ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VAX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VAX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VAX - 0.00320033925422 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VAX - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00097119789254;
MPRINT(EM_DIAGRAM):   if not missing( T_VERSION ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VERSION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VERSION - 0.00136859789772 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VERSION - 0.0268112806532 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VERSION - 0.00074061068074 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00734158965988;
MPRINT(EM_DIAGRAM):   if not missing( T_VIDEO ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VIDEO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VIDEO - 0.00001539582388 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VIDEO - 0.00525644941611 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VIDEO - 0.00027527873209 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00176544239295;
MPRINT(EM_DIAGRAM):   if not missing( T_VIEW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VIEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VIEW - 0.01718544114484 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VIEW - 0.00785281115511 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VIEW - 0.00518122797255 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00248655246899;
MPRINT(EM_DIAGRAM):   if not missing( T_VILLAG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VILLAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VILLAG - 0.03623924872428 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VILLAG - 0.0004692623464 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VILLAG - 0.05401963892954 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00258063984553;
MPRINT(EM_DIAGRAM):   if not missing( T_VIRGINIA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VIRGINIA - 0.00957922434348 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VIRGINIA - 0.00400817917982 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00164735534843;
MPRINT(EM_DIAGRAM):   if not missing( T_VIRTUAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VIRTUAL - 0.00330687830687 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VIRTUAL - 0.0005632152834 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VIRTUAL - 0.00347159828501 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VIRTUAL - 0.00013789907993 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00132903813135;
MPRINT(EM_DIAGRAM):   if not missing( T_VISUAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VISUAL - 0.0015873015873 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VISUAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VISUAL - 0.00398478379543 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VISUAL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00126739672506;
MPRINT(EM_DIAGRAM):   if not missing( T_VOIC ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VOIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VOIC - 0.00627672900555 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VOIC - 0.00645109709868 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VOIC - 0.00228474330851 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00187933885717;
MPRINT(EM_DIAGRAM):   if not missing( T_VOLT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VOLT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VOLT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VOLT - 0.0049757049988 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VOLT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00206726200815;
MPRINT(EM_DIAGRAM):   if not missing( T_VOLTAG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_VOLTAG - 0.00728027733338 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00210511344856;
MPRINT(EM_DIAGRAM):   if not missing( T_WAI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WAI - 0.00137263268686 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WAI - 0.00575939423178 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WAI - 0.08664191458032 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00262492828793;
MPRINT(EM_DIAGRAM):   if not missing( T_WAIT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WAIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WAIT - 0.00945226804486 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WAIT - 0.00699966472383 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WAIT - 0.00257235420997 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00280091905924;
MPRINT(EM_DIAGRAM):   if not missing( T_WALL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WALL - 0.00698412698412 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WALL - 0.00198893126489 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WALL - 0.0047622911663 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WALL - 0.00392133060972 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00185621358256;
MPRINT(EM_DIAGRAM):   if not missing( T_WANT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WANT - 0.01137280565346 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WANT - 0.00439504502317 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WANT - 0.00734086372635 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WANT - 0.00087153768857 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00185994221765;
MPRINT(EM_DIAGRAM):   if not missing( T_WAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WAR - 0.02609227762861 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WAR - 0.00189511974783 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WAR - 0.02700802601732 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00196102988179;
MPRINT(EM_DIAGRAM):   if not missing( T_WARN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WARN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WARN - 0.00348480385014 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WARN - 0.00398280153657 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WARN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00112253082618;
MPRINT(EM_DIAGRAM):   if not missing( T_WASHINGTON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WASHINGTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WASHINGTON - 0.00486605223862 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WASHINGTON - 0.0044430367396 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WASHINGTON - 0.00471483191443 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00169854174107;
MPRINT(EM_DIAGRAM):   if not missing( T_WASN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WASN - 0.0072886297376 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WASN - 0.00873946602613 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WASN - 0.00600723086556 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WASN - 0.00097073087625 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00252445775665;
MPRINT(EM_DIAGRAM):   if not missing( T_WAST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WAST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WAST - 0.01834419259813 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WAST - 0.00342719873018 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WAST - 0.00202233609194 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00167936537585;
MPRINT(EM_DIAGRAM):   if not missing( T_WATCH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WATCH - 0.00277777777777 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WATCH - 0.00457121795255 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WATCH - 0.00388246928486 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WATCH - 0.01145863778645 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00138364517539;
MPRINT(EM_DIAGRAM):   if not missing( T_WATER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WATER - 0.00574746008708 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WATER - 0.00992600802479 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WATER - 0.00502156958103 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WATER - 0.00122282993203 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00231973760625;
MPRINT(EM_DIAGRAM):   if not missing( T_WAVE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WAVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WAVE - 0.00022940342501 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WAVE - 0.00442218059899 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WAVE - 0.00060023443603 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00160832048587;
MPRINT(EM_DIAGRAM):   if not missing( T_WAYN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WAYN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WAYN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WAYN - 0.00291106349935 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WAYN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0013983035139;
MPRINT(EM_DIAGRAM):   if not missing( T_WED ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WED - 0.00184873949579 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WED - 0.00604859959253 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WED - 0.0144230259003 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WED - 0.00305628836443 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00373891787652;
MPRINT(EM_DIAGRAM):   if not missing( T_WEEK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WEEK - 0.0281575103921 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WEEK - 0.00901401343408 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WEEK - 0.01495941471833 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WEEK - 0.00356585586401 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00555265069033;
MPRINT(EM_DIAGRAM):   if not missing( T_WEIGHT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WEIGHT - 0.04064450696852 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WEIGHT - 0.00060853716889 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WEIGHT - 0.00434141168981 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WEIGHT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0024405195854;
MPRINT(EM_DIAGRAM):   if not missing( T_WEST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WEST - 0.01994462311986 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WEST - 0.00374111469218 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WEST - 0.00075815505993 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229790652231;
MPRINT(EM_DIAGRAM):   if not missing( T_WESTERN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WESTERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WESTERN - 0.03183654068681 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WESTERN - 0.00641426679648 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WESTERN - 0.00954820928469 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00470702078952;
MPRINT(EM_DIAGRAM):   if not missing( T_WHAT ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WHAT - 0.00701436130007 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WHAT - 0.00338235116963 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WHAT - 0.00771299896167 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WHAT - 0.00298371853363 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00222518415381;
MPRINT(EM_DIAGRAM):   if not missing( T_WHITE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WHITE - 0.00506493506493 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WHITE - 0.00925866989483 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WHITE - 0.00712776635571 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WHITE - 0.0009435120662 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00316993198003;
MPRINT(EM_DIAGRAM):   if not missing( T_WIDE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WIDE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WIDE - 0.00144192125332 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WIDE - 0.00418681729639 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WIDE - 0.00059249252484 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00098723063484;
MPRINT(EM_DIAGRAM):   if not missing( T_WIDGET ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WIDGET - 0.00953145513637 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00305772433842;
MPRINT(EM_DIAGRAM):   if not missing( T_WIDTH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WIDTH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WIDTH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WIDTH - 0.00312791895453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WIDTH - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00102138116658;
MPRINT(EM_DIAGRAM):   if not missing( T_WIFE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WIFE - 0.00759512596247 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WIFE - 0.00707810077519 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WIFE - 0.00485132788883 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WIFE - 0.00375944838359 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00181188859624;
MPRINT(EM_DIAGRAM):   if not missing( T_WIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WIN - 0.00063745224527 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WIN - 0.00120743916625 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WIN - 0.0003479755721 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00067485950628;
MPRINT(EM_DIAGRAM):   if not missing( T_WINDOW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WINDOW - 0.00002642789636 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WINDOW - 0.04393206177042 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WINDOW - 0.00012925388485 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00894373389346;
MPRINT(EM_DIAGRAM):   if not missing( T_WIRE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WIRE - 0.00789863351847 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WIRE - 0.00102353668217 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00310011279429;
MPRINT(EM_DIAGRAM):   if not missing( T_WOMEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WOMEN - 0.01621572871572 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WOMEN - 0.01181442980601 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WOMEN - 0.00619463596263 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WOMEN - 0.0608158853037 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00361572755181;
MPRINT(EM_DIAGRAM):   if not missing( T_WON ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WON - 0.03468075710169 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WON - 0.00314860613857 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WON - 0.00888367172839 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WON - 0.0020554030691 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00253379805967;
MPRINT(EM_DIAGRAM):   if not missing( T_WONDER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WONDER - 0.02495519809609 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WONDER - 0.01249445484644 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WONDER - 0.01844571792181 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WONDER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00827537367685;
MPRINT(EM_DIAGRAM):   if not missing( T_WORD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WORD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WORD - 0.0091719842751 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WORD - 0.00614800650516 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WORD - 0.00772720478422 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00158874496878;
MPRINT(EM_DIAGRAM):   if not missing( T_WORK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WORK - 0.04155933865901 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WORK - 0.01716276219886 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WORK - 0.04072147002797 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WORK - 0.03572332049393 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00771451112306;
MPRINT(EM_DIAGRAM):   if not missing( T_WORLD ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WORLD - 0.0022969187675 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WORLD - 0.02754845887885 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WORLD - 0.03354284764753 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WORLD - 0.08869039826259 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00889550468158;
MPRINT(EM_DIAGRAM):   if not missing( T_WORTH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WORTH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WORTH - 0.00229814738122 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WORTH - 0.00528949403642 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WORTH - 0.00054749092729 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00183236638844;
MPRINT(EM_DIAGRAM):   if not missing( T_WOULDN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WOULDN - 0.02015000872143 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WOULDN - 0.03587105752296 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WOULDN - 0.0111970939475 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WOULDN - 0.00847808110677 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00677282062957;
MPRINT(EM_DIAGRAM):   if not missing( T_WPI ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WPI - 0.00138032336376 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WPI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00088515286917;
MPRINT(EM_DIAGRAM):   if not missing( T_WRITE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WRITE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WRITE - 0.00208343503432 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WRITE - 0.0057555961985 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WRITE - 0.00780808127347 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00216075626842;
MPRINT(EM_DIAGRAM):   if not missing( T_WRITTEN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WRITTEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WRITTEN - 0.00687952944773 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WRITTEN - 0.01072383190101 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WRITTEN - 0.00273088492756 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00437766807384;
MPRINT(EM_DIAGRAM):   if not missing( T_WRONG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WRONG - 0.00241187384044 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WRONG - 0.0132064695673 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WRONG - 0.00926755236343 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WRONG - 0.00494435899983 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00244204349603;
MPRINT(EM_DIAGRAM):   if not missing( T_WROTE ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_WROTE - 0.00959939531368 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_WROTE - 0.01002365235421 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_WROTE - 0.0161215988837 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_WROTE - 0.0148021449578 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00459846709092;
MPRINT(EM_DIAGRAM):   if not missing( T_XLIB ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_XLIB - 0.00531378059234 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00148056818937;
MPRINT(EM_DIAGRAM):   if not missing( T_XPUTIMAG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_XPUTIMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_XPUTIMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_XPUTIMAG - 0.0029987165218 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_XPUTIMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00135281735516;
MPRINT(EM_DIAGRAM):   if not missing( T_XSERVER ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_XSERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_XSERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_XSERVER - 0.00274561383234 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_XSERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00124001791245;
MPRINT(EM_DIAGRAM):   if not missing( T_XTERM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_XTERM - 0.00796696096853 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00316724119173;
MPRINT(EM_DIAGRAM):   if not missing( T_XTERMIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_XTERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_XTERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_XTERMIN - 0.00162058230499 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_XTERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00070842913135;
MPRINT(EM_DIAGRAM):   if not missing( T_XVIEW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_XVIEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_XVIEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_XVIEW - 0.00413100586784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_XVIEW - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00165635729558;
MPRINT(EM_DIAGRAM):   if not missing( T_XWINDOW ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_XWINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_XWINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_XWINDOW - 0.00245266445309 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_XWINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00093752701174;
MPRINT(EM_DIAGRAM):   if not missing( T_YASSIN ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_YASSIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_YASSIN - 0.0208407251054 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_YASSIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_YASSIN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00157782949679;
MPRINT(EM_DIAGRAM):   if not missing( T_YEAH ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_YEAH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_YEAH - 0.00397697196998 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_YEAH - 0.00500940129361 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_YEAH - 0.00194132873166 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00252934084133;
MPRINT(EM_DIAGRAM):   if not missing( T_YEAR ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_YEAR - 0.0533714086885 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_YEAR - 0.05994136672023 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_YEAR - 0.02788484652018 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_YEAR - 0.04527750728751 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00946716453807;
MPRINT(EM_DIAGRAM):   if not missing( T_YEAST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_YEAST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_YEAST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_YEAST - 0.00466166089879 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_YEAST - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00155794276292;
MPRINT(EM_DIAGRAM):   if not missing( T_YIGAL ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_YIGAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_YIGAL - 0.00340098445924 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_YIGAL - 0.00204023828767 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_YIGAL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00109607599895;
MPRINT(EM_DIAGRAM):   if not missing( T_YORK ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_YORK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_YORK - 0.03230611374241 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_YORK - 0.00806941395941 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_YORK - 0.02130663398693 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00465283687355;
MPRINT(EM_DIAGRAM):   if not missing( T_YOU ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_YOU - 0.03383950900472 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_YOU - 0.01380205660397 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_YOU - 0.01862592231792 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_YOU - 0.00242800676155 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0052221653489;
MPRINT(EM_DIAGRAM):   if not missing( T_YOUNG ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_YOUNG - 0.0029365079365 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_YOUNG - 0.0061658720404 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_YOUNG - 0.0055269375527 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_YOUNG - 0.00450360968815 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00234890181027;
MPRINT(EM_DIAGRAM):   if not missing( T_ZIONISM ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ZIONISM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ZIONISM - 0.00952523920027 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ZIONISM - 0.00230552360414 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ZIONISM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00205913586841;
MPRINT(EM_DIAGRAM):   if not missing( T_ZIONIST ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ZIONIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ZIONIST - 0.03723724243698 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ZIONIST - 0.00017879492222 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ZIONIST - 0.00036295444921 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00232232362564;
MPRINT(EM_DIAGRAM):   if not missing( T_ZUMA ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_ZUMA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_ZUMA - 0.00009416120576 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_ZUMA - 0.00024092779723 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_ZUMA - 0.24953673736247 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00506562873836;
MPRINT(EM_DIAGRAM):   _vqnvar = 3.18257804579395 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 4.3562794952958E-10 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 4;
MPRINT(EM_DIAGRAM):   if CLUSvads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (3.18257804579395 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUSvlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
33212      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS3.CLUS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.IDS_DATA.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.28 seconds
      cpu time            0.28 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.28 seconds
      cpu time            0.28 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
33213      quit;
33214      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
33215      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
33216      * Clus: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus: Computing metadata for TRAIN data;
33217      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS3.Clus_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS3.Clus_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS3.Clus_TRAIN out=WORK.M3DNHQ7V noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DNHQ7V;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DNHQ7V(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DNHQ7V;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DNHQ7V;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2_BELSJ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_BELSJ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_BELSJ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2GDOBRC(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_BELSJ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_BELSJ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_BELSJ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_BELSJ;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_BELSJ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Nombre de la variable" TYPE = "Tipo" ROLE = "Rol" LEVEL= "Nivel de medida" ORDER= "Orden" CREATOR= "Creador" FORMATTYPE= "Tipo de formato" FAMILY= "Familia" DISTRIBUTION= "Distribución" PRICE= "Precio" LOWERLIMIT=
"Límite inferior" UPPERLIMIT= "Límite superior" REPORT= "Informe" COMMENT= "Comentario" INDEX= "Índice" INDEXTYPE= "TipoÍndice" LABEL= "Etiqueta" LENGTH= "Longitud";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS3.Ids_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Ids_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "23/11/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20H02" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log del informe";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log del informe
Fecha:                23/11/20
Hora:                20H02
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0Q66TF7 "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0Q66TF7 new;
MPRINT(EM_DIAGRAM):   run;
33627      data WORK.M07F07WW;
MPRINT(EM_DIAGRAM):    data WORK.M07F07WW;
33628      set WORK.M07F07WW;
MPRINT(EM_DIAGRAM):   set WORK.M07F07WW;
33629      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
33630      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1204 observations read from the data set WORK.M07F07WW.
NOTE: The data set WORK.M07F07WW has 1204 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33631      data WORK.M07F07WW;
MPRINT(EM_DIAGRAM):    data WORK.M07F07WW;
33632      set WORK.M07F07WW end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M07F07WW end=_eof_ nobs=_nobs_;
33633      output;
MPRINT(EM_DIAGRAM):   output;
33634      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
33635      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
33636      ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
33637      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
33638      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
33639      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
33640      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
33641      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
33642      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
33643      output;
MPRINT(EM_DIAGRAM):   output;
33644      end;
MPRINT(EM_DIAGRAM):   end;
33645      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1204 observations read from the data set WORK.M07F07WW.
NOTE: The data set WORK.M07F07WW has 1205 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33646      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
33647      * Clus: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Clus: Create decision matrix;
33648      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33649      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33650      * Clus: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Tree Variables Macro ;
33651      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33652      %macro EM_TREEVARS;
33653          ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT
33654         ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI
33655         ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW
33656         ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI
33657         APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA
33658         ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN
33659         ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
33660         BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER
33661         BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON
33662         BOUGHT BOULDER BOX BRAD BRAIN BRAND BREAK BRIAN BRING BRITISH BROWN BTW BUFFER
33663         BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN
33664         CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
33665         CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI
33666         CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI
33667         CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR
33668         CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN
33669         COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
33670         COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET
33671         CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT
33672         CONTACT CONTENT CONTEXT CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP
33673         CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN
33674         CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL
33675         DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT
33676         DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL
33677         DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO
33678         DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS
33679         DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON
33680         DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
33681         EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
33682         ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP
33683         ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT
33684         EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE
33685         FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
33686         FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU
33687         FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE
33688         FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND FULL FUNCTION FUTUR GAIN GAME
33689         GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI
33690         GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG
33691         GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
33692         HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT
33693         HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER
33694         HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD
33695         HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT
33696         IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT
33697         INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC
33698         INTERGRAPH INTERN INTERNET INTERVIEW INVENT INVOLV IRAN IRVIN ISLAM ISLAND ISN
33699         ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH
33700         JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD
33701         KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL
33702         LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV
33703         LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT
33704         LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
33705         LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN
33706         MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR
33707         MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON
33708         MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL MIDDL MIGRAIN
33709         MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL
33710         MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG
33711         MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI
33712         NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW
33713         NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER
33714         OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
33715         OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL
33716         OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN
33717         PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD
33718         PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL
33719         PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT
33720         POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER
33721         POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU
33722         PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM
33723         PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC
33724         PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST RADAR
33725         RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
33726         RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL
33727         RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR
33728         RESEARCH RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN
33729         REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST
33730         RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE
33731         SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU
33732         SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT
33733         SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME
33734         SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT SHOULDN SHOW SICK SIDE SIGN
33735         SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN
33736         SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC
33737         SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI
33738         STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN
33739         STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB
33740         SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS
33741         SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL
33742         TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL
33743         TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE
33744         THEORI THERAPI THERE THEY THINK THOMA THOUGHT THREAD THROW THU TIM TIME TIMER
33745         TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE
33746         TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
33747         TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV
33748         UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL
33749         VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG
33750         WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
33751         WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON
33752         WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
33753         XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG
33754         ZIONISM ZIONIST ZUMA
33755      %mend EM_TREEVARS;
33756      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33757      * Clus: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Tree Targets Macro ;
33758      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33759      %macro EM_TREETARGETS;
33760          _SEGMENT_
33761      %mend EM_TREETARGETS;
33762      data EMWS3.EM_Clus / view=EMWS3.EM_Clus;
MPRINT(EM_DIAGRAM):   data EMWS3.EM_Clus / view=EMWS3.EM_Clus;
33763      set
33763    ! EMWS3.Clus_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS3.Clus_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI
ANDREW ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN ATHENA ATTACH ATTACK
ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL
CHARACT CHARG CHASTITI CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN COLOR
COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT
CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD
DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG
DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI
FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND
FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD HUMAN HUNTSVIL ICON IDEA
IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB
LABEL LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG LONGER LOOK LOOP LOST
LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD
METHODOLOG MICHAEL MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR
NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM OMRAN OPEN
OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE
PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID
PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST
RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH
RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC
SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK
SPOT STAI STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS SURGERI
SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK
THOMA THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN
UNDERSTAND UNIT UNIV UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
33764      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS3.EM_CLUS.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus: Inputs intervalo Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33765      *------------------------------------------------------------* ;
33766      * Clus: Inputs intervalo Macro ;
33767      *------------------------------------------------------------* ;
33768      %macro INTINPUTS;
33769          ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT
33770         ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI
33771         ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW
33772         ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI
33773         APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA
33774         ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN
33775         ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
33776         BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER
33777         BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON
33778         BOUGHT BOULDER BOX BRAD BRAIN BRAND BREAK BRIAN BRING BRITISH BROWN BTW BUFFER
33779         BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN
33780         CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
33781         CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI
33782         CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI
33783         CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR
33784         CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN
33785         COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
33786         COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET
33787         CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT
33788         CONTACT CONTENT CONTEXT CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP
33789         CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN
33790         CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL
33791         DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT
33792         DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL
33793         DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO
33794         DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS
33795         DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON
33796         DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
33797         EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
33798         ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP
33799         ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT
33800         EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE
33801         FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
33802         FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU
33803         FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE
33804         FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND FULL FUNCTION FUTUR GAIN GAME
33805         GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI
33806         GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG
33807         GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
33808         HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT
33809         HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER
33810         HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD
33811         HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT
33812         IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT
33813         INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC
33814         INTERGRAPH INTERN INTERNET INTERVIEW INVENT INVOLV IRAN IRVIN ISLAM ISLAND ISN
33815         ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH
33816         JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD
33817         KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL
33818         LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV
33819         LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT
33820         LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
33821         LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN
33822         MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR
33823         MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON
33824         MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL MIDDL MIGRAIN
33825         MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL
33826         MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG
33827         MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI
33828         NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW
33829         NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER
33830         OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
33831         OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL
33832         OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN
33833         PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD
33834         PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL
33835         PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT
33836         POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER
33837         POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU
33838         PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM
33839         PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC
33840         PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST RADAR
33841         RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
33842         RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL
33843         RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR
33844         RESEARCH RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN
33845         REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST
33846         RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE
33847         SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU
33848         SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT
33849         SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME
33850         SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT SHOULDN SHOW SICK SIDE SIGN
33851         SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN
33852         SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC
33853         SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI
33854         STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN
33855         STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB
33856         SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS
33857         SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL
33858         TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL
33859         TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE
33860         THEORI THERAPI THERE THEY THINK THOMA THOUGHT THREAD THROW THU TIM TIME TIMER
33861         TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE
33862         TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
33863         TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV
33864         UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL
33865         VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG
33866         WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
33867         WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON
33868         WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
33869         XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG
33870         ZIONISM ZIONIST ZUMA
33871      %mend INTINPUTS;
33872      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33873      * Clus: Inputs binarios y nominales Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Inputs binarios y nominales Macro ;
33874      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33875      %macro NOMINPUTS;
33876
33877      %mend NOMINPUTS;
33878      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33879      * Clus: Inputs ordinales Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Inputs ordinales Macro ;
33880      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
33881      %macro ORDINPUTS;
33882
33883      %mend ORDINPUTS;
33884      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33885      * Clus: ejecutar procedimiento ARBOR;
MPRINT(EM_DIAGRAM):   * Clus: ejecutar procedimiento ARBOR;
33886      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
33887      proc arbor data=EMWS3.EM_Clus
33888      MAXSURRS=5
33889      ;
MPRINT(EM_DIAGRAM):    proc arbor data=EMWS3.EM_Clus MAXSURRS=5 ;
33890      ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
33891      input %INTINPUTS
MPRINT(INTINPUTS):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI
ANDREW ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN ATHENA ATTACH ATTACK
ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL
CHARACT CHARG CHASTITI CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN COLOR
COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT
CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD
DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG
DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI
FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND
FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD HUMAN HUNTSVIL ICON IDEA
IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB
LABEL LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG LONGER LOOK LOOP LOST
LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD
METHODOLOG MICHAEL MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR
NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM OMRAN OPEN
OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE
PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID
PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST
RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH
RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC
SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK
SPOT STAI STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS SURGERI
SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK
THOMA THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN
UNDERSTAND UNIT UNIV UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
33892      / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
33893      target _SEGMENT_ / level=NOMINAL
33894      Criterion=PROBCHISQ
33895      ;
MPRINT(EM_DIAGRAM):   target _SEGMENT_ / level=NOMINAL Criterion=PROBCHISQ ;
33896      ;
MPRINT(EM_DIAGRAM):   ;
33897      Performance DISK
33898      ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
33899      MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: 1474671 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 957914112 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
NOTE: Passed training data 18 times.
NOTE: Training used 88372784 bytes of work memory.
NOTE: The subtree sequence contains 12 subtrees. The largest has 23 nodes and 12 leaves.
NOTE: Using subtree with 19 nodes and 10 leaves.
NOTE: Created macro variable NLEAVES equal to 10.
33900      save
33901      MODEL=EMWS3.Clus_PLOTDS
33902      SEQUENCE=EMWS3.Clus_OUTSEQ
33903      IMPORTANCE=EMWS3.Clus_OUTIMPORT
33904      NODESTAT=EMWS3.Clus_OUTNODES
33905      SUMMARY=WORK.OUTSUMMARY_TREE_39GQXOP
33906      STATSBYNODE=WORK.OUTSTATS_TREE_39GQXOP
33907      Pathlistnonmissing = WORK.OUTPATH_TREE_39GQXOP
33908      Rules = WORK.OUTRULES_TREE_39GQXOP
33909      ;
MPRINT(EM_DIAGRAM):   save MODEL=EMWS3.Clus_PLOTDS SEQUENCE=EMWS3.Clus_OUTSEQ IMPORTANCE=EMWS3.Clus_OUTIMPORT NODESTAT=EMWS3.Clus_OUTNODES SUMMARY=WORK.OUTSUMMARY_TREE_39GQXOP STATSBYNODE=WORK.OUTSTATS_TREE_39GQXOP Pathlistnonmissing =
WORK.OUTPATH_TREE_39GQXOP Rules = WORK.OUTRULES_TREE_39GQXOP ;
NOTE: The data set EMWS3.CLUS_OUTIMPORT has 1204 observations and 5 variables.
NOTE: The data set EMWS3.CLUS_PLOTDS has 9643 observations and 4 variables.
NOTE: The data set EMWS3.CLUS_OUTNODES has 19 observations and 24 variables.
NOTE: The data set WORK.OUTPATH_TREE_39GQXOP has 117 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_39GQXOP has 374 observations and 6 variables.
NOTE: The data set EMWS3.CLUS_OUTSEQ has 12 observations and 11 variables.
NOTE: The data set WORK.OUTSTATS_TREE_39GQXOP has 114 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_39GQXOP has 20 observations and 7 variables.
33910      run;
MPRINT(EM_DIAGRAM):   run;
 
33911      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista EMWS3.EM_CLUS.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.78 seconds
      cpu time            5.61 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set EMWS3.EM_CLUS.
NOTE: The data set WORK._NAMEDAT has 4 observations and 5 variables.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           5.82 seconds
      cpu time            5.62 seconds
 
 
33912      data EMWS3.Clus_OUTIMPORT;
MPRINT(EM_DIAGRAM):    data EMWS3.Clus_OUTIMPORT;
33913      set EMWS3.Clus_OUTIMPORT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus_OUTIMPORT;
33914      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
33915         "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
33916      ;
MPRINT(EM_DIAGRAM):   label NAME = "Nombre de la variable" LABEL = "Etiqueta" NRULES = "Número de reglas de división" IMPORTANCE = "Importancia" NSURROGATES = "Número de reglas sustitutas" ;
33917      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1204 observations read from the data set EMWS3.CLUS_OUTIMPORT.
NOTE: The data set EMWS3.CLUS_OUTIMPORT has 1204 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33918      filename x "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
33919      data temp;
MPRINT(EM_DIAGRAM):    data temp;
33920      length varname $11;
MPRINT(EM_DIAGRAM):   length varname $11;
33921      retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
33922      set WORK.OUTPATH_TREE_39GQXOP;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_39GQXOP;
33923      if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
33924      else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
33925      output;
MPRINT(EM_DIAGRAM):   output;
33926      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 117 observations read from the data set WORK.OUTPATH_TREE_39GQXOP.
NOTE: The data set WORK.TEMP has 117 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33927      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
33928      by node;
MPRINT(EM_DIAGRAM):   by node;
33929      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 117 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 117 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
33930      proc sort data=EMWS3.Clus_OUTNODES out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus_OUTNODES out=outnodes;
33931      by node;
MPRINT(EM_DIAGRAM):   by node;
33932      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS3.CLUS_OUTNODES.
NOTE: The data set WORK.OUTNODES has 19 observations and 24 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
33933      data temp;
MPRINT(EM_DIAGRAM):   data temp;
33934      merge temp(in=_a) outnodes(keep= node
33935      NPRIORS
33936      P__SEGMENT_3
33937      P__SEGMENT_2
33938      P__SEGMENT_4
33939      P__SEGMENT_1
33940      );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P__SEGMENT_3 P__SEGMENT_2 P__SEGMENT_4 P__SEGMENT_1 );
33941      by node;
MPRINT(EM_DIAGRAM):   by node;
33942      if _a;
MPRINT(EM_DIAGRAM):   if _a;
33943      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 117 observations read from the data set WORK.TEMP.
NOTE: There were 19 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 117 observations and 13 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33944      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
33945      by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
33946      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 117 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 117 observations and 13 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33947      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
33948      file x;
MPRINT(EM_DIAGRAM):   file x;
33949      set temp;
MPRINT(EM_DIAGRAM):   set temp;
33950      by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
33951      retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
33952      length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
33953      if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
33954      origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
33955      oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
33956      end;
MPRINT(EM_DIAGRAM):   end;
33957      if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
33958      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
33959      put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
33960      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
33961      end;
MPRINT(EM_DIAGRAM):   end;
33962      if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
33963      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
33964      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
33965      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
33966      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
33967      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
33968      end;
MPRINT(EM_DIAGRAM):   end;
33969      else do;
MPRINT(EM_DIAGRAM):   else do;
33970      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
33971      end;
MPRINT(EM_DIAGRAM):   end;
33972      end;
MPRINT(EM_DIAGRAM):   end;
33973      end;
MPRINT(EM_DIAGRAM):   end;
33974      else do;
MPRINT(EM_DIAGRAM):   else do;
33975      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
33976      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
33977      end;
MPRINT(EM_DIAGRAM):   end;
33978      else do;
MPRINT(EM_DIAGRAM):   else do;
33979      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
33980      end;
MPRINT(EM_DIAGRAM):   end;
33981      end;
MPRINT(EM_DIAGRAM):   end;
33982      end;
MPRINT(EM_DIAGRAM):   end;
33983      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
33984      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
33985      string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
33986      end;
MPRINT(EM_DIAGRAM):   end;
33987      else do;
MPRINT(EM_DIAGRAM):   else do;
33988      string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
33989      end;
MPRINT(EM_DIAGRAM):   end;
33990      end;
MPRINT(EM_DIAGRAM):   end;
33991      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
33992      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
33993      string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
33994      end;
MPRINT(EM_DIAGRAM):   end;
33995      else do;
MPRINT(EM_DIAGRAM):   else do;
33996      string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
33997      end;
MPRINT(EM_DIAGRAM):   end;
33998      end;
MPRINT(EM_DIAGRAM):   end;
33999      else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
34000      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
34001      string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
34002      end;
MPRINT(EM_DIAGRAM):   end;
34003      else do;
MPRINT(EM_DIAGRAM):   else do;
34004      string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
34005      end;
MPRINT(EM_DIAGRAM):   end;
34006      end;
MPRINT(EM_DIAGRAM):   end;
34007      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
34008      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
34009      end;
MPRINT(EM_DIAGRAM):   end;
34010      else do;
MPRINT(EM_DIAGRAM):   else do;
34011      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
34012      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
34013      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
34014      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
34015      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
34016      end;
MPRINT(EM_DIAGRAM):   end;
34017      end;
MPRINT(EM_DIAGRAM):   end;
34018      else do;
MPRINT(EM_DIAGRAM):   else do;
34019      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
34020      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
34021      end;
MPRINT(EM_DIAGRAM):   end;
34022      end;
MPRINT(EM_DIAGRAM):   end;
34023      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
34024      string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
34025      end;
MPRINT(EM_DIAGRAM):   end;
34026      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
34027      end;
MPRINT(EM_DIAGRAM):   end;
34028      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
34029      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
34030      end;
MPRINT(EM_DIAGRAM):   end;
34031      if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
34032      if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
34033      if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
34034      string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
34035      end;
MPRINT(EM_DIAGRAM):   end;
34036      end;
MPRINT(EM_DIAGRAM):   end;
34037      put string;
MPRINT(EM_DIAGRAM):   put string;
34038      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
34039      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
34040      end;
MPRINT(EM_DIAGRAM):   end;
34041      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
34042      put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
34043      put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
34044      put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
34045      put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
34046      put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
34047      put " Predicted: _SEGMENT_=4  = " P__SEGMENT_4;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=4  = " P__SEGMENT_4;
34048      put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
34049      put " ";
MPRINT(EM_DIAGRAM):   put " ";
34050      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
34051      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
34052      end;
MPRINT(EM_DIAGRAM):   end;
34053      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      33967:67    33970:66    34014:108   34015:72
NOTE: The file X is:
      Nombre archivo=C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,
      Tamaño de archivo (bytes)=0,
      Última modificación=23 de noviembre de 2020 20H02,
      Create Time=23 de noviembre de 2020 15H57
 
NOTE: 153 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 62.
NOTE: There were 117 observations read from the data set WORK.TEMP.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34054      filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
34055      /* belowtext */
34056      data templabel;
MPRINT(EM_DIAGRAM):    data templabel;
34057      set WORK.OUTRULES_TREE_39GQXOP;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_39GQXOP;
34058      if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
34059      rename character_value = belowtext;
MPRINT(EM_DIAGRAM):   rename character_value = belowtext;
34060      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
34061      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 374 observations read from the data set WORK.OUTRULES_TREE_39GQXOP.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34062      data tempvar;
MPRINT(EM_DIAGRAM):   data tempvar;
34063      set WORK.OUTRULES_TREE_39GQXOP;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_39GQXOP;
34064      if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
34065      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
34066      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 374 observations read from the data set WORK.OUTRULES_TREE_39GQXOP.
NOTE: The data set WORK.TEMPVAR has 9 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34067      proc sort data=templabel;
MPRINT(EM_DIAGRAM):   proc sort data=templabel;
34068      by node;
MPRINT(EM_DIAGRAM):   by node;
34069      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34070      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
34071      by node;
MPRINT(EM_DIAGRAM):   by node;
34072      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 9 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34073      data tempbelow;
MPRINT(EM_DIAGRAM):   data tempbelow;
34074      merge templabel tempvar;
MPRINT(EM_DIAGRAM):   merge templabel tempvar;
34075      by node;
MPRINT(EM_DIAGRAM):   by node;
34076      if missing(belowtext) then belowtext= character_value;
MPRINT(EM_DIAGRAM):   if missing(belowtext) then belowtext= character_value;
34077      keep node belowtext;
MPRINT(EM_DIAGRAM):   keep node belowtext;
34078      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TEMPLABEL.
NOTE: There were 9 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPBELOW has 9 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34079      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
34080      by node;
MPRINT(EM_DIAGRAM):   by node;
34081      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.TEMPBELOW has 9 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34082      /* abovetext */
34083      data tempoutrules;
MPRINT(EM_DIAGRAM):   data tempoutrules;
34084      set WORK.OUTRULES_TREE_39GQXOP;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_39GQXOP;
34085      if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
MPRINT(EM_DIAGRAM):   if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
34086      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 374 observations read from the data set WORK.OUTRULES_TREE_39GQXOP.
NOTE: The data set WORK.TEMPOUTRULES has 9 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34087      proc sort data=tempoutrules;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutrules;
34088      by node numeric_value;
MPRINT(EM_DIAGRAM):   by node numeric_value;
34089      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPOUTRULES has 9 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34090      data tempabove;
MPRINT(EM_DIAGRAM):   data tempabove;
34091      set tempoutrules(rename=(node=parent));
MPRINT(EM_DIAGRAM):   set tempoutrules(rename=(node=parent));
34092      by parent numeric_value;
MPRINT(EM_DIAGRAM):   by parent numeric_value;
34093      retain abovetext tempstring flag branch origval origchar;
MPRINT(EM_DIAGRAM):   retain abovetext tempstring flag branch origval origchar;
34094      *length abovetext tempstring origchar $45;
MPRINT(EM_DIAGRAM):   *length abovetext tempstring origchar $45;
34095      length abovetext $256;
MPRINT(EM_DIAGRAM):   length abovetext $256;
34096      length tempstring origchar $64;
MPRINT(EM_DIAGRAM):   length tempstring origchar $64;
34097      if STAT in ("INTERVAL", "ORDINAL") then do;
MPRINT(EM_DIAGRAM):   if STAT in ("INTERVAL", "ORDINAL") then do;
34098      if first.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent then do;
34099      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
34100      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
34101      abovetext = "< "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(NUMERIC_VALUE);
34102      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
34103      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
34104      output;
MPRINT(EM_DIAGRAM):   output;
34105      end;
MPRINT(EM_DIAGRAM):   end;
34106      else do;
MPRINT(EM_DIAGRAM):   else do;
34107      abovetext = "< "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(CHARACTER_VALUE);
34108      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
34109      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
34110      output;
MPRINT(EM_DIAGRAM):   output;
34111      end;
MPRINT(EM_DIAGRAM):   end;
34112      if first.parent AND last.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent AND last.parent then do;
34113      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
34114      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
34115      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
34116      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
34117      output;
MPRINT(EM_DIAGRAM):   output;
34118      end;
MPRINT(EM_DIAGRAM):   end;
34119      else do;
MPRINT(EM_DIAGRAM):   else do;
34120      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
34121      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
34122      output;
MPRINT(EM_DIAGRAM):   output;
34123      end;
MPRINT(EM_DIAGRAM):   end;
34124      end;
MPRINT(EM_DIAGRAM):   end;
34125      end;
MPRINT(EM_DIAGRAM):   end;
34126      else if last.parent then do;
MPRINT(EM_DIAGRAM):   else if last.parent then do;
34127      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
34128      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
34129      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
34130      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
34131      end;
MPRINT(EM_DIAGRAM):   end;
34132      else do;
MPRINT(EM_DIAGRAM):   else do;
34133      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
34134      end;
MPRINT(EM_DIAGRAM):   end;
34135      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
34136      output;
MPRINT(EM_DIAGRAM):   output;
34137      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
34138      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
34139      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
34140      end;
MPRINT(EM_DIAGRAM):   end;
34141      else do;
MPRINT(EM_DIAGRAM):   else do;
34142      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
34143      end;
MPRINT(EM_DIAGRAM):   end;
34144      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
34145      output;
MPRINT(EM_DIAGRAM):   output;
34146      end;
MPRINT(EM_DIAGRAM):   end;
34147      else do;
MPRINT(EM_DIAGRAM):   else do;
34148      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
34149      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
34150      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
34151      end;
MPRINT(EM_DIAGRAM):   end;
34152      else do;
MPRINT(EM_DIAGRAM):   else do;
34153      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
34154      end;
MPRINT(EM_DIAGRAM):   end;
34155      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
34156      output;
MPRINT(EM_DIAGRAM):   output;
34157      end;
MPRINT(EM_DIAGRAM):   end;
34158      end;
MPRINT(EM_DIAGRAM):   end;
34159      else do;
MPRINT(EM_DIAGRAM):   else do;
34160      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
34161      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
34162      numeric_value = round(numeric_value,0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value,0.0001);
34163      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
34164      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
34165      end;
MPRINT(EM_DIAGRAM):   end;
34166      else do;
MPRINT(EM_DIAGRAM):   else do;
34167      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
34168      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
34169      end;
MPRINT(EM_DIAGRAM):   end;
34170      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
34171      output;
MPRINT(EM_DIAGRAM):   output;
34172      end;
MPRINT(EM_DIAGRAM):   end;
34173      else do;
MPRINT(EM_DIAGRAM):   else do;
34174      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
34175      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
34176      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
34177      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
34178      end;
MPRINT(EM_DIAGRAM):   end;
34179      else do;
MPRINT(EM_DIAGRAM):   else do;
34180      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
34181      origval = character_value;
MPRINT(EM_DIAGRAM):   origval = character_value;
34182      end;
MPRINT(EM_DIAGRAM):   end;
34183      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
34184      output;
MPRINT(EM_DIAGRAM):   output;
34185      end;
MPRINT(EM_DIAGRAM):   end;
34186      end;
MPRINT(EM_DIAGRAM):   end;
34187      end;
MPRINT(EM_DIAGRAM):   end;
34188      else do;
MPRINT(EM_DIAGRAM):   else do;
34189      if first.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value then do;
34190      flag = 0;
MPRINT(EM_DIAGRAM):   flag = 0;
34191      abovetext = CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   abovetext = CHARACTER_VALUE;
34192      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
34193      if first.numeric_value AND last.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value AND last.numeric_value then do;
34194      output;
MPRINT(EM_DIAGRAM):   output;
34195      end;
MPRINT(EM_DIAGRAM):   end;
34196      end;
MPRINT(EM_DIAGRAM):   end;
34197      else if last.numeric_value then do;
MPRINT(EM_DIAGRAM):   else if last.numeric_value then do;
34198      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
34199      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
34200      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
34201      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
34202      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
34203      end;
MPRINT(EM_DIAGRAM):   end;
34204      else do;
MPRINT(EM_DIAGRAM):   else do;
34205      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
34206      flag = 1;
MPRINT(EM_DIAGRAM):   flag = 1;
34207      end;
MPRINT(EM_DIAGRAM):   end;
34208      end;
MPRINT(EM_DIAGRAM):   end;
34209      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
34210      output;
MPRINT(EM_DIAGRAM):   output;
34211      end;
MPRINT(EM_DIAGRAM):   end;
34212      else do;
MPRINT(EM_DIAGRAM):   else do;
34213      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
34214      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
34215      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
34216      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
34217      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
34218      end;
MPRINT(EM_DIAGRAM):   end;
34219      else do;
MPRINT(EM_DIAGRAM):   else do;
34220      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
34221      flag=1;
MPRINT(EM_DIAGRAM):   flag=1;
34222      end;
MPRINT(EM_DIAGRAM):   end;
34223      end;
MPRINT(EM_DIAGRAM):   end;
34224      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
34225      end;
MPRINT(EM_DIAGRAM):   end;
34226      end;
MPRINT(EM_DIAGRAM):   end;
34227      keep parent branch abovetext;
MPRINT(EM_DIAGRAM):   keep parent branch abovetext;
34228      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      34101:25   34116:26   34130:24   34130:47   34139:26   34150:26   34163:24   34163:47   34176:26
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      34181:11
NOTE: There were 9 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPABOVE has 18 observations and 3 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34229      /* MIssing value to abovetext */
34230      data tempmissing;
MPRINT(EM_DIAGRAM):   data tempmissing;
34231      set WORK.OUTRULES_TREE_39GQXOP;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_39GQXOP;
34232      if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
34233      rename node=parent numeric_value=branch character_value=misschar;
MPRINT(EM_DIAGRAM):   rename node=parent numeric_value=branch character_value=misschar;
34234      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 374 observations read from the data set WORK.OUTRULES_TREE_39GQXOP.
NOTE: The data set WORK.TEMPMISSING has 9 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34235      proc sort data=work.tempabove;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempabove;
34236      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
34237      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.TEMPABOVE.
NOTE: The data set WORK.TEMPABOVE has 18 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34238      proc sort data=EMWS3.Clus_OUTNODES out=tempoutnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus_OUTNODES out=tempoutnodes;
34239      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
34240      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS3.CLUS_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 19 observations and 24 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34241      proc sort data=tempmissing;
MPRINT(EM_DIAGRAM):   proc sort data=tempmissing;
34242      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
34243      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 9 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34244      data WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus_outnodes;
34245      merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
MPRINT(EM_DIAGRAM):   merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
34246      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
34247      length traintotal validtotal 8;
MPRINT(EM_DIAGRAM):   length traintotal validtotal 8;
34248      retain traintotal validtotal;
MPRINT(EM_DIAGRAM):   retain traintotal validtotal;
34249      if _a then do;
MPRINT(EM_DIAGRAM):   if _a then do;
34250      if ^MISSING(abovetext) then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(abovetext) then do;
34251      abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext= strip(abovetext)||" Falta Or";
34252      end;
MPRINT(EM_DIAGRAM):   end;
34253      else do;
MPRINT(EM_DIAGRAM):   else do;
34254      abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext = " Sólo valores ausentes";
34255      end;
MPRINT(EM_DIAGRAM):   end;
34256      end;
MPRINT(EM_DIAGRAM):   end;
34257      if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   if MISSING(abovetext) then abovetext="Valores no ausentes";
34258      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
34259      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
34260      validtotal=VN;
MPRINT(EM_DIAGRAM):   validtotal=VN;
34261      end;
MPRINT(EM_DIAGRAM):   end;
34262      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Total de entrenamiento";
34263      drop role rank stat misschar belowtext;
MPRINT(EM_DIAGRAM):   drop role rank stat misschar belowtext;
34264      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VN is uninitialized.
NOTE: There were 18 observations read from the data set WORK.TEMPABOVE.
NOTE: There were 19 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 9 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.CLUS_OUTNODES has 19 observations and 26 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34265      proc sort data=WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_outnodes;
34266      by node;
MPRINT(EM_DIAGRAM):   by node;
34267      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set WORK.CLUS_OUTNODES has 19 observations and 26 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34268      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
34269      by node;
MPRINT(EM_DIAGRAM):   by node;
34270      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34271      data WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus_outnodes;
34272      merge WORK.Clus_outnodes tempbelow;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_outnodes tempbelow;
34273      by node;
MPRINT(EM_DIAGRAM):   by node;
34274      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: There were 9 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.CLUS_OUTNODES has 19 observations and 27 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista EMWS3.EM_CLUS.VIEW ha utilizado (Tiempo de proceso total):
      real time           1.03 seconds
      cpu time            1.03 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
34275      data tempoutstats;
MPRINT(EM_DIAGRAM):    data tempoutstats;
34276      set WORK.OUTSTATS_TREE_39GQXOP;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_39GQXOP;
34277      length tarlevel $8;
MPRINT(EM_DIAGRAM):   length tarlevel $8;
34278      tarlevel ="NOMINAL";
MPRINT(EM_DIAGRAM):   tarlevel ="NOMINAL";
34279      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 114 observations read from the data set WORK.OUTSTATS_TREE_39GQXOP.
NOTE: The data set WORK.TEMPOUTSTATS has 114 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34280      data EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS3.Clus_TREE_PLOT;
34281      length NODETEXT TEXTALL $800 N NODECOLOR 8;
MPRINT(EM_DIAGRAM):   length NODETEXT TEXTALL $800 N NODECOLOR 8;
34282      set WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus_outnodes;
34283      label parent = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentID_vlabel, noquote))" depth = "%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, noquote))" belowtext= "%sysfunc(sasmsg(sashelp.dmine, rpt_belowtext_vlabel, noquote))" abovetext =
34284         "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))" linkwidth = "%sysfunc(sasmsg(sashelp.dmine, rpt_linkwidth_vlabel, noquote))" nodetext = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodetext_vlabel, noquote))" textall =
34285         "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainn_vlabel, noquote))" nodecolor = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))" node =
34286         "%sysfunc(sasmsg(sashelp.dmine, rpt_node_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label parent = "Id padre" depth = "Profundidad" belowtext= "Por debajo del texto" abovetext = "Por encima del texto" linkwidth = "Anchura del enlace" nodetext = "Texto del nodo" textall = "Todo el texto" N = "Entrenar: número de
observaciones" nodecolor = "Color del nodo" node = "Nodo";
34287      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
34288      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TEXTALL is uninitialized.
NOTE: Variable NODECOLOR is uninitialized.
NOTE: There were 19 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set EMWS3.CLUS_TREE_PLOT has 19 observations and 10 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34289      proc sort data=EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus_TREE_PLOT;
34290      by node;
MPRINT(EM_DIAGRAM):   by node;
34291      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS3.CLUS_TREE_PLOT.
NOTE: The data set EMWS3.CLUS_TREE_PLOT has 19 observations and 10 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34292      proc sort data=tempoutstats;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutstats;
34293      by node;
MPRINT(EM_DIAGRAM):   by node;
34294      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 114 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 114 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34295      data EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS3.Clus_TREE_PLOT;
34296      merge EMWS3.Clus_TREE_PLOT tempoutstats;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus_TREE_PLOT tempoutstats;
34297      length text $800 _RASE_ P__SEGMENT_3 8;
MPRINT(EM_DIAGRAM):   length text $800 _RASE_ P__SEGMENT_3 8;
34298      retain P__SEGMENT_3 eventlevel;
MPRINT(EM_DIAGRAM):   retain P__SEGMENT_3 eventlevel;
34299      by node;
MPRINT(EM_DIAGRAM):   by node;
34300      if statname='N' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='N' then N=statvalue;
34301      if statname='NPRIORS' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='NPRIORS' then N=statvalue;
34302      if statname='PREDICTION' then eventlevel=category;
MPRINT(EM_DIAGRAM):   if statname='PREDICTION' then eventlevel=category;
34303      _RASE_ = .;
MPRINT(EM_DIAGRAM):   _RASE_ = .;
34304      if tarlevel ^= 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if tarlevel ^= 'INTERVAL' then do;
34305      if STATNAME = 'PROBABILITY' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PROBABILITY' then do;
34306      if CATEGORY=EVENTLEVEL then do;
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL then do;
34307      nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
34308      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
34309      P__SEGMENT_3 = round(STATVALUE, .01);
MPRINT(EM_DIAGRAM):   P__SEGMENT_3 = round(STATVALUE, .01);
34310      end;
MPRINT(EM_DIAGRAM):   end;
34311      else do;
MPRINT(EM_DIAGRAM):   else do;
34312      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
34313      end;
MPRINT(EM_DIAGRAM):   end;
34314      textall = strip(textall)||'0A'x||strip( text);
MPRINT(EM_DIAGRAM):   textall = strip(textall)||'0A'x||strip( text);
34315      end;
MPRINT(EM_DIAGRAM):   end;
34316      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
34317      nodetext = trim(nodetext)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext = trim(nodetext)||'0A'x||" Número:"|| put(N, 13.);
34318      textall = trim(textall)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   textall = trim(textall)||'0A'x||" Número:"|| put(N, 13.);
34319      output EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS3.Clus_TREE_PLOT;
34320      end;
MPRINT(EM_DIAGRAM):   end;
34321      end;
MPRINT(EM_DIAGRAM):   end;
34322      else do;
MPRINT(EM_DIAGRAM):   else do;
34323      if statname='RASE' then _RASE_=statvalue;
MPRINT(EM_DIAGRAM):   if statname='RASE' then _RASE_=statvalue;
34324      label _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trase_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _RASE_ = "Entrenar: error cuadrado del promedio de la raíz";
34325      if STATNAME = 'PREDICTION' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PREDICTION' then do;
34326      nodetext= "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"|| put(STATVALUE, 13.4)||'0A'x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext= "Promedio"|| put(STATVALUE, 13.4)||'0A'x|| "Número:"|| put(N, 13.);
34327      textall = nodetext;
MPRINT(EM_DIAGRAM):   textall = nodetext;
34328      P__SEGMENT_3 = STATVALUE;
MPRINT(EM_DIAGRAM):   P__SEGMENT_3 = STATVALUE;
34329      ;
MPRINT(EM_DIAGRAM):   ;
34330      ;
MPRINT(EM_DIAGRAM):   ;
34331      end;
MPRINT(EM_DIAGRAM):   end;
34332      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
34333      output EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS3.Clus_TREE_PLOT;
34334      end;
MPRINT(EM_DIAGRAM):   end;
34335      ;
MPRINT(EM_DIAGRAM):   ;
34336      end;
MPRINT(EM_DIAGRAM):   end;
34337      label P__SEGMENT_3 = "%sysfunc(sasmsg(sashelp.dmine, rpt_predictedvar_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label P__SEGMENT_3 = "Variable predicha";
34338      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_3;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_3;
34339      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS3.CLUS_TREE_PLOT.
NOTE: There were 114 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set EMWS3.CLUS_TREE_PLOT has 19 observations and 12 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34340      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
34341      set WORK.OUTSTATS_TREE_39GQXOP;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_39GQXOP;
34342      retain eventlevel;
MPRINT(EM_DIAGRAM):   retain eventlevel;
34343      if STATNAME='PREDICTION' then eventlevel=CATEGORY;
MPRINT(EM_DIAGRAM):   if STATNAME='PREDICTION' then eventlevel=CATEGORY;
34344      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 114 observations read from the data set WORK.OUTSTATS_TREE_39GQXOP.
NOTE: The data set WORK.TEMPCOLOR has 114 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34345      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
34346      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
34347      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
34348      if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
34349      end;
MPRINT(EM_DIAGRAM):   end;
34350      else do;
MPRINT(EM_DIAGRAM):   else do;
34351      if STATNAME="PREDICTION";
MPRINT(EM_DIAGRAM):   if STATNAME="PREDICTION";
34352      end;
MPRINT(EM_DIAGRAM):   end;
34353      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 114 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 19 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34354      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
34355      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
34356      length nodecolor 8;
MPRINT(EM_DIAGRAM):   length nodecolor 8;
34357      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
34358      nodecolor = round(100*(STATVALUE), .01);
MPRINT(EM_DIAGRAM):   nodecolor = round(100*(STATVALUE), .01);
34359      end;
MPRINT(EM_DIAGRAM):   end;
34360      else do;
MPRINT(EM_DIAGRAM):   else do;
34361      nodecolor=round(statvalue, .01);
MPRINT(EM_DIAGRAM):   nodecolor=round(statvalue, .01);
34362      end;
MPRINT(EM_DIAGRAM):   end;
34363      keep node nodecolor;
MPRINT(EM_DIAGRAM):   keep node nodecolor;
34364      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 19 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34365      proc sort data=EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus_TREE_PLOT;
34366      by node;
MPRINT(EM_DIAGRAM):   by node;
34367      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS3.CLUS_TREE_PLOT.
NOTE: The data set EMWS3.CLUS_TREE_PLOT has 19 observations and 12 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34368      proc sort data=tempcolor;
MPRINT(EM_DIAGRAM):   proc sort data=tempcolor;
34369      by node;
MPRINT(EM_DIAGRAM):   by node;
34370      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 19 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34371      data EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_TREE_PLOT;
34372      merge EMWS3.Clus_TREE_PLOT tempcolor;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus_TREE_PLOT tempcolor;
34373      by node;
MPRINT(EM_DIAGRAM):   by node;
34374      length traintotal 8;
MPRINT(EM_DIAGRAM):   length traintotal 8;
34375      retain traintotal;
MPRINT(EM_DIAGRAM):   retain traintotal;
34376      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Total de entrenamiento";
34377      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
34378      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
34379      end;
MPRINT(EM_DIAGRAM):   end;
34380      if NODE eq . then delete;
MPRINT(EM_DIAGRAM):   if NODE eq . then delete;
34381      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS3.CLUS_TREE_PLOT.
NOTE: There were 19 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set EMWS3.CLUS_TREE_PLOT has 19 observations and 13 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34382      data EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_TREE_PLOT;
34383      set EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus_TREE_PLOT;
34384      textall = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote, )):"|| put(Node, 13.)||'0A'x||trim(textall);
MPRINT(EM_DIAGRAM):   textall = "Id de nodo:"|| put(Node, 13.)||'0A'x||trim(textall);
34385      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS3.CLUS_TREE_PLOT.
NOTE: The data set EMWS3.CLUS_TREE_PLOT has 19 observations and 13 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34386      data tempout;
MPRINT(EM_DIAGRAM):   data tempout;
34387      set WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus_outnodes;
34388      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set WORK.TEMPOUT has 19 observations and 27 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34389      proc sort data=tempout;
MPRINT(EM_DIAGRAM):   proc sort data=tempout;
34390      by descending P__SEGMENT_3;
MPRINT(EM_DIAGRAM):   by descending P__SEGMENT_3;
34391      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TEMPOUT has 19 observations and 27 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34392      data tree_temp;
MPRINT(EM_DIAGRAM):   data tree_temp;
34393      set tempout;
MPRINT(EM_DIAGRAM):   set tempout;
34394      if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
34395      label index="%sysfunc(sasmsg(sashelp.dmine, rpt_leafindex_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label index= "Índice de hoja";
34396      label percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percevent_train = "Casos de porcentaje";
34397      label perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label perc_train = "Porcentaje de evento";
34398      label tprob="%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel  , NOQUOTE, %nrbquote()))";
MPRINT(EM_DIAGRAM):   label tprob= "Porcentaje de entrenamiento ";
34399      tprob = round(P__SEGMENT_3, .01);
MPRINT(EM_DIAGRAM):   tprob = round(P__SEGMENT_3, .01);
34400      percevent_train = round ( tprob*100, .01);
MPRINT(EM_DIAGRAM):   percevent_train = round ( tprob*100, .01);
34401      *perc_train =round( ( N / traintotal)*100, .001);
MPRINT(EM_DIAGRAM):   *perc_train =round( ( N / traintotal)*100, .001);
34402      perc_train =round( ( N / traintotal), .01);
MPRINT(EM_DIAGRAM):   perc_train =round( ( N / traintotal), .01);
34403      if missing(perc_train) then perc_train = round( linkwidth*100, .001);
MPRINT(EM_DIAGRAM):   if missing(perc_train) then perc_train = round( linkwidth*100, .001);
34404      index = _n_;
MPRINT(EM_DIAGRAM):   index = _n_;
34405      keep NODE index tprob perc_train percevent_train
34406      ;
MPRINT(EM_DIAGRAM):   keep NODE index tprob perc_train percevent_train ;
34407      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TREE_TEMP has 10 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34408      proc sort data=tree_temp;
MPRINT(EM_DIAGRAM):   proc sort data=tree_temp;
34409      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
34410      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set WORK.TREE_TEMP has 10 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34411      proc sort data=EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus_TREE_PLOT;
34412      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
34413      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS3.CLUS_TREE_PLOT.
NOTE: The data set EMWS3.CLUS_TREE_PLOT has 19 observations and 13 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34414      data EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_TREE_PLOT;
34415      merge EMWS3.Clus_TREE_PLOT tree_temp;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus_TREE_PLOT tree_temp;
34416      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
34417      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS3.CLUS_TREE_PLOT.
NOTE: There were 10 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set EMWS3.CLUS_TREE_PLOT has 19 observations and 17 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34418      proc sort data=EMWS3.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus_TREE_PLOT;
34419      by node index;
MPRINT(EM_DIAGRAM):   by node index;
34420      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS3.CLUS_TREE_PLOT.
NOTE: The data set EMWS3.CLUS_TREE_PLOT has 19 observations and 17 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34421      title9 ' ';
MPRINT(EM_DIAGRAM):    title9 ' ';
34422      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_VariableImportance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Importancia de la variable";
34423      proc print data=EMWS3.Clus_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS3.Clus_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
34424      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set EMWS3.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34425      title10;
MPRINT(EM_DIAGRAM):   title10;
34426      data WORK.M1T87U94;
MPRINT(EM_DIAGRAM):    data WORK.M1T87U94;
34427      set WORK.M1T87U94;
MPRINT(EM_DIAGRAM):   set WORK.M1T87U94;
34428      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
34429      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1205 observations read from the data set WORK.M1T87U94.
NOTE: The data set WORK.M1T87U94 has 1205 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34430      proc sort data=EMWS3.Clus_OUTIMPORT out=WORK.Clus_GRAPHVARS(keep=NAME);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS3.Clus_OUTIMPORT out=WORK.Clus_GRAPHVARS(keep=NAME);
34431      where IMPORTANCE>0;
MPRINT(EM_DIAGRAM):   where IMPORTANCE>0;
34432      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34433      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set EMWS3.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The data set WORK.CLUS_GRAPHVARS has 41 observations and 1 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34434      proc sort data = WORK.M1T87U94;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.M1T87U94;
34435      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34436      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1205 observations read from the data set WORK.M1T87U94.
NOTE: The data set WORK.M1T87U94 has 1205 observations and 21 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34437      data WORK.M1T87U94;
MPRINT(EM_DIAGRAM):   data WORK.M1T87U94;
34438      merge WORK.M1T87U94 WORK.Clus_GRAPHVARS(in=_b_);
MPRINT(EM_DIAGRAM):   merge WORK.M1T87U94 WORK.Clus_GRAPHVARS(in=_b_);
34439      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34440      if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
MPRINT(EM_DIAGRAM):   if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
34441      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1205 observations read from the data set WORK.M1T87U94.
NOTE: There were 41 observations read from the data set WORK.CLUS_GRAPHVARS.
NOTE: The data set WORK.M1T87U94 has 41 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34442      data WORK.M1T87U94;
MPRINT(EM_DIAGRAM):    data WORK.M1T87U94;
34443      set WORK.M1T87U94 end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M1T87U94 end=_eof_ nobs=_nobs_;
34444      output;
MPRINT(EM_DIAGRAM):   output;
34445      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
34446      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
34447      ROLE = 'BY';
MPRINT(EM_DIAGRAM):   ROLE = 'BY';
34448      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
34449      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
34450      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
34451      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
34452      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
34453      output;
MPRINT(EM_DIAGRAM):   output;
34454      end;
MPRINT(EM_DIAGRAM):   end;
34455      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK.M1T87U94.
NOTE: The data set WORK.M1T87U94 has 42 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34456      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
34457      * Clus: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus: STDIZE Variables Macro ;
34458      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
34459      %macro stdizevar;
34460          ACCUR ARAB ARGIC ARMENIA ARMENIAN BOSTON CHASTITI CPR DAVID DON EXIST EXPANS
34461         EXTERMIN GAZA GENOCID GORDON HENRIK HISTORI INTELLECT ISRA ISRAEL JEW LEBANON
34462         MASS MED MEDIC MODIFI PALESTINIAN RIND SERA SERDAR SHAME SKEPTIC SOLDIER SOUND
34463         SURREND TALK TERROR TURK TURKISH ZUMA
34464      %mend stdizevar;
34465      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34466      * Clus: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Clus: Computing Summary Statistics;
34467      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34468      proc stdize
34469      data = EMWS3.Clus_TRAIN
34470      out=_null_
34471      outstat=WORK.Clus_STAT
34472      add=0 fuzz=1E-14 initial=MAD
34473      vardef=df
34474      method=STD
34475      mult=1
34476      pctlmtd=ORD_STAT pctldef=2
34477      pctlpts=(
34478      0
34479      100
34480      )
34481      ;
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS3.Clus_TRAIN out=_null_ outstat=WORK.Clus_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 100 ) ;
MPRINT(EM_DIAGRAM):   var
34482      var %stdizevar;
MPRINT(STDIZEVAR):   ACCUR ARAB ARGIC ARMENIA ARMENIAN BOSTON CHASTITI CPR DAVID DON EXIST EXPANS EXTERMIN GAZA GENOCID GORDON HENRIK HISTORI INTELLECT ISRA ISRAEL JEW LEBANON MASS MED MEDIC MODIFI PALESTINIAN RIND SERA SERDAR SHAME SKEPTIC SOLDIER SOUND
SURREND TALK TERROR TURK TURKISH ZUMA
MPRINT(EM_DIAGRAM):  ;
34483      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           1.14 seconds
      cpu time            1.07 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: The data set WORK.CLUS_STAT has 10 observations and 42 variables.
NOTE: PROCEDURE STDIZE ha utilizado (Tiempo de proceso total):
      real time           1.15 seconds
      cpu time            1.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
34484      quit;
 
34485      data WORK.Clus_MINMAX;
MPRINT(EM_DIAGRAM):    data WORK.Clus_MINMAX;
34486      set WORK.Clus_STAT;
MPRINT(EM_DIAGRAM):   set WORK.Clus_STAT;
34487      where _TYPE_ in('P0','P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('P0','P100');
34488      if _TYPE_='P0' then _TYPE_='MIN';
MPRINT(EM_DIAGRAM):   if _TYPE_='P0' then _TYPE_='MIN';
34489      else if _TYPE_='P100' then _TYPE_='MAX';
MPRINT(EM_DIAGRAM):   else if _TYPE_='P100' then _TYPE_='MAX';
34490      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS_STAT.
      WHERE _TYPE_ in ('P0', 'P100');
NOTE: The data set WORK.CLUS_MINMAX has 2 observations and 42 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
34491      proc transpose data=WORK.Clus_MINMAX out=WORK.Clus_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Clus_MINMAX out=WORK.Clus_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
34492      id _TYPE_;
MPRINT(EM_DIAGRAM):   id _TYPE_;
34493      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 2 observations read from the data set WORK.CLUS_MINMAX.
NOTE: The data set WORK.CLUS_MINMAX has 41 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
34494      data WORK.Clus_UGRID;
MPRINT(EM_DIAGRAM):    data WORK.Clus_UGRID;
34495      set WORK.Clus_MINMAX;
MPRINT(EM_DIAGRAM):   set WORK.Clus_MINMAX;
34496      B1 = MIN + (1-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B1 = MIN + (1-1)*(MAX-MIN)/8;
34497      B2 = MIN + (2-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B2 = MIN + (2-1)*(MAX-MIN)/8;
34498      B3 = MIN + (3-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B3 = MIN + (3-1)*(MAX-MIN)/8;
34499      B4 = MIN + (4-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B4 = MIN + (4-1)*(MAX-MIN)/8;
34500      B5 = MIN + (5-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B5 = MIN + (5-1)*(MAX-MIN)/8;
34501      B6 = MIN + (6-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B6 = MIN + (6-1)*(MAX-MIN)/8;
34502      B7 = MIN + (7-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B7 = MIN + (7-1)*(MAX-MIN)/8;
34503      B8 = MIN + (8-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B8 = MIN + (8-1)*(MAX-MIN)/8;
34504      B9 = MIN + (9-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B9 = MIN + (9-1)*(MAX-MIN)/8;
34505      drop MIN MAX;
MPRINT(EM_DIAGRAM):   drop MIN MAX;
34506      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK.CLUS_MINMAX.
NOTE: The data set WORK.CLUS_UGRID has 41 observations and 10 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34507      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
34508      * Clus: creando formatos para las variables de intervalo de agrupamiento;
MPRINT(EM_DIAGRAM):   * Clus: creando formatos para las variables de intervalo de agrupamiento;
34509      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34510      proc format;
MPRINT(EM_DIAGRAM):   proc format;
34511      value F1_
34512      0-0.02272178626373 = "0:0.0227"
34513      0.02272178626373-0.04544357252747 = "0.0227:0.0454"
34514      0.04544357252747-0.06816535879121 = "0.0454:0.0682"
34515      0.06816535879121-0.09088714505494 = "0.0682:0.0909"
34516      0.09088714505494-0.11360893131868 = "0.0909:0.1136"
34517      0.11360893131868-0.13633071758242 = "0.1136:0.1363"
34518      0.13633071758242-0.15905250384616 = "0.1363:0.1591"
34519      0.15905250384616-0.18177429010989 = "0.1591:0.1818"
34520      ;
MPRINT(EM_DIAGRAM):   value F1_ 0-0.02272178626373 = "0:0.0227" 0.02272178626373-0.04544357252747 = "0.0227:0.0454" 0.04544357252747-0.06816535879121 = "0.0454:0.0682" 0.06816535879121-0.09088714505494 = "0.0682:0.0909" 0.09088714505494-0.11360893131868 =
"0.0909:0.1136" 0.11360893131868-0.13633071758242 = "0.1136:0.1363" 0.13633071758242-0.15905250384616 = "0.1363:0.1591" 0.15905250384616-0.18177429010989 = "0.1591:0.1818" ;
NOTE: Format F1_ has been output.
34521      value F2_
34522      0-0.02762928883614 = "0:0.0276"
34523      0.02762928883614-0.05525857767229 = "0.0276:0.0553"
34524      0.05525857767229-0.08288786650844 = "0.0553:0.0829"
34525      0.08288786650844-0.11051715534459 = "0.0829:0.1105"
34526      0.11051715534459-0.13814644418074 = "0.1105:0.1381"
34527      0.13814644418074-0.16577573301689 = "0.1381:0.1658"
34528      0.16577573301689-0.19340502185304 = "0.1658:0.1934"
34529      0.19340502185304-0.22103431068919 = "0.1934:0.221"
34530      ;
MPRINT(EM_DIAGRAM):   value F2_ 0-0.02762928883614 = "0:0.0276" 0.02762928883614-0.05525857767229 = "0.0276:0.0553" 0.05525857767229-0.08288786650844 = "0.0553:0.0829" 0.08288786650844-0.11051715534459 = "0.0829:0.1105" 0.11051715534459-0.13814644418074 =
"0.1105:0.1381" 0.13814644418074-0.16577573301689 = "0.1381:0.1658" 0.16577573301689-0.19340502185304 = "0.1658:0.1934" 0.19340502185304-0.22103431068919 = "0.1934:0.221" ;
NOTE: Format F2_ has been output.
34531      value F3_
34532      0-0.0406252412429 = "0:0.0406"
34533      0.0406252412429-0.08125048248581 = "0.0406:0.0813"
34534      0.08125048248581-0.12187572372871 = "0.0813:0.1219"
34535      0.12187572372871-0.16250096497162 = "0.1219:0.1625"
34536      0.16250096497162-0.20312620621452 = "0.1625:0.2031"
34537      0.20312620621452-0.24375144745743 = "0.2031:0.2438"
34538      0.24375144745743-0.28437668870033 = "0.2438:0.2844"
34539      0.28437668870033-0.32500192994324 = "0.2844:0.325"
34540      ;
MPRINT(EM_DIAGRAM):   value F3_ 0-0.0406252412429 = "0:0.0406" 0.0406252412429-0.08125048248581 = "0.0406:0.0813" 0.08125048248581-0.12187572372871 = "0.0813:0.1219" 0.12187572372871-0.16250096497162 = "0.1219:0.1625" 0.16250096497162-0.20312620621452 =
"0.1625:0.2031" 0.20312620621452-0.24375144745743 = "0.2031:0.2438" 0.24375144745743-0.28437668870033 = "0.2438:0.2844" 0.28437668870033-0.32500192994324 = "0.2844:0.325" ;
NOTE: Format F3_ has been output.
34541      value F4_
34542      0-0.07250889098236 = "0:0.0725"
34543      0.07250889098236-0.14501778196472 = "0.0725:0.145"
34544      0.14501778196472-0.21752667294709 = "0.145:0.2175"
34545      0.21752667294709-0.29003556392945 = "0.2175:0.29"
34546      0.29003556392945-0.36254445491181 = "0.29:0.3625"
34547      0.36254445491181-0.43505334589418 = "0.3625:0.4351"
34548      0.43505334589418-0.50756223687654 = "0.4351:0.5076"
34549      0.50756223687654-0.58007112785891 = "0.5076:0.5801"
34550      ;
MPRINT(EM_DIAGRAM):   value F4_ 0-0.07250889098236 = "0:0.0725" 0.07250889098236-0.14501778196472 = "0.0725:0.145" 0.14501778196472-0.21752667294709 = "0.145:0.2175" 0.21752667294709-0.29003556392945 = "0.2175:0.29" 0.29003556392945-0.36254445491181 =
"0.29:0.3625" 0.36254445491181-0.43505334589418 = "0.3625:0.4351" 0.43505334589418-0.50756223687654 = "0.4351:0.5076" 0.50756223687654-0.58007112785891 = "0.5076:0.5801" ;
NOTE: Format F4_ has been output.
34551      value F5_
34552      0-0.02948806596317 = "0:0.0295"
34553      0.02948806596317-0.05897613192634 = "0.0295:0.059"
34554      0.05897613192634-0.08846419788951 = "0.059:0.0885"
34555      0.08846419788951-0.11795226385268 = "0.0885:0.118"
34556      0.11795226385268-0.14744032981586 = "0.118:0.1474"
34557      0.14744032981586-0.17692839577903 = "0.1474:0.1769"
34558      0.17692839577903-0.2064164617422 = "0.1769:0.2064"
34559      0.2064164617422-0.23590452770537 = "0.2064:0.2359"
34560      ;
MPRINT(EM_DIAGRAM):   value F5_ 0-0.02948806596317 = "0:0.0295" 0.02948806596317-0.05897613192634 = "0.0295:0.059" 0.05897613192634-0.08846419788951 = "0.059:0.0885" 0.08846419788951-0.11795226385268 = "0.0885:0.118" 0.11795226385268-0.14744032981586 =
"0.118:0.1474" 0.14744032981586-0.17692839577903 = "0.1474:0.1769" 0.17692839577903-0.2064164617422 = "0.1769:0.2064" 0.2064164617422-0.23590452770537 = "0.2064:0.2359" ;
NOTE: Format F5_ has been output.
34561      value F6_
34562      0-0.03305807485653 = "0:0.0331"
34563      0.03305807485653-0.06611614971307 = "0.0331:0.0661"
34564      0.06611614971307-0.09917422456961 = "0.0661:0.0992"
34565      0.09917422456961-0.13223229942615 = "0.0992:0.1322"
34566      0.13223229942615-0.16529037428269 = "0.1322:0.1653"
34567      0.16529037428269-0.19834844913923 = "0.1653:0.1983"
34568      0.19834844913923-0.23140652399577 = "0.1983:0.2314"
34569      0.23140652399577-0.26446459885231 = "0.2314:0.2645"
34570      ;
MPRINT(EM_DIAGRAM):   value F6_ 0-0.03305807485653 = "0:0.0331" 0.03305807485653-0.06611614971307 = "0.0331:0.0661" 0.06611614971307-0.09917422456961 = "0.0661:0.0992" 0.09917422456961-0.13223229942615 = "0.0992:0.1322" 0.13223229942615-0.16529037428269 =
"0.1322:0.1653" 0.16529037428269-0.19834844913923 = "0.1653:0.1983" 0.19834844913923-0.23140652399577 = "0.1983:0.2314" 0.23140652399577-0.26446459885231 = "0.2314:0.2645" ;
NOTE: Format F6_ has been output.
34571      value F7_
34572      0-0.01410905630069 = "0:0.0141"
34573      0.01410905630069-0.02821811260138 = "0.0141:0.0282"
34574      0.02821811260138-0.04232716890208 = "0.0282:0.0423"
34575      0.04232716890208-0.05643622520277 = "0.0423:0.0564"
34576      0.05643622520277-0.07054528150347 = "0.0564:0.0705"
34577      0.07054528150347-0.08465433780416 = "0.0705:0.0847"
34578      0.08465433780416-0.09876339410486 = "0.0847:0.0988"
34579      0.09876339410486-0.11287245040555 = "0.0988:0.1129"
34580      ;
MPRINT(EM_DIAGRAM):   value F7_ 0-0.01410905630069 = "0:0.0141" 0.01410905630069-0.02821811260138 = "0.0141:0.0282" 0.02821811260138-0.04232716890208 = "0.0282:0.0423" 0.04232716890208-0.05643622520277 = "0.0423:0.0564" 0.05643622520277-0.07054528150347 =
"0.0564:0.0705" 0.07054528150347-0.08465433780416 = "0.0705:0.0847" 0.08465433780416-0.09876339410486 = "0.0847:0.0988" 0.09876339410486-0.11287245040555 = "0.0988:0.1129" ;
NOTE: Format F7_ has been output.
34581      value F8_
34582      0-0.03702809613349 = "0:0.037"
34583      0.03702809613349-0.07405619226699 = "0.037:0.0741"
34584      0.07405619226699-0.11108428840049 = "0.0741:0.1111"
34585      0.11108428840049-0.14811238453399 = "0.1111:0.1481"
34586      0.14811238453399-0.18514048066748 = "0.1481:0.1851"
34587      0.18514048066748-0.22216857680098 = "0.1851:0.2222"
34588      0.22216857680098-0.25919667293448 = "0.2222:0.2592"
34589      0.25919667293448-0.29622476906798 = "0.2592:0.2962"
34590      ;
MPRINT(EM_DIAGRAM):   value F8_ 0-0.03702809613349 = "0:0.037" 0.03702809613349-0.07405619226699 = "0.037:0.0741" 0.07405619226699-0.11108428840049 = "0.0741:0.1111" 0.11108428840049-0.14811238453399 = "0.1111:0.1481" 0.14811238453399-0.18514048066748 =
"0.1481:0.1851" 0.18514048066748-0.22216857680098 = "0.1851:0.2222" 0.22216857680098-0.25919667293448 = "0.2222:0.2592" 0.25919667293448-0.29622476906798 = "0.2592:0.2962" ;
NOTE: Format F8_ has been output.
34591      value F9_
34592      0-0.02916118459465 = "0:0.0292"
34593      0.02916118459465-0.0583223691893 = "0.0292:0.0583"
34594      0.0583223691893-0.08748355378395 = "0.0583:0.0875"
34595      0.08748355378395-0.1166447383786 = "0.0875:0.1166"
34596      0.1166447383786-0.14580592297325 = "0.1166:0.1458"
34597      0.14580592297325-0.1749671075679 = "0.1458:0.175"
34598      0.1749671075679-0.20412829216255 = "0.175:0.2041"
34599      0.20412829216255-0.23328947675721 = "0.2041:0.2333"
34600      ;
MPRINT(EM_DIAGRAM):   value F9_ 0-0.02916118459465 = "0:0.0292" 0.02916118459465-0.0583223691893 = "0.0292:0.0583" 0.0583223691893-0.08748355378395 = "0.0583:0.0875" 0.08748355378395-0.1166447383786 = "0.0875:0.1166" 0.1166447383786-0.14580592297325 =
"0.1166:0.1458" 0.14580592297325-0.1749671075679 = "0.1458:0.175" 0.1749671075679-0.20412829216255 = "0.175:0.2041" 0.20412829216255-0.23328947675721 = "0.2041:0.2333" ;
NOTE: Format F9_ has been output.
34601      value F10_
34602      0-0.01516289343396 = "0:0.0152"
34603      0.01516289343396-0.03032578686793 = "0.0152:0.0303"
34604      0.03032578686793-0.0454886803019 = "0.0303:0.0455"
34605      0.0454886803019-0.06065157373587 = "0.0455:0.0607"
34606      0.06065157373587-0.07581446716983 = "0.0607:0.0758"
34607      0.07581446716983-0.0909773606038 = "0.0758:0.091"
34608      0.0909773606038-0.10614025403777 = "0.091:0.1061"
34609      0.10614025403777-0.12130314747174 = "0.1061:0.1213"
34610      ;
MPRINT(EM_DIAGRAM):   value F10_ 0-0.01516289343396 = "0:0.0152" 0.01516289343396-0.03032578686793 = "0.0152:0.0303" 0.03032578686793-0.0454886803019 = "0.0303:0.0455" 0.0454886803019-0.06065157373587 = "0.0455:0.0607" 0.06065157373587-0.07581446716983 =
"0.0607:0.0758" 0.07581446716983-0.0909773606038 = "0.0758:0.091" 0.0909773606038-0.10614025403777 = "0.091:0.1061" 0.10614025403777-0.12130314747174 = "0.1061:0.1213" ;
NOTE: Format F10_ has been output.
34611      value F11_
34612      0-0.01394885171139 = "0:0.0139"
34613      0.01394885171139-0.02789770342278 = "0.0139:0.0279"
34614      0.02789770342278-0.04184655513418 = "0.0279:0.0418"
34615      0.04184655513418-0.05579540684557 = "0.0418:0.0558"
34616      0.05579540684557-0.06974425855697 = "0.0558:0.0697"
34617      0.06974425855697-0.08369311026836 = "0.0697:0.0837"
34618      0.08369311026836-0.09764196197976 = "0.0837:0.0976"
34619      0.09764196197976-0.11159081369115 = "0.0976:0.1116"
34620      ;
MPRINT(EM_DIAGRAM):   value F11_ 0-0.01394885171139 = "0:0.0139" 0.01394885171139-0.02789770342278 = "0.0139:0.0279" 0.02789770342278-0.04184655513418 = "0.0279:0.0418" 0.04184655513418-0.05579540684557 = "0.0418:0.0558" 0.05579540684557-0.06974425855697
= "0.0558:0.0697" 0.06974425855697-0.08369311026836 = "0.0697:0.0837" 0.08369311026836-0.09764196197976 = "0.0837:0.0976" 0.09764196197976-0.11159081369115 = "0.0976:0.1116" ;
NOTE: Format F11_ has been output.
34621      value F12_
34622      0-0.02059284621009 = "0:0.0206"
34623      0.02059284621009-0.04118569242018 = "0.0206:0.0412"
34624      0.04118569242018-0.06177853863027 = "0.0412:0.0618"
34625      0.06177853863027-0.08237138484037 = "0.0618:0.0824"
34626      0.08237138484037-0.10296423105046 = "0.0824:0.103"
34627      0.10296423105046-0.12355707726055 = "0.103:0.1236"
34628      0.12355707726055-0.14414992347065 = "0.1236:0.1441"
34629      0.14414992347065-0.16474276968074 = "0.1441:0.1647"
34630      ;
MPRINT(EM_DIAGRAM):   value F12_ 0-0.02059284621009 = "0:0.0206" 0.02059284621009-0.04118569242018 = "0.0206:0.0412" 0.04118569242018-0.06177853863027 = "0.0412:0.0618" 0.06177853863027-0.08237138484037 = "0.0618:0.0824" 0.08237138484037-0.10296423105046
= "0.0824:0.103" 0.10296423105046-0.12355707726055 = "0.103:0.1236" 0.12355707726055-0.14414992347065 = "0.1236:0.1441" 0.14414992347065-0.16474276968074 = "0.1441:0.1647" ;
NOTE: Format F12_ has been output.
34631      value F13_
34632      0-0.01027938591286 = "0:0.0103"
34633      0.01027938591286-0.02055877182573 = "0.0103:0.0206"
34634      0.02055877182573-0.0308381577386 = "0.0206:0.0308"
34635      0.0308381577386-0.04111754365147 = "0.0308:0.0411"
34636      0.04111754365147-0.05139692956433 = "0.0411:0.0514"
34637      0.05139692956433-0.0616763154772 = "0.0514:0.0617"
34638      0.0616763154772-0.07195570139007 = "0.0617:0.072"
34639      0.07195570139007-0.08223508730294 = "0.072:0.0822"
34640      ;
MPRINT(EM_DIAGRAM):   value F13_ 0-0.01027938591286 = "0:0.0103" 0.01027938591286-0.02055877182573 = "0.0103:0.0206" 0.02055877182573-0.0308381577386 = "0.0206:0.0308" 0.0308381577386-0.04111754365147 = "0.0308:0.0411" 0.04111754365147-0.05139692956433 =
"0.0411:0.0514" 0.05139692956433-0.0616763154772 = "0.0514:0.0617" 0.0616763154772-0.07195570139007 = "0.0617:0.072" 0.07195570139007-0.08223508730294 = "0.072:0.0822" ;
NOTE: Format F13_ has been output.
34641      value F14_
34642      0-0.04236000922432 = "0:0.0424"
34643      0.04236000922432-0.08472001844865 = "0.0424:0.0847"
34644      0.08472001844865-0.12708002767298 = "0.0847:0.1271"
34645      0.12708002767298-0.16944003689731 = "0.1271:0.1694"
34646      0.16944003689731-0.21180004612164 = "0.1694:0.2118"
34647      0.21180004612164-0.25416005534596 = "0.2118:0.2542"
34648      0.25416005534596-0.29652006457029 = "0.2542:0.2965"
34649      0.29652006457029-0.33888007379462 = "0.2965:0.3389"
34650      ;
MPRINT(EM_DIAGRAM):   value F14_ 0-0.04236000922432 = "0:0.0424" 0.04236000922432-0.08472001844865 = "0.0424:0.0847" 0.08472001844865-0.12708002767298 = "0.0847:0.1271" 0.12708002767298-0.16944003689731 = "0.1271:0.1694" 0.16944003689731-0.21180004612164
= "0.1694:0.2118" 0.21180004612164-0.25416005534596 = "0.2118:0.2542" 0.25416005534596-0.29652006457029 = "0.2542:0.2965" 0.29652006457029-0.33888007379462 = "0.2965:0.3389" ;
NOTE: Format F14_ has been output.
34651      value F15_
34652      0-0.02366173302886 = "0:0.0237"
34653      0.02366173302886-0.04732346605773 = "0.0237:0.0473"
34654      0.04732346605773-0.0709851990866 = "0.0473:0.071"
34655      0.0709851990866-0.09464693211547 = "0.071:0.0946"
34656      0.09464693211547-0.11830866514434 = "0.0946:0.1183"
34657      0.11830866514434-0.14197039817321 = "0.1183:0.142"
34658      0.14197039817321-0.16563213120208 = "0.142:0.1656"
34659      0.16563213120208-0.18929386423095 = "0.1656:0.1893"
34660      ;
MPRINT(EM_DIAGRAM):   value F15_ 0-0.02366173302886 = "0:0.0237" 0.02366173302886-0.04732346605773 = "0.0237:0.0473" 0.04732346605773-0.0709851990866 = "0.0473:0.071" 0.0709851990866-0.09464693211547 = "0.071:0.0946" 0.09464693211547-0.11830866514434 =
"0.0946:0.1183" 0.11830866514434-0.14197039817321 = "0.1183:0.142" 0.14197039817321-0.16563213120208 = "0.142:0.1656" 0.16563213120208-0.18929386423095 = "0.1656:0.1893" ;
NOTE: Format F15_ has been output.
34661      value F16_
34662      0-0.03599875352952 = "0:0.036"
34663      0.03599875352952-0.07199750705905 = "0.036:0.072"
34664      0.07199750705905-0.10799626058857 = "0.072:0.108"
34665      0.10799626058857-0.1439950141181 = "0.108:0.144"
34666      0.1439950141181-0.17999376764763 = "0.144:0.18"
34667      0.17999376764763-0.21599252117715 = "0.18:0.216"
34668      0.21599252117715-0.25199127470668 = "0.216:0.252"
34669      0.25199127470668-0.2879900282362 = "0.252:0.288"
34670      ;
MPRINT(EM_DIAGRAM):   value F16_ 0-0.03599875352952 = "0:0.036" 0.03599875352952-0.07199750705905 = "0.036:0.072" 0.07199750705905-0.10799626058857 = "0.072:0.108" 0.10799626058857-0.1439950141181 = "0.108:0.144" 0.1439950141181-0.17999376764763 =
"0.144:0.18" 0.17999376764763-0.21599252117715 = "0.18:0.216" 0.21599252117715-0.25199127470668 = "0.216:0.252" 0.25199127470668-0.2879900282362 = "0.252:0.288" ;
NOTE: Format F16_ has been output.
34671      value F17_
34672      0-0.05329162301827 = "0:0.0533"
34673      0.05329162301827-0.10658324603654 = "0.0533:0.1066"
34674      0.10658324603654-0.15987486905481 = "0.1066:0.1599"
34675      0.15987486905481-0.21316649207308 = "0.1599:0.2132"
34676      0.21316649207308-0.26645811509135 = "0.2132:0.2665"
34677      0.26645811509135-0.31974973810963 = "0.2665:0.3197"
34678      0.31974973810963-0.3730413611279 = "0.3197:0.373"
34679      0.3730413611279-0.42633298414617 = "0.373:0.4263"
34680      ;
MPRINT(EM_DIAGRAM):   value F17_ 0-0.05329162301827 = "0:0.0533" 0.05329162301827-0.10658324603654 = "0.0533:0.1066" 0.10658324603654-0.15987486905481 = "0.1066:0.1599" 0.15987486905481-0.21316649207308 = "0.1599:0.2132" 0.21316649207308-0.26645811509135
= "0.2132:0.2665" 0.26645811509135-0.31974973810963 = "0.2665:0.3197" 0.31974973810963-0.3730413611279 = "0.3197:0.373" 0.3730413611279-0.42633298414617 = "0.373:0.4263" ;
NOTE: Format F17_ has been output.
34681      value F18_
34682      0-0.01910676524339 = "0:0.0191"
34683      0.01910676524339-0.03821353048679 = "0.0191:0.0382"
34684      0.03821353048679-0.05732029573019 = "0.0382:0.0573"
34685      0.05732029573019-0.07642706097358 = "0.0573:0.0764"
34686      0.07642706097358-0.09553382621698 = "0.0764:0.0955"
34687      0.09553382621698-0.11464059146038 = "0.0955:0.1146"
34688      0.11464059146038-0.13374735670378 = "0.1146:0.1337"
34689      0.13374735670378-0.15285412194717 = "0.1337:0.1529"
34690      ;
MPRINT(EM_DIAGRAM):   value F18_ 0-0.01910676524339 = "0:0.0191" 0.01910676524339-0.03821353048679 = "0.0191:0.0382" 0.03821353048679-0.05732029573019 = "0.0382:0.0573" 0.05732029573019-0.07642706097358 = "0.0573:0.0764" 0.07642706097358-0.09553382621698
= "0.0764:0.0955" 0.09553382621698-0.11464059146038 = "0.0955:0.1146" 0.11464059146038-0.13374735670378 = "0.1146:0.1337" 0.13374735670378-0.15285412194717 = "0.1337:0.1529" ;
NOTE: Format F18_ has been output.
34691      value F19_
34692      0-0.01396699519065 = "0:0.014"
34693      0.01396699519065-0.0279339903813 = "0.014:0.0279"
34694      0.0279339903813-0.04190098557195 = "0.0279:0.0419"
34695      0.04190098557195-0.0558679807626 = "0.0419:0.0559"
34696      0.0558679807626-0.06983497595326 = "0.0559:0.0698"
34697      0.06983497595326-0.08380197114391 = "0.0698:0.0838"
34698      0.08380197114391-0.09776896633456 = "0.0838:0.0978"
34699      0.09776896633456-0.11173596152521 = "0.0978:0.1117"
34700      ;
MPRINT(EM_DIAGRAM):   value F19_ 0-0.01396699519065 = "0:0.014" 0.01396699519065-0.0279339903813 = "0.014:0.0279" 0.0279339903813-0.04190098557195 = "0.0279:0.0419" 0.04190098557195-0.0558679807626 = "0.0419:0.0559" 0.0558679807626-0.06983497595326 =
"0.0559:0.0698" 0.06983497595326-0.08380197114391 = "0.0698:0.0838" 0.08380197114391-0.09776896633456 = "0.0838:0.0978" 0.09776896633456-0.11173596152521 = "0.0978:0.1117" ;
NOTE: Format F19_ has been output.
34701      value F20_
34702      0-0.0426065482488 = "0:0.0426"
34703      0.0426065482488-0.08521309649761 = "0.0426:0.0852"
34704      0.08521309649761-0.12781964474641 = "0.0852:0.1278"
34705      0.12781964474641-0.17042619299522 = "0.1278:0.1704"
34706      0.17042619299522-0.21303274124402 = "0.1704:0.213"
34707      0.21303274124402-0.25563928949283 = "0.213:0.2556"
34708      0.25563928949283-0.29824583774163 = "0.2556:0.2982"
34709      0.29824583774163-0.34085238599044 = "0.2982:0.3409"
34710      ;
MPRINT(EM_DIAGRAM):   value F20_ 0-0.0426065482488 = "0:0.0426" 0.0426065482488-0.08521309649761 = "0.0426:0.0852" 0.08521309649761-0.12781964474641 = "0.0852:0.1278" 0.12781964474641-0.17042619299522 = "0.1278:0.1704" 0.17042619299522-0.21303274124402 =
"0.1704:0.213" 0.21303274124402-0.25563928949283 = "0.213:0.2556" 0.25563928949283-0.29824583774163 = "0.2556:0.2982" 0.29824583774163-0.34085238599044 = "0.2982:0.3409" ;
NOTE: Format F20_ has been output.
34711      value F21_
34712      0-0.03678791521982 = "0:0.0368"
34713      0.03678791521982-0.07357583043965 = "0.0368:0.0736"
34714      0.07357583043965-0.11036374565948 = "0.0736:0.1104"
34715      0.11036374565948-0.14715166087931 = "0.1104:0.1472"
34716      0.14715166087931-0.18393957609914 = "0.1472:0.1839"
34717      0.18393957609914-0.22072749131897 = "0.1839:0.2207"
34718      0.22072749131897-0.2575154065388 = "0.2207:0.2575"
34719      0.2575154065388-0.29430332175862 = "0.2575:0.2943"
34720      ;
MPRINT(EM_DIAGRAM):   value F21_ 0-0.03678791521982 = "0:0.0368" 0.03678791521982-0.07357583043965 = "0.0368:0.0736" 0.07357583043965-0.11036374565948 = "0.0736:0.1104" 0.11036374565948-0.14715166087931 = "0.1104:0.1472" 0.14715166087931-0.18393957609914
= "0.1472:0.1839" 0.18393957609914-0.22072749131897 = "0.1839:0.2207" 0.22072749131897-0.2575154065388 = "0.2207:0.2575" 0.2575154065388-0.29430332175862 = "0.2575:0.2943" ;
NOTE: Format F21_ has been output.
34721      value F22_
34722      0-0.03974671939467 = "0:0.0397"
34723      0.03974671939467-0.07949343878934 = "0.0397:0.0795"
34724      0.07949343878934-0.11924015818402 = "0.0795:0.1192"
34725      0.11924015818402-0.15898687757869 = "0.1192:0.159"
34726      0.15898687757869-0.19873359697336 = "0.159:0.1987"
34727      0.19873359697336-0.23848031636804 = "0.1987:0.2385"
34728      0.23848031636804-0.27822703576271 = "0.2385:0.2782"
34729      0.27822703576271-0.31797375515738 = "0.2782:0.318"
34730      ;
MPRINT(EM_DIAGRAM):   value F22_ 0-0.03974671939467 = "0:0.0397" 0.03974671939467-0.07949343878934 = "0.0397:0.0795" 0.07949343878934-0.11924015818402 = "0.0795:0.1192" 0.11924015818402-0.15898687757869 = "0.1192:0.159" 0.15898687757869-0.19873359697336 =
"0.159:0.1987" 0.19873359697336-0.23848031636804 = "0.1987:0.2385" 0.23848031636804-0.27822703576271 = "0.2385:0.2782" 0.27822703576271-0.31797375515738 = "0.2782:0.318" ;
NOTE: Format F22_ has been output.
34731      value F23_
34732      0-0.02088428538274 = "0:0.0209"
34733      0.02088428538274-0.04176857076549 = "0.0209:0.0418"
34734      0.04176857076549-0.06265285614824 = "0.0418:0.0627"
34735      0.06265285614824-0.08353714153099 = "0.0627:0.0835"
34736      0.08353714153099-0.10442142691374 = "0.0835:0.1044"
34737      0.10442142691374-0.12530571229649 = "0.1044:0.1253"
34738      0.12530571229649-0.14618999767924 = "0.1253:0.1462"
34739      0.14618999767924-0.16707428306199 = "0.1462:0.1671"
34740      ;
MPRINT(EM_DIAGRAM):   value F23_ 0-0.02088428538274 = "0:0.0209" 0.02088428538274-0.04176857076549 = "0.0209:0.0418" 0.04176857076549-0.06265285614824 = "0.0418:0.0627" 0.06265285614824-0.08353714153099 = "0.0627:0.0835" 0.08353714153099-0.10442142691374
= "0.0835:0.1044" 0.10442142691374-0.12530571229649 = "0.1044:0.1253" 0.12530571229649-0.14618999767924 = "0.1253:0.1462" 0.14618999767924-0.16707428306199 = "0.1462:0.1671" ;
NOTE: Format F23_ has been output.
34741      value F24_
34742      0-0.01438243751995 = "0:0.0144"
34743      0.01438243751995-0.02876487503991 = "0.0144:0.0288"
34744      0.02876487503991-0.04314731255986 = "0.0288:0.0431"
34745      0.04314731255986-0.05752975007982 = "0.0431:0.0575"
34746      0.05752975007982-0.07191218759978 = "0.0575:0.0719"
34747      0.07191218759978-0.08629462511973 = "0.0719:0.0863"
34748      0.08629462511973-0.10067706263969 = "0.0863:0.1007"
34749      0.10067706263969-0.11505950015965 = "0.1007:0.1151"
34750      ;
MPRINT(EM_DIAGRAM):   value F24_ 0-0.01438243751995 = "0:0.0144" 0.01438243751995-0.02876487503991 = "0.0144:0.0288" 0.02876487503991-0.04314731255986 = "0.0288:0.0431" 0.04314731255986-0.05752975007982 = "0.0431:0.0575" 0.05752975007982-0.07191218759978
= "0.0575:0.0719" 0.07191218759978-0.08629462511973 = "0.0719:0.0863" 0.08629462511973-0.10067706263969 = "0.0863:0.1007" 0.10067706263969-0.11505950015965 = "0.1007:0.1151" ;
NOTE: Format F24_ has been output.
34751      value F25_
34752      0-0.0133297534723 = "0:0.0133"
34753      0.0133297534723-0.02665950694461 = "0.0133:0.0267"
34754      0.02665950694461-0.03998926041691 = "0.0267:0.04"
34755      0.03998926041691-0.05331901388922 = "0.04:0.0533"
34756      0.05331901388922-0.06664876736153 = "0.0533:0.0666"
34757      0.06664876736153-0.07997852083383 = "0.0666:0.08"
34758      0.07997852083383-0.09330827430614 = "0.08:0.0933"
34759      0.09330827430614-0.10663802777845 = "0.0933:0.1066"
34760      ;
MPRINT(EM_DIAGRAM):   value F25_ 0-0.0133297534723 = "0:0.0133" 0.0133297534723-0.02665950694461 = "0.0133:0.0267" 0.02665950694461-0.03998926041691 = "0.0267:0.04" 0.03998926041691-0.05331901388922 = "0.04:0.0533" 0.05331901388922-0.06664876736153 =
"0.0533:0.0666" 0.06664876736153-0.07997852083383 = "0.0666:0.08" 0.07997852083383-0.09330827430614 = "0.08:0.0933" 0.09330827430614-0.10663802777845 = "0.0933:0.1066" ;
NOTE: Format F25_ has been output.
34761      value F26_
34762      0-0.02272696433368 = "0:0.0227"
34763      0.02272696433368-0.04545392866736 = "0.0227:0.0455"
34764      0.04545392866736-0.06818089300104 = "0.0455:0.0682"
34765      0.06818089300104-0.09090785733473 = "0.0682:0.0909"
34766      0.09090785733473-0.11363482166841 = "0.0909:0.1136"
34767      0.11363482166841-0.13636178600209 = "0.1136:0.1364"
34768      0.13636178600209-0.15908875033578 = "0.1364:0.1591"
34769      0.15908875033578-0.18181571466946 = "0.1591:0.1818"
34770      ;
MPRINT(EM_DIAGRAM):   value F26_ 0-0.02272696433368 = "0:0.0227" 0.02272696433368-0.04545392866736 = "0.0227:0.0455" 0.04545392866736-0.06818089300104 = "0.0455:0.0682" 0.06818089300104-0.09090785733473 = "0.0682:0.0909" 0.09090785733473-0.11363482166841
= "0.0909:0.1136" 0.11363482166841-0.13636178600209 = "0.1136:0.1364" 0.13636178600209-0.15908875033578 = "0.1364:0.1591" 0.15908875033578-0.18181571466946 = "0.1591:0.1818" ;
NOTE: Format F26_ has been output.
34771      value F27_
34772      0-0.02966741309684 = "0:0.0297"
34773      0.02966741309684-0.05933482619369 = "0.0297:0.0593"
34774      0.05933482619369-0.08900223929054 = "0.0593:0.089"
34775      0.08900223929054-0.11866965238739 = "0.089:0.1187"
34776      0.11866965238739-0.14833706548424 = "0.1187:0.1483"
34777      0.14833706548424-0.17800447858109 = "0.1483:0.178"
34778      0.17800447858109-0.20767189167794 = "0.178:0.2077"
34779      0.20767189167794-0.23733930477479 = "0.2077:0.2373"
34780      ;
MPRINT(EM_DIAGRAM):   value F27_ 0-0.02966741309684 = "0:0.0297" 0.02966741309684-0.05933482619369 = "0.0297:0.0593" 0.05933482619369-0.08900223929054 = "0.0593:0.089" 0.08900223929054-0.11866965238739 = "0.089:0.1187" 0.11866965238739-0.14833706548424 =
"0.1187:0.1483" 0.14833706548424-0.17800447858109 = "0.1483:0.178" 0.17800447858109-0.20767189167794 = "0.178:0.2077" 0.20767189167794-0.23733930477479 = "0.2077:0.2373" ;
NOTE: Format F27_ has been output.
34781      value F28_
34782      0-0.03752749831543 = "0:0.0375"
34783      0.03752749831543-0.07505499663086 = "0.0375:0.0751"
34784      0.07505499663086-0.1125824949463 = "0.0751:0.1126"
34785      0.1125824949463-0.15010999326173 = "0.1126:0.1501"
34786      0.15010999326173-0.18763749157716 = "0.1501:0.1876"
34787      0.18763749157716-0.2251649898926 = "0.1876:0.2252"
34788      0.2251649898926-0.26269248820803 = "0.2252:0.2627"
34789      0.26269248820803-0.30021998652346 = "0.2627:0.3002"
34790      ;
MPRINT(EM_DIAGRAM):   value F28_ 0-0.03752749831543 = "0:0.0375" 0.03752749831543-0.07505499663086 = "0.0375:0.0751" 0.07505499663086-0.1125824949463 = "0.0751:0.1126" 0.1125824949463-0.15010999326173 = "0.1126:0.1501" 0.15010999326173-0.18763749157716 =
"0.1501:0.1876" 0.18763749157716-0.2251649898926 = "0.1876:0.2252" 0.2251649898926-0.26269248820803 = "0.2252:0.2627" 0.26269248820803-0.30021998652346 = "0.2627:0.3002" ;
NOTE: Format F28_ has been output.
34791      value F29_
34792      0-0.03176522195593 = "0:0.0318"
34793      0.03176522195593-0.06353044391187 = "0.0318:0.0635"
34794      0.06353044391187-0.0952956658678 = "0.0635:0.0953"
34795      0.0952956658678-0.12706088782374 = "0.0953:0.1271"
34796      0.12706088782374-0.15882610977968 = "0.1271:0.1588"
34797      0.15882610977968-0.19059133173561 = "0.1588:0.1906"
34798      0.19059133173561-0.22235655369155 = "0.1906:0.2224"
34799      0.22235655369155-0.25412177564748 = "0.2224:0.2541"
34800      ;
MPRINT(EM_DIAGRAM):   value F29_ 0-0.03176522195593 = "0:0.0318" 0.03176522195593-0.06353044391187 = "0.0318:0.0635" 0.06353044391187-0.0952956658678 = "0.0635:0.0953" 0.0952956658678-0.12706088782374 = "0.0953:0.1271" 0.12706088782374-0.15882610977968 =
"0.1271:0.1588" 0.15882610977968-0.19059133173561 = "0.1588:0.1906" 0.19059133173561-0.22235655369155 = "0.1906:0.2224" 0.22235655369155-0.25412177564748 = "0.2224:0.2541" ;
NOTE: Format F29_ has been output.
34801      value F30_
34802      0-0.01109959226083 = "0:0.0111"
34803      0.01109959226083-0.02219918452166 = "0.0111:0.0222"
34804      0.02219918452166-0.0332987767825 = "0.0222:0.0333"
34805      0.0332987767825-0.04439836904333 = "0.0333:0.0444"
34806      0.04439836904333-0.05549796130417 = "0.0444:0.0555"
34807      0.05549796130417-0.066597553565 = "0.0555:0.0666"
34808      0.066597553565-0.07769714582583 = "0.0666:0.0777"
34809      0.07769714582583-0.08879673808667 = "0.0777:0.0888"
34810      ;
MPRINT(EM_DIAGRAM):   value F30_ 0-0.01109959226083 = "0:0.0111" 0.01109959226083-0.02219918452166 = "0.0111:0.0222" 0.02219918452166-0.0332987767825 = "0.0222:0.0333" 0.0332987767825-0.04439836904333 = "0.0333:0.0444" 0.04439836904333-0.05549796130417 =
"0.0444:0.0555" 0.05549796130417-0.066597553565 = "0.0555:0.0666" 0.066597553565-0.07769714582583 = "0.0666:0.0777" 0.07769714582583-0.08879673808667 = "0.0777:0.0888" ;
NOTE: Format F30_ has been output.
34811      value F31_
34812      0-0.05952747737836 = "0:0.0595"
34813      0.05952747737836-0.11905495475672 = "0.0595:0.1191"
34814      0.11905495475672-0.17858243213508 = "0.1191:0.1786"
34815      0.17858243213508-0.23810990951345 = "0.1786:0.2381"
34816      0.23810990951345-0.29763738689181 = "0.2381:0.2976"
34817      0.29763738689181-0.35716486427017 = "0.2976:0.3572"
34818      0.35716486427017-0.41669234164854 = "0.3572:0.4167"
34819      0.41669234164854-0.4762198190269 = "0.4167:0.4762"
34820      ;
MPRINT(EM_DIAGRAM):   value F31_ 0-0.05952747737836 = "0:0.0595" 0.05952747737836-0.11905495475672 = "0.0595:0.1191" 0.11905495475672-0.17858243213508 = "0.1191:0.1786" 0.17858243213508-0.23810990951345 = "0.1786:0.2381" 0.23810990951345-0.29763738689181
= "0.2381:0.2976" 0.29763738689181-0.35716486427017 = "0.2976:0.3572" 0.35716486427017-0.41669234164854 = "0.3572:0.4167" 0.41669234164854-0.4762198190269 = "0.4167:0.4762" ;
NOTE: Format F31_ has been output.
34821      value F32_
34822      0-0.01328592727211 = "0:0.0133"
34823      0.01328592727211-0.02657185454423 = "0.0133:0.0266"
34824      0.02657185454423-0.03985778181635 = "0.0266:0.0399"
34825      0.03985778181635-0.05314370908847 = "0.0399:0.0531"
34826      0.05314370908847-0.06642963636058 = "0.0531:0.0664"
34827      0.06642963636058-0.0797155636327 = "0.0664:0.0797"
34828      0.0797155636327-0.09300149090482 = "0.0797:0.093"
34829      0.09300149090482-0.10628741817694 = "0.093:0.1063"
34830      ;
MPRINT(EM_DIAGRAM):   value F32_ 0-0.01328592727211 = "0:0.0133" 0.01328592727211-0.02657185454423 = "0.0133:0.0266" 0.02657185454423-0.03985778181635 = "0.0266:0.0399" 0.03985778181635-0.05314370908847 = "0.0399:0.0531" 0.05314370908847-0.06642963636058
= "0.0531:0.0664" 0.06642963636058-0.0797155636327 = "0.0664:0.0797" 0.0797155636327-0.09300149090482 = "0.0797:0.093" 0.09300149090482-0.10628741817694 = "0.093:0.1063" ;
NOTE: Format F32_ has been output.
34831      value F33_
34832      0-0.01822669887042 = "0:0.0182"
34833      0.01822669887042-0.03645339774084 = "0.0182:0.0365"
34834      0.03645339774084-0.05468009661126 = "0.0365:0.0547"
34835      0.05468009661126-0.07290679548168 = "0.0547:0.0729"
34836      0.07290679548168-0.09113349435211 = "0.0729:0.0911"
34837      0.09113349435211-0.10936019322253 = "0.0911:0.1094"
34838      0.10936019322253-0.12758689209295 = "0.1094:0.1276"
34839      0.12758689209295-0.14581359096337 = "0.1276:0.1458"
34840      ;
MPRINT(EM_DIAGRAM):   value F33_ 0-0.01822669887042 = "0:0.0182" 0.01822669887042-0.03645339774084 = "0.0182:0.0365" 0.03645339774084-0.05468009661126 = "0.0365:0.0547" 0.05468009661126-0.07290679548168 = "0.0547:0.0729" 0.07290679548168-0.09113349435211
= "0.0729:0.0911" 0.09113349435211-0.10936019322253 = "0.0911:0.1094" 0.10936019322253-0.12758689209295 = "0.1094:0.1276" 0.12758689209295-0.14581359096337 = "0.1276:0.1458" ;
NOTE: Format F33_ has been output.
34841      value F34_
34842      0-0.02220872488581 = "0:0.0222"
34843      0.02220872488581-0.04441744977162 = "0.0222:0.0444"
34844      0.04441744977162-0.06662617465743 = "0.0444:0.0666"
34845      0.06662617465743-0.08883489954324 = "0.0666:0.0888"
34846      0.08883489954324-0.11104362442905 = "0.0888:0.111"
34847      0.11104362442905-0.13325234931486 = "0.111:0.1333"
34848      0.13325234931486-0.15546107420067 = "0.1333:0.1555"
34849      0.15546107420067-0.17766979908649 = "0.1555:0.1777"
34850      ;
MPRINT(EM_DIAGRAM):   value F34_ 0-0.02220872488581 = "0:0.0222" 0.02220872488581-0.04441744977162 = "0.0222:0.0444" 0.04441744977162-0.06662617465743 = "0.0444:0.0666" 0.06662617465743-0.08883489954324 = "0.0666:0.0888" 0.08883489954324-0.11104362442905
= "0.0888:0.111" 0.11104362442905-0.13325234931486 = "0.111:0.1333" 0.13325234931486-0.15546107420067 = "0.1333:0.1555" 0.15546107420067-0.17766979908649 = "0.1555:0.1777" ;
NOTE: Format F34_ has been output.
34851      value F35_
34852      0-0.03417344203095 = "0:0.0342"
34853      0.03417344203095-0.0683468840619 = "0.0342:0.0683"
34854      0.0683468840619-0.10252032609285 = "0.0683:0.1025"
34855      0.10252032609285-0.1366937681238 = "0.1025:0.1367"
34856      0.1366937681238-0.17086721015476 = "0.1367:0.1709"
34857      0.17086721015476-0.20504065218571 = "0.1709:0.205"
34858      0.20504065218571-0.23921409421666 = "0.205:0.2392"
34859      0.23921409421666-0.27338753624761 = "0.2392:0.2734"
34860      ;
MPRINT(EM_DIAGRAM):   value F35_ 0-0.03417344203095 = "0:0.0342" 0.03417344203095-0.0683468840619 = "0.0342:0.0683" 0.0683468840619-0.10252032609285 = "0.0683:0.1025" 0.10252032609285-0.1366937681238 = "0.1025:0.1367" 0.1366937681238-0.17086721015476 =
"0.1367:0.1709" 0.17086721015476-0.20504065218571 = "0.1709:0.205" 0.20504065218571-0.23921409421666 = "0.205:0.2392" 0.23921409421666-0.27338753624761 = "0.2392:0.2734" ;
NOTE: Format F35_ has been output.
34861      value F36_
34862      0-0.01382991972263 = "0:0.0138"
34863      0.01382991972263-0.02765983944527 = "0.0138:0.0277"
34864      0.02765983944527-0.04148975916791 = "0.0277:0.0415"
34865      0.04148975916791-0.05531967889055 = "0.0415:0.0553"
34866      0.05531967889055-0.06914959861319 = "0.0553:0.0691"
34867      0.06914959861319-0.08297951833583 = "0.0691:0.083"
34868      0.08297951833583-0.09680943805847 = "0.083:0.0968"
34869      0.09680943805847-0.11063935778111 = "0.0968:0.1106"
34870      ;
MPRINT(EM_DIAGRAM):   value F36_ 0-0.01382991972263 = "0:0.0138" 0.01382991972263-0.02765983944527 = "0.0138:0.0277" 0.02765983944527-0.04148975916791 = "0.0277:0.0415" 0.04148975916791-0.05531967889055 = "0.0415:0.0553" 0.05531967889055-0.06914959861319
= "0.0553:0.0691" 0.06914959861319-0.08297951833583 = "0.0691:0.083" 0.08297951833583-0.09680943805847 = "0.083:0.0968" 0.09680943805847-0.11063935778111 = "0.0968:0.1106" ;
NOTE: Format F36_ has been output.
34871      value F37_
34872      0-0.03726885539599 = "0:0.0373"
34873      0.03726885539599-0.07453771079199 = "0.0373:0.0745"
34874      0.07453771079199-0.11180656618799 = "0.0745:0.1118"
34875      0.11180656618799-0.14907542158399 = "0.1118:0.1491"
34876      0.14907542158399-0.18634427697998 = "0.1491:0.1863"
34877      0.18634427697998-0.22361313237598 = "0.1863:0.2236"
34878      0.22361313237598-0.26088198777198 = "0.2236:0.2609"
34879      0.26088198777198-0.29815084316798 = "0.2609:0.2982"
34880      ;
MPRINT(EM_DIAGRAM):   value F37_ 0-0.03726885539599 = "0:0.0373" 0.03726885539599-0.07453771079199 = "0.0373:0.0745" 0.07453771079199-0.11180656618799 = "0.0745:0.1118" 0.11180656618799-0.14907542158399 = "0.1118:0.1491" 0.14907542158399-0.18634427697998
= "0.1491:0.1863" 0.18634427697998-0.22361313237598 = "0.1863:0.2236" 0.22361313237598-0.26088198777198 = "0.2236:0.2609" 0.26088198777198-0.29815084316798 = "0.2609:0.2982" ;
NOTE: Format F37_ has been output.
34881      value F38_
34882      0-0.06020783177536 = "0:0.0602"
34883      0.06020783177536-0.12041566355073 = "0.0602:0.1204"
34884      0.12041566355073-0.1806234953261 = "0.1204:0.1806"
34885      0.1806234953261-0.24083132710147 = "0.1806:0.2408"
34886      0.24083132710147-0.30103915887684 = "0.2408:0.301"
34887      0.30103915887684-0.3612469906522 = "0.301:0.3612"
34888      0.3612469906522-0.42145482242757 = "0.3612:0.4215"
34889      0.42145482242757-0.48166265420294 = "0.4215:0.4817"
34890      ;
MPRINT(EM_DIAGRAM):   value F38_ 0-0.06020783177536 = "0:0.0602" 0.06020783177536-0.12041566355073 = "0.0602:0.1204" 0.12041566355073-0.1806234953261 = "0.1204:0.1806" 0.1806234953261-0.24083132710147 = "0.1806:0.2408" 0.24083132710147-0.30103915887684 =
"0.2408:0.301" 0.30103915887684-0.3612469906522 = "0.301:0.3612" 0.3612469906522-0.42145482242757 = "0.3612:0.4215" 0.42145482242757-0.48166265420294 = "0.4215:0.4817" ;
NOTE: Format F38_ has been output.
34891      value F39_
34892      0-0.01703362849541 = "0:0.017"
34893      0.01703362849541-0.03406725699083 = "0.017:0.0341"
34894      0.03406725699083-0.05110088548625 = "0.0341:0.0511"
34895      0.05110088548625-0.06813451398167 = "0.0511:0.0681"
34896      0.06813451398167-0.08516814247709 = "0.0681:0.0852"
34897      0.08516814247709-0.1022017709725 = "0.0852:0.1022"
34898      0.1022017709725-0.11923539946792 = "0.1022:0.1192"
34899      0.11923539946792-0.13626902796334 = "0.1192:0.1363"
34900      ;
MPRINT(EM_DIAGRAM):   value F39_ 0-0.01703362849541 = "0:0.017" 0.01703362849541-0.03406725699083 = "0.017:0.0341" 0.03406725699083-0.05110088548625 = "0.0341:0.0511" 0.05110088548625-0.06813451398167 = "0.0511:0.0681" 0.06813451398167-0.08516814247709 =
"0.0681:0.0852" 0.08516814247709-0.1022017709725 = "0.0852:0.1022" 0.1022017709725-0.11923539946792 = "0.1022:0.1192" 0.11923539946792-0.13626902796334 = "0.1192:0.1363" ;
NOTE: Format F39_ has been output.
34901      value F40_
34902      0-0.0457999023815 = "0:0.0458"
34903      0.0457999023815-0.09159980476301 = "0.0458:0.0916"
34904      0.09159980476301-0.13739970714451 = "0.0916:0.1374"
34905      0.13739970714451-0.18319960952602 = "0.1374:0.1832"
34906      0.18319960952602-0.22899951190753 = "0.1832:0.229"
34907      0.22899951190753-0.27479941428903 = "0.229:0.2748"
34908      0.27479941428903-0.32059931667054 = "0.2748:0.3206"
34909      0.32059931667054-0.36639921905205 = "0.3206:0.3664"
34910      ;
MPRINT(EM_DIAGRAM):   value F40_ 0-0.0457999023815 = "0:0.0458" 0.0457999023815-0.09159980476301 = "0.0458:0.0916" 0.09159980476301-0.13739970714451 = "0.0916:0.1374" 0.13739970714451-0.18319960952602 = "0.1374:0.1832" 0.18319960952602-0.22899951190753 =
"0.1832:0.229" 0.22899951190753-0.27479941428903 = "0.229:0.2748" 0.27479941428903-0.32059931667054 = "0.2748:0.3206" 0.32059931667054-0.36639921905205 = "0.3206:0.3664" ;
NOTE: Format F40_ has been output.
34911      value F41_
34912      0-0.01225143674073 = "0:0.0123"
34913      0.01225143674073-0.02450287348146 = "0.0123:0.0245"
34914      0.02450287348146-0.03675431022219 = "0.0245:0.0368"
34915      0.03675431022219-0.04900574696292 = "0.0368:0.049"
34916      0.04900574696292-0.06125718370365 = "0.049:0.0613"
34917      0.06125718370365-0.07350862044439 = "0.0613:0.0735"
34918      0.07350862044439-0.08576005718512 = "0.0735:0.0858"
34919      0.08576005718512-0.09801149392585 = "0.0858:0.098"
34920      ;
MPRINT(EM_DIAGRAM):   value F41_ 0-0.01225143674073 = "0:0.0123" 0.01225143674073-0.02450287348146 = "0.0123:0.0245" 0.02450287348146-0.03675431022219 = "0.0245:0.0368" 0.03675431022219-0.04900574696292 = "0.0368:0.049" 0.04900574696292-0.06125718370365 =
"0.049:0.0613" 0.06125718370365-0.07350862044439 = "0.0613:0.0735" 0.07350862044439-0.08576005718512 = "0.0735:0.0858" 0.08576005718512-0.09801149392585 = "0.0858:0.098" ;
NOTE: Format F41_ has been output.
MPRINT(EM_DIAGRAM):   run;
34921      run;
 
NOTE: PROCEDURE FORMAT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34922      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
34923      ods output crosstabfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output crosstabfreqs=WORK.TEMPFREQ;
34924      proc freq data = EMWS3.Clus_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS3.Clus_TRAIN order=formatted addnames;
34925      table ACCUR * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ACCUR * _SEGMENT_ / missing;
34926      table ARAB * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ARAB * _SEGMENT_ / missing;
34927      table ARGIC * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ARGIC * _SEGMENT_ / missing;
34928      table ARMENIA * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ARMENIA * _SEGMENT_ / missing;
34929      table ARMENIAN * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ARMENIAN * _SEGMENT_ / missing;
34930      table BOSTON * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table BOSTON * _SEGMENT_ / missing;
34931      table CHASTITI * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CHASTITI * _SEGMENT_ / missing;
34932      table CPR * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CPR * _SEGMENT_ / missing;
34933      table DAVID * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table DAVID * _SEGMENT_ / missing;
34934      table DON * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table DON * _SEGMENT_ / missing;
34935      table EXIST * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table EXIST * _SEGMENT_ / missing;
34936      table EXPANS * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table EXPANS * _SEGMENT_ / missing;
34937      table EXTERMIN * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table EXTERMIN * _SEGMENT_ / missing;
34938      table GAZA * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GAZA * _SEGMENT_ / missing;
34939      table GENOCID * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GENOCID * _SEGMENT_ / missing;
34940      table GORDON * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GORDON * _SEGMENT_ / missing;
34941      table HENRIK * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HENRIK * _SEGMENT_ / missing;
34942      table HISTORI * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HISTORI * _SEGMENT_ / missing;
34943      table INTELLECT * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table INTELLECT * _SEGMENT_ / missing;
34944      table ISRA * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ISRA * _SEGMENT_ / missing;
34945      table ISRAEL * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ISRAEL * _SEGMENT_ / missing;
34946      table JEW * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table JEW * _SEGMENT_ / missing;
34947      table LEBANON * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table LEBANON * _SEGMENT_ / missing;
34948      table MASS * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MASS * _SEGMENT_ / missing;
34949      table MED * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MED * _SEGMENT_ / missing;
34950      table MEDIC * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MEDIC * _SEGMENT_ / missing;
34951      table MODIFI * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MODIFI * _SEGMENT_ / missing;
34952      table PALESTINIAN * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PALESTINIAN * _SEGMENT_ / missing;
34953      table RIND * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table RIND * _SEGMENT_ / missing;
34954      table SERA * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table SERA * _SEGMENT_ / missing;
34955      table SERDAR * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table SERDAR * _SEGMENT_ / missing;
34956      table SHAME * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table SHAME * _SEGMENT_ / missing;
34957      table SKEPTIC * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table SKEPTIC * _SEGMENT_ / missing;
34958      table SOLDIER * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table SOLDIER * _SEGMENT_ / missing;
34959      table SOUND * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table SOUND * _SEGMENT_ / missing;
34960      table SURREND * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table SURREND * _SEGMENT_ / missing;
34961      table TALK * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table TALK * _SEGMENT_ / missing;
34962      table TERROR * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table TERROR * _SEGMENT_ / missing;
34963      table TURK * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table TURK * _SEGMENT_ / missing;
34964      table TURKISH * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table TURKISH * _SEGMENT_ / missing;
34965      table ZUMA * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ZUMA * _SEGMENT_ / missing;
34966      format ACCUR F1_.;
MPRINT(EM_DIAGRAM):   format ACCUR F1_.;
34967      format ARAB F2_.;
MPRINT(EM_DIAGRAM):   format ARAB F2_.;
34968      format ARGIC F3_.;
MPRINT(EM_DIAGRAM):   format ARGIC F3_.;
34969      format ARMENIA F4_.;
MPRINT(EM_DIAGRAM):   format ARMENIA F4_.;
34970      format ARMENIAN F5_.;
MPRINT(EM_DIAGRAM):   format ARMENIAN F5_.;
34971      format BOSTON F6_.;
MPRINT(EM_DIAGRAM):   format BOSTON F6_.;
34972      format CHASTITI F7_.;
MPRINT(EM_DIAGRAM):   format CHASTITI F7_.;
34973      format CPR F8_.;
MPRINT(EM_DIAGRAM):   format CPR F8_.;
34974      format DAVID F9_.;
MPRINT(EM_DIAGRAM):   format DAVID F9_.;
34975      format DON F10_.;
MPRINT(EM_DIAGRAM):   format DON F10_.;
34976      format EXIST F11_.;
MPRINT(EM_DIAGRAM):   format EXIST F11_.;
34977      format EXPANS F12_.;
MPRINT(EM_DIAGRAM):   format EXPANS F12_.;
34978      format EXTERMIN F13_.;
MPRINT(EM_DIAGRAM):   format EXTERMIN F13_.;
34979      format GAZA F14_.;
MPRINT(EM_DIAGRAM):   format GAZA F14_.;
34980      format GENOCID F15_.;
MPRINT(EM_DIAGRAM):   format GENOCID F15_.;
34981      format GORDON F16_.;
MPRINT(EM_DIAGRAM):   format GORDON F16_.;
34982      format HENRIK F17_.;
MPRINT(EM_DIAGRAM):   format HENRIK F17_.;
34983      format HISTORI F18_.;
MPRINT(EM_DIAGRAM):   format HISTORI F18_.;
34984      format INTELLECT F19_.;
MPRINT(EM_DIAGRAM):   format INTELLECT F19_.;
34985      format ISRA F20_.;
MPRINT(EM_DIAGRAM):   format ISRA F20_.;
34986      format ISRAEL F21_.;
MPRINT(EM_DIAGRAM):   format ISRAEL F21_.;
34987      format JEW F22_.;
MPRINT(EM_DIAGRAM):   format JEW F22_.;
34988      format LEBANON F23_.;
MPRINT(EM_DIAGRAM):   format LEBANON F23_.;
34989      format MASS F24_.;
MPRINT(EM_DIAGRAM):   format MASS F24_.;
34990      format MED F25_.;
MPRINT(EM_DIAGRAM):   format MED F25_.;
34991      format MEDIC F26_.;
MPRINT(EM_DIAGRAM):   format MEDIC F26_.;
34992      format MODIFI F27_.;
MPRINT(EM_DIAGRAM):   format MODIFI F27_.;
34993      format PALESTINIAN F28_.;
MPRINT(EM_DIAGRAM):   format PALESTINIAN F28_.;
34994      format RIND F29_.;
MPRINT(EM_DIAGRAM):   format RIND F29_.;
34995      format SERA F30_.;
MPRINT(EM_DIAGRAM):   format SERA F30_.;
34996      format SERDAR F31_.;
MPRINT(EM_DIAGRAM):   format SERDAR F31_.;
34997      format SHAME F32_.;
MPRINT(EM_DIAGRAM):   format SHAME F32_.;
34998      format SKEPTIC F33_.;
MPRINT(EM_DIAGRAM):   format SKEPTIC F33_.;
34999      format SOLDIER F34_.;
MPRINT(EM_DIAGRAM):   format SOLDIER F34_.;
35000      format SOUND F35_.;
MPRINT(EM_DIAGRAM):   format SOUND F35_.;
35001      format SURREND F36_.;
MPRINT(EM_DIAGRAM):   format SURREND F36_.;
35002      format TALK F37_.;
MPRINT(EM_DIAGRAM):   format TALK F37_.;
35003      format TERROR F38_.;
MPRINT(EM_DIAGRAM):   format TERROR F38_.;
35004      format TURK F39_.;
MPRINT(EM_DIAGRAM):   format TURK F39_.;
35005      format TURKISH F40_.;
MPRINT(EM_DIAGRAM):   format TURKISH F40_.;
35006      format ZUMA F41_.;
MPRINT(EM_DIAGRAM):   format ZUMA F41_.;
35007      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           1.23 seconds
      cpu time            1.15 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: The data set WORK.TEMPFREQ has 1745 observations and 52 variables.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           1.27 seconds
      cpu time            1.20 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
35008      quit;
35009      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
35010      data EMWS3.Clus_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data EMWS3.Clus_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
35011      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" _SEGMENT_ = "Segment Variable" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
35012         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
35013         "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" _SEGMENT_ = "Segment Variable" Type = "Tipo" _X_ = "Valor numérico" _XLABEL_ = "Valor formateado" COUNT = "Número de ocurrencias" PERCENT = "Porcentaje";
35014      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
35015      varnum = varnum(dsid, 'ROWVARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'ROWVARIABLE');
35016      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
35017      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
35018      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
35019      bynum = varnum(dsid, "_SEGMENT_");
MPRINT(EM_DIAGRAM):   bynum = varnum(dsid, "_SEGMENT_");
35020      length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
MPRINT(EM_DIAGRAM):   length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
35021      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
35022      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
35023      percent = getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent = getvarn(dsid, pvarnum);
35024      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
35025      varblnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   varblnum = varnum(dsid, _VARIABLE_);
35026      _SEGMENT_ = getvarn(dsid, bynum);
MPRINT(EM_DIAGRAM):   _SEGMENT_ = getvarn(dsid, bynum);
35027      type = vartype(dsid, varblnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, varblnum);
35028      varformat = varfmt(dsid, varblnum);
MPRINT(EM_DIAGRAM):   varformat = varfmt(dsid, varblnum);
35029      if varformat eq '' then varformat = 'best12.';
MPRINT(EM_DIAGRAM):   if varformat eq '' then varformat = 'best12.';
35030      _X_=.;
MPRINT(EM_DIAGRAM):   _X_=.;
35031      if type = 'N' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
35032      _X_ = getvarn(dsid, varblnum);
MPRINT(EM_DIAGRAM):   _X_ = getvarn(dsid, varblnum);
35033      _XLABEL_ = left(putn(_X_, varformat));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(putn(_X_, varformat));
35034      end;
MPRINT(EM_DIAGRAM):   end;
35035      else _XLABEL_ = getvarc(dsid, varblnum);
MPRINT(EM_DIAGRAM):   else _XLABEL_ = getvarc(dsid, varblnum);
35036      if getvarc(dsid, typenum) = '11' then output;
MPRINT(EM_DIAGRAM):   if getvarc(dsid, typenum) = '11' then output;
35037      end;
MPRINT(EM_DIAGRAM):   end;
35038      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
35039      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS3.CLUS_PROFILE has 1232 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.01 seconds
 
 
35040      proc sort data=EMWS3.Clus_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus_PROFILE NOTHREADS;
35041      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
35042      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1232 observations read from the data set EMWS3.CLUS_PROFILE.
NOTE: The data set EMWS3.CLUS_PROFILE has 1232 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35043      proc means data=EMWS3.Clus_PROFILE noprint missing NWAY;
MPRINT(EM_DIAGRAM):   proc means data=EMWS3.Clus_PROFILE noprint missing NWAY;
35044      class _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   class _VARIABLE_ _SEGMENT_;
35045      var COUNT;
MPRINT(EM_DIAGRAM):   var COUNT;
35046      output out=WORK.Clus_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
MPRINT(EM_DIAGRAM):   output out=WORK.Clus_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
35047      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1232 observations read from the data set EMWS3.CLUS_PROFILE.
NOTE: The data set WORK.CLUS_STATCOUNT has 164 observations and 3 variables.
NOTE: PROCEDURE MEANS ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
35048      proc sort data=WORK.Clus_STATCOUNT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_STATCOUNT NOTHREADS;
35049      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
35050      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 164 observations read from the data set WORK.CLUS_STATCOUNT.
NOTE: The data set WORK.CLUS_STATCOUNT has 164 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
35051      data EMWS3.Clus_PROFILE(drop=SUM);
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_PROFILE(drop=SUM);
35052      label BYPERCENT= "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE, _SEGMENT_))";
MPRINT(EM_DIAGRAM):   label BYPERCENT= "Porcentaje";
35053      merge EMWS3.Clus_PROFILE WORK.Clus_STATCOUNT;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus_PROFILE WORK.Clus_STATCOUNT;
35054      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
35055      if SUM ne . then BYPERCENT = 100*COUNT/SUM;
MPRINT(EM_DIAGRAM):   if SUM ne . then BYPERCENT = 100*COUNT/SUM;
35056      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1232 observations read from the data set EMWS3.CLUS_PROFILE.
NOTE: There were 164 observations read from the data set WORK.CLUS_STATCOUNT.
NOTE: The data set EMWS3.CLUS_PROFILE has 1232 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35057      proc sort data=EMWS3.Clus_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS3.Clus_PROFILE NOTHREADS;
35058      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
35059      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1232 observations read from the data set EMWS3.CLUS_PROFILE.
NOTE: The data set EMWS3.CLUS_PROFILE has 1232 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35060      proc sort data=WORK.M1T87U94;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1T87U94;
35061      by Name;
MPRINT(EM_DIAGRAM):   by Name;
35062      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK.M1T87U94.
NOTE: The data set WORK.M1T87U94 has 42 observations and 21 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35063      data EMWS3.Clus_PROFILE;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_PROFILE;
35064      merge EMWS3.Clus_PROFILE(in=_a) WORK.M1T87U94(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus_PROFILE(in=_a) WORK.M1T87U94(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
35065      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
35066      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Rol";
35067      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Etiqueta";
35068      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
35069      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 1232 observations read from the data set EMWS3.CLUS_PROFILE.
NOTE: There were 42 observations read from the data set WORK.M1T87U94.
NOTE: The data set EMWS3.CLUS_PROFILE has 1232 observations and 10 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
35070      proc sort data=EMWS3.Clus_PROFILE;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS3.Clus_PROFILE;
35071      by _SEGMENT_ _VARIABLE_ _X_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_ _X_;
35072      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1232 observations read from the data set EMWS3.CLUS_PROFILE.
NOTE: The data set EMWS3.CLUS_PROFILE has 1232 observations and 10 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
35073      data EMWS3.Clus_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
35074      set EMWS3.Clus_PROFILE;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus_PROFILE;
35075      retain orderedValue 0;
MPRINT(EM_DIAGRAM):   retain orderedValue 0;
35076      label OrderedValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_OrderedValue_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedValue = "Valores ordenados";
35077      by _SEGMENT_ _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_;
35078      if first._variable_ then orderedValue=1;
MPRINT(EM_DIAGRAM):   if first._variable_ then orderedValue=1;
35079      else orderedValue+1;
MPRINT(EM_DIAGRAM):   else orderedValue+1;
35080      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1232 observations read from the data set EMWS3.CLUS_PROFILE.
NOTE: The data set EMWS3.CLUS_PROFILE has 1232 observations and 11 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35081      proc transpose data=EMWS3.Clus_OUTVAR out=WORK.Clus_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS3.Clus_OUTVAR out=WORK.Clus_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
35082      var ABSOLUT--ZUMA;
MPRINT(EM_DIAGRAM):   var ABSOLUT--ZUMA;
35083      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
35084      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS3.CLUS_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS_OUTVAR has 1204 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
35085      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
35086      * Clus: variables DMVQ;
MPRINT(EM_DIAGRAM):   * Clus: variables DMVQ;
35087      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
35088      %macro dmvqvars;
35089          ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT
35090         ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI
35091         ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW
35092         ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI
35093         APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA
35094         ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN
35095         ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
35096         BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER
35097         BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON
35098         BOUGHT BOULDER BOX BRAD BRAIN BRAND BREAK BRIAN BRING BRITISH BROWN BTW BUFFER
35099         BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN
35100         CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
35101         CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI
35102         CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI
35103         CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR
35104         CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN
35105         COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
35106         COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET
35107         CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT
35108         CONTACT CONTENT CONTEXT CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP
35109         CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN
35110         CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL
35111         DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT
35112         DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL
35113         DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO
35114         DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS
35115         DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON
35116         DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
35117         EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
35118         ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP
35119         ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT
35120         EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE
35121         FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
35122         FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU
35123         FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE
35124         FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND FULL FUNCTION FUTUR GAIN GAME
35125         GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI
35126         GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG
35127         GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
35128         HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT
35129         HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER
35130         HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD
35131         HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT
35132         IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT
35133         INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC
35134         INTERGRAPH INTERN INTERNET INTERVIEW INVENT INVOLV IRAN IRVIN ISLAM ISLAND ISN
35135         ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH
35136         JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD
35137         KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL
35138         LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV
35139         LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT
35140         LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
35141         LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN
35142         MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR
35143         MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON
35144         MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL MIDDL MIGRAIN
35145         MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL
35146         MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG
35147         MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI
35148         NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW
35149         NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER
35150         OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
35151         OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL
35152         OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN
35153         PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD
35154         PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL
35155         PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT
35156         POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER
35157         POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU
35158         PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM
35159         PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC
35160         PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST RADAR
35161         RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
35162         RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL
35163         RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR
35164         RESEARCH RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN
35165         REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST
35166         RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE
35167         SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU
35168         SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT
35169         SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME
35170         SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT SHOULDN SHOW SICK SIDE SIGN
35171         SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN
35172         SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC
35173         SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI
35174         STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN
35175         STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB
35176         SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS
35177         SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL
35178         TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL
35179         TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE
35180         THEORI THERAPI THERE THEY THINK THOMA THOUGHT THREAD THROW THU TIM TIME TIMER
35181         TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE
35182         TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
35183         TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV
35184         UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL
35185         VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG
35186         WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
35187         WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON
35188         WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
35189         XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG
35190         ZIONISM ZIONIST ZUMA
35191      %mend ;
35192
35193
 
35194      data WORK.Clus_temp;
MPRINT(EM_DIAGRAM):    data WORK.Clus_temp;
35195      set EMWS3.Clus_OUTMEAN;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus_OUTMEAN;
35196      _idvar_=left(put(_SEGMENT_,4.));
MPRINT(EM_DIAGRAM):   _idvar_=left(put(_SEGMENT_,4.));
35197      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS3.CLUS_OUTMEAN.
NOTE: The data set WORK.CLUS_TEMP has 4 observations and 1214 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35198      proc distance data=WORK.Clus_temp out=EMWS3.Clus_DISTANCE method=l(2) shape=square;
MPRINT(EM_DIAGRAM):   proc distance data=WORK.Clus_temp out=EMWS3.Clus_DISTANCE method=l(2) shape=square;
35199      id _idvar_;
MPRINT(EM_DIAGRAM):   id _idvar_;
35200      var interval(%dmvqvars);
MPRINT(EM_DIAGRAM):   var interval(
MPRINT(DMVQVARS):  ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW
ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN ATHENA ATTACH ATTACK
ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL
CHARACT CHARG CHASTITI CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN COLOR
COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT
CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD
DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG
DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI
FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND
FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD HUMAN HUNTSVIL ICON IDEA
IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB
LABEL LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG LONGER LOOK LOOP LOST
LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD
METHODOLOG MICHAEL MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR
NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM OMRAN OPEN
OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE
PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID
PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST
RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH
RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC
SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK
SPOT STAI STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS SURGERI
SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK
THOMA THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN
UNDERSTAND UNIT UNIV UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(EM_DIAGRAM):  );
35201      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS3.CLUS_DISTANCE has 4 observations and 5 variables.
NOTE: PROCEDURE DISTANCE ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
35202      proc mds data=EMWS3.Clus_DISTANCE out=WORK.Clus_mds level=absolute nohist shape=square dim=3;
MPRINT(EM_DIAGRAM):    proc mds data=EMWS3.Clus_DISTANCE out=WORK.Clus_mds level=absolute nohist shape=square dim=3;
35203      object _idvar_;
MPRINT(EM_DIAGRAM):   object _idvar_;
35204      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Convergence assumed because the badness-of-fit criterion 1.924725E-16 is less than or equal to MINCRIT=1E-6.
NOTE: The data set WORK.CLUS_MDS has 5 observations and 8 variables.
NOTE: PROCEDURE MDS ha utilizado (Tiempo de proceso total):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
35205      quit;
35206      data WORK.Clus_mds;
MPRINT(EM_DIAGRAM):   data WORK.Clus_mds;
35207      set WORK.Clus_mds;
MPRINT(EM_DIAGRAM):   set WORK.Clus_mds;
35208      if _type_ ne 'CONFIG' then delete;
MPRINT(EM_DIAGRAM):   if _type_ ne 'CONFIG' then delete;
35209      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.CLUS_MDS.
NOTE: The data set WORK.CLUS_MDS has 4 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35210      data WORK.Clus_mds(label="&label" keep=_idvar_ _radius_ dim1 dim2 dim3);
WARNING: Apparent symbolic reference LABEL not resolved.
MPRINT(EM_DIAGRAM):   data WORK.Clus_mds(label="&label" KEEP=_idvar_ _radius_ dim1 dim2 dim3);
35211      merge WORK.Clus_temp WORK.Clus_mds;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_temp WORK.Clus_mds;
35212      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.CLUS_TEMP.
NOTE: There were 4 observations read from the data set WORK.CLUS_MDS.
NOTE: The data set WORK.CLUS_MDS has 4 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35213      goptions reset=all device=PNG;
MPRINT(EM_DIAGRAM):   goptions reset=all device=PNG;
35214      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
35215      title1 "%sysfunc(sasmsg(sashelp.dmine, rpt_ClusterDistance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title1 "Proximidades clúster";
35216      %plotit(data=WORK.Clus_mds, datatype=mds, radii=_radius_, labelvar=_idvar_, symtype=circle, symbols='*', gout=WORK.Clus, gname=DISTANCE, gopts2=nodisplay, gopts=device=GIF, gopplot=cback=white, titlecol=black, labelcol=black, tickcol=black,
MPRINT(EM_DIAGRAM):   *------debugging routine to dump out macro variables------;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):  *=========================== Macro Start =============================;
35217         framecol=black, post=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD1612_MIIKYMEDIA_\Prc2\plotit.ps);
MPRINT(PLOTIT):   options nonotes;
MPRINT(PLOTIT):   options missing='.';
MPRINT(PLOTIT):   options noserror;
MPRINT(PLOTIT):   options serror;
MPRINT(PLOTIT):   *------store starting time, initialize a few variables-------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   length name $ 8 __debug value $ 500 glob $ 32767;
MPRINT(PLOTIT):   __time = datetime();
MPRINT(PLOTIT):   call symput('start',compress(put(__time,best15.)));
MPRINT(PLOTIT):   *------override parameters?-------;
MPRINT(PLOTIT):   glob = left(symget('plotitop'));
MPRINT(PLOTIT):   if glob ne ' ' then put 'Overridden Parameters:';
MPRINT(PLOTIT):   do while(glob ne ' ');
MPRINT(PLOTIT):   i = index(glob, '=');
MPRINT(PLOTIT):   name = substr(glob, 1, i - 1);
MPRINT(PLOTIT):   glob = left(substr(glob, i + 1));
MPRINT(PLOTIT):   i = index(glob, ',');
MPRINT(PLOTIT):   if i = 0 then i = length(glob) + 1;
MPRINT(PLOTIT):   value = substr(glob, 1, i);
MPRINT(PLOTIT):   value = translate(value, ' ', ',');
MPRINT(PLOTIT):   glob = left(substr(glob, i + 1));
MPRINT(PLOTIT):   put name +(-1) '=' value;
MPRINT(PLOTIT):   call symput(name, trim(value));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------debugging flags-------;
MPRINT(PLOTIT):   __debug = symget('debug');
MPRINT(PLOTIT):   call symput('dbyes' ,compress(put(index(__debug,'vars') ,3.)));
MPRINT(PLOTIT):   call symput('dbprint' ,compress(put(index(__debug,'dprint'),3.)));
MPRINT(PLOTIT):   call symput('dbtime' ,compress(put(index(__debug,'time') ,3.)));
MPRINT(PLOTIT):   call symput('dbmprint',compress(put(index(__debug,'mprint'),3.)));
MPRINT(PLOTIT):   if (sysprod('stat') + sysprod('graph')) ne 2 then do;
MPRINT(PLOTIT):   put 'ERROR: SAS/STAT and SAS/GRAPH must be licensed ' 'to run this macro.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if symget('style') ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: STYLE= is not supported in this release of the macro.' / '       Use OPTIONS NOGSTYLE to get the old appearance.' / '       Typically, you should set a style ' 'on the ODS destination.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   length s $ 20;
MPRINT(PLOTIT):   retain s ' ';
MPRINT(PLOTIT):   file print;
MPRINT(PLOTIT):   set sashelp.vdest;
MPRINT(PLOTIT):   notb = style ne ' ';
MPRINT(PLOTIT):   style = lowcase(style);
MPRINT(PLOTIT):   if style eq 'listing' and s eq ' ' then call symputx('style', style, 'L');
MPRINT(PLOTIT):   else if style ne 'listing' and notb then do;
MPRINT(PLOTIT):   if s eq ' ' then s = style;
MPRINT(PLOTIT):   else if style ne s then do;
MPRINT(PLOTIT):   file log;
MPRINT(PLOTIT):   put 'ERROR: Multiple non-listing destinations with ' 'multiple ' 'styles ' 'are ' 'open.';
MPRINT(PLOTIT):   call symput('abort', '2');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if s ne ' ' then call symputx('style', s, 'L');
MPRINT(PLOTIT):   if _error_ then call symput('abort', '1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   *------mention var names for ordinary SAS syntax check-------;
MPRINT(PLOTIT):   retain _idvar_ __junk 0;
MPRINT(PLOTIT):   array __1 _idvar_ __junk;
MPRINT(PLOTIT):   *------guard against silly n-literals------;
MPRINT(PLOTIT):   if length(symget('labelvar')) > 67 or length(symget('symvar')) > 67 or length(symget('typevar')) > 67 then do;
MPRINT(PLOTIT):   put 'ERROR: Your names are too long!';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store current linesize and pagesize to restore later------;
MPRINT(PLOTIT):   length __ls __ps __var sysscp $ 8 ;
MPRINT(PLOTIT):   __num = getoption('number');
MPRINT(PLOTIT):   __ls = getoption('linesize');
MPRINT(PLOTIT):   __ps = getoption('pagesize');
MPRINT(PLOTIT):   __lab = getoption('label');
MPRINT(PLOTIT):   __var = getoption('validvarname');
MPRINT(PLOTIT):   __page = input(__ps, 8.);
MPRINT(PLOTIT):   if __page < 200 then __logps = __page + 1;
MPRINT(PLOTIT):   else __logps = 200;
MPRINT(PLOTIT):   if __logps < 20 then __logps = 20;
MPRINT(PLOTIT):   call symput('v7' , put(index(__var, '6') eq 0, 1.));
MPRINT(PLOTIT):   call symput('restornum',compress(__num));
MPRINT(PLOTIT):   call symput('restorla', compress(__lab));
MPRINT(PLOTIT):   call symput('restorls', compress(__ls));
MPRINT(PLOTIT):   call symput('restorps', compress(__ps));
MPRINT(PLOTIT):   call symput('logps' , compress(put(__logps, best8.)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   options label;
MPRINT(PLOTIT):   *------start parameter checking, initialization------;
MPRINT(PLOTIT):   *------initialization------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length data f1-f11 $ 72 name $ 70 post opts datatype plotvars $ 500 filepref $ 32;
MPRINT(PLOTIT):   ok = 1;
MPRINT(PLOTIT):   *------change other options based on GSTYLE/NOGSTYLE------;
MPRINT(PLOTIT):   if upcase(symget('style')) ne ' ' then do;
MPRINT(PLOTIT):   if symget('font') eq ' ' then call symput('font', 'none');
MPRINT(PLOTIT):   if symget('tickaxes') eq ' ' then call symput('tickaxes', 'LBFh');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   if symget('font') eq ' ' then call symput('font', 'swiss');
MPRINT(PLOTIT):   if symget('tickaxes') eq ' ' then call symput('tickaxes', 'LRTBFlb');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   datatype = upcase(symget('datatype'));
MPRINT(PLOTIT):   *------start setting up background color, border------;
MPRINT(PLOTIT):   opts = lowcase(symget('options'));
MPRINT(PLOTIT):   call symput('noback', put(index(opts, 'noback') ge 1, 1.));
MPRINT(PLOTIT):   if symget('noback') eq '1' then call symput('cframe', ' ');
MPRINT(PLOTIT):   if index(opts, 'noborder') then b = '0';
MPRINT(PLOTIT):   else if index(opts, 'border') then b = '1';
MPRINT(PLOTIT):   else if upcase(symget('style')) eq ' ' then b = '0';
MPRINT(PLOTIT):   else b = '1';
MPRINT(PLOTIT):   call symput('border', b);
MPRINT(PLOTIT):   *------initialize some macro variables------;
MPRINT(PLOTIT):   call symput('onetype','1');
MPRINT(PLOTIT):   call symput('singular','1e-8');
MPRINT(PLOTIT):   call symput('allblank','1');
MPRINT(PLOTIT):   call symput('botblank','0');
MPRINT(PLOTIT):   call symput('nlines' ,'0');
MPRINT(PLOTIT):   call symput('symnumer','0');
MPRINT(PLOTIT):   call symput('typenum' ,'0');
MPRINT(PLOTIT):   call symput('search' ,' ');
MPRINT(PLOTIT):   call symput('actualls','-1');
MPRINT(PLOTIT):   call symput('symdummy','#');
MPRINT(PLOTIT):   call symput('paintcol',' ');
MPRINT(PLOTIT):   call symput('paintmin','.');
MPRINT(PLOTIT):   call symput('paintmax','.');
MPRINT(PLOTIT):   call symput('paintnum','0');
MPRINT(PLOTIT):   call symput('ncontour','0');
MPRINT(PLOTIT):   call symput('hcontour','0');
MPRINT(PLOTIT):   call symput('vcontour','0');
MPRINT(PLOTIT):   call symput('hcondir ','0');
MPRINT(PLOTIT):   call symput('vcondir ','0');
MPRINT(PLOTIT):   call symput('looklist','0');
MPRINT(PLOTIT):   call symput('sizsquar','1');
MPRINT(PLOTIT):   call symput('ntitles' ,'0');
MPRINT(PLOTIT):   call symput('device' ,symget('sysdevic'));
MPRINT(PLOTIT):   call symput('datatype',trim(datatype));
MPRINT(PLOTIT):   call symput('listtitl','*** Wrapped Listing of Point Locations ***');
MPRINT(PLOTIT):   *------set vector scale factor------;
MPRINT(PLOTIT):   name = ' ';
MPRINT(PLOTIT):   do i = 5 to 2 by -1;
MPRINT(PLOTIT):   if name = ' ' then name = scan(datatype,i,' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if name = ' ' or nmiss(input(name,?? 32.)) then name = '1';
MPRINT(PLOTIT):   call symput('biplot',trim(name));
MPRINT(PLOTIT):   *------make sure there are input data------;
MPRINT(PLOTIT):   data = left(upcase(symget('data')));
MPRINT(PLOTIT):   if data in (' ' '_LAST_') then do;
MPRINT(PLOTIT):   data = symget('syslast');
MPRINT(PLOTIT):   call symput('data',trim(data));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if data = '_NULL_' then do;
MPRINT(PLOTIT):   put 'ERROR: No input data set.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set default file name------;
MPRINT(PLOTIT):   post = symget('post');
MPRINT(PLOTIT):   if post = ' ' then do;
MPRINT(PLOTIT):   sysscp = symget('sysscp');
MPRINT(PLOTIT):   filepref = symget('filepref');
MPRINT(PLOTIT):   if filepref = ' ' then filepref = 'sasplot';
MPRINT(PLOTIT):   if sysscp = 'CMS' then post = trim(filepref) || ' ' || 'ps';
MPRINT(PLOTIT):   else if sysscp =: 'VMS' or sysscp = 'WIN' or sysscp = 'OS2' then post = trim(filepref) || '.' || 'ps';
MPRINT(PLOTIT):   else post = '.' || trim(filepref) || '.' || 'ps';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('post', trim(post));
MPRINT(PLOTIT):   *------some options cannot have null values------;
MPRINT(PLOTIT):   if symget('out') = ' ' then call symput('out' ,'anno');
MPRINT(PLOTIT):   if symget('tempdat1') = ' ' then call symput('tempdat1','tempdat1');
MPRINT(PLOTIT):   if symget('tempdat2') = ' ' then call symput('tempdat2','tempdat2');
MPRINT(PLOTIT):   if symget('tempdat3') = ' ' then call symput('tempdat3','tempdat3');
MPRINT(PLOTIT):   if symget('tempdat4') = ' ' then call symput('tempdat4','tempdat4');
MPRINT(PLOTIT):   if symget('tempdat5') = ' ' then call symput('tempdat5','tempdat5');
MPRINT(PLOTIT):   if symget('tempdat6') = ' ' then call symput('tempdat6','tempdat6');
MPRINT(PLOTIT):   if symget('regdat') = ' ' then call symput('regdat' ,'regdat');
MPRINT(PLOTIT):   if symget('preproc') = ' ' then call symput('preproc' ,'preproc');
MPRINT(PLOTIT):   if symget('extraobs') = ' ' then call symput('extraobs','extraobs');
MPRINT(PLOTIT):   if symget('radii') = ' ' then call symput('radii' ,'1, 2');
MPRINT(PLOTIT):   if symget('cirsegs') = ' ' then call symput('cirsegs' ,'.1');
MPRINT(PLOTIT):   if symget('cursegs') = ' ' then call symput('cursegs' ,'200');
MPRINT(PLOTIT):   if symget('maxiter') = ' ' then call symput('maxiter' ,'15');
MPRINT(PLOTIT):   if symget('lsinc') = ' ' then call symput('lsinc' ,'15');
MPRINT(PLOTIT):   if symget('place') = ' ' then call symput('place' ,'2 search');
MPRINT(PLOTIT):   if symget('symlen') = ' ' then call symput('symlen' ,'1');
MPRINT(PLOTIT):   if symget('ls') = ' ' then call symput('ls','compute search');
MPRINT(PLOTIT):   if symget('maxokpen') = ' ' then call symput('maxokpen','0');
MPRINT(PLOTIT):   if symget('ticklen') = ' ' then call symput('ticklen' ,'1.5');
MPRINT(PLOTIT):   if symget('tickfor') = ' ' then call symput('tickfor' ,'32.');
MPRINT(PLOTIT):   if symget('hnobs') = ' ' then call symput('hnobs' ,'0');
MPRINT(PLOTIT):   if symget('vnobs') = ' ' then call symput('vnobs' ,'0');
MPRINT(PLOTIT):   *------is radii a variable name?------;
MPRINT(PLOTIT):   name = upcase(substr(left(symget('radii')),1,1));
MPRINT(PLOTIT):   call symput('radname', put('A' <= name <= 'Z' or name = '_' or name = '"' or name = "'", 1.));
MPRINT(PLOTIT):   *------always use a formchar------;
MPRINT(PLOTIT):   call symput('procopts', trim(symget('procopts')) || " formchar='|----|+|---'");
MPRINT(PLOTIT):   *------was TYPES= specified?------;
MPRINT(PLOTIT):   call symput('typespec', put(symget('types') ne ' ',1.));
MPRINT(PLOTIT):   *------set default plotvars------;
MPRINT(PLOTIT):   plotvars = symget('plotvars');
MPRINT(PLOTIT):   if plotvars = ' ' then do;
MPRINT(PLOTIT):   if index(datatype,'MDS') or index(datatype,'MCA') or index(datatype,'ROW') or index(datatype,'COLUMN') or index(datatype,'CORRESP') then plotvars = 'Dim2 Dim1';
MPRINT(PLOTIT):   else if index(datatype,'MDPREF') or index(datatype,'VECTOR') or index(datatype,'IDEAL') then plotvars = 'Prin2 Prin1';
MPRINT(PLOTIT):   call symput('plotvars',trim(plotvars));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check for conflicting data set names------;
MPRINT(PLOTIT):   f1 = left(upcase(symget('data')));
MPRINT(PLOTIT):   f2 = left(upcase(symget('out')));
MPRINT(PLOTIT):   f3 = left(upcase(symget('tempdat1')));
MPRINT(PLOTIT):   f4 = left(upcase(symget('tempdat2')));
MPRINT(PLOTIT):   f5 = left(upcase(symget('tempdat3')));
MPRINT(PLOTIT):   f6 = left(upcase(symget('tempdat4')));
MPRINT(PLOTIT):   f7 = left(upcase(symget('tempdat5')));
MPRINT(PLOTIT):   f8 = left(upcase(symget('tempdat6')));
MPRINT(PLOTIT):   f9 = left(upcase(symget('preproc')));
MPRINT(PLOTIT):   f10 = left(upcase(symget('extraobs')));
MPRINT(PLOTIT):   f11 = left(upcase(symget('regdat')));
MPRINT(PLOTIT):   opts = 'DATA OUT TEMPDAT1 TEMPDAT2 TEMPDAT3 TEMPDAT4 TEMPDAT5 ' || 'TEMPDAT6 PREPROC EXTRAOBS REGDAT';
MPRINT(PLOTIT):   array f[11] f1-f11;
MPRINT(PLOTIT):   do i = 1 to 11;
MPRINT(PLOTIT):   if f[i] =: 'WORK.' then f[i] = substr(f[i],6);
MPRINT(PLOTIT):   __name = f[i];
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   f[i] = __name;
MPRINT(PLOTIT):   do j = 1 to (i - 1);
MPRINT(PLOTIT):   if f[i] = f[j] then do;
MPRINT(PLOTIT):   oi = scan(opts,i,' ');
MPRINT(PLOTIT):   oj = scan(opts,j,' ');
MPRINT(PLOTIT):   put 'ERROR: Data sets ' oi +(-1) '=' f[i] 'and ' oj +(-1) '=' f[j] 'must be different.';
MPRINT(PLOTIT):   if oj = 'DATA' then put 'WARNING: You may have not specified DATA=.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not ok or _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   norm: * Normalize name, upper case, strip n-literals. * Input: __name * Output: __name (updated) * Sample usage: * __name = '"a b"n';
MPRINT(PLOTIT):   * link norm;
MPRINT(PLOTIT):   * Creates: __name = 'A B';
MPRINT(PLOTIT):   __name = upcase(__name);
MPRINT(PLOTIT):   if substr(__name,1,1) in ("'", '"') then __name = dequote(__name);
MPRINT(PLOTIT):   drop __name;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------store input data set variable names------;
MPRINT(PLOTIT):   proc contents data=WORK.Clus_mds noprint out=tempdat1;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sort data=tempdat1(keep=varnum type name);
MPRINT(PLOTIT):   by varnum;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------look for the type variable, plot variables------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length tvname vplotvar hplotvar upname vnormvar hnormvar pnormvar snormvar $ 70 __list plotvars __name $ 500 __c $ 1;
MPRINT(PLOTIT):   retain tvname vplotvar hplotvar hnormvar vnormvar pnormvar snormvar ' ' ok 1 vfound hfound pfound sfound 0;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   f = (index(symget('datatype'), 'FUNCTION') or index(upcase(symget('symtype')), 'FUNCTION'));
MPRINT(PLOTIT):   call symput('functype', put(f, 1.));
MPRINT(PLOTIT):   __name = symget('typevar');
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   tvname = __name;
MPRINT(PLOTIT):   __list = symget('plotvars');
MPRINT(PLOTIT):   __n = 1;
MPRINT(PLOTIT):   plotvars = __list;
MPRINT(PLOTIT):   link namescan;
MPRINT(PLOTIT):   vplotvar = __name;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   vnormvar = __name;
MPRINT(PLOTIT):   link namescan;
MPRINT(PLOTIT):   hplotvar = __name;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   hnormvar = __name;
MPRINT(PLOTIT):   __name = symget('labelvar');
MPRINT(PLOTIT):   pfound = (lowcase(__name) eq '_blank_' or __name eq ' ');
MPRINT(PLOTIT):   if not pfound then do;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   pnormvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __name = symget('symvar');
MPRINT(PLOTIT):   sfound = (lowcase(__name) eq '_symbol_' or __name eq ' ' or lowcase(__name) eq "'00'x" or lowcase(__name) eq '"00"x');
MPRINT(PLOTIT):   if not sfound then do;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   snormvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __list = symget('paint');
MPRINT(PLOTIT):   link namescan;
MPRINT(PLOTIT):   call symput('paintvar',trim(__name));
MPRINT(PLOTIT):   call symput('paint' ,trim(__list));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set tempdat1 end=eof;
MPRINT(PLOTIT):   upname = upcase(name);
MPRINT(PLOTIT):   if upname = tvname or (tvname = ' ' and upname = '_TYPE_') then do;
MPRINT(PLOTIT):   if tvname = ' ' then call symput('typevar','_type_');
MPRINT(PLOTIT):   if (type = 1) then call symput('typenum','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------plotting variables must be numeric------;
MPRINT(PLOTIT):   if (upname = hnormvar or upname = vnormvar) and type = 2 then do;
MPRINT(PLOTIT):   put 'ERROR: PLOTVARS=' plotvars 'must be numeric.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set default plotting variables if not set yet------;
MPRINT(PLOTIT):   if type = 1 then do;
MPRINT(PLOTIT):   if hplotvar = ' ' then do;
MPRINT(PLOTIT):   hplotvar = name;
MPRINT(PLOTIT):   hnormvar = upname;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if vplotvar = ' ' then do;
MPRINT(PLOTIT):   vplotvar = name;
MPRINT(PLOTIT):   vnormvar = upname;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------make sure axis variables are found------;
MPRINT(PLOTIT):   if upname = hnormvar then do;
MPRINT(PLOTIT):   hfound = 1;
MPRINT(PLOTIT):   __name = name;
MPRINT(PLOTIT):   link nliteral;
MPRINT(PLOTIT):   hplotvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if upname = vnormvar then do;
MPRINT(PLOTIT):   vfound = 1;
MPRINT(PLOTIT):   __name = name;
MPRINT(PLOTIT):   link nliteral;
MPRINT(PLOTIT):   vplotvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if upname = pnormvar then pfound = 1;
MPRINT(PLOTIT):   if upname = snormvar then sfound = 1;
MPRINT(PLOTIT):   *------at end, output results------;
MPRINT(PLOTIT):   if eof then do;
MPRINT(PLOTIT):   call symput('vplotvar',trim(vplotvar));
MPRINT(PLOTIT):   call symput('hplotvar',trim(hplotvar));
MPRINT(PLOTIT):   __list = trim(hplotvar) || ' ' || trim(vplotvar);
MPRINT(PLOTIT):   call symput('plotvars',trim(hplotvar) || ' ' || trim(vplotvar));
MPRINT(PLOTIT):   name = 'A' || vplotvar;
MPRINT(PLOTIT):   call symput('appvar1',trim(name));
MPRINT(PLOTIT):   if vplotvar = ' ' or hplotvar = ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: Not enough variables to plot.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not hfound then do;
MPRINT(PLOTIT):   put 'ERROR: Horizontal axis variable ' hplotvar 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not vfound then do;
MPRINT(PLOTIT):   put 'ERROR: Vertical axis variable ' vplotvar 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not pfound then do;
MPRINT(PLOTIT):   __name = symget('labelvar');
MPRINT(PLOTIT):   put 'ERROR: Label variable ' __name 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not sfound then do;
MPRINT(PLOTIT):   __name = symget('symvar');
MPRINT(PLOTIT):   put 'ERROR: Symbol variable ' __name 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if hnormvar = '_TYPE_' or vnormvar = '_TYPE_' then put 'WARNING: _TYPE_ is one of the axis variables.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not ok or _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   norm: * Normalize name, upper case, strip n-literals. * Input: __name * Output: __name (updated) * Sample usage: * __name = '"a b"n';
MPRINT(PLOTIT):   * link norm;
MPRINT(PLOTIT):   * Creates: __name = 'A B';
MPRINT(PLOTIT):   __name = upcase(__name);
MPRINT(PLOTIT):   if substr(__name,1,1) in ("'", '"') then __name = dequote(__name);
MPRINT(PLOTIT):   drop __name;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   nliteral: * Puts n-literal on name if necessary. * Input: __name * Output: __name (updated) * Sample usage: * __name = 'a b';
MPRINT(PLOTIT):   * link nliteral;
MPRINT(PLOTIT):   * Creates: __name = "'a b'n";
MPRINT(PLOTIT):   __v7 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789';
MPRINT(PLOTIT):   __len = length(__name);
MPRINT(PLOTIT):   if index(__name, ' ') < __len or '0' <= substr(__name, 1, 1) <= '9' or compress(upcase(__name), __v7) ne ' ' then do;
MPRINT(PLOTIT):   __k = 1;
MPRINT(PLOTIT):   do __i = 1 to length(__name);
MPRINT(PLOTIT):   if substr(__name, __k, 1) eq "'" then do;
MPRINT(PLOTIT):   substr(__name, __k + 1) = "'" || substr(__name, __k + 1);
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __name = "'" || trim(__name) || "'n";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   drop __name __i __k __v7 __len;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   namescan: * Returns nth name from a list. * Input: __list, __n * Output: __list, (trashed) * __name * Sample usage: * __list = 'a "b"n "C d"N d';
MPRINT(PLOTIT):   * __n = 2;
MPRINT(PLOTIT):   * link namescan;
MPRINT(PLOTIT):   * Creates: __name = '"b"n' * Notes: __name must have a length of at least 67. * a much longer length (say > 256) helps guard * against long, blank padded n-literals.;
MPRINT(PLOTIT):   __list = left(__list);
MPRINT(PLOTIT):   do __i = 1 to __n;
MPRINT(PLOTIT):   __c = substr(__list, 1, 1);
MPRINT(PLOTIT):   if trim(__c) in ("'", '"') then do;
MPRINT(PLOTIT):   __e = 0;
MPRINT(PLOTIT):   __len = length(__list);
MPRINT(PLOTIT):   do __k = 2 to __len until(__e);
MPRINT(PLOTIT):   if upcase(substr(__list, __k, 2)) in ("''", '""') then __k + 1;
MPRINT(PLOTIT):   else if upcase(substr(__list, __k, 2)) = compress(__c || 'N') then __e = __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else __e = index(__list, ' ') - 1;
MPRINT(PLOTIT):   if __e < 1 then __e = length(__list);
MPRINT(PLOTIT):   __name = substr(__list, 1, __e);
MPRINT(PLOTIT):   __list = left(substr(__list, __e + 2));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------guard against silly n-literals------;
MPRINT(PLOTIT):   if length(__name) > 67 then do;
MPRINT(PLOTIT):   put 'ERROR: Your names are too long!';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   drop __list __n __i __k __len __name __c __e;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------generate TYPES= list from data?------;
MPRINT(PLOTIT):   *------preliminary preprocessing that changes the data------;
MPRINT(PLOTIT):   data preproc;
MPRINT(PLOTIT):   set WORK.Clus_mds;
MPRINT(PLOTIT):   if n(Dim2,Dim1) = 2;
MPRINT(PLOTIT):   *------eliminate anti-ideal points------;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------get colors from style------;
MPRINT(PLOTIT):   data tempdat5 tempdat4 tempdat3 tempdat2;
MPRINT(PLOTIT):   length w c $ 20 n 8;
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat6 tempdat6(memtype=view);
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   * Set defaults based on options (from the pre-style days);
MPRINT(PLOTIT):   data tempdat6;
MPRINT(PLOTIT):   length w c $ 20;
MPRINT(PLOTIT):   w = 'parent      ';
MPRINT(PLOTIT):   n = ._;
MPRINT(PLOTIT):   c = ' ';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gaxis       ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('framecol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gborderlines';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('color');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata      ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('color');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcfit       ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('curvecol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'glabel      ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('labelcol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gtext       ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('titlecol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gwalls      ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('cframe');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata1     ';
MPRINT(PLOTIT):   n = 1;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata2     ';
MPRINT(PLOTIT):   n = 2;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata3     ';
MPRINT(PLOTIT):   n = 3;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata4     ';
MPRINT(PLOTIT):   n = 4;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata5     ';
MPRINT(PLOTIT):   n = 5;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata6     ';
MPRINT(PLOTIT):   n = 6;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata7     ';
MPRINT(PLOTIT):   n = 7;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata8     ';
MPRINT(PLOTIT):   n = 8;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata9     ';
MPRINT(PLOTIT):   n = 9;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata10    ';
MPRINT(PLOTIT):   n = 10;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata11    ';
MPRINT(PLOTIT):   n = 11;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata12    ';
MPRINT(PLOTIT):   n = 12;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   * Get values from style and style parents up to four levels;
MPRINT(PLOTIT):   proc template;
MPRINT(PLOTIT):   source styles.listing / file="C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD1612_MIIKYMEDIA_\Prc2\plotit.ps";
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat2(keep=w c n);
MPRINT(PLOTIT):   infile "C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD1612_MIIKYMEDIA_\Prc2\plotit.ps" lrecl=80 pad;
MPRINT(PLOTIT):   input line $80.;
MPRINT(PLOTIT):   length w c $ 20;
MPRINT(PLOTIT):   if _n_ eq 1 then call symput('abort', '0');
MPRINT(PLOTIT):   line = lowcase(line);
MPRINT(PLOTIT):   w = scan(line, 1, '"'' =');
MPRINT(PLOTIT):   c = left(scan(line, 2, '=;'));
MPRINT(PLOTIT):   if index(c, '(') then c = ' ';
MPRINT(PLOTIT):   if (w eq 'gaxis') or (w eq 'gtext') or (w eq 'parent') or (w eq 'glabel') or (w eq 'gcfit') or (index(line, 'gwalls') and not index(line, 'olor')) or (index(line, 'gborderlines') and not index(line, 'olor')) or (index(line, 'gcdata') and
not index(line, 'contrast'));
MPRINT(PLOTIT):   line = left(translate(line, '  ', '''"'));
MPRINT(PLOTIT):   n = input(scan(line, 3, 'a '), ?? 3.);
MPRINT(PLOTIT):   if w = 'parent' then do;
MPRINT(PLOTIT):   call symputx('style', scan(c, 2, '.'), 'L');
MPRINT(PLOTIT):   n = ._;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sort;
MPRINT(PLOTIT):   by n w;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc template;
MPRINT(PLOTIT):   source styles.default / file="C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD1612_MIIKYMEDIA_\Prc2\plotit.ps";
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat3(keep=w c n);
MPRINT(PLOTIT):   infile "C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD1612_MIIKYMEDIA_\Prc2\plotit.ps" lrecl=80 pad;
MPRINT(PLOTIT):   input line $80.;
MPRINT(PLOTIT):   length w c $ 20;
MPRINT(PLOTIT):   if _n_ eq 1 then call symput('abort', '0');
MPRINT(PLOTIT):   line = lowcase(line);
MPRINT(PLOTIT):   w = scan(line, 1, '"'' =');
MPRINT(PLOTIT):   c = left(scan(line, 2, '=;'));
MPRINT(PLOTIT):   if index(c, '(') then c = ' ';
MPRINT(PLOTIT):   if (w eq 'gaxis') or (w eq 'gtext') or (w eq 'parent') or (w eq 'glabel') or (w eq 'gcfit') or (index(line, 'gwalls') and not index(line, 'olor')) or (index(line, 'gborderlines') and not index(line, 'olor')) or (index(line, 'gcdata') and
not index(line, 'contrast'));
MPRINT(PLOTIT):   line = left(translate(line, '  ', '''"'));
MPRINT(PLOTIT):   n = input(scan(line, 3, 'a '), ?? 3.);
MPRINT(PLOTIT):   if w = 'parent' then do;
MPRINT(PLOTIT):   call symputx('style', scan(c, 2, '.'), 'L');
MPRINT(PLOTIT):   n = ._;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sort;
MPRINT(PLOTIT):   by n w;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat3;
MPRINT(PLOTIT):   merge tempdat6 tempdat5 tempdat4 tempdat3 tempdat2;
MPRINT(PLOTIT):   by n w;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   length list $ 200;
MPRINT(PLOTIT):   retain list ' ';
MPRINT(PLOTIT):   set tempdat3 end=eof;
MPRINT(PLOTIT):   if w eq 'gaxis' then do;
MPRINT(PLOTIT):   if symget('framecol') eq ' ' then call symputx('framecol', c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if w eq 'gtext' then do;
MPRINT(PLOTIT):   if symget('titlecol') eq ' ' then call symputx('titlecol', c, 'L');
MPRINT(PLOTIT):   if symget('tickcol') eq ' ' then call symputx('tickcol' , c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if w eq 'glabel' then do;
MPRINT(PLOTIT):   if symget('labelcol') eq ' ' then call symputx('labelcol', c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if w eq 'gcfit' then do;
MPRINT(PLOTIT):   if symget('curvecol') eq ' ' then call symputx('curvecol', c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not 0 and w eq 'gwalls' and symget('cframe') eq ' ' and c ne '_undef_' then call symputx('cframe', c, 'L');
MPRINT(PLOTIT):   else if 1 and w eq 'gborderlines' then call symput('border', c);
MPRINT(PLOTIT):   if 1 and w =: 'gcdata' then do;
MPRINT(PLOTIT):   if n = 1 then n = .;
MPRINT(PLOTIT):   else if n = . then n = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(n);
MPRINT(PLOTIT):   list = trim(list) || ' ' || c;
MPRINT(PLOTIT):   list = compbl(list);
MPRINT(PLOTIT):   if eof then call symput('colors', compbl(list));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------more initializations------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length name symvar $ 70 color framecol titlecol labelcol tickcol curvecol monochro font size name1-name2 tsize $ 12 anele anele2 $ 16 word $ 24 list list2 datatype types colors symbols symcol symtype symfont symsize labcol labfont
labsize britypes rgbtypes exttypes $ 500;
MPRINT(PLOTIT):   *------finalize border, border color------;
MPRINT(PLOTIT):   word = symget('border');
MPRINT(PLOTIT):   if word eq '1' then word = "black";
MPRINT(PLOTIT):   else if word eq '0' then word = ' ';
MPRINT(PLOTIT):   call symput('border', trim(word));
MPRINT(PLOTIT):   *------set default symbol variable------;
MPRINT(PLOTIT):   symvar = symget('symvar');
MPRINT(PLOTIT):   *------list of valid DATATYPE= values------;
MPRINT(PLOTIT):   array dts[15] corresp mca row column mdpref mdpref2 vector ideal mds curve curve2 function contour square symbol;
MPRINT(PLOTIT):   *------22 lists, 10 lists of ntypes elements, 9 single-element lists 3 longer lists------;
MPRINT(PLOTIT):   listn = 22;
MPRINT(PLOTIT):   listm = 10;
MPRINT(PLOTIT):   listo = 19;
MPRINT(PLOTIT):   array vars[22] $ types colors symbols symcol symtype symfont symsize labcol labfont labsize color framecol titlecol labelcol tickcol curvecol monochro font cframe britypes rgbtypes exttypes;
MPRINT(PLOTIT):   ok = 1;
MPRINT(PLOTIT):   *------check method------;
MPRINT(PLOTIT):   name = symget('method');
MPRINT(PLOTIT):   word = lowcase(compress(name,' 2'));
MPRINT(PLOTIT):   if not (word in ('gplot' 'print' 'plot' 'none')) then do;
MPRINT(PLOTIT):   put 'ERROR: METHOD=' name 'is not valid.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   call symput('method',trim(word));
MPRINT(PLOTIT):   if word = 'plot' then call symput('looklist', '1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------convert binary options ------;
MPRINT(PLOTIT):   list = lowcase(symget('options'));
MPRINT(PLOTIT):   call symput('diag' ,put(index(list,'diag') > 0,1.));
MPRINT(PLOTIT):   call symput('expand' ,put(index(list,'expand') > 0,1.));
MPRINT(PLOTIT):   call symput('closebord',put(index(list,'close') > 0,1.));
MPRINT(PLOTIT):   call symput('center' ,put(index(list,'nocenter') = 0,1.));
MPRINT(PLOTIT):   call symput('clip' ,put(index(list,'noclip') = 0,1.));
MPRINT(PLOTIT):   call symput('delete' ,put(index(list,'nodelete') = 0,1.));
MPRINT(PLOTIT):   call symput('linetext' ,put(index(list,'textline') = 0,1.));
MPRINT(PLOTIT):   call symput('squarplt' ,put(index(list,'square') > 0,1.));
MPRINT(PLOTIT):   print = (index(list,'noprint') = 0);
MPRINT(PLOTIT):   call symput('legend' ,put(index(list,'nolegend') = 0 and print,1.));
MPRINT(PLOTIT):   call symput('history',put(index(list,'nohistory') = 0 and print,1.));
MPRINT(PLOTIT):   call symput('code' ,put(index(list,'nocode') = 0 and print,1.));
MPRINT(PLOTIT):   *------make sure all options are recognized------;
MPRINT(PLOTIT):   list2 = 'noborder border close diag expand noclip nocode nodelete ' || 'nocenter noback nohistory nolegend noprint square textline';
MPRINT(PLOTIT):   do i = 1 to 13;
MPRINT(PLOTIT):   word = scan(list2,i);
MPRINT(PLOTIT):   j = index(list,trim(word));
MPRINT(PLOTIT):   if j then substr(list,j,length(word)) = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if list ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: The following options are not recognized: ' list +(-1) '.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check INTERPOL=------;
MPRINT(PLOTIT):   list = lowcase(symget('interpol'));
MPRINT(PLOTIT):   call symput('intrtick',put((index(list,'tick') or not (index(list,'ls') or index(list,'no'))),1.));
MPRINT(PLOTIT):   call symput('intrls' ,put((index(list,'ls') or not index(list,'no')),1.));
MPRINT(PLOTIT):   call symput('hlogscal',put((index(list,'hlog') > 0),1.));
MPRINT(PLOTIT):   call symput('vlogscal',put((index(list,'vlog') > 0),1.));
MPRINT(PLOTIT):   *------parse the DATATYPE= option------;
MPRINT(PLOTIT):   datatype = symget('datatype');
MPRINT(PLOTIT):   list = datatype;
MPRINT(PLOTIT):   do i = 1 to 15;
MPRINT(PLOTIT):   call vname(dts[i],name);
MPRINT(PLOTIT):   j = index(datatype,trim(upcase(name)));
MPRINT(PLOTIT):   if j then substr(list,j,length(name)) = ' ';
MPRINT(PLOTIT):   dts[i] = (j ne 0);
MPRINT(PLOTIT):   call symput(name,compress(put(dts[i],1.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   list = compress(list,'0123456789.e+-');
MPRINT(PLOTIT):   if list ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: Invalid DATATYPE=' datatype +(-1) '.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------get the lists that must be quoted------;
MPRINT(PLOTIT):   do i = 1 to listn;
MPRINT(PLOTIT):   call vname(vars[i],name);
MPRINT(PLOTIT):   vars[i] = symget(name);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   symtype = lowcase(symtype);
MPRINT(PLOTIT):   britypes = lowcase(britypes);
MPRINT(PLOTIT):   rgbtypes = lowcase(rgbtypes);
MPRINT(PLOTIT):   exttypes = lowcase(exttypes);
MPRINT(PLOTIT):   *-----make sure these are set------;
MPRINT(PLOTIT):   if font = ' ' then font = 'swiss';
MPRINT(PLOTIT):   tsize = symget('tsize');
MPRINT(PLOTIT):   if tsize = ' ' then do;
MPRINT(PLOTIT):   tsize = '1';
MPRINT(PLOTIT):   call symput('tsize','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------process DATATYPE= option------;
MPRINT(PLOTIT):   if datatype ne ' ' then do;
MPRINT(PLOTIT):   if contour then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' contour';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' 1';
MPRINT(PLOTIT):   symfont = trim(symfont) || ' solid';
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   rgbtypes = trim(rgbtypes) || ' contour';
MPRINT(PLOTIT):   exttypes = trim(exttypes) || ' contour';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if square then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || ' U';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' square';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' 1';
MPRINT(PLOTIT):   symfont = trim(symfont) || ' marker';
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   rgbtypes = trim(rgbtypes) || ' square';
MPRINT(PLOTIT):   exttypes = trim(exttypes) || ' square';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if function then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' function';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' 1';
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ';
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   exttypes = trim(exttypes) || ' function';
MPRINT(PLOTIT):   name = symget('labelvar');
MPRINT(PLOTIT):   if name = ' ' then call symput('labelvar','_blank_');
MPRINT(PLOTIT):   if symvar = ' ' then put 'WARNING: Null symbol variable ' 'specified with ' 'DATATYPE=function.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mdpref or vector or ideal then types = trim(types) || ' SCORE';
MPRINT(PLOTIT):   if mdpref or vector or ideal or symbol then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || ' *';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || font;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if corresp or row or mca or column then do;
MPRINT(PLOTIT):   types = trim(types) || ' VAR OBS SUPVAR SUPOBS';
MPRINT(PLOTIT):   if row then do;
MPRINT(PLOTIT):   symtype = trim(symtype) || ' vector symbol symbol symbol';
MPRINT(PLOTIT):   symbols = trim(symbols) || " '' * * *";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if column then do;
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol vector symbol symbol';
MPRINT(PLOTIT):   symbols = trim(symbols) || " * '' * *";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol symbol symbol symbol';
MPRINT(PLOTIT):   symbols = trim(symbols) || ' * * * *';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   symsize = trim(symsize) || repeat(' ' || trim(tsize),3);
MPRINT(PLOTIT):   symfont = trim(symfont) || repeat(' ' || trim(font) ,3);
MPRINT(PLOTIT):   labsize = trim(labsize) || repeat(' ' || trim(tsize),3);
MPRINT(PLOTIT):   labfont = trim(labfont) || repeat(' ' || trim(font) ,3);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mdpref then do;
MPRINT(PLOTIT):   types = trim(types) || ' CORR';
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' vector';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   if lowcase(font) eq 'none' then do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font);
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mdpref2 then labsize = trim(labsize) || ' ' || compress(put(input(tsize, ?? 32.) * 0.75, best8.));
MPRINT(PLOTIT):   else labsize = trim(labsize) || ' 0';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   size = compress(put(input(tsize,?? 32.) * 1.5, best8.));
MPRINT(PLOTIT):   if vector then do;
MPRINT(PLOTIT):   types = trim(types) || ' MCOEFFI';
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' vector';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || size;
MPRINT(PLOTIT):   if lowcase(font) eq 'none' then do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font);
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if ideal then do;
MPRINT(PLOTIT):   types = trim(types) || ' MPOINT';
MPRINT(PLOTIT):   symbols = trim(symbols) || ' +';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' circle';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || size;
MPRINT(PLOTIT):   if lowcase(font) eq 'none' then do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font);
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mds then do;
MPRINT(PLOTIT):   types = trim(types) || ' CONFIG';
MPRINT(PLOTIT):   symbols = trim(symbols) || ' *';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || font;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if (mds or corresp or mca or row or column or mdpref or mdpref2 or vector or ideal) and symget('label') = ' ' then call symput('label','typical');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------ in case these were only specified in the symtype------;
MPRINT(PLOTIT):   if index(symtype, 'contour' ) then call symput('contour' , '1');
MPRINT(PLOTIT):   if index(symtype, 'square' ) then call symput('square' , '1');
MPRINT(PLOTIT):   *------set colors, other defaults------;
MPRINT(PLOTIT):   if color = ' ' then color = 'black';
MPRINT(PLOTIT):   if colors = ' ' then colors = color;
MPRINT(PLOTIT):   if framecol = ' ' then framecol = color;
MPRINT(PLOTIT):   if titlecol = ' ' then titlecol = color;
MPRINT(PLOTIT):   if labelcol = ' ' then labelcol = color;
MPRINT(PLOTIT):   if tickcol = ' ' then tickcol = color;
MPRINT(PLOTIT):   if curvecol = ' ' then curvecol = color;
MPRINT(PLOTIT):   if symtype = ' ' then symtype = 'symbol';
MPRINT(PLOTIT):   if symsize = ' ' then symsize = tsize;
MPRINT(PLOTIT):   if symfont = ' ' then symfont = font;
MPRINT(PLOTIT):   if labsize = ' ' then labsize = tsize;
MPRINT(PLOTIT):   if labfont = ' ' then labfont = font;
MPRINT(PLOTIT):   if exttypes = ' ' then exttypes = "''";
MPRINT(PLOTIT):   if rgbtypes = ' ' then rgbtypes = "''";
MPRINT(PLOTIT):   labcol = trim(labcol) || ' ' || colors;
MPRINT(PLOTIT):   symcol = trim(symcol) || ' ' || colors;
MPRINT(PLOTIT):   *------default symbols when unspecified------;
MPRINT(PLOTIT):   if index(symtype, 'symbol') and symvar eq '_symbol_' and symbols = ' ' then do;
MPRINT(PLOTIT):   word = scan(symtype, 1, ' ');
MPRINT(PLOTIT):   do i = 1 to 500 while(word ne ' ');
MPRINT(PLOTIT):   if index(word, 'symbol') then symbols = trim(symbols) || ' *';
MPRINT(PLOTIT):   else symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   word = scan(symtype, i + 1, ' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if symbols = ' ' then symbols = "''";
MPRINT(PLOTIT):   *------count the number of types------;
MPRINT(PLOTIT):   if types = ' ' then types = "''";
MPRINT(PLOTIT):   do until(word eq ' ');
MPRINT(PLOTIT):   ntypes + 1;
MPRINT(PLOTIT):   word = scan(types, ntypes + 1, ' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   holdntyp = ntypes;
MPRINT(PLOTIT):   *------output number of observation types------;
MPRINT(PLOTIT):   call symput('ntypes',compress(put(ntypes,3.)));
MPRINT(PLOTIT):   *------output lists, make sure they are quoted------;
MPRINT(PLOTIT):   do i = 1 to listn;
MPRINT(PLOTIT):   if i > listm then ntypes = 1;
MPRINT(PLOTIT):   if i > listo then ntypes = 200;
MPRINT(PLOTIT):   link qlist;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   ntypes = holdntyp;
MPRINT(PLOTIT):   *------output sizes for squares------;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   word = scan(symtype, i, ' ');
MPRINT(PLOTIT):   if index(word, 'square') then call symput('sizsquar', compress(scan(symsize, i, ' '), " '"||'"'));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check for constant symvar with vectors------;
MPRINT(PLOTIT):   symcon = (symvar = ' ' or (compress(symvar,"'"||'"') ne symvar));
MPRINT(PLOTIT):   if symcon then do;
MPRINT(PLOTIT):   i = length(symvar);
MPRINT(PLOTIT):   if i > 3 then do;
MPRINT(PLOTIT):   word = upcase(substr(symvar, i - 1));
MPRINT(PLOTIT):   if word in ('"N', "'N") then symcon = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('symcon',put(symcon,1.));
MPRINT(PLOTIT):   if symcon and index(symtype,'vector') then do;
MPRINT(PLOTIT):   put 'ERROR: Constant SYMVAR= is not allowed with vectors.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------parse RGBROUND= option------;
MPRINT(PLOTIT):   list = symget('rgbround');
MPRINT(PLOTIT):   list2 = ' ';
MPRINT(PLOTIT):   do i = 1 to 4;
MPRINT(PLOTIT):   name = scan(list, i, ' ');
MPRINT(PLOTIT):   num = input(name, ?? 32.);
MPRINT(PLOTIT):   if nmiss(num) then num = .;
MPRINT(PLOTIT):   if i > 1 and num <= 0 then num = 1;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || compress(put(num,best8.));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('rgbround',trim(left(list2)));
MPRINT(PLOTIT):   *------anything specified for the BRIGHT= option?------;
MPRINT(PLOTIT):   if symget('bright') = ' ' then do;
MPRINT(PLOTIT):   britypes = ' ';
MPRINT(PLOTIT):   call symput('britypes', compress(britypes));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------anything specified for the PAINT= option?------;
MPRINT(PLOTIT):   list = left(symget('paint'));
MPRINT(PLOTIT):   if symget('paintvar') = ' ' then do;
MPRINT(PLOTIT):   rgbtypes = ' ';
MPRINT(PLOTIT):   call symput('rgbtypes', compress(rgbtypes));
MPRINT(PLOTIT):   if contour then put 'WARNING: PAINT= was not specified ' 'with a contour plot.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------parse PAINT= option------;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   *------count list elements------;
MPRINT(PLOTIT):   do n = 1 to 500 until(name2 = ' ');
MPRINT(PLOTIT):   name2 = scan(list,n,' ');
MPRINT(PLOTIT):   if n(input(name2,?? 32.)) then name2 = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   n = n - 1;
MPRINT(PLOTIT):   *------set default, when only a variable name is specified------;
MPRINT(PLOTIT):   if n < 1 then do;
MPRINT(PLOTIT):   n = 3;
MPRINT(PLOTIT):   list = 'blue magenta red';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if n < 2 then do;
MPRINT(PLOTIT):   n = 2;
MPRINT(PLOTIT):   name2 = scan(list,1,' ');
MPRINT(PLOTIT):   list = compress(name2) || ' ' || compress(name2);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('paintcol', trim(list));
MPRINT(PLOTIT):   *------store, check number of list elements------;
MPRINT(PLOTIT):   call symput('paintnum',compress(put(n,3.)));
MPRINT(PLOTIT):   *------table of recognized colors and their hex rgb------;
MPRINT(PLOTIT):   allcols = 'BLACK--BLUE---BROWN--GRAY---GREEN--OLIVE--ORANGE-' || 'PINK---PURPLE-RED----VIOLET-WHITE--YELLOW-MAGENTA' || 'CYAN---';
MPRINT(PLOTIT):   hexcols = '000000 0000ff a05000 808080 00ff00 2a8307 ff8000 ' || 'ff0080 703070 ff0000 b090d0 ffffff ffff00 ff00ff ' || '00ffff ';
MPRINT(PLOTIT):   list2 = ' ';
MPRINT(PLOTIT):   *------construct list of (decimal) RGB values------;
MPRINT(PLOTIT):   do j = 1 to 3;
MPRINT(PLOTIT):   do i = 1 to n;
MPRINT(PLOTIT):   color = upcase(scan(list, i, ' '));
MPRINT(PLOTIT):   k = index(allcols,trim(color));
MPRINT(PLOTIT):   *------grab hex code for name, or parse CXrrggbb------;
MPRINT(PLOTIT):   if k then name1 = substr(hexcols,k + (j - 1) * 2,2);
MPRINT(PLOTIT):   else name1 = substr(color ,(j - 1) * 2 + 3,2);
MPRINT(PLOTIT):   *------check for validity------;
MPRINT(PLOTIT):   num = input(name1,?? hex2.);
MPRINT(PLOTIT):   if nmiss(num) then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= color of ' color 'is not valid.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   j = 4;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   name1 = compress(put(num,3.));
MPRINT(PLOTIT):   if length(list2) + length(name1) + 1 > 500 then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= list is too long.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   j = 3;
MPRINT(PLOTIT):   i = n;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------build list------;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || trim(name1);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store line segment end points in list if specified------;
MPRINT(PLOTIT):   list2 = left(list2);
MPRINT(PLOTIT):   name1 = scan(list,n + 1,' ');
MPRINT(PLOTIT):   if name1 ne ' ' then do;
MPRINT(PLOTIT):   do i = 1 to n;
MPRINT(PLOTIT):   name1 = scan(list,n + i,' ');
MPRINT(PLOTIT):   if nmiss(input(name1,?? 32.)) then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= data value of ' name1 'is not valid.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if length(list2) + length(name1) + 1 > 500 then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= list is too long.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   i = n;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || name1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   name1 = scan(list,2 * n + 1,' ');
MPRINT(PLOTIT):   if name1 ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= data value list is too long.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store processed PAINT= list------;
MPRINT(PLOTIT):   call symput('paint',trim(list2));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if input(symget('legend'), ?? 32.) then do;
MPRINT(PLOTIT):   awidth = 9;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   anele = scan(types, i, ' ');
MPRINT(PLOTIT):   awidth = max(awidth, length(anele) + 1);
MPRINT(PLOTIT):   awidth = max(awidth, length(scan(symbols, i, ' ')) + 1);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   cols = min(15 + awidth * ntypes, 256);
MPRINT(PLOTIT):   cols = 15 + floor((cols - 15) / awidth) * awidth;
MPRINT(PLOTIT):   m = floor((256 - cols) / 2);
MPRINT(PLOTIT):   cols = cols - 1;
MPRINT(PLOTIT):   put / +m 'Types Legend  |' @@;
MPRINT(PLOTIT):   list = types;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   list = repeat('-', cols);
MPRINT(PLOTIT):   substr(list, 15, 1) = '+';
MPRINT(PLOTIT):   put +m list;
MPRINT(PLOTIT):   put +m 'Symbol Types  |' @@;
MPRINT(PLOTIT):   list = symtype;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Symbols       |' @@;
MPRINT(PLOTIT):   list = symbols;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Symbol Colors |' @@;
MPRINT(PLOTIT):   list = symcol;
MPRINT(PLOTIT):   link legendc;
MPRINT(PLOTIT):   put +m 'Label  Colors |' @@;
MPRINT(PLOTIT):   list = labcol;
MPRINT(PLOTIT):   link legendc;
MPRINT(PLOTIT):   put +m 'Symbol Sizes  |' @@;
MPRINT(PLOTIT):   list = symsize;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Label  Sizes  |' @@;
MPRINT(PLOTIT):   list = labsize;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Symbol Fonts  |' @@;
MPRINT(PLOTIT):   list = symfont;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Label  Fonts  |' @@;
MPRINT(PLOTIT):   list = labfont;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   list = repeat('-', cols);
MPRINT(PLOTIT):   put +m list;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ or not ok then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   legend: *------print legend------;
MPRINT(PLOTIT):   j = 0;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   anele = compress(scan(list, i, ' '), "'"||'"');
MPRINT(PLOTIT):   link printele;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   put;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   legendc: *------print legend for colors------;
MPRINT(PLOTIT):   j = 0;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   anele2 = scan(symtype, i, ' ');
MPRINT(PLOTIT):   if index(rgbtypes, trim(anele2)) or index(britypes, trim(anele2)) then anele = ' ';
MPRINT(PLOTIT):   else anele = compress(scan(list, i, ' '), "'"||'"');
MPRINT(PLOTIT):   link printele;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   put;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   printele: *------print one table element------;
MPRINT(PLOTIT):   j = j + 1;
MPRINT(PLOTIT):   if (15 + awidth * j) > 256 then do;
MPRINT(PLOTIT):   put / +(m+14) '|' @@;
MPRINT(PLOTIT):   j = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   put @(m + 17 + (j - 1) * awidth) anele $ @@;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   qlist: *------quote the elements of a list------;
MPRINT(PLOTIT):   call vname(vars[i],name);
MPRINT(PLOTIT):   list2 = ' ';
MPRINT(PLOTIT):   list = vars[i];
MPRINT(PLOTIT):   charv = not index(upcase(name),'SIZE');
MPRINT(PLOTIT):   word = scan(list,1,' ');
MPRINT(PLOTIT):   do n = 1 to ntypes while(word ne ' ');
MPRINT(PLOTIT):   if charv then do;
MPRINT(PLOTIT):   word = compress("'" || compress(word,"'"||'"') || "'");
MPRINT(PLOTIT):   if not index(substr(word,2),"'") then do;
MPRINT(PLOTIT):   put 'ERROR: The list element ' name +(-1) '=' word 'is too long.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if (length(list2) + length(word)) >= 500 then do;
MPRINT(PLOTIT):   put 'ERROR: The list ' name +(-1) '=' list2 'is too long.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || word;
MPRINT(PLOTIT):   word = scan(list,n + 1,' ');
MPRINT(PLOTIT):   if word = ' ' and i <= listm then word = scan(list2,1,' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput(name,trim(left(list2)));
MPRINT(PLOTIT):   vars[i] = list2;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
 
                                                                                                                    Types Legend  | CONFIG
                                                                                                                    --------------+---------
                                                                                                                    Symbol Types  | circle
                                                                                                                    Symbols       | *
                                                                                                                    Symbol Colors | cx000000
                                                                                                                    Label  Colors | cx000000
                                                                                                                    Symbol Sizes  | 1
                                                                                                                    Label  Sizes  | 1
                                                                                                                    Symbol Fonts  | none
                                                                                                                    Label  Fonts  | none
                                                                                                                    ------------------------
MPRINT(PLOTIT):   *------inertias for correspondence analysis variable labels------;
MPRINT(PLOTIT):   *------check, set remaining variables------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   set tempdat1 end=eof;
MPRINT(PLOTIT):   length __name setl labelvar tvname symvar paintvar upname $ 70;
MPRINT(PLOTIT):   retain setl labelvar tvname symvar paintvar ' ' paintfou typefoun 0 ok 1;
MPRINT(PLOTIT):   upname = upcase(name);
MPRINT(PLOTIT):   *------get current names------;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   tvname = dequote(symget('typevar'));
MPRINT(PLOTIT):   labelvar = dequote(symget('labelvar'));
MPRINT(PLOTIT):   paintvar = dequote(symget('paintvar'));
MPRINT(PLOTIT):   if 0 then symvar = _symbol_;
MPRINT(PLOTIT):   else symvar = dequote(symget('symvar'));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------is the symbol variable numeric or character?------;
MPRINT(PLOTIT):   if not 0 and upname = upcase(symvar) and type = 1 then call symput('symnumer','1');
MPRINT(PLOTIT):   *------find _type_ variable------;
MPRINT(PLOTIT):   if upname = upcase(tvname) then typefoun = 1;
MPRINT(PLOTIT):   *------find PAINT= variable------;
MPRINT(PLOTIT):   if upname = upcase(paintvar) and type = 1 then paintfou = 1;
MPRINT(PLOTIT):   *------find default label variable name------;
MPRINT(PLOTIT):   else if type = 2 and (setl = ' ' or upname ne '_TYPE_') then setl = name;
MPRINT(PLOTIT):   *------at end, output results------;
MPRINT(PLOTIT):   if eof then do;
MPRINT(PLOTIT):   if labelvar = ' ' and setl ne ' ' then labelvar = setl;
MPRINT(PLOTIT):   if labelvar = ' ' then labelvar = '_blank_';
MPRINT(PLOTIT):   __name = labelvar;
MPRINT(PLOTIT):   link nliteral;
MPRINT(PLOTIT):   call symput('labelvar', trim(__name));
MPRINT(PLOTIT):   *------assorted error checking------;
MPRINT(PLOTIT):   if not typefoun and tvname ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: TYPEVAR=' tvname 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not typefoun and input(symget('typespec'), ?? 32.) then do;
MPRINT(PLOTIT):   put 'ERROR: A type variable must be available ' 'when TYPES= ' 'is specified.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not (paintvar = ' ' or paintfou) then do;
MPRINT(PLOTIT):   put 'ERROR: A numeric PAINT=' paintvar 'variable was not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not ok or _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   nliteral: * Puts n-literal on name if necessary. * Input: __name * Output: __name (updated) * Sample usage: * __name = 'a b';
MPRINT(PLOTIT):   * link nliteral;
MPRINT(PLOTIT):   * Creates: __name = "'a b'n";
MPRINT(PLOTIT):   __v7 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789';
MPRINT(PLOTIT):   __len = length(__name);
MPRINT(PLOTIT):   if index(__name, ' ') < __len or '0' <= substr(__name, 1, 1) <= '9' or compress(upcase(__name), __v7) ne ' ' then do;
MPRINT(PLOTIT):   __k = 1;
MPRINT(PLOTIT):   do __i = 1 to __len;
MPRINT(PLOTIT):   if substr(__name, __k, 1) eq "'" then do;
MPRINT(PLOTIT):   substr(__name, __k + 1) = "'" || substr(__name, __k + 1);
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __name = "'" || trim(__name) || "'n";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   drop __name __i __k __v7 __len;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------find minima, maxima------;
MPRINT(PLOTIT):   proc means data=preproc noprint;
MPRINT(PLOTIT):   output out=tempdat1 max(Dim2 Dim1 )=vmax hmax min(Dim2 Dim1 )=vmin hmin;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------set goptions------;
MPRINT(PLOTIT):   goptions nodisplay device=PNG cback=white device=GIF;
MPRINT(PLOTIT):   *------check some parameters for valid values, set up others------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length c $ 1 vplotvar hplotvar labelvar $ 70 opt $ 8 str place vecheadr vecheadw tinc device $ 12 outward search vechead ls $ 32 label plotreq plotopts upopts pl list labely labelx label $ 500 ind1 ind2 $ 35;
MPRINT(PLOTIT):   ok = 1;
MPRINT(PLOTIT):   call symput('somedata','0');
MPRINT(PLOTIT):   set tempdat1(drop=_type_);
MPRINT(PLOTIT):   call symput('somedata','1');
MPRINT(PLOTIT):   call symput('vinter', '.');
MPRINT(PLOTIT):   call symput('hinter', '.');
MPRINT(PLOTIT):   call symput('hslope', '.');
MPRINT(PLOTIT):   call symput('vslope', '.');
MPRINT(PLOTIT):   *------check missings------;
MPRINT(PLOTIT):   if n(vmin,hmin,vmax,hmax) < 4 then do;
MPRINT(PLOTIT):   put 'ERROR: At least one variable is all missing.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check for nonpositive data with log scales------;
MPRINT(PLOTIT):   if (vmin <= 0 and 0) or (hmin <= 0 and 0) then do;
MPRINT(PLOTIT):   put "ERROR: Nonpositive data with INTERPOL=yes.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store extend values------;
MPRINT(PLOTIT):   list = symget('extend');
MPRINT(PLOTIT):   call symput('close',compress(put(index(list,'close'),best3.)));
MPRINT(PLOTIT):   if nmiss(input(scan(list,1,' '),?? 32.)) then call symput('extendl',' ');
MPRINT(PLOTIT):   else call symput('extendl',scan(list,1,' '));
MPRINT(PLOTIT):   if nmiss(input(scan(list,2,' '),?? 32.)) then call symput('extendr',' ');
MPRINT(PLOTIT):   else call symput('extendr',scan(list,2,' '));
MPRINT(PLOTIT):   if nmiss(input(scan(list,3,' '),?? 32.)) then call symput('extendt',' ');
MPRINT(PLOTIT):   else call symput('extendt',scan(list,3,' '));
MPRINT(PLOTIT):   if nmiss(input(scan(list,4,' '),?? 32.)) then call symput('extendb',' ');
MPRINT(PLOTIT):   else call symput('extendb',scan(list,4,' '));
MPRINT(PLOTIT):   *------make sure PAINT= minimum, maximum are stored------;
MPRINT(PLOTIT):   call symput('rgbround', trim(symget('rgbround')) || ' .');
MPRINT(PLOTIT):   *------compute (possibly adjusted) range------;
MPRINT(PLOTIT):   isavec = index(symget('symtype'),'vector');
MPRINT(PLOTIT):   if isavec then do;
MPRINT(PLOTIT):   vmin = min(0,vmin);
MPRINT(PLOTIT):   hmin = min(0,hmin);
MPRINT(PLOTIT):   vmax = max(0,vmax);
MPRINT(PLOTIT):   hmax = max(0,hmax);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   vmax = max(vmax,hmax);
MPRINT(PLOTIT):   hmax = vmax;
MPRINT(PLOTIT):   vmin = min(vmin,hmin);
MPRINT(PLOTIT):   hmin = vmin;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if 0 and not 0 then range = vmax - vmin;
MPRINT(PLOTIT):   else if 0 and not 0 then range = hmax - hmin;
MPRINT(PLOTIT):   else range = max(vmax - vmin, hmax - hmin);
MPRINT(PLOTIT):   range = max(1e4 * 1e-8,range);
MPRINT(PLOTIT):   *------default increment, minima, maxima------;
MPRINT(PLOTIT):   inc = input(symget('inc'),?? 32.);
MPRINT(PLOTIT):   if n(inc) = 0 then do;
MPRINT(PLOTIT):   inc = 10 ** ceil(log10(range) - 1.0);
MPRINT(PLOTIT):   if range / inc >= 7.5 then inc = inc * 2;
MPRINT(PLOTIT):   if range / inc <= 2.5 then inc = inc / 2;
MPRINT(PLOTIT):   if range / inc <= 2.5 then inc = inc / 2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   tinc = compress(put(inc,best12.));
MPRINT(PLOTIT):   if n(inc) = 0 then do;
MPRINT(PLOTIT):   put 'ERROR: Input data set is empty, constant, or corrupt.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('inc' ,trim(tinc));
MPRINT(PLOTIT):   call symput('hmax',compress(put(hmax,best15.)));
MPRINT(PLOTIT):   call symput('hmin',compress(put(hmin,best15.)));
MPRINT(PLOTIT):   call symput('vmax',compress(put(vmax,best15.)));
MPRINT(PLOTIT):   call symput('vmin',compress(put(vmin,best15.)));
MPRINT(PLOTIT):   *------construct plot request------;
MPRINT(PLOTIT):   vplotvar = symget('vplotvar');
MPRINT(PLOTIT):   hplotvar = symget('hplotvar');
MPRINT(PLOTIT):   plotopts = symget('plotopts');
MPRINT(PLOTIT):   labelvar = symget('labelvar');
MPRINT(PLOTIT):   upopts = upcase(plotopts);
MPRINT(PLOTIT):   plotreq = trim(vplotvar) || ' * ' || trim(hplotvar) || ' $ ' || trim(labelvar) || ' = _symbol_';
MPRINT(PLOTIT):   *------check for HREF= VREF= options------;
MPRINT(PLOTIT):   if index(upopts,'HREF') or index(upopts,'VREF') then put 'WARNING: HREF= and VREF= PLOT options are ignored.  ' 'Specify ' 'them as ' 'macro options ' 'instead.';
MPRINT(PLOTIT):   *------see if we need to generate a placement list------;
MPRINT(PLOTIT):   pl = ' ';
MPRINT(PLOTIT):   i = index(upopts,'PLACE');
MPRINT(PLOTIT):   if i then do;
MPRINT(PLOTIT):   pl = substr(plotopts,i);
MPRINT(PLOTIT):   if i > 1 then plotopts = substr(plotopts,1,i - 1);
MPRINT(PLOTIT):   else plotopts = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle horizontal ticks if not already specified------;
MPRINT(PLOTIT):   c = 'h';
MPRINT(PLOTIT):   maxim = hmax;
MPRINT(PLOTIT):   minim = hmin;
MPRINT(PLOTIT):   logscal = 0;
MPRINT(PLOTIT):   link maketick;
MPRINT(PLOTIT):   *------handle vertical ticks if not already specified------;
MPRINT(PLOTIT):   c = 'v';
MPRINT(PLOTIT):   maxim = vmax;
MPRINT(PLOTIT):   minim = vmin;
MPRINT(PLOTIT):   logscal = 0;
MPRINT(PLOTIT):   link maketick;
MPRINT(PLOTIT):   *------outward option------;
MPRINT(PLOTIT):   outward = symget('outward');
MPRINT(PLOTIT):   if outward ne 'none' then do;
MPRINT(PLOTIT):   if outward = ' ' and isavec then outward = symget('symdummy');
MPRINT(PLOTIT):   if outward ne ' ' then plotopts = trim(plotopts) || ' outward="' || compress(outward,"'"||'" ') || '"';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------box option------;
MPRINT(PLOTIT):   plotopts = trim(left(plotopts)) || ' box';
MPRINT(PLOTIT):   *------reference lines------;
MPRINT(PLOTIT):   list = symget('href');
MPRINT(PLOTIT):   if list ne ' ' then plotopts = trim(plotopts) || ' href=' || list;
MPRINT(PLOTIT):   list = symget('vref');
MPRINT(PLOTIT):   if list ne ' ' then plotopts = trim(plotopts) || ' vref=' || list;
MPRINT(PLOTIT):   *------set up vector heads------;
MPRINT(PLOTIT):   vechead = symget('vechead');
MPRINT(PLOTIT):   vecheadr = scan(vechead,1,' ');
MPRINT(PLOTIT):   vecheadw = scan(vechead,2,' ');
MPRINT(PLOTIT):   if vecheadw = ' ' then vecheadr = ' ';
MPRINT(PLOTIT):   *------determine graphics area------;
MPRINT(PLOTIT):   rc1 = ginit();
MPRINT(PLOTIT):   call gask('maxdisp',units,xmax,ymax,xpix,ypix,rc2);
MPRINT(PLOTIT):   call gask('device',device,rc3);
MPRINT(PLOTIT):   rc4 = gterm();
MPRINT(PLOTIT):   if rc1 or rc2 or rc3 or rc4 then do;
MPRINT(PLOTIT):   put 'ERROR: GASK call for XMAX= and YMAX= failed.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   xmax = xmax * 100;
MPRINT(PLOTIT):   ymax = ymax * 100;
MPRINT(PLOTIT):   if symget('unit') = 'in' then do;
MPRINT(PLOTIT):   xmax = xmax / 2.54;
MPRINT(PLOTIT):   ymax = ymax / 2.54;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   xmax = floor(xmax * 100) / 100;
MPRINT(PLOTIT):   ymax = floor(ymax * 100) / 100;
MPRINT(PLOTIT):   *------max horizontal graph size------;
MPRINT(PLOTIT):   if symget('xmax') = ' ' then call symput('xmax',compress(put(xmax,9.2)));
MPRINT(PLOTIT):   *-------max vertical graph size------;
MPRINT(PLOTIT):   if symget('ymax') = ' ' then call symput('ymax',compress(put(ymax,9.2)));
MPRINT(PLOTIT):   *------construct typical label------;
MPRINT(PLOTIT):   label = symget('label');
MPRINT(PLOTIT):   if label = 'typical' then do;
MPRINT(PLOTIT):   ind1 = substr(vplotvar,length(vplotvar),1);
MPRINT(PLOTIT):   ind2 = substr(hplotvar,length(hplotvar),1);
MPRINT(PLOTIT):   if not ('1' <= ind1 <= '9' and '1' <= ind2 <= '9') then label = ' ';
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   do i = length(vplotvar) to 1 by -1;
MPRINT(PLOTIT):   x = substr(vplotvar,i,1);
MPRINT(PLOTIT):   if not ('1' <= x <= '9') then do;
MPRINT(PLOTIT):   ind1 = substr(vplotvar, i + 1);
MPRINT(PLOTIT):   i = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   do i = length(hplotvar) to 1 by -1;
MPRINT(PLOTIT):   x = substr(hplotvar,i,1);
MPRINT(PLOTIT):   if not ('1' <= x <= '9') then do;
MPRINT(PLOTIT):   ind2 = substr(hplotvar, i + 1);
MPRINT(PLOTIT):   i = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------for correspondence analysis, ------;
MPRINT(PLOTIT):   *------put inertia percentages in labels------;
MPRINT(PLOTIT):   if labelx = ' ' then do;
MPRINT(PLOTIT):   labely = "Dimension " || compress(ind1);
MPRINT(PLOTIT):   labelx = "Dimension " || compress(ind2);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   label = 'label ' || symget('vplotvar') || " = '" || trim(labely) || "' " || symget('hplotvar') || " = '" || trim(labelx) || "'";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------simple, imperfect, label statement check------;
MPRINT(PLOTIT):   label = left(label);
MPRINT(PLOTIT):   if label ne ' ' and compress(label,"'"||'="') = label then do;
MPRINT(PLOTIT):   put 'ERROR: Invalid LABEL statement, LABEL=' label +(-1) '.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   str = upcase(scan(label,1));
MPRINT(PLOTIT):   if str ne 'LABEL' and str ne ' ' then label = 'label ' || label;
MPRINT(PLOTIT):   call symput('label' ,trim(label));
MPRINT(PLOTIT):   *------make sure we have britypes with BRIGHT= specified------;
MPRINT(PLOTIT):   if symget('bright') ne ' ' and symget('britypes') = ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: Null BRITYPES= is not ' 'permitted ' 'with ' "BRIGHT=.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set up search parameters------;
MPRINT(PLOTIT):   ls = symget('ls');
MPRINT(PLOTIT):   if index(ls,'search') then do;
MPRINT(PLOTIT):   ls = scan(ls,1,' ');
MPRINT(PLOTIT):   if ls = 'compute' then search = 'compute';
MPRINT(PLOTIT):   else search = 'ls';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if ls = ' ' or ls = 'compute' then ls = '.';
MPRINT(PLOTIT):   if pl = ' ' then place = symget('place');
MPRINT(PLOTIT):   else place = '.';
MPRINT(PLOTIT):   if index(place,'search') then do;
MPRINT(PLOTIT):   search = trim(search) || ' place';
MPRINT(PLOTIT):   place = scan(place,1,' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if place = ' ' then place = '.';
MPRINT(PLOTIT):   *------see if we should store device------;
MPRINT(PLOTIT):   list = upcase(symget('gopprint'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   list = upcase(symget('gopplot'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   list = upcase(symget('gopts2'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   list = upcase(symget('gopts'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   *------output generated macro variables------;
MPRINT(PLOTIT):   call symput('search' ,trim(search));
MPRINT(PLOTIT):   call symput('ls' ,trim(ls));
MPRINT(PLOTIT):   call symput('place' ,trim(place));
MPRINT(PLOTIT):   call symput('plotopts',trim(plotopts));
MPRINT(PLOTIT):   call symput('plotreq' ,trim(plotreq));
MPRINT(PLOTIT):   call symput('pl' ,trim(pl));
MPRINT(PLOTIT):   call symput('vecheadr',trim(vecheadr));
MPRINT(PLOTIT):   call symput('vecheadw',trim(vecheadw));
MPRINT(PLOTIT):   call symput('device' ,trim(device));
MPRINT(PLOTIT):   *------check some parameters for valid values------;
MPRINT(PLOTIT):   opt='VECHEAD';
MPRINT(PLOTIT):   str=vecheadr;
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VECHEAD';
MPRINT(PLOTIT):   str=vecheadw;
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='INC';
MPRINT(PLOTIT):   str=tinc;
MPRINT(PLOTIT):   min=1e-8;
MPRINT(PLOTIT):   max=1e35;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='HNOBS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max=1e35;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VNOBS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max=1e35;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='BIPLOT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min=1e-8;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='SYMLEN';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 22;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='OFFSET';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 1;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='TSIZE';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='TICKLEN';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -10;
MPRINT(PLOTIT):   max= 10;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='ANTIIDEA';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -2;
MPRINT(PLOTIT):   max= 2;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='CIRSEGS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min=1e-4;
MPRINT(PLOTIT):   max= 500;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='CURSEGS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 20;
MPRINT(PLOTIT):   max= 500;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VTOH';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 3;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='MAKEFIT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -10;
MPRINT(PLOTIT):   max= 10;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='HSIZE';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VSIZE';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='XMAX';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='YMAX';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='HPOS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VPOS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='PS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 15;
MPRINT(PLOTIT):   max= 200;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='MAXITER';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='MAXOKPEN';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 1e9;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='BRIGHT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 5;
MPRINT(PLOTIT):   max= 250;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDL';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDR';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDB';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='LSINC';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 200;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='LS';
MPRINT(PLOTIT):   str=ls;
MPRINT(PLOTIT):   min= 64;
MPRINT(PLOTIT):   max= 200;
MPRINT(PLOTIT):   if ls ne '.' then link checkit;
MPRINT(PLOTIT):   opt='PLACE';
MPRINT(PLOTIT):   str=place;
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 13;
MPRINT(PLOTIT):   if place ne '.' then link checkit;
MPRINT(PLOTIT):   list = compress(symget('tickaxes'));
MPRINT(PLOTIT):   call symput('tickaxes',trim(list));
MPRINT(PLOTIT):   if compress(list,'LRTBlrtbFh') ne ' ' then do;
MPRINT(PLOTIT):   put "ERROR: TICKAXES=LBFh is not valid.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('frame',put(indexc(list,'RTrtF') > 0,1.));
MPRINT(PLOTIT):   if not (symget('unit') in ('in' 'cm')) then do;
MPRINT(PLOTIT):   put "ERROR: UNIT=in is not valid.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if scan(symget('lsizes'),5,' ') = ' ' then do;
MPRINT(PLOTIT):   put "ERROR: LSIZES=1 1 1 1 1 must specify five sizes.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ or not ok then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   checkit: *------check parameter range------;
MPRINT(PLOTIT):   if str ne ' ' then do;
MPRINT(PLOTIT):   param = input(str,?? 32.);
MPRINT(PLOTIT):   if not (min <= param <= max) then do;
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   put 'ERROR: ' opt +(-1) '=' str 'is not valid.  ' 'The valid range is ' min '<= ' opt '<= ' max +(-1) '.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   maketick: *------handle ticks if not already specified------;
MPRINT(PLOTIT):   minor = input(symget(c ||'minor'),?? 32.);
MPRINT(PLOTIT):   if index(upopts,upcase(c) || 'AXIS') = 0 then do;
MPRINT(PLOTIT):   if maxim > 0 then logmax = ceil(log10(maxim));
MPRINT(PLOTIT):   else logmax = .;
MPRINT(PLOTIT):   if minim > 0 then logmin = floor(log10(minim));
MPRINT(PLOTIT):   else logmin = .;
MPRINT(PLOTIT):   *------major ticks for log scale------;
MPRINT(PLOTIT):   if logscal and n(logmin) then do;
MPRINT(PLOTIT):   plotopts = trim(plotopts) || ' ' || c || 'axis=';
MPRINT(PLOTIT):   do i = logmin to logmax;
MPRINT(PLOTIT):   plotopts = trim(plotopts) || '1e' || compress(put(i,4.)) || ',';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   plotopts = substr(plotopts,1,length(plotopts) - 1);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------ordinary major ticks------;
MPRINT(PLOTIT):   else plotopts = trim(plotopts) || ' ' || c || 'axis=by ' || tinc;
MPRINT(PLOTIT):   *------minor ticks------;
MPRINT(PLOTIT):   if minor >= 1 then do;
MPRINT(PLOTIT):   if n(logmax) then do;
MPRINT(PLOTIT):   if logscal then do;
MPRINT(PLOTIT):   maxim = logmax;
MPRINT(PLOTIT):   minim = logmin;
MPRINT(PLOTIT):   i = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else i = inc;
MPRINT(PLOTIT):   maxim = ceil(2 + maxim / i) * i;
MPRINT(PLOTIT):   minim = floor(minim / i - 2) * i;
MPRINT(PLOTIT):   call symput(c || 'minor', compress(put(minim,best12.)) || ' to ' || compress(put(maxim,best12.)) || ' by ' || compress(put(i / (minor + 1),best12.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else call symput(c||'minor',' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------number of minor ticks only allowed with inc is known------;
MPRINT(PLOTIT):   else if n(minor) then do;
MPRINT(PLOTIT):   put 'WARNING: Minor ticks are suppressed when HAXIS= ' 'or VAXIS= ' 'is specified ' 'on PLOTOPTS=.';
MPRINT(PLOTIT):   call symput(c||'minor',' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *========================preprocessing of data========================;
MPRINT(PLOTIT):   *------preprocess the input data set------;
MPRINT(PLOTIT):   data preproc;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length _symbol_ $ 1 __symbol $ 1 __lfont __lcolor __sfont __scolor __stype __color $ 12 __otype $ 16 __temp $ 60 __excols $ 64;
MPRINT(PLOTIT):   retain __nblank __bblank 0 __oldx __oldy . __color __excols ' ';
MPRINT(PLOTIT):   drop __nblank __bblank __dummy __mrkwrn __nconto __oldx __oldy __excols;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   *------set the variable labels------;
MPRINT(PLOTIT):   label Dim2 = 'Dimension 2' Dim1 = 'Dimension 1';
MPRINT(PLOTIT):   call label(Dim2, __temp);
MPRINT(PLOTIT):   call symput('labely',trim(__temp));
MPRINT(PLOTIT):   call label(Dim1, __temp);
MPRINT(PLOTIT):   call symput('labelx',trim(__temp));
MPRINT(PLOTIT):   drop __temp;
MPRINT(PLOTIT):   *------output x coordinates for the curve------;
MPRINT(PLOTIT):   *------computed colors------;
MPRINT(PLOTIT):   *------excluded colors------;
MPRINT(PLOTIT):   __excols = lowcase(symget('excolors'));
MPRINT(PLOTIT):   drop __roupai __roured __rougre __roublu;
MPRINT(PLOTIT):   retain __roupai __roured __rougre __roublu;
MPRINT(PLOTIT):   array __rou[5] __dummy __roured __rougre __roublu __roupai (-240 1 1 1 .);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set up observation type variable------;
MPRINT(PLOTIT):   _type_ = repeat(' ',7);
MPRINT(PLOTIT):   *------preprocess raw data------;
MPRINT(PLOTIT):   set preproc;
MPRINT(PLOTIT):   *------store label/symbol colors, sizes, fonts, types------;
MPRINT(PLOTIT):   array a__ty[1] $ 15 _temporary_ ('CONFIG');
MPRINT(PLOTIT):   __li = 1;
MPRINT(PLOTIT):   drop __li __i;
MPRINT(PLOTIT):   do __i = 1 to 1;
MPRINT(PLOTIT):   _type_ = compress(_type_);
MPRINT(PLOTIT):   __otype = _type_;
MPRINT(PLOTIT):   if _type_ = a__ty[__i] then do;
MPRINT(PLOTIT):   __li = __i;
MPRINT(PLOTIT):   __i = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   array a__ls[1] _temporary_ (1);
MPRINT(PLOTIT):   array a__ss[1] _temporary_ (1);
MPRINT(PLOTIT):   array a__lf[1] $ 12 _temporary_ ('none');
MPRINT(PLOTIT):   array a__lc[1] $ 12 _temporary_ ('cx000000');
MPRINT(PLOTIT):   array a__sf[1] $ 12 _temporary_ ('none');
MPRINT(PLOTIT):   array a__sc[1] $ 12 _temporary_ ('cx000000');
MPRINT(PLOTIT):   array a__st[1] $ 12 _temporary_ ('circle');
MPRINT(PLOTIT):   array a__sy[1] $ 1 _temporary_ ('*');
MPRINT(PLOTIT):   __lsize = a__ls[__li];
MPRINT(PLOTIT):   __ssize = a__ss[__li];
MPRINT(PLOTIT):   __lfont = a__lf[__li];
MPRINT(PLOTIT):   __lcolor = a__lc[__li];
MPRINT(PLOTIT):   __sfont = a__sf[__li];
MPRINT(PLOTIT):   __scolor = a__sc[__li];
MPRINT(PLOTIT):   __stype = a__st[__li];
MPRINT(PLOTIT):   __symbol = a__sy[__li];
MPRINT(PLOTIT):   if upcase(__sfont) = 'MARKER' and upcase(__stype) = 'CONTOUR' then do;
MPRINT(PLOTIT):   __mrkwrn + 1;
MPRINT(PLOTIT):   __sfont = 'solid';
MPRINT(PLOTIT):   if __mrkwrn = 1 then put 'WARNING: The marker font is obsolete ' 'for contour ' 'plots.  The ' 'SOLID font ' 'will be ' 'used instead.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------assign specialized symbols------;
MPRINT(PLOTIT):   if symget('symvar') = '_symbol_' then do;
MPRINT(PLOTIT):   _symbol_ = __symbol;
MPRINT(PLOTIT):   if __stype in ('vector' 'circle') and _symbol_ = ' ' then _symbol_ = "#";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   _symbol_ = _symbol_;
MPRINT(PLOTIT):   __symbol = _symbol_;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------blank out labels?------;
MPRINT(PLOTIT):   if __lsize = 0 or symget('labelvar') = '_blank_' then _idvar_ = ' ';
MPRINT(PLOTIT):   *------stretch vectors------;
MPRINT(PLOTIT):   *------computed colors------;
MPRINT(PLOTIT):   *-------count contour observations, determine directions------;
MPRINT(PLOTIT):   if __stype = 'contour' then do;
MPRINT(PLOTIT):   __nconto + 1;
MPRINT(PLOTIT):   if __nconto = 1 then do;
MPRINT(PLOTIT):   __oldx = Dim1;
MPRINT(PLOTIT):   __oldy = Dim2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if __nconto = 2 then do;
MPRINT(PLOTIT):   call symput('hcondir',compress(put(Dim1-__oldx,best8.)));
MPRINT(PLOTIT):   call symput('vcondir',compress(put(Dim2-__oldy,best8.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('ncontour',compress(put(__nconto,best12.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------exclude observations in excluded color list------;
MPRINT(PLOTIT):   if __color eq ' ' or index(__excols, trim(lowcase(__color))) = 0;
MPRINT(PLOTIT):   *------adjustments to preprocessed data------;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):   __xvar = Dim1;
MPRINT(PLOTIT):   __yvar = Dim2;
MPRINT(PLOTIT):   *------are labels all blank?------;
MPRINT(PLOTIT):   if not __nblank then do;
MPRINT(PLOTIT):   if _idvar_ ne ' ' then do;
MPRINT(PLOTIT):   __nblank = 1;
MPRINT(PLOTIT):   call symput('allblank','0');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------are there obs with both label and symbol blank?------;
MPRINT(PLOTIT):   if not __bblank then do;
MPRINT(PLOTIT):   if _idvar_ = ' ' and _symbol_ = ' ' then do;
MPRINT(PLOTIT):   __bblank = 1;
MPRINT(PLOTIT):   call symput('botblank','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   output preproc;
MPRINT(PLOTIT):   *------create regression data set for curve fitting------;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------separate out obs that will not go through PROC PLOT------;
MPRINT(PLOTIT):   data preproc extraobs;
MPRINT(PLOTIT):   retain __listit 0;
MPRINT(PLOTIT):   length __stype $ 12;
MPRINT(PLOTIT):   *------make sure PROC PLOT scales axes based on min, max------;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   __stype = 'dummy';
MPRINT(PLOTIT):   output extraobs;
MPRINT(PLOTIT):   do Dim1 = -0.105041826197, 0.2417594791608;
MPRINT(PLOTIT):   do Dim2 = -0.10946735166, 0.0762472829928;
MPRINT(PLOTIT):   output preproc;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __stype = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set preproc;
MPRINT(PLOTIT):   if "gplot" = "plot" then output preproc;
MPRINT(PLOTIT):   else if _idvar_ = ' ' and __stype in ('vector') then output extraobs;
MPRINT(PLOTIT):   else if _idvar_ ne ' ' or not (0 or (0 and (_symbol_ = ' ' and _idvar_ = ' '))) then do;
MPRINT(PLOTIT):   if __listit = 0 then do;
MPRINT(PLOTIT):   call symput('looklist','1');
MPRINT(PLOTIT):   __listit = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   output preproc;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else output extraobs;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------find regression function------;
MPRINT(PLOTIT):   *------see if there is anything more than corners in preproc------;
MPRINT(PLOTIT):   *------initpen=0 when nothing to plot, otherwise missing ------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   if _n_ = 0 then set preproc nobs=__nobs;
MPRINT(PLOTIT):   call symput('initpen', scan('0 .', (__nobs > 4) + 1, ' '));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------set up iteration parameters------;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *=========================create printer plot=========================;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length pl $ 200 search $ 24;
MPRINT(PLOTIT):   iternum = 0 + 1;
MPRINT(PLOTIT):   place = 2;
MPRINT(PLOTIT):   ls = .;
MPRINT(PLOTIT):   search = symget('search');
MPRINT(PLOTIT):   ispl = index(search,'place');
MPRINT(PLOTIT):   isls = index(search,'ls');
MPRINT(PLOTIT):   isco = index(search,'compute');
MPRINT(PLOTIT):   *------adjust placement list, line size------;
MPRINT(PLOTIT):   if iternum > 1 then do;
MPRINT(PLOTIT):   if ispl then place = place + 1;
MPRINT(PLOTIT):   if isls then ls = ls + 15;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if isco then ls = round(36 + 29 * iternum - 20 * log(iternum),5);
MPRINT(PLOTIT):   isls = (isls or isco);
MPRINT(PLOTIT):   *------last iteration if we cannot increment------;
MPRINT(PLOTIT):   *------the parameters any more. ------;
MPRINT(PLOTIT):   if (isls and ispl and ls >= 200 and place >= 13) or (isls and not ispl and ls >= 200) or (ispl and not isls and place >= 13) or (not ispl and not isls and not isco) then maxiter = iternum;
MPRINT(PLOTIT):   else maxiter = 15;
MPRINT(PLOTIT):   if ls > 200 then ls = 200;
MPRINT(PLOTIT):   if ls < 64 then ls = 64;
MPRINT(PLOTIT):   actualps = input(symget('ps'),?? 32.);
MPRINT(PLOTIT):   if n(actualps) = 0 then do;
MPRINT(PLOTIT):   vtoh = input(symget('vtoh'),?? 32.);
MPRINT(PLOTIT):   if nmiss(vtoh) then do;
MPRINT(PLOTIT):   hsize = input(symget('hsize'),?? 32.);
MPRINT(PLOTIT):   vsize = input(symget('vsize'),?? 32.);
MPRINT(PLOTIT):   if nmiss(hsize) then hsize = 8.33;
MPRINT(PLOTIT):   if nmiss(vsize) then vsize = 6.24;
MPRINT(PLOTIT):   actualps = round(ls * (vsize / (hsize * 2)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else actualps = round(10 + ls / vtoh,5);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if actualps > 200 then actualps = 200;
MPRINT(PLOTIT):   *------construct placement list------;
MPRINT(PLOTIT):   if n(place) then do;
MPRINT(PLOTIT):   if place > 13 then place = 13;
MPRINT(PLOTIT):   if place = 0 then pl = '(s=center)';
MPRINT(PLOTIT):   else pl = '(h=2 -2 : s=right left)';
MPRINT(PLOTIT):   if place = 1 then pl = trim(pl) || ' (v=1 * h=0 -1 to -2 by alt)';
MPRINT(PLOTIT):   else if place = 2 then pl = trim(pl) || ' (v=1 -1 * h=0 -1 to -5 by alt)';
MPRINT(PLOTIT):   else if place > 2 then pl = trim(pl) || ' (v=1 to 2 by alt * h=0 -1 to -10 by alt)';
MPRINT(PLOTIT):   if place > 3 then do;
MPRINT(PLOTIT):   pl = trim(pl) || ' (s=center right left * v=0 1 to ' || compress(put(place - 2,5.)) || ' by alt * h=0 -1 to ' || compress(put(-3 * (place - 2),5.)) || ' by alt * l= 1 to ' || compress(put(2 + (place - 3.5) / 3,5.)) || ')';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   pl = 'placement=(' || trim(pl) || ')';
MPRINT(PLOTIT):   if place > 4 then do;
MPRINT(PLOTIT):   pl = trim(pl) || ' penalty(7)=' || compress(put(1.5 * place,5.));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('maxiter' ,compress(put(maxiter,5.)));
MPRINT(PLOTIT):   call symput('iternum' ,compress(put(iternum,5.)));
MPRINT(PLOTIT):   call symput('place' ,compress(put(place,5.)));
MPRINT(PLOTIT):   call symput('ls' ,compress(put(ls,5.)));
MPRINT(PLOTIT):   call symput('actualps',compress(put(actualps,5.)));
MPRINT(PLOTIT):   if pl ne ' ' then call symput('pl',trim(pl));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------initialize data sets because they might not be created------;
MPRINT(PLOTIT):   data tempdat3;
MPRINT(PLOTIT):   value = .;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat4;
MPRINT(PLOTIT):   retain label symbol startposition ' ' vaxis haxis penalty lines vshift hshift length n vposition hposition 0;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   options nonumber ls=65 ps=45;
Sistema SAS
 
MPRINT(PLOTIT):   ods exclude all;
MPRINT(PLOTIT):   proc plot nolegend formchar='|----|+|---'
data=preproc vtoh=2;
MPRINT(PLOTIT):   ods output LocateFacts(nowarn)=tempdat3
Locate(nowarn)=tempdat4 Plot=tempdat5;
MPRINT(PLOTIT):   plot Dim2 * Dim1 $ _idvar_ = _symbol_ /
haxis=by 0.1 vaxis=by 0.1 box placement=((h=2 -2 : s=right left)
(v=1 -1 * h=0 -1 to -5 by alt)) list=-1;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):   label Dim2 = '#' Dim1 = '#';
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   quit;
MPRINT(PLOTIT):   ods exclude none;
MPRINT(PLOTIT):   ods output close;
MPRINT(PLOTIT):   options NONUMBER ls=256 ps=10000;
MPRINT(PLOTIT):   *------look at the total penalty------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   done = '0';
MPRINT(PLOTIT):   set tempdat3(obs=1 rename=(value=penalty));
MPRINT(PLOTIT):   if n(penalty) & penalty <= 0 then done = '1';
MPRINT(PLOTIT):   iternum = 1;
MPRINT(PLOTIT):   *------print iteration history line------;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   place = 2;
MPRINT(PLOTIT):   ls = 65;
MPRINT(PLOTIT):   actualps = 45;
MPRINT(PLOTIT):   m = floor((256 - 55) / 2);
MPRINT(PLOTIT):   if iternum = 1 then do;
MPRINT(PLOTIT):   put / +m +5 'Iterative Scatter Plot of Labeled Points Macro' /;
MPRINT(PLOTIT):   put +m 'Iteration' +4 'Place' +4 'Line Size' +4 'Page Size' +4 'Penalty';
MPRINT(PLOTIT):   put +m '-------------------------------------------------------';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   m = m - 4;
MPRINT(PLOTIT):   put +m iternum 9. place 11. ls 11. actualps 13. penalty 13.;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if iternum >= 15 then done = '1';
MPRINT(PLOTIT):   call symput('done',compress(done));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
 
                                                                                                         Iterative Scatter Plot of Labeled Points Macro
 
                                                                                                    Iteration    Place    Line Size    Page Size    Penalty
                                                                                                    -------------------------------------------------------
                                                                                                        1          2         65           45            0
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *======================post-process plot, step 1======================;
MPRINT(PLOTIT):   *------put titles, footnotes in plot------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat6;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sql;
MPRINT(PLOTIT):   create view tempdat6 as select * from dictionary.titles;
MPRINT(PLOTIT):   quit;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   set tempdat6 end=eof;
MPRINT(PLOTIT):   if type = 'T' then ntitles + 1;
MPRINT(PLOTIT):   if eof then call symput('ntitles', trim(put(ntitles, 2. -L)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat5(keep=batch);
MPRINT(PLOTIT):   length batch $ 256;
MPRINT(PLOTIT):   if 0 then set tempdat5;
MPRINT(PLOTIT):   set tempdat6(where=(type='T') rename=(text=batch)) tempdat5 tempdat6(where=(type='F') rename=(text=batch));
MPRINT(PLOTIT):   if type = 'F' or type = 'T' then do;
MPRINT(PLOTIT):   i = round((65 - length(batch)) / 2);
MPRINT(PLOTIT):   if i > 1 then do;
MPRINT(PLOTIT):   substr(batch, i) = batch;
MPRINT(PLOTIT):   substr(batch, 1, i - 1) = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not (batch = ' ' and lag(batch) = ' ') then output;
MPRINT(PLOTIT):   if type = 'T' and number = 1 then do;
MPRINT(PLOTIT):   batch = ' ';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------start storing locations of lines------;
MPRINT(PLOTIT):   data anno(keep=tx ty comment);
MPRINT(PLOTIT):   length c $ 1 line title $ 256 comment $ 80;
MPRINT(PLOTIT):   retain coln top bottom afterbot nlines xlabline 0 topn botn topextra botextra past 0 vtick1 vtick2 htick1 htick2 . counttop 1 right left col1 labcolum 65 title ' ';
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   *------skip leading blank lines------;
MPRINT(PLOTIT):   if _n_ = 1 then do while(line = ' ');
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------skip note lines and subsequent blanks lines------;
MPRINT(PLOTIT):   if xlabline and _n_ > xlabline and not past then do;
MPRINT(PLOTIT):   if line =: 'NOTE:' then line = ' ';
MPRINT(PLOTIT):   if _n_ > xlabline + 1 then do;
MPRINT(PLOTIT):   do while((line =: 'NOTE:' or line = ' ') and not eof);
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------initialize------;
MPRINT(PLOTIT):   length = length(line);
MPRINT(PLOTIT):   if line = ' ' then length = 0;
MPRINT(PLOTIT):   comment = 'frame, tick';
MPRINT(PLOTIT):   *------store first title line------;
MPRINT(PLOTIT):   if title = ' ' then title = line;
MPRINT(PLOTIT):   *------find frame location------;
MPRINT(PLOTIT):   if left(line) =: '-' and index(line,'-+-') and substr(line,length,1) = '-' then do;
MPRINT(PLOTIT):   bottom = _n_;
MPRINT(PLOTIT):   if top = 0 then do;
MPRINT(PLOTIT):   top = _n_;
MPRINT(PLOTIT):   left = index(line,'-');
MPRINT(PLOTIT):   right = length;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------flag lines after the bottom line of the plot------;
MPRINT(PLOTIT):   c = substr(line,left,1);
MPRINT(PLOTIT):   if _n_ > top and afterbot = 0 and c = '-' and substr(line,right,1) = '-' then afterbot = 1;
MPRINT(PLOTIT):   else if afterbot then afterbot = afterbot + 1;
MPRINT(PLOTIT):   *------can we drop extra top of the plot lines?------;
MPRINT(PLOTIT):   if top and _n_ > top and not afterbot then do;
MPRINT(PLOTIT):   botn = botn + 1;
MPRINT(PLOTIT):   if c = '+' then do;
MPRINT(PLOTIT):   counttop = 0;
MPRINT(PLOTIT):   botextra = 0;
MPRINT(PLOTIT):   botn = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   if counttop then topn = topn + 1;
MPRINT(PLOTIT):   if compress(line,'| ') = ' ' then do;
MPRINT(PLOTIT):   if abs(_n_ - top - 1 - topextra) < 1e-8 then topextra = topextra + 1;
MPRINT(PLOTIT):   botextra = botextra + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------output horizontal axis tick mark coordinates------;
MPRINT(PLOTIT):   if afterbot = 1 then do;
MPRINT(PLOTIT):   ty = .;
MPRINT(PLOTIT):   do i = left to right;
MPRINT(PLOTIT):   if substr(line,i,1) = '+' then do;
MPRINT(PLOTIT):   tx = i;
MPRINT(PLOTIT):   if nmiss(htick1) then htick1 = tx;
MPRINT(PLOTIT):   else if nmiss(htick2) then htick2 = tx;
MPRINT(PLOTIT):   output anno;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------find last line in plot region------;
MPRINT(PLOTIT):   if afterbot > 2 and not past then do;
MPRINT(PLOTIT):   past = (index(line,"*** Wrapped Listing of Point Locations ***") or index(line,title));
MPRINT(PLOTIT):   if length and not past then do;
MPRINT(PLOTIT):   nlines = _n_;
MPRINT(PLOTIT):   *------find x-axis label line------;
MPRINT(PLOTIT):   if compress(line) = '#' then do;
MPRINT(PLOTIT):   xlabline = _n_;
MPRINT(PLOTIT):   *------check for vertically printing ticks------;
MPRINT(PLOTIT):   if not (afterbot = 3 or afterbot = 4) then do;
MPRINT(PLOTIT):   put 'WARNING: Ticks may be printing vertically.  ' 'The plot may be wrong.';
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   call symput('intrls' ,'1');
MPRINT(PLOTIT):   call symput('intrtick','0');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------first, last nonblank column, label column------;
MPRINT(PLOTIT):   if nlines = 0 and length then do;
MPRINT(PLOTIT):   coln = max(coln,length);
MPRINT(PLOTIT):   i = length + 1 - length(left(line));
MPRINT(PLOTIT):   col1 = min(col1,i);
MPRINT(PLOTIT):   if top then labcolum = min(labcolum,i);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------output vertical axis tick mark coordinates------;
MPRINT(PLOTIT):   if top and substr(line,left,1) = '+' then do;
MPRINT(PLOTIT):   tx = .;
MPRINT(PLOTIT):   ty = _n_;
MPRINT(PLOTIT):   if nmiss(vtick1) then vtick1 = ty;
MPRINT(PLOTIT):   else if nmiss(vtick2) then vtick2 = ty;
MPRINT(PLOTIT):   output anno;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------on last observation, output results to macro variables------;
MPRINT(PLOTIT):   if past or eof then do;
MPRINT(PLOTIT):   *------check VTOH=------;
MPRINT(PLOTIT):   vtoh = input(symget('vtoh'),?? 32.);
MPRINT(PLOTIT):   if nmiss(vtoh) then vtoh = 2;
MPRINT(PLOTIT):   else if n(htick1,htick2,vtick1,vtick2) = 4 then do;
MPRINT(PLOTIT):   vtoh = vtick2 - vtick1;
MPRINT(PLOTIT):   if vtoh > 1e-8 then vtoh = (htick2 - htick1) / vtoh;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   * put vtoh= vtick2= vtick1= htick2= htick1=;
MPRINT(PLOTIT):   call symput('vtoh',compress(put(vtoh,best15.)));
MPRINT(PLOTIT):   *------size of plot parameters------;
MPRINT(PLOTIT):   ls = coln - col1 + 1;
MPRINT(PLOTIT):   left = left - col1 + 1;
MPRINT(PLOTIT):   right = right - col1 + 1;
MPRINT(PLOTIT):   labcolum = labcolum - col1 + 1;
MPRINT(PLOTIT):   hpos = ls + 0.5 * (1.0 + abs(1.5));
MPRINT(PLOTIT):   vpos = nlines + 1;
MPRINT(PLOTIT):   uhpos = input(symget('hpos'),?? 32.);
MPRINT(PLOTIT):   if n(uhpos) then do;
MPRINT(PLOTIT):   if uhpos < hpos then do;
MPRINT(PLOTIT):   put "ERROR: HPOS= is too small.  " 'The default ' 'minimum for ' 'this plot is ' hpos +(-1) '.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else hpos = uhpos;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   uvpos = input(symget('vpos'),?? 32.);
MPRINT(PLOTIT):   if n(uvpos) then do;
MPRINT(PLOTIT):   if uvpos < vpos then do;
MPRINT(PLOTIT):   put "ERROR: VPOS= is too small.  " 'The electronics' 'minimum for ' 'this plot is ' vpos +(-1) '.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else vpos = uvpos;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   hpos = ceil(hpos);
MPRINT(PLOTIT):   vpos = ceil(vpos);
MPRINT(PLOTIT):   *------scale plot to use MAKEFIT= proportion of area------;
MPRINT(PLOTIT):   makefit1 = input(symget('makefit'),?? 32.);
MPRINT(PLOTIT):   makefit = makefit1;
MPRINT(PLOTIT):   *------makefit value can be changed inside this loop------;
MPRINT(PLOTIT):   do until(itfits);
MPRINT(PLOTIT):   itfits = 1;
MPRINT(PLOTIT):   *------determine hsize and vsize------;
MPRINT(PLOTIT):   hsize = input(symget('hsize'),?? 32.);
MPRINT(PLOTIT):   vsize = input(symget('vsize'),?? 32.);
MPRINT(PLOTIT):   if n(vsize) and nmiss(hsize) then hsize = hpos * vsize / (vpos * vtoh);
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   if n(hsize) = 0 then hsize = 8.33;
MPRINT(PLOTIT):   if n(vsize) = 0 then vsize = (vpos / hpos) * hsize * vtoh;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *-------scale sizes so plot fits in specified area------;
MPRINT(PLOTIT):   if n(makefit) then do;
MPRINT(PLOTIT):   scale = max(hsize / (abs(makefit) * (8.33)), vsize / (abs(makefit) * (6.24)));
MPRINT(PLOTIT):   if scale > 1.0 then do;
MPRINT(PLOTIT):   hsize = hsize / scale;
MPRINT(PLOTIT):   vsize = vsize / scale;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------add extra positions to center plot, extend axes------;
MPRINT(PLOTIT):   extendl = input(symget('extendl'),?? 32.);
MPRINT(PLOTIT):   extendr = input(symget('extendr'),?? 32.);
MPRINT(PLOTIT):   extendt = input(symget('extendt'),?? 32.);
MPRINT(PLOTIT):   extendb = input(symget('extendb'),?? 32.);
MPRINT(PLOTIT):   setlr = (nmiss(extendl,extendr) = 2 and not 0);
MPRINT(PLOTIT):   settb = (nmiss(extendt,extendb) = 2 and not 0);
MPRINT(PLOTIT):   *------centering, compute horizontal, vertical offsets------;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   hposoff = max(0.5 * ((8.33) - hsize) / (hsize / hpos), 0);
MPRINT(PLOTIT):   vposoff = max(0.5 * ((6.24) - vsize) / (vsize / vpos), 0);
MPRINT(PLOTIT):   hsize = 8.33;
MPRINT(PLOTIT):   vsize = 6.24;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   vposoff = 0;
MPRINT(PLOTIT):   hposoff = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------can we extend the left and right axes a little?------;
MPRINT(PLOTIT):   if setlr then do;
MPRINT(PLOTIT):   extendl = max(min(hposoff - 2.5, 2), 0);
MPRINT(PLOTIT):   extendr = extendl;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------even the top and bottom extra positions------;
MPRINT(PLOTIT):   if settb and topn > botn then do;
MPRINT(PLOTIT):   i = topn - botn;
MPRINT(PLOTIT):   if i <= topextra then extendt = -i;
MPRINT(PLOTIT):   else extendb = i;
MPRINT(PLOTIT):   i = -0.5 * sum(extendb,extendt);
MPRINT(PLOTIT):   if i > 0 then do;
MPRINT(PLOTIT):   extendb = sum(extendb,i);
MPRINT(PLOTIT):   extendt = sum(extendt,i);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set the extend variables if not set yet------;
MPRINT(PLOTIT):   if nmiss(extendt) then extendt = 0;
MPRINT(PLOTIT):   if nmiss(extendl) then extendl = 0;
MPRINT(PLOTIT):   if nmiss(extendr) then extendr = 0;
MPRINT(PLOTIT):   if nmiss(extendb) then extendb = 0;
MPRINT(PLOTIT):   *------make the plot square------;
MPRINT(PLOTIT):   if 0 and not 0 then do;
MPRINT(PLOTIT):   *------first try to adjust the left and right------;
MPRINT(PLOTIT):   if setlr then do;
MPRINT(PLOTIT):   setlr = ((right - left + extendr + extendl) - (vtoh * (bottom - top + extendt + extendb))) / 2;
MPRINT(PLOTIT):   extendl = extendl - setlr;
MPRINT(PLOTIT):   extendl = max(min(extendl,hposoff - 2.5),0);
MPRINT(PLOTIT):   extendr = extendl;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------next try to adjust the top and bottom------;
MPRINT(PLOTIT):   if settb then do;
MPRINT(PLOTIT):   settb = ((right - left + extendr + extendl) - (vtoh * (bottom - top + extendt + extendb))) / (-2 * vtoh);
MPRINT(PLOTIT):   extendt = extendt - settb;
MPRINT(PLOTIT):   extendb = extendb - settb;
MPRINT(PLOTIT):   if -extendt > topextra then extendt = -topextra;
MPRINT(PLOTIT):   if -extendb > botextra then extendb = -botextra;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check to see if we succeeded, should be zero------;
MPRINT(PLOTIT):   setlr = (right - left + extendr + extendl) - vtoh * (bottom - top + extendt + extendb);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------see if the plot fits, otherwise try again------;
MPRINT(PLOTIT):   if n(makefit) and makefit < 0 and not 0 and ((0 and abs(setlr) > (1e-8 * hpos)) or (1 and (((extendl + extendr) > (2 * hposoff - 2.5)) or ((extendt + extendb) > (2 * vposoff - 0.25))))) and makefit <= 0.75 * makefit1 then do;
MPRINT(PLOTIT):   makefit = makefit * 0.99;
MPRINT(PLOTIT):   itfits = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------warn if we changed MAKEFIT= to make the plot square------;
MPRINT(PLOTIT):   if n(makefit) and abs(makefit - makefit1) > 1e-8 then put 'WARNING: MAKEFIT=' makefit 'was used ' 'to make ' 'the plot ' 'fit.';
MPRINT(PLOTIT):   * put extendt= extendb= extendl= extendr= vtoh= hposoff= vposoff=;
MPRINT(PLOTIT):   *------override electronics positions------;
MPRINT(PLOTIT):   if n(uhpos) then hposoff = 0;
MPRINT(PLOTIT):   else hpos = ceil(hpos + 2.0 * hposoff);
MPRINT(PLOTIT):   if n(uvpos) then vposoff = 0;
MPRINT(PLOTIT):   else vpos = ceil(vpos + 2.0 * vposoff);
MPRINT(PLOTIT):   *------output plot size parameters------;
MPRINT(PLOTIT):   call symput('col1', compress(put(col1,5.0)));
MPRINT(PLOTIT):   call symput('actualls', compress(put(ls,5.0)));
MPRINT(PLOTIT):   call symput('nlines', compress(put(nlines,5.0)));
MPRINT(PLOTIT):   call symput('top', compress(put(top,5.0)));
MPRINT(PLOTIT):   call symput('bottom', compress(put(bottom,5.0)));
MPRINT(PLOTIT):   call symput('left', compress(put(left,5.0)));
MPRINT(PLOTIT):   call symput('right', compress(put(right,5.0)));
MPRINT(PLOTIT):   call symput('labcolum', compress(put(labcolum,5.0)));
MPRINT(PLOTIT):   call symput('xlabline', compress(put(xlabline,5.0)));
MPRINT(PLOTIT):   call symput('hposoff', compress(put(hposoff,7.1)));
MPRINT(PLOTIT):   call symput('vposoff', compress(put(vposoff,7.1)));
MPRINT(PLOTIT):   call symput('hpos', compress(put(hpos,9.0)));
MPRINT(PLOTIT):   call symput('vpos', compress(put(vpos,9.0)));
MPRINT(PLOTIT):   call symput('hsize', compress(put(hsize,9.2)));
MPRINT(PLOTIT):   call symput('vsize', compress(put(vsize,9.2)));
MPRINT(PLOTIT):   call symput('extendl', compress(put(extendl,9.2)));
MPRINT(PLOTIT):   call symput('extendr', compress(put(extendr,9.2)));
MPRINT(PLOTIT):   call symput('extendt', compress(put(extendt,9.2)));
MPRINT(PLOTIT):   call symput('extendb', compress(put(extendb,9.2)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   getline: set tempdat5(keep=batch rename=(batch=line)) end=eof;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *=======================post-process plot, step 2======================;
MPRINT(PLOTIT):   data tempdat1(keep=function x y text angle position comment color size style n __xvar __yvar __otype) tempdat2(keep=tx ty comment _radius_ color size style n __xvar __yvar);
MPRINT(PLOTIT):   length text line label $ 256 function color style $ 8 position symbol $ 1 comment $ 80;
MPRINT(PLOTIT):   retain style ' ';
MPRINT(PLOTIT):   function = 'LABEL';
MPRINT(PLOTIT):   color = ' ';
MPRINT(PLOTIT):   size = .;
MPRINT(PLOTIT):   *------read the plot------;
MPRINT(PLOTIT):   if _n_ <= 26 then do;
MPRINT(PLOTIT):   comment = 'text';
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   *------skip leading blank lines------;
MPRINT(PLOTIT):   if _n_ = 1 then do while(line = ' ');
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------skip note lines and subsequent blanks lines------;
MPRINT(PLOTIT):   if _n_ > 26 then do;
MPRINT(PLOTIT):   if line =: 'NOTE:' then line = ' ';
MPRINT(PLOTIT):   if _n_ > 26 + 1 then do;
MPRINT(PLOTIT):   do while((line =: 'NOTE:' or line = ' ') and not eof);
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   line = substr(line, 1, 64);
MPRINT(PLOTIT):   *------is this an axis line?------;
MPRINT(PLOTIT):   istop = (_n_ = 3);
MPRINT(PLOTIT):   isbot = (_n_ = 23);
MPRINT(PLOTIT):   *------set the y-axis label------;
MPRINT(PLOTIT):   if 3 <= _n_ <= 23 and substr(line,1,1) = '#' then substr(line,1,1) = ' ';
MPRINT(PLOTIT):   if _n_ = 26 then do;
MPRINT(PLOTIT):   y = ((2 * 26) - 3 - 23) / 2;
MPRINT(PLOTIT):   x = 1;
MPRINT(PLOTIT):   text = symget('labely');
MPRINT(PLOTIT):   if 4.9 > 1 then x = x - 0.5;
MPRINT(PLOTIT):   if length(text) > 1 then angle = 90;
MPRINT(PLOTIT):   comment = 'text, y label';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   angle = 0;
MPRINT(PLOTIT):   *------remove stuff in the plot------;
MPRINT(PLOTIT):   if 3 <= _n_ <= 23 then substr(line,8,64 - 8 + 1) = ' ';
MPRINT(PLOTIT):   *------output ticks, titles, and so on------;
MPRINT(PLOTIT):   y = 26 - _n_;
MPRINT(PLOTIT):   do iwhile = 1 to 65 while(line ne ' ');
MPRINT(PLOTIT):   i = length(line) - length(left(line)) + 1;
MPRINT(PLOTIT):   text = substr(line,i,1);
MPRINT(PLOTIT):   *------isolate and process one label------;
MPRINT(PLOTIT):   if text ne ' ' then do;
MPRINT(PLOTIT):   position = '+';
MPRINT(PLOTIT):   x = i;
MPRINT(PLOTIT):   *------special handling of title lines, xaxis label------;
MPRINT(PLOTIT):   if _n_ < 3 or _n_ >= 26 then do;
MPRINT(PLOTIT):   text = left(line);
MPRINT(PLOTIT):   i = 64 + 1;
MPRINT(PLOTIT):   line = ' ';
MPRINT(PLOTIT):   x = (8 + 64) / 2.0;
MPRINT(PLOTIT):   *------special handling of title lines------;
MPRINT(PLOTIT):   if _n_ < 3 then do;
MPRINT(PLOTIT):   comment = 'text, title';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------footnotes------;
MPRINT(PLOTIT):   else if _n_ > 26 then do;
MPRINT(PLOTIT):   comment = 'text, footnote';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle x-axis label------;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   text = symget('labelx');
MPRINT(PLOTIT):   comment = 'text, x label';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle label outside the plot, not title------;
MPRINT(PLOTIT):   else if i < 8 or _n_ > 23 then do;
MPRINT(PLOTIT):   do j = i + 1 to 64 until(done);
MPRINT(PLOTIT):   done = substr(line,j,1) = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   text = substr(line,i,j - i + 1);
MPRINT(PLOTIT):   substr(line,i,j - i + 1) = ' ';
MPRINT(PLOTIT):   *------handle ticks------;
MPRINT(PLOTIT):   position = '<';
MPRINT(PLOTIT):   x = i + length(text) - 1;
MPRINT(PLOTIT):   if j < 8 then comment = 'text, y tick';
MPRINT(PLOTIT):   else if _n_ < 26 then do;
MPRINT(PLOTIT):   comment = 'text, x tick';
MPRINT(PLOTIT):   *------tweak the placement a tad with new options------;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else comment = 'text, other';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   * put i= text= position=;
MPRINT(PLOTIT):   *------output label------;
MPRINT(PLOTIT):   if text ne ' ' then output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if iwhile >= 65 and symget('abort') ne '1' then do;
MPRINT(PLOTIT):   put 'ERROR: The frame location algorithm is confused.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------read the labels------;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   *------bring in the extra observations------;
MPRINT(PLOTIT):   eofextra = 0;
MPRINT(PLOTIT):   p = '+';
MPRINT(PLOTIT):   tx = .;
MPRINT(PLOTIT):   ty = .;
MPRINT(PLOTIT):   vshift = .;
MPRINT(PLOTIT):   hshift = .;
MPRINT(PLOTIT):   text = ' ';
MPRINT(PLOTIT):   n = 0;
MPRINT(PLOTIT):   lines = 0;
MPRINT(PLOTIT):   do while(not eofextra);
MPRINT(PLOTIT):   set extraobs(keep=__: _radius_) end=eofextra;
MPRINT(PLOTIT):   comment = 'extra,';
MPRINT(PLOTIT):   if n(__xvar,__yvar) = 2 then link process;
MPRINT(PLOTIT):   n = n + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------determine point count------;
MPRINT(PLOTIT):   set tempdat3(firstobs=2 rename=(value=npoints));
MPRINT(PLOTIT):   if nmiss(npoints) then do;
MPRINT(PLOTIT):   npoints = 0;
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   sumh = 0;
MPRINT(PLOTIT):   sumv = 0;
MPRINT(PLOTIT):   sumx = 0;
MPRINT(PLOTIT):   sumy = 0;
MPRINT(PLOTIT):   sumx2 = 0;
MPRINT(PLOTIT):   sumy2 = 0;
MPRINT(PLOTIT):   sumxh = 0;
MPRINT(PLOTIT):   sumyv = 0;
MPRINT(PLOTIT):   nobs = 0;
MPRINT(PLOTIT):   midh = 64 / 2;
MPRINT(PLOTIT):   midv = 45 / 2;
MPRINT(PLOTIT):   midx = (0.2417594791608 + -0.105041826197) / 2;
MPRINT(PLOTIT):   midy = (0.0762472829928 + -0.10946735166) / 2;
MPRINT(PLOTIT):   *------read the labels------;
MPRINT(PLOTIT):   do pointn = 1 to npoints;
MPRINT(PLOTIT):   link getlabel;
MPRINT(PLOTIT):   ty = vpositio;
MPRINT(PLOTIT):   tx = hpositio;
MPRINT(PLOTIT):   comment = 'list,';
MPRINT(PLOTIT):   if _error_ = 1 then put _all_;
MPRINT(PLOTIT):   if startpos = 'Center' then p = '+';
MPRINT(PLOTIT):   else if startpos = 'Left' then p = '<';
MPRINT(PLOTIT):   else p = '>';
MPRINT(PLOTIT):   text = symbol;
MPRINT(PLOTIT):   i = n;
MPRINT(PLOTIT):   set preproc(keep=__: _radius_) point=i;
MPRINT(PLOTIT):   link process;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------least-squares slope and intercept------;
MPRINT(PLOTIT):   b = .;
MPRINT(PLOTIT):   a = .;
MPRINT(PLOTIT):   if nobs > 0 then do;
MPRINT(PLOTIT):   d = sumx - nobs * midx;
MPRINT(PLOTIT):   b = nobs * sumx2 - d * d;
MPRINT(PLOTIT):   if abs(b) < 1e-8 then b = 0;
MPRINT(PLOTIT):   else b = (nobs * sumxh - d * (sumh - nobs * midh)) / b;
MPRINT(PLOTIT):   a = sumh / nobs - b * sumx / nobs;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('hslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('hinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   if nobs > 0 then do;
MPRINT(PLOTIT):   d = (sumy - nobs * midy);
MPRINT(PLOTIT):   b = (nobs * sumy2 - d * d);
MPRINT(PLOTIT):   if abs(b) < 1e-8 then b = 0;
MPRINT(PLOTIT):   else b = (nobs * sumyv - d * (sumv - nobs * midv)) / b;
MPRINT(PLOTIT):   a = sumv / nobs - b * sumy / nobs;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('vslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('vinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   process: *------handle a point in the plot------;
MPRINT(PLOTIT):   type = __stype;
MPRINT(PLOTIT):   if n(tx) then do;
MPRINT(PLOTIT):   tx = tx + 8 + 1;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(ty) then do;
MPRINT(PLOTIT):   ty = ty + 1 + 26 - 23;
MPRINT(PLOTIT):   y = ty;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   colorset = 0;
MPRINT(PLOTIT):   *------random colors------;
MPRINT(PLOTIT):   *------store full label------;
MPRINT(PLOTIT):   if lines then do;
MPRINT(PLOTIT):   line = label;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   line = compress('('||type||',') || ' ' || compress(put(n,5.)||')');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set colors, sizes, and so on for symbols------;
MPRINT(PLOTIT):   if not colorset then color = __scolor;
MPRINT(PLOTIT):   size = __ssize;
MPRINT(PLOTIT):   style = __sfont;
MPRINT(PLOTIT):   if text = 'NONE' then text = ' ';
MPRINT(PLOTIT):   if __symbol ne '00'x then text = __symbol;
MPRINT(PLOTIT):   if type = 'contour' then function = 'BAR';
MPRINT(PLOTIT):   else if type = 'square' then function = 'SYMBOL';
MPRINT(PLOTIT):   else function = 'LABEL';
MPRINT(PLOTIT):   *------output list info to lines data set------;
MPRINT(PLOTIT):   if type =: 'vector' or type =: 'circle' then do;
MPRINT(PLOTIT):   comment = trim(comment) || ' ' || trim(type) || ', ' || line;
MPRINT(PLOTIT):   output tempdat2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------output list info to text data set------;
MPRINT(PLOTIT):   if (text ne ' ' and type ne 'dummy') or type = 'contour' or type = 'function' then do;
MPRINT(PLOTIT):   position = '+';
MPRINT(PLOTIT):   comment = trim(scan(comment,1,' ')) || ' text, ' || trim(type) || ', ' || line;
MPRINT(PLOTIT):   output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------intermediate results for slope, intercept------;
MPRINT(PLOTIT):   if n(tx,ty,__xvar,__yvar) = 4 then do;
MPRINT(PLOTIT):   sumh = sumh + tx;
MPRINT(PLOTIT):   sumv = sumv + ty;
MPRINT(PLOTIT):   sumx = sumx + __xvar;
MPRINT(PLOTIT):   sumy = sumy + __yvar;
MPRINT(PLOTIT):   d = __xvar - midx;
MPRINT(PLOTIT):   sumx2 = sumx2 + d * d;
MPRINT(PLOTIT):   sumxh = sumxh + (tx - midh) * d;
MPRINT(PLOTIT):   d = __yvar - midy;
MPRINT(PLOTIT):   sumy2 = sumy2 + d * d;
MPRINT(PLOTIT):   sumyv = sumyv + (ty - midv) * d;
MPRINT(PLOTIT):   nobs = nobs + 1;
MPRINT(PLOTIT):   * put sumh= tx= sumv= ty= sumx= __xvar= sumy= __yvar= midx= sumx2= sumxh= midy= sumy2= sumyv= nobs=;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle the label fragments------;
MPRINT(PLOTIT):   if lines then do;
MPRINT(PLOTIT):   if not colorset then color = __lcolor;
MPRINT(PLOTIT):   size = __lsize;
MPRINT(PLOTIT):   style = __lfont;
MPRINT(PLOTIT):   function = 'LABEL';
MPRINT(PLOTIT):   position = p;
MPRINT(PLOTIT):   comment = trim(scan(comment,1,' ')) || ' text, label, ' || trim(type) || ', ' || line;
MPRINT(PLOTIT):   shift = floor(1e-8 + (lines - 1) / 2);
MPRINT(PLOTIT):   do i = 1 to lines;
MPRINT(PLOTIT):   if lines > 1 then link getlabel;
MPRINT(PLOTIT):   text = label;
MPRINT(PLOTIT):   if text ne ' ' and type ne 'dummy' then do;
MPRINT(PLOTIT):   x = tx + hshift;
MPRINT(PLOTIT):   y = 1 + ty + vshift + shift - i;
MPRINT(PLOTIT):   output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   getline: set tempdat5(keep=batch rename=(batch=line)) end=eof;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   getlabel: set tempdat4(keep=lines symbol n label vshift hshift vposition hposition startposition rename=(startposition=startpos vposition=vpositio hposition=hpositio));
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------delete intermediate data sets------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete extraobs;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------tick mark based slope and intercept------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   merge anno(where=(index(substr(comment,1,12),'tick')) keep=ty tx comment) tempdat1(where=(index(comment,'tick')) keep=text comment);
MPRINT(PLOTIT):   if n(ty) then ty = 26 - ty;
MPRINT(PLOTIT):   data = input(text,?? 32.);
MPRINT(PLOTIT):   if (0 and n(tx)) or (0 and n(ty)) then do;
MPRINT(PLOTIT):   if data > 0 then data = log10(data);
MPRINT(PLOTIT):   else data = .;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   oldty = lag(ty);
MPRINT(PLOTIT):   oldtx = lag(tx);
MPRINT(PLOTIT):   olddata = lag(data);
MPRINT(PLOTIT):   if n(data,olddata) = 2 then do;
MPRINT(PLOTIT):   den = data - olddata;
MPRINT(PLOTIT):   if abs(den) > 1e-8 then do;
MPRINT(PLOTIT):   if n(oldty,ty) = 2 then do;
MPRINT(PLOTIT):   b = (ty - oldty) / den;
MPRINT(PLOTIT):   a = ty - b * data;
MPRINT(PLOTIT):   call symput('vslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('vinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(oldtx,tx) = 2 then do;
MPRINT(PLOTIT):   b = (tx - oldtx) / den;
MPRINT(PLOTIT):   a = tx - b * data - 1 + 1;
MPRINT(PLOTIT):   call symput('hslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('hinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------switch top and bottom to annotate coordinates------;
MPRINT(PLOTIT):   *------make goptions statement------;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *=================create annotate data set with lines=================;
MPRINT(PLOTIT):   data anno(keep=function x y comment color size style n);
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length text $ 256 comment $ 100 function color style $ 8;
MPRINT(PLOTIT):   retain curven -1 tickaxes "LBFh" vtoh 2 vinter 15 hinter 31 hslope 100 vslope 50 hmax 0.2417594791608 vmax 0.0762472829928 vmin -0.10946735166 hmin -0.105041826197 singular 1e-8 left 8 right 64 top 23 bottom 3;
MPRINT(PLOTIT):   array lsizes[5] _temporary_ (1 1 1 1 1);
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   *------check slope, intercept------;
MPRINT(PLOTIT):   if n(hinter,vinter,hslope,vslope) ne 4 then do;
MPRINT(PLOTIT):   put 'ERROR: Plot algorithm failed.  ' 'Coordinates could ' 'not be ' 'computed.  ' 'Vertically printing ' 'ticks is a ' 'possible cause.  ' 'Another ' 'explanation ' 'is no locate list ' 'was available.  ' 'Look ' 'at the ' 'printer plot
' 'to check.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------how far should plot be extended?------;
MPRINT(PLOTIT):   extendl = input(symget('extendl'), ?? 32.);
MPRINT(PLOTIT):   extendr = input(symget('extendr'), ?? 32.);
MPRINT(PLOTIT):   extendt = input(symget('extendt'), ?? 32.);
MPRINT(PLOTIT):   extendb = input(symget('extendb'), ?? 32.);
MPRINT(PLOTIT):   *------rectangle sizes for contour plots------;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   nobs = 0;
MPRINT(PLOTIT):   if nobs <= 0 and 0 > singular then nobs = sqrt(0);
MPRINT(PLOTIT):   nobs = nobs - 1;
MPRINT(PLOTIT):   if nobs > singular then vcontour = abs(vslope) * (vmax - vmin) / nobs;
MPRINT(PLOTIT):   else vcontour = .;
MPRINT(PLOTIT):   call symput('vcontour',compress(put(vcontour,best15.)));
MPRINT(PLOTIT):   nobs = 0;
MPRINT(PLOTIT):   if nobs <= 0 and 0 > singular then nobs = sqrt(0);
MPRINT(PLOTIT):   nobs = nobs - 1;
MPRINT(PLOTIT):   if nobs > singular then hcontour = abs(hslope) * (hmax - hmin) / nobs;
MPRINT(PLOTIT):   else hcontour = .;
MPRINT(PLOTIT):   call symput('hcontour',compress(put(hcontour,best15.)));
MPRINT(PLOTIT):   *------optionally close up all white space------;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   if n(hcontour) then do;
MPRINT(PLOTIT):   extendl = extendl + left - (hinter + hslope * hmin - 0.5 * hcontour);
MPRINT(PLOTIT):   extendr = extendr + (hinter + hslope * hmax + 0.5 * hcontour) - right;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(vcontour) then do;
MPRINT(PLOTIT):   extendt = extendt + (vinter + vslope * vmax + 0.5 * vcontour) - top;
MPRINT(PLOTIT):   extendb = extendb + bottom - (vinter + vslope * vmin - 0.5 * vcontour);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------optionally close up white space with square contours------;
MPRINT(PLOTIT):   if 0 and 0 and not 0 then do;
MPRINT(PLOTIT):   contour = 1 * 0.5;
MPRINT(PLOTIT):   extendl = extendl + left - (hinter + hslope * hmin) + vtoh * contour;
MPRINT(PLOTIT):   extendr = extendr + (hinter + hslope * hmax) - right + vtoh * contour;
MPRINT(PLOTIT):   extendt = extendt + (vinter + vslope * vmax) - top + contour;
MPRINT(PLOTIT):   extendb = extendb + bottom - (vinter + vslope * vmin) + contour;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   call symput('extendl',compress(put(extendl,best15.)));
MPRINT(PLOTIT):   call symput('extendr',compress(put(extendr,best15.)));
MPRINT(PLOTIT):   call symput('extendt',compress(put(extendt,best15.)));
MPRINT(PLOTIT):   call symput('extendb',compress(put(extendb,best15.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------final locations of the axes------;
MPRINT(PLOTIT):   left = left - extendl;
MPRINT(PLOTIT):   right = right + extendr;
MPRINT(PLOTIT):   top = top + extendt;
MPRINT(PLOTIT):   bottom = bottom - extendb;
MPRINT(PLOTIT):   *------frame background color------;
MPRINT(PLOTIT):   color = 'cxffffff';
MPRINT(PLOTIT):   size = 1;
MPRINT(PLOTIT):   style = 'msolid';
MPRINT(PLOTIT):   function = 'POLY';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   comment = 'frame, background, left top start';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   function = 'POLYCONT';
MPRINT(PLOTIT):   comment = 'frame, background, left bottom';
MPRINT(PLOTIT):   y = bottom;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, background, right bottom';
MPRINT(PLOTIT):   x = right;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, background, right top';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, background, left top';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   style = ' ';
MPRINT(PLOTIT):   *------draw frame------;
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   size = lsizes[1];
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   comment = 'frame, box, left top start';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   comment = 'frame, box, left bottom';
MPRINT(PLOTIT):   y = bottom;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, box, right bottom';
MPRINT(PLOTIT):   x = right;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   comment = 'frame, box, right top';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, box, left top';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------diagonal reference line------;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   comment = 'frame, diag, left bottom';
MPRINT(PLOTIT):   y = bottom;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, diag, right top';
MPRINT(PLOTIT):   x = right;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------vertical axis reference lines------;
MPRINT(PLOTIT):   *------horizontal axis reference lines------;
MPRINT(PLOTIT):   *------vertical axis minor tick marks------;
MPRINT(PLOTIT):   *------horizontal axis minor tick marks------;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set anno tempdat2(in=td2);
MPRINT(PLOTIT):   *------uncategorize symbol locations------;
MPRINT(PLOTIT):   i = (1 or 1) and td2 and not (comment =: 'frame');
MPRINT(PLOTIT):   if i or (nmiss(tx) and n(__xvar)) then tx = hinter + hslope * __xvar;
MPRINT(PLOTIT):   if i or (nmiss(ty) and n(__yvar)) then ty = vinter + vslope * __yvar;
MPRINT(PLOTIT):   *------figure out curve coordinates------;
MPRINT(PLOTIT):   if comment = 'frame, tick' then do;
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   size = lsizes[2];
MPRINT(PLOTIT):   halftick = 0.5 * abs(1.5);
MPRINT(PLOTIT):   ticklen = (1 + (1.5 > 0)) * halftick;
MPRINT(PLOTIT):   if index(tickaxes,'h') then ticklen = ticklen / 2;
MPRINT(PLOTIT):   *------adjust for blank cols------;
MPRINT(PLOTIT):   if n(tx) then tx = tx - 1 + 1;
MPRINT(PLOTIT):   *------draw y-axis tick marks------;
MPRINT(PLOTIT):   if nmiss(tx) then do;
MPRINT(PLOTIT):   y = 26 - ty;
MPRINT(PLOTIT):   if bottom <= y <= top then do;
MPRINT(PLOTIT):   if index(tickaxes,'L') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, left';
MPRINT(PLOTIT):   x = left - halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x + ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if index(tickaxes,'R') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, right';
MPRINT(PLOTIT):   x = right + halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x - ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw x-axis tick marks------;
MPRINT(PLOTIT):   else if nmiss(ty) then do;
MPRINT(PLOTIT):   halftick = halftick / vtoh;
MPRINT(PLOTIT):   ticklen = ticklen / vtoh;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   if left <= x <= right then do;
MPRINT(PLOTIT):   if index(tickaxes,'T') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, top';
MPRINT(PLOTIT):   y = top + halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   y = y - ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if index(tickaxes,'B') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, bottom';
MPRINT(PLOTIT):   y = bottom - halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   y = y + ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw vectors------;
MPRINT(PLOTIT):   else if index(substr(comment,1,13),'vector') then do;
MPRINT(PLOTIT):   size = lsizes[3];
MPRINT(PLOTIT):   x = hinter;
MPRINT(PLOTIT):   y = vinter;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   y = ty;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   r = index(comment,'vector');
MPRINT(PLOTIT):   comment = substr(comment,1,r + 7) || 'head,' || substr(comment,r + 7);
MPRINT(PLOTIT):   *------compute slope of vector------;
MPRINT(PLOTIT):   vecslope = tx - hinter;
MPRINT(PLOTIT):   if abs(vecslope) > singular then vecslope = (ty - vinter) / (vecslope / vtoh);
MPRINT(PLOTIT):   else vecslope = .;
MPRINT(PLOTIT):   *------find point on vector vecheadr distance from end------;
MPRINT(PLOTIT):   r = -0.1;
MPRINT(PLOTIT):   fromx = tx;
MPRINT(PLOTIT):   fromy = ty;
MPRINT(PLOTIT):   link linept;
MPRINT(PLOTIT):   fromx = tox;
MPRINT(PLOTIT):   fromy = toy;
MPRINT(PLOTIT):   *------slope of line perpendicular to vector------;
MPRINT(PLOTIT):   if nmiss(vecslope) then vecslope = 0;
MPRINT(PLOTIT):   else if abs(vecslope) > singular then vecslope = -1.0 / vecslope;
MPRINT(PLOTIT):   else vecslope = .;
MPRINT(PLOTIT):   *------draw vector head------;
MPRINT(PLOTIT):   r = -0.025;
MPRINT(PLOTIT):   link linept;
MPRINT(PLOTIT):   x = tox;
MPRINT(PLOTIT):   y = toy;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   r = 0.025;
MPRINT(PLOTIT):   link linept;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   y = ty;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = tox;
MPRINT(PLOTIT):   y = toy;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw circles------;
MPRINT(PLOTIT):   else if index(substr(comment,1,13),'circle') then do;
MPRINT(PLOTIT):   size = lsizes[4];
MPRINT(PLOTIT):   comsplit = 15 + (comment =: 'extra');
MPRINT(PLOTIT):   holdcom = comment;
MPRINT(PLOTIT):   pi = 3.1415926536;
MPRINT(PLOTIT):   do rad = _radius_;
MPRINT(PLOTIT):   radius = max(rad, 0) * hslope;
MPRINT(PLOTIT):   comment = substr(holdcom,1,comsplit - 1) || compress(put(rad,best5.) || ',') || ' ' || compress('(' || put(__xvar,best5.) || ',' || put(__yvar,best5.) || '),') || ' ' || substr(holdcom,comsplit);
MPRINT(PLOTIT):   i = (8.33) / (76);
MPRINT(PLOTIT):   if "in" = 'cm' then i = i / 2.54;
MPRINT(PLOTIT):   inc = 2.0 * pi / ceil(20 + (2.0 * pi * radius * i / .1) ** 0.8);
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   seg0 = (inc * singular) ** 2;
MPRINT(PLOTIT):   do i = -pi + inc to pi by inc;
MPRINT(PLOTIT):   x1 = tx + cos(i - inc) * radius;
MPRINT(PLOTIT):   y1 = ty + sin(i - inc) * radius / vtoh;
MPRINT(PLOTIT):   x2 = tx + cos(i) * radius;
MPRINT(PLOTIT):   y2 = ty + sin(i) * radius / vtoh;
MPRINT(PLOTIT):   link clipline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   linept: *------find a point (tox,toy) r distance from ------;
MPRINT(PLOTIT):   *------(fromx,fromy) on a line with slope vecslope------;
MPRINT(PLOTIT):   *------negative r means toward origin ------;
MPRINT(PLOTIT):   r = r * (76) / (8.33);
MPRINT(PLOTIT):   if "in" = 'cm' then r = r * 2.54;
MPRINT(PLOTIT):   vecdir = -sign(r);
MPRINT(PLOTIT):   if n(vecslope) then do;
MPRINT(PLOTIT):   vecm2 = sqrt(r * r / (1.0 + vecslope * vecslope));
MPRINT(PLOTIT):   if fromx > hinter then vecm2 = -vecm2;
MPRINT(PLOTIT):   tox = vecdir * vecm2 + fromx;
MPRINT(PLOTIT):   toy = vecdir * vecslope * vecm2 / vtoh + fromy;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   tox = fromx;
MPRINT(PLOTIT):   if fromy > vinter then vecdir = -vecdir;
MPRINT(PLOTIT):   toy = vecdir * abs(r) / vtoh + fromy;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   clipline: *------clip a line that crosses an edge------;
MPRINT(PLOTIT):   *------find where line crosses edges------;
MPRINT(PLOTIT):   b = (x2 - x1);
MPRINT(PLOTIT):   bi = (y2 - y1);
MPRINT(PLOTIT):   xtop = .;
MPRINT(PLOTIT):   xbottom = .;
MPRINT(PLOTIT):   yleft = .;
MPRINT(PLOTIT):   yright = .;
MPRINT(PLOTIT):   if abs(b) > singular then do;
MPRINT(PLOTIT):   b = (y2 - y1) / b;
MPRINT(PLOTIT):   a = y1 - b * x1;
MPRINT(PLOTIT):   yleft = b * left + a;
MPRINT(PLOTIT):   yright = b * right + a;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if abs(bi) > singular then do;
MPRINT(PLOTIT):   bi = (x2 - x1) / bi;
MPRINT(PLOTIT):   xtop = (top - y1) * bi + x1;
MPRINT(PLOTIT):   xbottom = (bottom - y1) * bi + x1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------adjust coordinates when line crosses edges------;
MPRINT(PLOTIT):   if x1 < left then do;
MPRINT(PLOTIT):   x1 = left;
MPRINT(PLOTIT):   y1 = yleft;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if x1 > right then do;
MPRINT(PLOTIT):   x1 = right;
MPRINT(PLOTIT):   y1 = yright;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y1 < bottom then do;
MPRINT(PLOTIT):   y1 = bottom;
MPRINT(PLOTIT):   x1 = xbottom;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y1 > top then do;
MPRINT(PLOTIT):   y1 = top;
MPRINT(PLOTIT):   x1 = xtop;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if x2 < left then do;
MPRINT(PLOTIT):   x2 = left;
MPRINT(PLOTIT):   y2 = yleft;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if x2 > right then do;
MPRINT(PLOTIT):   x2 = right;
MPRINT(PLOTIT):   y2 = yright;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y2 < bottom then do;
MPRINT(PLOTIT):   y2 = bottom;
MPRINT(PLOTIT):   x2 = xbottom;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y2 > top then do;
MPRINT(PLOTIT):   y2 = top;
MPRINT(PLOTIT):   x2 = xtop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------see if segment should be output------;
MPRINT(PLOTIT):   if n(x1,x2,y1,y2) = 4 and ((x2 - x1) ** 2 + (y2 - y1) ** 2) > seg0 then do;
MPRINT(PLOTIT):   *------draw line------;
MPRINT(PLOTIT):   if not justdraw then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   justdraw = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else justdraw = 0;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *------delete intermediate data sets------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat2 regdat;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *======================combine annotate data sets======================;
MPRINT(PLOTIT):   data anno;
MPRINT(PLOTIT):   keep color style function comment x y size text position angle n obstype;
MPRINT(PLOTIT):   length color style function $ 8 comment $ 100 x y size 8 text $ 64 position $ 1 angle n 8 obstype $ 12 excolors $ 64;
MPRINT(PLOTIT):   retain left right top bottom contok conoldx conoldy excolors;
MPRINT(PLOTIT):   array lsizes[5] _temporary_ (1 1 1 1 1);
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   left = 8 - 2.00;
MPRINT(PLOTIT):   right = 64 + 2.00;
MPRINT(PLOTIT):   top = 23 + -0.50;
MPRINT(PLOTIT):   bottom = 3 - 0.50;
MPRINT(PLOTIT):   contok = (n(0,0) = 2);
MPRINT(PLOTIT):   excolors = lowcase(symget('excolors'));
MPRINT(PLOTIT):   *------store goptions with annotate data set------;
MPRINT(PLOTIT):   if not 0 then do;
MPRINT(PLOTIT):   comment = symget('gopts');
MPRINT(PLOTIT):   n = 0;
MPRINT(PLOTIT):   function = 'COMMENT';
MPRINT(PLOTIT):   nobs + 1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw border------;
MPRINT(PLOTIT):   if "cx000000" ne ' ' then do;
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   size = lsizes[1];
MPRINT(PLOTIT):   position = '+';
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   y = 29 - 0.001;
MPRINT(PLOTIT):   if 0 and -0.50 < 0 then y = y + -0.50;
MPRINT(PLOTIT):   comment = 'border, box, left top start';
MPRINT(PLOTIT):   x = 0;
MPRINT(PLOTIT):   if 0 and 2.00 < 0 then x = x - 2.00;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   comment = 'border, box, left bottom';
MPRINT(PLOTIT):   y = 0;
MPRINT(PLOTIT):   if 0 and 0.50 < 0 then y = y - 0.50;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'border, box, right bottom';
MPRINT(PLOTIT):   x = 76 - 0.001;
MPRINT(PLOTIT):   if 0 and 2.00 < 0 then x = x + 2.00;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'border, box, right top';
MPRINT(PLOTIT):   y = 29 - 0.001;
MPRINT(PLOTIT):   if 0 and -0.50 < 0 then y = y + -0.50;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'border, box, left top';
MPRINT(PLOTIT):   x = 0;
MPRINT(PLOTIT):   if 0 and 2.00 < 0 then x = x - 2.00;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set anno tempdat1(in=td1 rename=(text=text2));
MPRINT(PLOTIT):   text = text2;
MPRINT(PLOTIT):   if comment = 'text, y label' then x = x - 2.00;
MPRINT(PLOTIT):   if comment = 'text, title' then y = y + -0.50;
MPRINT(PLOTIT):   if comment = 'text, x label' then y = y - 0.50;
MPRINT(PLOTIT):   if comment = 'text, y tick' then x = x - 2.00;
MPRINT(PLOTIT):   if comment = 'text, x tick' then y = y - 0.50;
MPRINT(PLOTIT):   obstype = __otype;
MPRINT(PLOTIT):   len = length(text);
MPRINT(PLOTIT):   *------discard clipped ticks if necessary------;
MPRINT(PLOTIT):   if comment = 'text, y tick' then do;
MPRINT(PLOTIT):   if not (bottom <= y <= top) then return;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if comment = 'text, x tick' then do;
MPRINT(PLOTIT):   d = right + floor(1e-8 + len / 2);
MPRINT(PLOTIT):   if not (left <= x <= d) then return;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------uncategorize symbol locations------;
MPRINT(PLOTIT):   i = (1 or 1) and td1 and (comment =: 'list' or comment =: 'extra') and not (index(substr(comment,1,18),', text, label'));
MPRINT(PLOTIT):   if i or (nmiss(x) and n(__xvar)) then x = 31 + 100 * __xvar;
MPRINT(PLOTIT):   if i or (nmiss(y) and n(__yvar)) then y = 15 + 50 * __yvar;
MPRINT(PLOTIT):   *------all angles are zero, except the y-axis label------;
MPRINT(PLOTIT):   if nmiss(angle) then angle = 0;
MPRINT(PLOTIT):   *------set position if not yet set------;
MPRINT(PLOTIT):   if position = ' ' then position = '+';
MPRINT(PLOTIT):   *------flag contour observations------;
MPRINT(PLOTIT):   contour = (function = 'BAR' and style = 'solid');
MPRINT(PLOTIT):   *------clip if necessary------;
MPRINT(PLOTIT):   if comment =: 'extra, text' or comment =: 'list, text' and text ne ' ' and not contour then do;
MPRINT(PLOTIT):   if y >= top or y <= bottom then return;
MPRINT(PLOTIT):   if position = '<' then d = x - len + 1 - left;
MPRINT(PLOTIT):   else if position = '>' then d = x - left;
MPRINT(PLOTIT):   else d = x - len / 2 - left;
MPRINT(PLOTIT):   d = floor(d);
MPRINT(PLOTIT):   if d <= 0 then do;
MPRINT(PLOTIT):   if (len + d) > 0 then text = substr(text, 1, len + d);
MPRINT(PLOTIT):   else text = ' ';
MPRINT(PLOTIT):   len = length(text);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if position = '<' then d = right - x;
MPRINT(PLOTIT):   else if position = '>' then d = right - (x + len - 1);
MPRINT(PLOTIT):   else d = right - (x + len / 2);
MPRINT(PLOTIT):   d = floor(d);
MPRINT(PLOTIT):   if d <= 0 then do;
MPRINT(PLOTIT):   if (len + d) > 0 then text = substr(text, 1, len + d);
MPRINT(PLOTIT):   else text = ' ';
MPRINT(PLOTIT):   len = length(text);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------adjust justifications------;
MPRINT(PLOTIT):   if position = '<' then x = x + 0.5;
MPRINT(PLOTIT):   else if position = '>' then x = x - 0.5;
MPRINT(PLOTIT):   *------set line, text sizes------;
MPRINT(PLOTIT):   if nmiss(size) then do;
MPRINT(PLOTIT):   if function = 'LABEL' then size = 1;
MPRINT(PLOTIT):   else size = lsizes[1];
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set font------;
MPRINT(PLOTIT):   if style = ' ' and not (comment =: 'list, text' or comment =: 'extra, text') then style = 'none';
MPRINT(PLOTIT):   *------if color is still not set, set it------;
MPRINT(PLOTIT):   if color = ' ' then color = 'black';
MPRINT(PLOTIT):   *------offset (jitter) coincident symbols but not ptr symbols------;
MPRINT(PLOTIT):   length lastpos $ 1;
MPRINT(PLOTIT):   retain oldx oldy 0 offsetn 1 lastpos '+';
MPRINT(PLOTIT):   if comment =: 'list, text, symbol' or comment =: 'extra, text, symbol' then do;
MPRINT(PLOTIT):   if abs(oldx - x) < 1e-8 and abs(oldy - y) < 1e-8 then do;
MPRINT(PLOTIT):   *------usually go center, right, left, but skip right------;
MPRINT(PLOTIT):   *------on second symbol if last label was right ------;
MPRINT(PLOTIT):   offsetn + 1 + (offsetn = 1 and lastpos = '>');
MPRINT(PLOTIT):   x = x + (mod(offsetn,3) - 1) * (0.25);
MPRINT(PLOTIT):   d = mod(floor((offsetn - 1) / 3) + 1, 3) - 1;
MPRINT(PLOTIT):   y = y + d * (0.25) / (2);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   offsetn = 1;
MPRINT(PLOTIT):   oldx = x;
MPRINT(PLOTIT):   oldy = y;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   lastpos = position;
MPRINT(PLOTIT):   *------override colors for monochrome device------;
MPRINT(PLOTIT):   *------exclude observations in excluded color list------;
MPRINT(PLOTIT):   if index(excolors, trim(lowcase(color))) = 0;
MPRINT(PLOTIT):   *------add offsets to center plot ------;
MPRINT(PLOTIT):   *------adjust y so bottom line has coordinate 0.5------;
MPRINT(PLOTIT):   x = x + 4.9;
MPRINT(PLOTIT):   y = y + 0.7 + 0.5;
MPRINT(PLOTIT):   *------set ID variable for sort for functions------;
MPRINT(PLOTIT):   *------create rectangles for contour plots------;
MPRINT(PLOTIT):   if contour and contok then do;
MPRINT(PLOTIT):   text = ' ';
MPRINT(PLOTIT):   epsh = size * 0;
MPRINT(PLOTIT):   epsv = size * 0;
MPRINT(PLOTIT):   x1 = x - epsh / 2;
MPRINT(PLOTIT):   x2 = x1 + epsh;
MPRINT(PLOTIT):   epsh = epsh * 0.1;
MPRINT(PLOTIT):   y1 = y - epsv / 2;
MPRINT(PLOTIT):   y2 = y1 + epsv;
MPRINT(PLOTIT):   epsv = epsv * 0.1;
MPRINT(PLOTIT):   if abs(x1 - conoldx) < epsh and abs(y1 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if abs(x2 - conoldx) < epsh and abs(y1 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if abs(x2 - conoldx) < epsh and abs(y2 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if abs(x1 - conoldx) < epsh and abs(y2 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   nobs + 1;
MPRINT(PLOTIT):   if (abs(0) < epsh and 0 > 0) or (abs(0) < epsv and 0 > 0) then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   function = 'BAR';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   conoldx = x;
MPRINT(PLOTIT):   conoldy = y;
MPRINT(PLOTIT):   *------final adjustments------;
MPRINT(PLOTIT):   if text = '*' and function = 'LABEL' then do;
MPRINT(PLOTIT):   style = ' ';
MPRINT(PLOTIT):   text = 'star';
MPRINT(PLOTIT):   function = 'SYMBOL';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):  ;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):   nobs + 1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   call symput('nobs',compress(put(nobs,5.)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------delete intermediate data sets------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat1 tempdat3 tempdat4 tempdat5 tempdat6(memtype=view);
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------post-processing for functions------;
MPRINT(PLOTIT):   *------post-processing for expand------;
MPRINT(PLOTIT):   *------make sure that the frame is never covered------;
MPRINT(PLOTIT):   data anno;
MPRINT(PLOTIT):   set anno anno(where=(comment =: 'frame, box'));
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *===========set up for and produce the graphical scatter plot==========;
MPRINT(PLOTIT):   goptions nodisplay hpos=76 vpos=29 hsize=8.33in vsize=6.24in cback=white device=GIF;
MPRINT(PLOTIT):  ;
MPRINT(PLOTIT):   *------print final plot request------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length string $ 500;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   put / 'The following code will create the ' @@;
MPRINT(PLOTIT):   if not 1 then put '(empty) ' @@;
MPRINT(PLOTIT):   put 'printer plot ' 'on which ' 'the ' 'graphical ' 'plot is ' 'based:' /;
MPRINT(PLOTIT):   string = "options nonumber ls=65 ps=45;";
MPRINT(PLOTIT):   indent1 = 0;
MPRINT(PLOTIT):   indent2 = 8;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = symget('procopts');
MPRINT(PLOTIT):   indent2 = 10;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = 'plot ' || trim(symget('plotreq')) || ' /';
MPRINT(PLOTIT):   indent1 = 3;
MPRINT(PLOTIT):   indent2 = 8;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('plotopts')) || ' list=1';
MPRINT(PLOTIT):   indent1 = 8;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('pl')) || ';';
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('label')) || ';';
MPRINT(PLOTIT):   indent1 = 3;
MPRINT(PLOTIT):   indent2 = 9;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('adjust2')) || ';';
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = 'label ' || symget('vplotvar') || " = '#' " || symget('hplotvar') || " = '#';";
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   put +3 'run; quit;' /;
MPRINT(PLOTIT):   put 'The plot was created with the following goptions:' /;
MPRINT(PLOTIT):   string = 'goptions ' || symget('gopts') || ';';
MPRINT(PLOTIT):   indent1 = 0;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   put / "The OUT=anno Annotate data set has 52 observations.";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if symget('method') = 'print' then put "The graphics stream file name is C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD1612_MIIKYMEDIA_\Prc2\plotit.ps.";
MPRINT(PLOTIT):   if 1 and upcase(getoption("STIMER")) eq "STIMER" and getoption('stimer') eq 'STIMER' then do;
MPRINT(PLOTIT):   time = datetime();
MPRINT(PLOTIT):   cum = put(time - 1921780973.178,6.1);
MPRINT(PLOTIT):   put 'The PLOTIT macro used ' cum "seconds to create OUT=anno.";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   wrap: *------print a line, wrapped and indented------;
MPRINT(PLOTIT):   nlit = index(upcase(string), "'N");
MPRINT(PLOTIT):   if nlit = 0 then nlit = index(upcase(string), '"N');
MPRINT(PLOTIT):   string = left(string);
MPRINT(PLOTIT):   len = length(string);
MPRINT(PLOTIT):   if len < 2 or string = ' ' or string = ';' then return;
MPRINT(PLOTIT):   i = index(string,' '||' ');
MPRINT(PLOTIT):   do while(i < (len - 1) and not nlit);
MPRINT(PLOTIT):   string = substr(string,1,i - 1) || substr(string,i + 1);
MPRINT(PLOTIT):   len = length(string);
MPRINT(PLOTIT):   i = index(string,' '||' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   i = index(string,' ;');
MPRINT(PLOTIT):   if i then string = substr(string,1,i - 1) || substr(string,i + 1);
MPRINT(PLOTIT):   len = 1;
MPRINT(PLOTIT):   end = 0;
MPRINT(PLOTIT):   indent = indent1 + 1;
MPRINT(PLOTIT):   do while(len > end);
MPRINT(PLOTIT):   string = left(substr(string,end + 1));
MPRINT(PLOTIT):   len = length(string);
MPRINT(PLOTIT):   nlit = index(upcase(string), "'N");
MPRINT(PLOTIT):   if nlit = 0 then nlit = index(upcase(string), '"N');
MPRINT(PLOTIT):   maxlen = 256 - indent;
MPRINT(PLOTIT):   if len > maxlen and not nlit then do;
MPRINT(PLOTIT):   end = maxlen;
MPRINT(PLOTIT):   do while(end > 0 and not (substr(string,end,1) in (' ' ',')));
MPRINT(PLOTIT):   end = end - 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if len > maxlen then do;
MPRINT(PLOTIT):   end = maxlen;
MPRINT(PLOTIT):   if nlit then end = nlit + 2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else end = len;
MPRINT(PLOTIT):   str = substr(string,1,end);
MPRINT(PLOTIT):   put @indent str;
MPRINT(PLOTIT):   indent = indent2 + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
 
The following code will create the printer plot on which the graphical plot is based:
 
options nonumber ls=65 ps=45;
proc plot nolegend formchar='|----|+|---' data=preproc vtoh=2;
   plot Dim2 * Dim1 $ _idvar_ = _symbol_ /
        haxis=by 0.1 vaxis=by 0.1 box list=1
        placement=((h=2 -2 : s=right left) (v=1 -1 * h=0 -1 to -5 by alt));
   label Dim2 = 'Dimension 2' Dim1 = 'Dimension 1';
   label Dim2 = '#' Dim1 = '#';
   run; quit;
 
The plot was created with the following goptions:
 
goptions nodisplay hpos=76 vpos=29 hsize=8.33in vsize=6.24in cback=white device=GIF;
 
The OUT=anno Annotate data set has 52 observations.
The PLOTIT macro used 1.7 seconds to create OUT=anno.
MPRINT(PLOTIT):   *------produce the plot------;
MPRINT(PLOTIT):   proc ganno annotate=anno gout=WORK.Clus name="DISTANCE";
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   options LABEL;
Sistema SAS
 
MPRINT(PLOTIT):   *------restore options, quit------;
MPRINT(PLOTIT):   options NOTES missing=".";
MPRINT(EM_DIAGRAM):  ;
35218      goptions display;
MPRINT(EM_DIAGRAM):   goptions display;
35219      title;
MPRINT(EM_DIAGRAM):   title;
35220      filename gsasfile
35220    ! "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\GRAPH
35220    ! \Distance.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\GRAPH\Distance.g
if";
35221      goptions reset=all device=PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions reset=all device=PNG display gaccess= gsasfile gsfmode= replace
cback= white;
35222      proc greplay igout=WORK.Clus nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.Clus nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
35223      replay DISTANCE;
MPRINT(EM_DIAGRAM):   replay DISTANCE;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this
      session.
NOTE: 17360 bytes written to
      C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus\GRAPH\Dista
      nce.gif.
35224      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY ha utilizado (Tiempo de proceso total):
      real time           0.23 seconds
      cpu time            0.10 seconds
 
 
35225      goptions reset=all;
MPRINT(EM_DIAGRAM):   goptions reset=all;
35226      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
35227      proc datasets lib=EMWS3 nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS3 nolist;
35228      modify Clus_DISTANCE;
MPRINT(EM_DIAGRAM):   modify Clus_DISTANCE;
35229      rename _idvar_=_SEGMENT_;
MPRINT(EM_DIAGRAM):   rename _idvar_=_SEGMENT_;
NOTE: Renaming variable _idvar_ to _SEGMENT_.
MPRINT(EM_DIAGRAM):   run;
35230      run;
 
NOTE: MODIFY was successful for EMWS3.CLUS_DISTANCE.DATA.
35231      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
Sistema SAS
 
 
 
35232      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
35233      * Clus: creando conjunto de datos para el informe Input de la media;
MPRINT(EM_DIAGRAM):   * Clus: creando conjunto de datos para el informe Input de la media;
35234      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
35235      data temp(drop=_type_ over_all);
MPRINT(EM_DIAGRAM):   data temp(drop=_type_ over_all);
35236      set EMWS3.Clus_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus_OUTSTAT;
35237      where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
MPRINT(EM_DIAGRAM):   where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
35238      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS3.CLUS_OUTSTAT.
      WHERE _type_ in ('CLUS_MEAN', 'DMDB_MEAN');
NOTE: The data set WORK.TEMP has 5 observations and 1205 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35239      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
35240      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
35241      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 5 observations and 1205 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
35242      proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
MPRINT(EM_DIAGRAM):   proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
35243      var ABSOLUT--ZUMA;
MPRINT(EM_DIAGRAM):   var ABSOLUT--ZUMA;
35244      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.STDTEMP has 5 observations and 1205 variables.
NOTE: The data set WORK.STAT has 10 observations and 1205 variables.
NOTE: PROCEDURE STDIZE ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
35245      proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
MPRINT(EM_DIAGRAM):   proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN
COL4=MAX));
35246      where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
Sistema SAS
 
MPRINT(EM_DIAGRAM):   where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
35247      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STAT.
      WHERE _type_ in ('LOCATION', 'P0', 'P100', 'SCALE');
NOTE: The data set WORK.TSTAT has 1204 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
35248      data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
MPRINT(EM_DIAGRAM):   data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
35249      set tstat;
MPRINT(EM_DIAGRAM):   set tstat;
35250      if std ^in (0, .) then do;
MPRINT(EM_DIAGRAM):   if std ^in (0, .) then do;
35251      stdmin = abs((min-mean)/std);
MPRINT(EM_DIAGRAM):   stdmin = abs((min-mean)/std);
35252      stdmax = abs((max-mean)/std);
MPRINT(EM_DIAGRAM):   stdmax = abs((max-mean)/std);
35253      end;
MPRINT(EM_DIAGRAM):   end;
35254      if mean ^in(0, .) then cv = std/mean;
MPRINT(EM_DIAGRAM):   if mean ^in(0, .) then cv = std/mean;
35255      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1204 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 1204 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35256      proc sort data=tstat;
MPRINT(EM_DIAGRAM):   proc sort data=tstat;
35257      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
35258      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1204 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 1204 observations and 4 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35259      proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
MPRINT(EM_DIAGRAM):   proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL
COL1=MEAN));
35260      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
35261      run;
MPRINT(EM_DIAGRAM):   run;
 
Sistema SAS
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 5 observations read from the data set WORK.STDTEMP.
NOTE: The data set WORK.TSTDTEMP has 6020 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
35262      proc sort data=tstdtemp;
MPRINT(EM_DIAGRAM):   proc sort data=tstdtemp;
35263      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
35264      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6020 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set WORK.TSTDTEMP has 6020 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
35265      data tstdtemp;
MPRINT(EM_DIAGRAM):   data tstdtemp;
35266      merge tstdtemp tstat;
MPRINT(EM_DIAGRAM):   merge tstdtemp tstat;
35267      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
35268      STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
MPRINT(EM_DIAGRAM):   STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
35269      drop stdmin stdmax mean;
MPRINT(EM_DIAGRAM):   drop stdmin stdmax mean;
35270      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6020 observations read from the data set WORK.TSTDTEMP.
NOTE: There were 1204 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTDTEMP has 6020 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35271      proc transpose data=EMWS3.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME
35271    ! VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS3.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=(
_NAME_=NAME VARIABLE=INPUT));
35272      var ABSOLUT--ZUMA;
MPRINT(EM_DIAGRAM):   var ABSOLUT--ZUMA;
35273      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
35274      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
35275      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set EMWS3.CLUS_OUTVAR.
Sistema SAS
 
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 1204 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
35276      proc sort data=tempVar;
MPRINT(EM_DIAGRAM):   proc sort data=tempVar;
35277      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
35278      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1204 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 1204 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
35279      data EMWS3.Clus_INPUTMEAN(rename=(NAME=VARIABLE));
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_INPUTMEAN(rename=(NAME=VARIABLE));
35280      Length _SEGMENT_CHAR_ $7;
MPRINT(EM_DIAGRAM):   Length _SEGMENT_CHAR_ $7;
35281      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))"
35281    ! _SEGMENT_CHAR_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentId_vlabel,    NOQUOTE))"
35281    ! NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))" INPUT =
35282         "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel,        NOQUOTE))" LABEL =
35282    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_label_vlabel,        NOQUOTE))" CV =
35282    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,           NOQUOTE))" STDMEAN =
35283         "%sysfunc(sasmsg(sashelp.dmine, rpt_normmean_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Nombre del segmento" _SEGMENT_CHAR_ = "Id de segmento"
NAME = "Variable" INPUT = "Input" LABEL = "Etiqueta" CV = "Coeficiente de variación" STDMEAN =
"Media normalizada";
35284      merge tempvar tstdtemp;
MPRINT(EM_DIAGRAM):   merge tempvar tstdtemp;
35285      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
35286      if LABEL='' then LABEL=NAME;
MPRINT(EM_DIAGRAM):   if LABEL='' then LABEL=NAME;
35287      _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
MPRINT(EM_DIAGRAM):   _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
35288      if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
35289      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1204 observations read from the data set WORK.TEMPVAR.
NOTE: There were 6020 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set EMWS3.CLUS_INPUTMEAN has 6020 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
35290      proc sort data=EMWS3.Clus_INPUTMEAN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus_INPUTMEAN;
Sistema SAS
 
35291      by descending cv;
MPRINT(EM_DIAGRAM):   by descending cv;
35292      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6020 observations read from the data set EMWS3.CLUS_INPUTMEAN.
NOTE: The data set EMWS3.CLUS_INPUTMEAN has 6020 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35293      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
35294      * Clus: determinando las variables importantes;
MPRINT(EM_DIAGRAM):   * Clus: determinando las variables importantes;
35295      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
35296      %let _nobs = 0;
35297      data keepvars(rename=(NAME=INPUT));
MPRINT(EM_DIAGRAM):    data keepvars(rename=(NAME=INPUT));
35298      set EMWS3.Clus_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
35299      if eof then call symput('_nobs', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_nobs', strip(put(_N_, best.)));
35300      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS3.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0.5;
NOTE: The data set WORK.KEEPVARS has 18 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35301      proc transpose data=EMWS3.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME
35301    ! VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS3.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=(
_NAME_=NAME VARIABLE=INPUT));
35302      var ABSOLUT--ZUMA;
MPRINT(EM_DIAGRAM):   var ABSOLUT--ZUMA;
35303      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
35304      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
35305      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set EMWS3.CLUS_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 1204 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
Sistema SAS
 
 
35306      proc sort data=keepvars;
MPRINT(EM_DIAGRAM):   proc sort data=keepvars;
35307      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
35308      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.KEEPVARS has 18 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35309      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
35310      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
35311      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1204 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 1204 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35312      data vars;
MPRINT(EM_DIAGRAM):   data vars;
35313      merge tempvar keepvars(in=b);
MPRINT(EM_DIAGRAM):   merge tempvar keepvars(in=b);
35314      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
35315      if b then output;
MPRINT(EM_DIAGRAM):   if b then output;
35316      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUT by input data sets. This might
         cause unexpected results.
NOTE: There were 1204 observations read from the data set WORK.TEMPVAR.
NOTE: There were 18 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.VARS has 18 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35317      proc sort data=vars;
MPRINT(EM_DIAGRAM):   proc sort data=vars;
35318      by descending importance;
MPRINT(EM_DIAGRAM):   by descending importance;
35319      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.VARS.
Sistema SAS
 
NOTE: The data set WORK.VARS has 18 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35320      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
35321      set vars;
MPRINT(EM_DIAGRAM):   set vars;
35322      if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
35323      else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
MPRINT(EM_DIAGRAM):   else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
35324      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.VARS.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * mergeVarMeansandClusLabel;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
35325      *------------------------------------------------------------*;
35326      * mergeVarMeansandClusLabel;
35327      *------------------------------------------------------------*;
35328      data temp(keep=_SEGMENT_ &CLUS_PROFVARS);
MPRINT(EM_DIAGRAM):   data temp(keep=_SEGMENT_ ISRA ISRAEL ARAB JEW EXPANS PALESTINIAN TURK ZUMA
SERA ARMENIA ARMENIAN TURKISH SURREND CHASTITI INTELLECT SHAME SKEPTIC GORDON);
35329      length _SEGMENT_ &CLUS_PROFVARS 8;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ ISRA ISRAEL ARAB JEW EXPANS PALESTINIAN TURK ZUMA SERA
ARMENIA ARMENIAN TURKISH SURREND CHASTITI INTELLECT SHAME SKEPTIC GORDON 8;
35330      set EMWS3.Clus_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus_OUTSTAT;
35331      where _type_ ='CLUS_MEAN';
MPRINT(EM_DIAGRAM):   where _type_ ='CLUS_MEAN';
35332      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS3.CLUS_OUTSTAT.
      WHERE _type_='CLUS_MEAN';
NOTE: The data set WORK.TEMP has 4 observations and 19 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35333      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
35334      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
35335      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TEMP.
Sistema SAS
 
NOTE: The data set WORK.TEMP has 4 observations and 19 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
35336      data EMWS3.Clus_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus_LABEL;
35337      merge EMWS3.Clus_LABEL(keep=_SEGMENT_ LABEL) temp;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus_LABEL(keep=_SEGMENT_ LABEL) temp;
35338      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
35339      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS3.CLUS_LABEL.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS3.CLUS_LABEL has 4 observations and 20 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
