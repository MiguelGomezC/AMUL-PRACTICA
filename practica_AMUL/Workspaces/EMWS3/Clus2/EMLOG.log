*------------------------------------------------------------*
Usuario:                Admin
Fecha:                13/12/20
Hora:                15H43
Sitio:                70161230
Plataforma:            X64_10HOME
Versión de mantenimiento: 9.04.01M6P111518
Versión de EM:          15.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15H43" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de entrenamiento";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de entrenamiento
Fecha:                13/12/20
Hora:                15H43
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O04_OSV2 "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O04_OSV2 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15H43" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Sitio:                70161230";
MPRINT(EM_DIAGRAM):   put "Plataforma:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "Versión de mantenimiento: 9.04.01M6P111518";
MPRINT(EM_DIAGRAM):   put "Versión de EM:          15.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15H43" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de entrenamiento";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de puntuación";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida del informe";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22068      proc freq data=EMWS3.Clus2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS3.Clus2_VariableSet noprint;
22069      table ROLE*LEVEL/out=WORK.Clus2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Clus2META;
22070      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 242 observations read from the data set EMWS3.CLUS2_VARIABLESET.
NOTE: The data set WORK.CLUS2META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22071      proc print data=WORK.Clus2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Clus2META label noobs;
22072      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22073      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Rol" LEVEL = "Nivel de medida" COUNT = "Número de ocurrencias";
22074      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22075      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Resumen de variables";
MPRINT(EM_DIAGRAM):   run;
22076      run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS2META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22077      title10;
MPRINT(EM_DIAGRAM):   title10;
22078      data WORK.M3D7H8K6;
MPRINT(EM_DIAGRAM):    data WORK.M3D7H8K6;
22079      set WORK.M3D7H8K6;
MPRINT(EM_DIAGRAM):   set WORK.M3D7H8K6;
22080      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
22081      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.M3D7H8K6.
NOTE: The data set WORK.M3D7H8K6 has 241 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: preparando metadatos para el entrenamiento;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3D7H8K6;
MPRINT(EM_DIAGRAM):   set WORK.M3D7H8K6;
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
22090      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22091      * Clus2: entrenamiento;
MPRINT(EM_DIAGRAM):   * Clus2: entrenamiento;
22092      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22093      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22094      * Create DMDB macros;
MPRINT(EM_DIAGRAM):   * Create DMDB macros;
22095      %let _sns = %sysfunc(getoption(SOURCE));
22096      options nosource;
MPRINT(EM_DIAGRAM):   options nosource;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   options SOURCE;
MPRINT(EM_DIAGRAM):   * End DMDB macros generation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22129      * End DMDB macros generation;
22130      *------------------------------------------------------------*;
22131      *------------------------------------------------------------*;
22132      * Clus2: Create DMDB;
22133      *------------------------------------------------------------*;
22134      proc dmdb batch data=EMWS3.Ids2_DATA
22135      dmdbcat=WORK.Clus2_DMDB
22136      maxlevel = 513
22137      out=WORK.Clus2_DMDB
22138      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS3.Ids2_DATA dmdbcat=WORK.Clus2_DMDB maxlevel = 513 out=WORK.Clus2_DMDB ;
MPRINT(EM_DIAGRAM):   var
22139      var %DMDBVar;
MPRINT(DMDBVAR):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE COLOR
COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT FAX FEEL
FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD
KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND SOURC
STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK
WORLD XLIB XTERM YEAR YOU
MPRINT(EM_DIAGRAM):  ;
22140      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 3000   Memory used = 511K.
NOTE: Vista EMWS3.IDS2_DATA.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: The data set WORK.CLUS2_DMDB has 3000 observations and 241 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
22141      quit;
22142      *--- end code ---*;
 
22143      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22144      * Clus2: Inputs intervalo Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Inputs intervalo Macro ;
22145      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22146      %macro DMVQINTERVAL;
22147          ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC
22148         ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD
22149         BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
22150         COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT
22151         CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI
22152         DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL
22153         ENGIN ERROR EVENT EXPERI FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND
22154         FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND
22155         GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT
22156         INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD KILL KIND LEVEL
22157         LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON
22158         MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN
22159         OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
22160         POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR
22161         RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN
22162         SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL
22163         SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN
22164         SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE
22165         TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA
22166         VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
22167      %mend DMVQINTERVAL;
22168      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22169      * Clus2: ejecutar procedimiento DMVQ;
MPRINT(EM_DIAGRAM):   * Clus2: ejecutar procedimiento DMVQ;
22170      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22171      title;
MPRINT(EM_DIAGRAM):   title;
22172      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
22173      proc dmvq data=WORK.Clus2_DMDB dmdbcat=WORK.Clus2_DMDB std=RANGE nominal=GLM ordinal=RANK
22174      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus2_DMDB dmdbcat=WORK.Clus2_DMDB std=RANGE nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS2_DMDB.DATA has 241 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
22175      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER
WORK WORLD XLIB XTERM YEAR YOU
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 241 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
22176      VQ maxc = 10 clusname=_SEGMENT_ CLUSLABEL="Id de segmento" DISTLABEL="Distancia";
MPRINT(EM_DIAGRAM):   VQ maxc = 10 clusname=_SEGMENT_ CLUSLABEL="Id de segmento" DISTLABEL="Distancia";
NOTE: A maximum of 10 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
22177      MAKE outvar=EMWS3.Clus2_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS3.Clus2_OUTVAR;
 
NOTE: 241 input variable(s).
NOTE: Number of cases=3000
NOTE: Sum of frequencies=3000
NOTE: Sum of weights=3000
NOTE: VARDEF=DF
NOTE: Maximum number of categories=0
NOTE: The total number of variables is 241 with dimensionality 241.
NOTE: 241 variables will be used for clustering.
NOTE: Open output data set EMWS3.CLUS2_OUTVAR.DATA with 242 variables.
NOTE: The data set EMWS3.CLUS2_OUTVAR has 4 observations and 242 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
22178      INITIAL radius=0
22179      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 ;
NOTE: 10 semillas seleccionadas del conjunto de datos WORK.CLUS2_DMDB.DATA usando el algoritmo SEPARATE.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
22180      TRAIN tech=FORGY
22181      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
NOTE: F-Convergence criterion is satisfied.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
22182      SAVE outstat=EMWS3.Clus2_OUTSTAT outmean=EMWS3.Clus2_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=EMWS3.Clus2_OUTSTAT outmean=EMWS3.Clus2_OUTMEAN;
NOTE: The data set EMWS3.CLUS2_OUTSTAT has 76 observations and 244 variables.
NOTE: The data set EMWS3.CLUS2_OUTMEAN has 10 observations and 250 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
22183      code file="C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\DMVQSCORECODE.sas"
22184      group=Clus2
22185      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\DMVQSCORECODE.sas" group=Clus2 ;
NOTE: External file C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
22186      run;
MPRINT(EM_DIAGRAM):   run;
 
22187      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 3000 observations read from the data set WORK.CLUS2_DMDB.
NOTE: PROCEDURE DMVQ ha utilizado (Tiempo de proceso total):
      real time           0.19 seconds
      cpu time            0.20 seconds
 
 
22188      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
WARNING: Libref _SPDSLIB is not assigned.
22189      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22190      * Clus2: Cluster Label;
MPRINT(EM_DIAGRAM):   * Clus2: Cluster Label;
22191      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22192      data EMWS3.Clus2_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_LABEL;
22193      length _SEGMENT_ 8 Label $80;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ 8 Label $80;
22194      format _SEGMENT_ 4.;
MPRINT(EM_DIAGRAM):   format _SEGMENT_ 4.;
22195      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Nombre del segmento";
22196      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentLabel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Etiqueta del segmento";
22197      _SEGMENT_= 1;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 1;
22198      Label='Cluster1';
MPRINT(EM_DIAGRAM):   Label='Cluster1';
22199      output;
MPRINT(EM_DIAGRAM):   output;
22200      _SEGMENT_= 2;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 2;
22201      Label='Cluster2';
MPRINT(EM_DIAGRAM):   Label='Cluster2';
22202      output;
MPRINT(EM_DIAGRAM):   output;
22203      _SEGMENT_= 3;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 3;
22204      Label='Cluster3';
MPRINT(EM_DIAGRAM):   Label='Cluster3';
22205      output;
MPRINT(EM_DIAGRAM):   output;
22206      _SEGMENT_= 4;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 4;
22207      Label='Cluster4';
MPRINT(EM_DIAGRAM):   Label='Cluster4';
22208      output;
MPRINT(EM_DIAGRAM):   output;
22209      _SEGMENT_= 5;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 5;
22210      Label='Cluster5';
MPRINT(EM_DIAGRAM):   Label='Cluster5';
22211      output;
MPRINT(EM_DIAGRAM):   output;
22212      _SEGMENT_= 6;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 6;
22213      Label='Cluster6';
MPRINT(EM_DIAGRAM):   Label='Cluster6';
22214      output;
MPRINT(EM_DIAGRAM):   output;
22215      _SEGMENT_= 7;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 7;
22216      Label='Cluster7';
MPRINT(EM_DIAGRAM):   Label='Cluster7';
22217      output;
MPRINT(EM_DIAGRAM):   output;
22218      _SEGMENT_= 8;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 8;
22219      Label='Cluster8';
MPRINT(EM_DIAGRAM):   Label='Cluster8';
22220      output;
MPRINT(EM_DIAGRAM):   output;
22221      _SEGMENT_= 9;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 9;
22222      Label='Cluster9';
MPRINT(EM_DIAGRAM):   Label='Cluster9';
22223      output;
MPRINT(EM_DIAGRAM):   output;
22224      _SEGMENT_= 10;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 10;
22225      Label='Cluster10';
MPRINT(EM_DIAGRAM):   Label='Cluster10';
22226      output;
MPRINT(EM_DIAGRAM):   output;
22227      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS3.CLUS2_LABEL has 10 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15H43" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de puntuación";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de puntuación
Fecha:                13/12/20
Hora:                15H43
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O32KQZDB "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O32KQZDB new;
MPRINT(EM_DIAGRAM):   run;
22329      proc transpose data=EMWS3.Clus2_OUTVAR out=WORK.Clus2_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS3.Clus2_OUTVAR out=WORK.Clus2_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
22330      var ACCESS--YOU;
MPRINT(EM_DIAGRAM):   var ACCESS--YOU;
22331      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
22332      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS3.CLUS2_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS2_OUTVAR has 0 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22333      proc sort data=WORK.Clus2_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus2_OUTVAR;
22334      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22335      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS2_OUTVAR has 0 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22336      proc sort data=EMWS3.Clus2_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus2_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus2_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus2_SORTEDVARS;
22337      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22338      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 242 observations read from the data set EMWS3.CLUS2_VARIABLESET.
NOTE: The data set WORK.CLUS2_SORTEDVARS has 242 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22339      data WORK.Clus2_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus2_OUTVAR;
22340      merge WORK.Clus2_OUTVAR(in=INVAR) WORK.Clus2_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus2_OUTVAR(in=INVAR) WORK.Clus2_SORTEDVARS;
22341      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22342      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
22343      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS2_OUTVAR.
NOTE: There were 242 observations read from the data set WORK.CLUS2_SORTEDVARS.
NOTE: The data set WORK.CLUS2_OUTVAR has 0 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
22344      filename emflow "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22345      *------------------------------------------------------------*;
22346      * Clus2: Scoring DATA data;
22347      *------------------------------------------------------------*;
22348      data EMWS3.Clus2_TRAIN
22349      / view=EMWS3.Clus2_TRAIN
22350      ;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_TRAIN / view=EMWS3.Clus2_TRAIN ;
22351      set EMWS3.Ids2_DATA
22352      ;
MPRINT(EM_DIAGRAM):   set EMWS3.Ids2_DATA ;
22353      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize ACCESS ;
MPRINT(EM_DIAGRAM):   drop T_ACCESS ;
MPRINT(EM_DIAGRAM):   if missing( ACCESS ) then T_ACCESS = .;
MPRINT(EM_DIAGRAM):   else T_ACCESS = (ACCESS - 0) * 4.09763448766634;
MPRINT(EM_DIAGRAM):   *** Standardize ADAM ;
MPRINT(EM_DIAGRAM):   drop T_ADAM ;
MPRINT(EM_DIAGRAM):   if missing( ADAM ) then T_ADAM = .;
MPRINT(EM_DIAGRAM):   else T_ADAM = (ADAM - 0) * 2.42841107703564;
MPRINT(EM_DIAGRAM):   *** Standardize ADDRESS ;
MPRINT(EM_DIAGRAM):   drop T_ADDRESS ;
MPRINT(EM_DIAGRAM):   if missing( ADDRESS ) then T_ADDRESS = .;
MPRINT(EM_DIAGRAM):   else T_ADDRESS = (ADDRESS - 0) * 2.42063863061201;
MPRINT(EM_DIAGRAM):   *** Standardize ADVANC ;
MPRINT(EM_DIAGRAM):   drop T_ADVANC ;
MPRINT(EM_DIAGRAM):   if missing( ADVANC ) then T_ADVANC = .;
MPRINT(EM_DIAGRAM):   else T_ADVANC = (ADVANC - 0) * 6.14512436517837;
MPRINT(EM_DIAGRAM):   *** Standardize AMERICAN ;
MPRINT(EM_DIAGRAM):   drop T_AMERICAN ;
MPRINT(EM_DIAGRAM):   if missing( AMERICAN ) then T_AMERICAN = .;
MPRINT(EM_DIAGRAM):   else T_AMERICAN = (AMERICAN - 0) * 5.95482088127584;
MPRINT(EM_DIAGRAM):   *** Standardize ANDI ;
MPRINT(EM_DIAGRAM):   drop T_ANDI ;
MPRINT(EM_DIAGRAM):   if missing( ANDI ) then T_ANDI = .;
MPRINT(EM_DIAGRAM):   else T_ANDI = (ANDI - 0) * 1.65547339804832;
MPRINT(EM_DIAGRAM):   *** Standardize ANSWER ;
MPRINT(EM_DIAGRAM):   drop T_ANSWER ;
MPRINT(EM_DIAGRAM):   if missing( ANSWER ) then T_ANSWER = .;
MPRINT(EM_DIAGRAM):   else T_ANSWER = (ANSWER - 0) * 4.64860866821607;
MPRINT(EM_DIAGRAM):   *** Standardize APPLIC ;
MPRINT(EM_DIAGRAM):   drop T_APPLIC ;
MPRINT(EM_DIAGRAM):   if missing( APPLIC ) then T_APPLIC = .;
MPRINT(EM_DIAGRAM):   else T_APPLIC = (APPLIC - 0) * 3.9853350155139;
MPRINT(EM_DIAGRAM):   *** Standardize APPRECI ;
MPRINT(EM_DIAGRAM):   drop T_APPRECI ;
MPRINT(EM_DIAGRAM):   if missing( APPRECI ) then T_APPRECI = .;
MPRINT(EM_DIAGRAM):   else T_APPRECI = (APPRECI - 0) * 4.61159422033839;
MPRINT(EM_DIAGRAM):   *** Standardize ARAB ;
MPRINT(EM_DIAGRAM):   drop T_ARAB ;
MPRINT(EM_DIAGRAM):   if missing( ARAB ) then T_ARAB = .;
MPRINT(EM_DIAGRAM):   else T_ARAB = (ARAB - 0) * 4.52418448919517;
MPRINT(EM_DIAGRAM):   *** Standardize AREA ;
MPRINT(EM_DIAGRAM):   drop T_AREA ;
MPRINT(EM_DIAGRAM):   if missing( AREA ) then T_AREA = .;
MPRINT(EM_DIAGRAM):   else T_AREA = (AREA - 0) * 6.43887367010951;
MPRINT(EM_DIAGRAM):   *** Standardize ARGIC ;
MPRINT(EM_DIAGRAM):   drop T_ARGIC ;
MPRINT(EM_DIAGRAM):   if missing( ARGIC ) then T_ARGIC = .;
MPRINT(EM_DIAGRAM):   else T_ARGIC = (ARGIC - 0) * 3.07690480537955;
MPRINT(EM_DIAGRAM):   *** Standardize ARMENIA ;
MPRINT(EM_DIAGRAM):   drop T_ARMENIA ;
MPRINT(EM_DIAGRAM):   if missing( ARMENIA ) then T_ARMENIA = .;
MPRINT(EM_DIAGRAM):   else T_ARMENIA = (ARMENIA - 0) * 1.72392651861691;
MPRINT(EM_DIAGRAM):   *** Standardize ARMENIAN ;
MPRINT(EM_DIAGRAM):   drop T_ARMENIAN ;
MPRINT(EM_DIAGRAM):   if missing( ARMENIAN ) then T_ARMENIAN = .;
MPRINT(EM_DIAGRAM):   else T_ARMENIAN = (ARMENIAN - 0) * 4.23900299721636;
MPRINT(EM_DIAGRAM):   *** Standardize ATTACK ;
MPRINT(EM_DIAGRAM):   drop T_ATTACK ;
MPRINT(EM_DIAGRAM):   if missing( ATTACK ) then T_ATTACK = .;
MPRINT(EM_DIAGRAM):   else T_ATTACK = (ATTACK - 0) * 6.01910247519059;
MPRINT(EM_DIAGRAM):   *** Standardize AUDIO ;
MPRINT(EM_DIAGRAM):   drop T_AUDIO ;
MPRINT(EM_DIAGRAM):   if missing( AUDIO ) then T_AUDIO = .;
MPRINT(EM_DIAGRAM):   else T_AUDIO = (AUDIO - 0) * 2.78083660347682;
MPRINT(EM_DIAGRAM):   *** Standardize BANK ;
MPRINT(EM_DIAGRAM):   drop T_BANK ;
MPRINT(EM_DIAGRAM):   if missing( BANK ) then T_BANK = .;
MPRINT(EM_DIAGRAM):   else T_BANK = (BANK - 0) * 3.66222724209961;
MPRINT(EM_DIAGRAM):   *** Standardize BASE ;
MPRINT(EM_DIAGRAM):   drop T_BASE ;
MPRINT(EM_DIAGRAM):   if missing( BASE ) then T_BASE = .;
MPRINT(EM_DIAGRAM):   else T_BASE = (BASE - 0) * 7.43743258447749;
MPRINT(EM_DIAGRAM):   *** Standardize BATTERI ;
MPRINT(EM_DIAGRAM):   drop T_BATTERI ;
MPRINT(EM_DIAGRAM):   if missing( BATTERI ) then T_BATTERI = .;
MPRINT(EM_DIAGRAM):   else T_BATTERI = (BATTERI - 0) * 2.30059996771798;
MPRINT(EM_DIAGRAM):   *** Standardize BILL ;
MPRINT(EM_DIAGRAM):   drop T_BILL ;
MPRINT(EM_DIAGRAM):   if missing( BILL ) then T_BILL = .;
MPRINT(EM_DIAGRAM):   else T_BILL = (BILL - 0) * 2.31716773502006;
MPRINT(EM_DIAGRAM):   *** Standardize BOOK ;
MPRINT(EM_DIAGRAM):   drop T_BOOK ;
MPRINT(EM_DIAGRAM):   if missing( BOOK ) then T_BOOK = .;
MPRINT(EM_DIAGRAM):   else T_BOOK = (BOOK - 0) * 4.04342989591831;
MPRINT(EM_DIAGRAM):   *** Standardize BRAIN ;
MPRINT(EM_DIAGRAM):   drop T_BRAIN ;
MPRINT(EM_DIAGRAM):   if missing( BRAIN ) then T_BRAIN = .;
MPRINT(EM_DIAGRAM):   else T_BRAIN = (BRAIN - 0) * 3.4585828348183;
MPRINT(EM_DIAGRAM):   *** Standardize BRIAN ;
MPRINT(EM_DIAGRAM):   drop T_BRIAN ;
MPRINT(EM_DIAGRAM):   if missing( BRIAN ) then T_BRIAN = .;
MPRINT(EM_DIAGRAM):   else T_BRIAN = (BRIAN - 0) * 1.99781751577907;
MPRINT(EM_DIAGRAM):   *** Standardize BUILD ;
MPRINT(EM_DIAGRAM):   drop T_BUILD ;
MPRINT(EM_DIAGRAM):   if missing( BUILD ) then T_BUILD = .;
MPRINT(EM_DIAGRAM):   else T_BUILD = (BUILD - 0) * 4.49635319685497;
MPRINT(EM_DIAGRAM):   *** Standardize BUTTON ;
MPRINT(EM_DIAGRAM):   drop T_BUTTON ;
MPRINT(EM_DIAGRAM):   if missing( BUTTON ) then T_BUTTON = .;
MPRINT(EM_DIAGRAM):   else T_BUTTON = (BUTTON - 0) * 2.10801097276364;
MPRINT(EM_DIAGRAM):   *** Standardize CALIFORNIA ;
MPRINT(EM_DIAGRAM):   drop T_CALIFORNIA ;
MPRINT(EM_DIAGRAM):   if missing( CALIFORNIA ) then T_CALIFORNIA = .;
MPRINT(EM_DIAGRAM):   else T_CALIFORNIA = (CALIFORNIA - 0) * 4.43833320661117;
MPRINT(EM_DIAGRAM):   *** Standardize CALL ;
MPRINT(EM_DIAGRAM):   drop T_CALL ;
MPRINT(EM_DIAGRAM):   if missing( CALL ) then T_CALL = .;
MPRINT(EM_DIAGRAM):   else T_CALL = (CALL - 0) * 4.479518170049;
MPRINT(EM_DIAGRAM):   *** Standardize CAN ;
MPRINT(EM_DIAGRAM):   drop T_CAN ;
MPRINT(EM_DIAGRAM):   if missing( CAN ) then T_CAN = .;
MPRINT(EM_DIAGRAM):   else T_CAN = (CAN - 0) * 7.10913523262021;
MPRINT(EM_DIAGRAM):   *** Standardize CARD ;
MPRINT(EM_DIAGRAM):   drop T_CARD ;
MPRINT(EM_DIAGRAM):   if missing( CARD ) then T_CARD = .;
MPRINT(EM_DIAGRAM):   else T_CARD = (CARD - 0) * 2.30717651411815;
MPRINT(EM_DIAGRAM):   *** Standardize CASE ;
MPRINT(EM_DIAGRAM):   drop T_CASE ;
MPRINT(EM_DIAGRAM):   if missing( CASE ) then T_CASE = .;
MPRINT(EM_DIAGRAM):   else T_CASE = (CASE - 0) * 7.55808831887078;
MPRINT(EM_DIAGRAM):   *** Standardize CENTER ;
MPRINT(EM_DIAGRAM):   drop T_CENTER ;
MPRINT(EM_DIAGRAM):   if missing( CENTER ) then T_CENTER = .;
MPRINT(EM_DIAGRAM):   else T_CENTER = (CENTER - 0) * 6.39144983708563;
MPRINT(EM_DIAGRAM):   *** Standardize CHANG ;
MPRINT(EM_DIAGRAM):   drop T_CHANG ;
MPRINT(EM_DIAGRAM):   if missing( CHANG ) then T_CHANG = .;
MPRINT(EM_DIAGRAM):   else T_CHANG = (CHANG - 0) * 3.76385580310905;
MPRINT(EM_DIAGRAM):   *** Standardize CHIP ;
MPRINT(EM_DIAGRAM):   drop T_CHIP ;
MPRINT(EM_DIAGRAM):   if missing( CHIP ) then T_CHIP = .;
MPRINT(EM_DIAGRAM):   else T_CHIP = (CHIP - 0) * 3.39398033352704;
MPRINT(EM_DIAGRAM):   *** Standardize CIRCUIT ;
MPRINT(EM_DIAGRAM):   drop T_CIRCUIT ;
MPRINT(EM_DIAGRAM):   if missing( CIRCUIT ) then T_CIRCUIT = .;
MPRINT(EM_DIAGRAM):   else T_CIRCUIT = (CIRCUIT - 0) * 3.95296855266446;
MPRINT(EM_DIAGRAM):   *** Standardize CLIENT ;
MPRINT(EM_DIAGRAM):   drop T_CLIENT ;
MPRINT(EM_DIAGRAM):   if missing( CLIENT ) then T_CLIENT = .;
MPRINT(EM_DIAGRAM):   else T_CLIENT = (CLIENT - 0) * 3.56978003030981;
MPRINT(EM_DIAGRAM):   *** Standardize CODE ;
MPRINT(EM_DIAGRAM):   drop T_CODE ;
MPRINT(EM_DIAGRAM):   if missing( CODE ) then T_CODE = .;
MPRINT(EM_DIAGRAM):   else T_CODE = (CODE - 0) * 3.98645548043578;
MPRINT(EM_DIAGRAM):   *** Standardize COLOR ;
MPRINT(EM_DIAGRAM):   drop T_COLOR ;
MPRINT(EM_DIAGRAM):   if missing( COLOR ) then T_COLOR = .;
MPRINT(EM_DIAGRAM):   else T_COLOR = (COLOR - 0) * 2.27872473230825;
MPRINT(EM_DIAGRAM):   *** Standardize COMMUN ;
MPRINT(EM_DIAGRAM):   drop T_COMMUN ;
MPRINT(EM_DIAGRAM):   if missing( COMMUN ) then T_COMMUN = .;
MPRINT(EM_DIAGRAM):   else T_COMMUN = (COMMUN - 0) * 6.34525155997964;
MPRINT(EM_DIAGRAM):   *** Standardize COMP ;
MPRINT(EM_DIAGRAM):   drop T_COMP ;
MPRINT(EM_DIAGRAM):   if missing( COMP ) then T_COMP = .;
MPRINT(EM_DIAGRAM):   else T_COMP = (COMP - 0) * 4.34484145200034;
MPRINT(EM_DIAGRAM):   *** Standardize COMPANI ;
MPRINT(EM_DIAGRAM):   drop T_COMPANI ;
MPRINT(EM_DIAGRAM):   if missing( COMPANI ) then T_COMPANI = .;
MPRINT(EM_DIAGRAM):   else T_COMPANI = (COMPANI - 0) * 4.4440297471331;
MPRINT(EM_DIAGRAM):   *** Standardize COMPIL ;
MPRINT(EM_DIAGRAM):   drop T_COMPIL ;
MPRINT(EM_DIAGRAM):   if missing( COMPIL ) then T_COMPIL = .;
MPRINT(EM_DIAGRAM):   else T_COMPIL = (COMPIL - 0) * 2.21826483650506;
MPRINT(EM_DIAGRAM):   *** Standardize COMPUT ;
MPRINT(EM_DIAGRAM):   drop T_COMPUT ;
MPRINT(EM_DIAGRAM):   if missing( COMPUT ) then T_COMPUT = .;
MPRINT(EM_DIAGRAM):   else T_COMPUT = (COMPUT - 0) * 5.40785388374868;
MPRINT(EM_DIAGRAM):   *** Standardize CONNECT ;
MPRINT(EM_DIAGRAM):   drop T_CONNECT ;
MPRINT(EM_DIAGRAM):   if missing( CONNECT ) then T_CONNECT = .;
MPRINT(EM_DIAGRAM):   else T_CONNECT = (CONNECT - 0) * 4.63257715030811;
MPRINT(EM_DIAGRAM):   *** Standardize CONTROL ;
MPRINT(EM_DIAGRAM):   drop T_CONTROL ;
MPRINT(EM_DIAGRAM):   if missing( CONTROL ) then T_CONTROL = .;
MPRINT(EM_DIAGRAM):   else T_CONTROL = (CONTROL - 0) * 6.21979205590598;
MPRINT(EM_DIAGRAM):   *** Standardize COPI ;
MPRINT(EM_DIAGRAM):   drop T_COPI ;
MPRINT(EM_DIAGRAM):   if missing( COPI ) then T_COPI = .;
MPRINT(EM_DIAGRAM):   else T_COPI = (COPI - 0) * 3.62407904166108;
MPRINT(EM_DIAGRAM):   *** Standardize CORRECT ;
MPRINT(EM_DIAGRAM):   drop T_CORRECT ;
MPRINT(EM_DIAGRAM):   if missing( CORRECT ) then T_CORRECT = .;
MPRINT(EM_DIAGRAM):   else T_CORRECT = (CORRECT - 0) * 4.41662116784113;
MPRINT(EM_DIAGRAM):   *** Standardize CREAT ;
MPRINT(EM_DIAGRAM):   drop T_CREAT ;
MPRINT(EM_DIAGRAM):   if missing( CREAT ) then T_CREAT = .;
MPRINT(EM_DIAGRAM):   else T_CREAT = (CREAT - 0) * 6.18435445164465;
MPRINT(EM_DIAGRAM):   *** Standardize CURRENT ;
MPRINT(EM_DIAGRAM):   drop T_CURRENT ;
MPRINT(EM_DIAGRAM):   if missing( CURRENT ) then T_CURRENT = .;
MPRINT(EM_DIAGRAM):   else T_CURRENT = (CURRENT - 0) * 4.80677628507551;
MPRINT(EM_DIAGRAM):   *** Standardize DAI ;
MPRINT(EM_DIAGRAM):   drop T_DAI ;
MPRINT(EM_DIAGRAM):   if missing( DAI ) then T_DAI = .;
MPRINT(EM_DIAGRAM):   else T_DAI = (DAI - 0) * 3.872164787462;
MPRINT(EM_DIAGRAM):   *** Standardize DATA ;
MPRINT(EM_DIAGRAM):   drop T_DATA ;
MPRINT(EM_DIAGRAM):   if missing( DATA ) then T_DATA = .;
MPRINT(EM_DIAGRAM):   else T_DATA = (DATA - 0) * 3.37502336487597;
MPRINT(EM_DIAGRAM):   *** Standardize DAVID ;
MPRINT(EM_DIAGRAM):   drop T_DAVID ;
MPRINT(EM_DIAGRAM):   if missing( DAVID ) then T_DAVID = .;
MPRINT(EM_DIAGRAM):   else T_DAVID = (DAVID - 0) * 4.28651996609655;
MPRINT(EM_DIAGRAM):   *** Standardize DEPART ;
MPRINT(EM_DIAGRAM):   drop T_DEPART ;
MPRINT(EM_DIAGRAM):   if missing( DEPART ) then T_DEPART = .;
MPRINT(EM_DIAGRAM):   else T_DEPART = (DEPART - 0) * 7.50475429483073;
MPRINT(EM_DIAGRAM):   *** Standardize DEPT ;
MPRINT(EM_DIAGRAM):   drop T_DEPT ;
MPRINT(EM_DIAGRAM):   if missing( DEPT ) then T_DEPT = .;
MPRINT(EM_DIAGRAM):   else T_DEPT = (DEPT - 0) * 6.56911162004866;
MPRINT(EM_DIAGRAM):   *** Standardize DESIGN ;
MPRINT(EM_DIAGRAM):   drop T_DESIGN ;
MPRINT(EM_DIAGRAM):   if missing( DESIGN ) then T_DESIGN = .;
MPRINT(EM_DIAGRAM):   else T_DESIGN = (DESIGN - 0) * 2.94441411189408;
MPRINT(EM_DIAGRAM):   *** Standardize DETECTOR ;
MPRINT(EM_DIAGRAM):   drop T_DETECTOR ;
MPRINT(EM_DIAGRAM):   if missing( DETECTOR ) then T_DETECTOR = .;
MPRINT(EM_DIAGRAM):   else T_DETECTOR = (DETECTOR - 0) * 1.08709270349317;
MPRINT(EM_DIAGRAM):   *** Standardize DEVIC ;
MPRINT(EM_DIAGRAM):   drop T_DEVIC ;
MPRINT(EM_DIAGRAM):   if missing( DEVIC ) then T_DEVIC = .;
MPRINT(EM_DIAGRAM):   else T_DEVIC = (DEVIC - 0) * 4.67205735821466;
MPRINT(EM_DIAGRAM):   *** Standardize DISEAS ;
MPRINT(EM_DIAGRAM):   drop T_DISEAS ;
MPRINT(EM_DIAGRAM):   if missing( DISEAS ) then T_DISEAS = .;
MPRINT(EM_DIAGRAM):   else T_DISEAS = (DISEAS - 0) * 3.32887979826876;
MPRINT(EM_DIAGRAM):   *** Standardize DISPLAI ;
MPRINT(EM_DIAGRAM):   drop T_DISPLAI ;
MPRINT(EM_DIAGRAM):   if missing( DISPLAI ) then T_DISPLAI = .;
MPRINT(EM_DIAGRAM):   else T_DISPLAI = (DISPLAI - 0) * 3.78752765238273;
MPRINT(EM_DIAGRAM):   *** Standardize DISTRIBUT ;
MPRINT(EM_DIAGRAM):   drop T_DISTRIBUT ;
MPRINT(EM_DIAGRAM):   if missing( DISTRIBUT ) then T_DISTRIBUT = .;
MPRINT(EM_DIAGRAM):   else T_DISTRIBUT = (DISTRIBUT - 0) * 7.05552574600035;
MPRINT(EM_DIAGRAM):   *** Standardize DOCTOR ;
MPRINT(EM_DIAGRAM):   drop T_DOCTOR ;
MPRINT(EM_DIAGRAM):   if missing( DOCTOR ) then T_DOCTOR = .;
MPRINT(EM_DIAGRAM):   else T_DOCTOR = (DOCTOR - 0) * 3.29683080963783;
MPRINT(EM_DIAGRAM):   *** Standardize DOESN ;
MPRINT(EM_DIAGRAM):   drop T_DOESN ;
MPRINT(EM_DIAGRAM):   if missing( DOESN ) then T_DOESN = .;
MPRINT(EM_DIAGRAM):   else T_DOESN = (DOESN - 0) * 6.48645082745116;
MPRINT(EM_DIAGRAM):   *** Standardize DON ;
MPRINT(EM_DIAGRAM):   drop T_DON ;
MPRINT(EM_DIAGRAM):   if missing( DON ) then T_DON = .;
MPRINT(EM_DIAGRAM):   else T_DON = (DON - 0) * 8.24380917430803;
MPRINT(EM_DIAGRAM):   *** Standardize DRAW ;
MPRINT(EM_DIAGRAM):   drop T_DRAW ;
MPRINT(EM_DIAGRAM):   if missing( DRAW ) then T_DRAW = .;
MPRINT(EM_DIAGRAM):   else T_DRAW = (DRAW - 0) * 2.92669701852183;
MPRINT(EM_DIAGRAM):   *** Standardize DRIVE ;
MPRINT(EM_DIAGRAM):   drop T_DRIVE ;
MPRINT(EM_DIAGRAM):   if missing( DRIVE ) then T_DRIVE = .;
MPRINT(EM_DIAGRAM):   else T_DRIVE = (DRIVE - 0) * 3.04563267369848;
MPRINT(EM_DIAGRAM):   *** Standardize DRUG ;
MPRINT(EM_DIAGRAM):   drop T_DRUG ;
MPRINT(EM_DIAGRAM):   if missing( DRUG ) then T_DRUG = .;
MPRINT(EM_DIAGRAM):   else T_DRUG = (DRUG - 0) * 3.37780479528133;
MPRINT(EM_DIAGRAM):   *** Standardize EDU ;
MPRINT(EM_DIAGRAM):   drop T_EDU ;
MPRINT(EM_DIAGRAM):   if missing( EDU ) then T_EDU = .;
MPRINT(EM_DIAGRAM):   else T_EDU = (EDU - 0) * 4.62191604150833;
MPRINT(EM_DIAGRAM):   *** Standardize EFFECT ;
MPRINT(EM_DIAGRAM):   drop T_EFFECT ;
MPRINT(EM_DIAGRAM):   if missing( EFFECT ) then T_EFFECT = .;
MPRINT(EM_DIAGRAM):   else T_EFFECT = (EFFECT - 0) * 2.59618812249216;
MPRINT(EM_DIAGRAM):   *** Standardize ELECTR ;
MPRINT(EM_DIAGRAM):   drop T_ELECTR ;
MPRINT(EM_DIAGRAM):   if missing( ELECTR ) then T_ELECTR = .;
MPRINT(EM_DIAGRAM):   else T_ELECTR = (ELECTR - 0) * 4.4458951495204;
MPRINT(EM_DIAGRAM):   *** Standardize ELECTRON ;
MPRINT(EM_DIAGRAM):   drop T_ELECTRON ;
MPRINT(EM_DIAGRAM):   if missing( ELECTRON ) then T_ELECTRON = .;
MPRINT(EM_DIAGRAM):   else T_ELECTRON = (ELECTRON - 0) * 2.0191870692385;
MPRINT(EM_DIAGRAM):   *** Standardize EMAIL ;
MPRINT(EM_DIAGRAM):   drop T_EMAIL ;
MPRINT(EM_DIAGRAM):   if missing( EMAIL ) then T_EMAIL = .;
MPRINT(EM_DIAGRAM):   else T_EMAIL = (EMAIL - 0) * 4.76322980481312;
MPRINT(EM_DIAGRAM):   *** Standardize ENGIN ;
MPRINT(EM_DIAGRAM):   drop T_ENGIN ;
MPRINT(EM_DIAGRAM):   if missing( ENGIN ) then T_ENGIN = .;
MPRINT(EM_DIAGRAM):   else T_ENGIN = (ENGIN - 0) * 6.75667225857073;
MPRINT(EM_DIAGRAM):   *** Standardize ERROR ;
MPRINT(EM_DIAGRAM):   drop T_ERROR ;
MPRINT(EM_DIAGRAM):   if missing( ERROR ) then T_ERROR = .;
MPRINT(EM_DIAGRAM):   else T_ERROR = (ERROR - 0) * 3.50448704639361;
MPRINT(EM_DIAGRAM):   *** Standardize EVENT ;
MPRINT(EM_DIAGRAM):   drop T_EVENT ;
MPRINT(EM_DIAGRAM):   if missing( EVENT ) then T_EVENT = .;
MPRINT(EM_DIAGRAM):   else T_EVENT = (EVENT - 0) * 2.77897384146163;
MPRINT(EM_DIAGRAM):   *** Standardize EXPERI ;
MPRINT(EM_DIAGRAM):   drop T_EXPERI ;
MPRINT(EM_DIAGRAM):   if missing( EXPERI ) then T_EXPERI = .;
MPRINT(EM_DIAGRAM):   else T_EXPERI = (EXPERI - 0) * 5.77101579726576;
MPRINT(EM_DIAGRAM):   *** Standardize FACT ;
MPRINT(EM_DIAGRAM):   drop T_FACT ;
MPRINT(EM_DIAGRAM):   if missing( FACT ) then T_FACT = .;
MPRINT(EM_DIAGRAM):   else T_FACT = (FACT - 0) * 10.9555206018458;
MPRINT(EM_DIAGRAM):   *** Standardize FAX ;
MPRINT(EM_DIAGRAM):   drop T_FAX ;
MPRINT(EM_DIAGRAM):   if missing( FAX ) then T_FAX = .;
MPRINT(EM_DIAGRAM):   else T_FAX = (FAX - 0) * 8.47991264225496;
MPRINT(EM_DIAGRAM):   *** Standardize FEEL ;
MPRINT(EM_DIAGRAM):   drop T_FEEL ;
MPRINT(EM_DIAGRAM):   if missing( FEEL ) then T_FEEL = .;
MPRINT(EM_DIAGRAM):   else T_FEEL = (FEEL - 0) * 5.75411054232057;
MPRINT(EM_DIAGRAM):   *** Standardize FILE ;
MPRINT(EM_DIAGRAM):   drop T_FILE ;
MPRINT(EM_DIAGRAM):   if missing( FILE ) then T_FILE = .;
MPRINT(EM_DIAGRAM):   else T_FILE = (FILE - 0) * 2.35197598797465;
MPRINT(EM_DIAGRAM):   *** Standardize FIND ;
MPRINT(EM_DIAGRAM):   drop T_FIND ;
MPRINT(EM_DIAGRAM):   if missing( FIND ) then T_FIND = .;
MPRINT(EM_DIAGRAM):   else T_FIND = (FIND - 0) * 5.8118481131623;
MPRINT(EM_DIAGRAM):   *** Standardize FOLLOWUP ;
MPRINT(EM_DIAGRAM):   drop T_FOLLOWUP ;
MPRINT(EM_DIAGRAM):   if missing( FOLLOWUP ) then T_FOLLOWUP = .;
MPRINT(EM_DIAGRAM):   else T_FOLLOWUP = (FOLLOWUP - 0) * 4.68706321386279;
MPRINT(EM_DIAGRAM):   *** Standardize FONT ;
MPRINT(EM_DIAGRAM):   drop T_FONT ;
MPRINT(EM_DIAGRAM):   if missing( FONT ) then T_FONT = .;
MPRINT(EM_DIAGRAM):   else T_FONT = (FONT - 0) * 1.58271039864806;
MPRINT(EM_DIAGRAM):   *** Standardize FOOD ;
MPRINT(EM_DIAGRAM):   drop T_FOOD ;
MPRINT(EM_DIAGRAM):   if missing( FOOD ) then T_FOOD = .;
MPRINT(EM_DIAGRAM):   else T_FOOD = (FOOD - 0) * 2.99578204227638;
MPRINT(EM_DIAGRAM):   *** Standardize FRI ;
MPRINT(EM_DIAGRAM):   drop T_FRI ;
MPRINT(EM_DIAGRAM):   if missing( FRI ) then T_FRI = .;
MPRINT(EM_DIAGRAM):   else T_FRI = (FRI - 0) * 5.88152841773181;
MPRINT(EM_DIAGRAM):   *** Standardize FRIEND ;
MPRINT(EM_DIAGRAM):   drop T_FRIEND ;
MPRINT(EM_DIAGRAM):   if missing( FRIEND ) then T_FRIEND = .;
MPRINT(EM_DIAGRAM):   else T_FRIEND = (FRIEND - 0) * 4.35877836047294;
MPRINT(EM_DIAGRAM):   *** Standardize FUNCTION ;
MPRINT(EM_DIAGRAM):   drop T_FUNCTION ;
MPRINT(EM_DIAGRAM):   if missing( FUNCTION ) then T_FUNCTION = .;
MPRINT(EM_DIAGRAM):   else T_FUNCTION = (FUNCTION - 0) * 5.1173689858046;
MPRINT(EM_DIAGRAM):   *** Standardize GEB ;
MPRINT(EM_DIAGRAM):   drop T_GEB ;
MPRINT(EM_DIAGRAM):   if missing( GEB ) then T_GEB = .;
MPRINT(EM_DIAGRAM):   else T_GEB = (GEB - 0) * 4.73177524728255;
MPRINT(EM_DIAGRAM):   *** Standardize GENER ;
MPRINT(EM_DIAGRAM):   drop T_GENER ;
MPRINT(EM_DIAGRAM):   if missing( GENER ) then T_GENER = .;
MPRINT(EM_DIAGRAM):   else T_GENER = (GENER - 0) * 7.41141655455616;
MPRINT(EM_DIAGRAM):   *** Standardize GEORGIA ;
MPRINT(EM_DIAGRAM):   drop T_GEORGIA ;
MPRINT(EM_DIAGRAM):   if missing( GEORGIA ) then T_GEORGIA = .;
MPRINT(EM_DIAGRAM):   else T_GEORGIA = (GEORGIA - 0) * 1.83117424586408;
MPRINT(EM_DIAGRAM):   *** Standardize GIVE ;
MPRINT(EM_DIAGRAM):   drop T_GIVE ;
MPRINT(EM_DIAGRAM):   if missing( GIVE ) then T_GIVE = .;
MPRINT(EM_DIAGRAM):   else T_GIVE = (GIVE - 0) * 5.12000735632698;
MPRINT(EM_DIAGRAM):   *** Standardize GOOD ;
MPRINT(EM_DIAGRAM):   drop T_GOOD ;
MPRINT(EM_DIAGRAM):   if missing( GOOD ) then T_GOOD = .;
MPRINT(EM_DIAGRAM):   else T_GOOD = (GOOD - 0) * 7.84845177981592;
MPRINT(EM_DIAGRAM):   *** Standardize GORDON ;
MPRINT(EM_DIAGRAM):   drop T_GORDON ;
MPRINT(EM_DIAGRAM):   if missing( GORDON ) then T_GORDON = .;
MPRINT(EM_DIAGRAM):   else T_GORDON = (GORDON - 0) * 3.47234244923162;
MPRINT(EM_DIAGRAM):   *** Standardize GOVERN ;
MPRINT(EM_DIAGRAM):   drop T_GOVERN ;
MPRINT(EM_DIAGRAM):   if missing( GOVERN ) then T_GOVERN = .;
MPRINT(EM_DIAGRAM):   else T_GOVERN = (GOVERN - 0) * 6.97158293696036;
MPRINT(EM_DIAGRAM):   *** Standardize GRAPHIC ;
MPRINT(EM_DIAGRAM):   drop T_GRAPHIC ;
MPRINT(EM_DIAGRAM):   if missing( GRAPHIC ) then T_GRAPHIC = .;
MPRINT(EM_DIAGRAM):   else T_GRAPHIC = (GRAPHIC - 0) * 1.85199926810442;
MPRINT(EM_DIAGRAM):   *** Standardize GREAT ;
MPRINT(EM_DIAGRAM):   drop T_GREAT ;
MPRINT(EM_DIAGRAM):   if missing( GREAT ) then T_GREAT = .;
MPRINT(EM_DIAGRAM):   else T_GREAT = (GREAT - 0) * 5.17931019849811;
MPRINT(EM_DIAGRAM):   *** Standardize GREEK ;
MPRINT(EM_DIAGRAM):   drop T_GREEK ;
MPRINT(EM_DIAGRAM):   if missing( GREEK ) then T_GREEK = .;
MPRINT(EM_DIAGRAM):   else T_GREEK = (GREEK - 0) * 3.01306399653486;
MPRINT(EM_DIAGRAM):   *** Standardize GROUND ;
MPRINT(EM_DIAGRAM):   drop T_GROUND ;
MPRINT(EM_DIAGRAM):   if missing( GROUND ) then T_GROUND = .;
MPRINT(EM_DIAGRAM):   else T_GROUND = (GROUND - 0) * 1.78910822919951;
MPRINT(EM_DIAGRAM):   *** Standardize GROUP ;
MPRINT(EM_DIAGRAM):   drop T_GROUP ;
MPRINT(EM_DIAGRAM):   if missing( GROUP ) then T_GROUP = .;
MPRINT(EM_DIAGRAM):   else T_GROUP = (GROUP - 0) * 3.99942378943969;
MPRINT(EM_DIAGRAM):   *** Standardize HAPPEN ;
MPRINT(EM_DIAGRAM):   drop T_HAPPEN ;
MPRINT(EM_DIAGRAM):   if missing( HAPPEN ) then T_HAPPEN = .;
MPRINT(EM_DIAGRAM):   else T_HAPPEN = (HAPPEN - 0) * 7.3099533432033;
MPRINT(EM_DIAGRAM):   *** Standardize HEAR ;
MPRINT(EM_DIAGRAM):   drop T_HEAR ;
MPRINT(EM_DIAGRAM):   if missing( HEAR ) then T_HEAR = .;
MPRINT(EM_DIAGRAM):   else T_HEAR = (HEAR - 0) * 4.9256523149998;
MPRINT(EM_DIAGRAM):   *** Standardize HIGH ;
MPRINT(EM_DIAGRAM):   drop T_HIGH ;
MPRINT(EM_DIAGRAM):   if missing( HIGH ) then T_HIGH = .;
MPRINT(EM_DIAGRAM):   else T_HIGH = (HIGH - 0) * 3.6198859665534;
MPRINT(EM_DIAGRAM):   *** Standardize HOME ;
MPRINT(EM_DIAGRAM):   drop T_HOME ;
MPRINT(EM_DIAGRAM):   if missing( HOME ) then T_HOME = .;
MPRINT(EM_DIAGRAM):   else T_HOME = (HOME - 0) * 5.20343485840704;
MPRINT(EM_DIAGRAM):   *** Standardize IDEA ;
MPRINT(EM_DIAGRAM):   drop T_IDEA ;
MPRINT(EM_DIAGRAM):   if missing( IDEA ) then T_IDEA = .;
MPRINT(EM_DIAGRAM):   else T_IDEA = (IDEA - 0) * 3.87827996932545;
MPRINT(EM_DIAGRAM):   *** Standardize IMAG ;
MPRINT(EM_DIAGRAM):   drop T_IMAG ;
MPRINT(EM_DIAGRAM):   if missing( IMAG ) then T_IMAG = .;
MPRINT(EM_DIAGRAM):   else T_IMAG = (IMAG - 0) * 3.63138175350257;
MPRINT(EM_DIAGRAM):   *** Standardize INCLUD ;
MPRINT(EM_DIAGRAM):   drop T_INCLUD ;
MPRINT(EM_DIAGRAM):   if missing( INCLUD ) then T_INCLUD = .;
MPRINT(EM_DIAGRAM):   else T_INCLUD = (INCLUD - 0) * 7.45287218604392;
MPRINT(EM_DIAGRAM):   *** Standardize INFO ;
MPRINT(EM_DIAGRAM):   drop T_INFO ;
MPRINT(EM_DIAGRAM):   if missing( INFO ) then T_INFO = .;
MPRINT(EM_DIAGRAM):   else T_INFO = (INFO - 0) * 2.43990942670609;
MPRINT(EM_DIAGRAM):   *** Standardize INFORM ;
MPRINT(EM_DIAGRAM):   drop T_INFORM ;
MPRINT(EM_DIAGRAM):   if missing( INFORM ) then T_INFORM = .;
MPRINT(EM_DIAGRAM):   else T_INFORM = (INFORM - 0) * 4.30231113990862;
MPRINT(EM_DIAGRAM):   *** Standardize INPUT ;
MPRINT(EM_DIAGRAM):   drop T_INPUT ;
MPRINT(EM_DIAGRAM):   if missing( INPUT ) then T_INPUT = .;
MPRINT(EM_DIAGRAM):   else T_INPUT = (INPUT - 0) * 3.34038456253531;
MPRINT(EM_DIAGRAM):   *** Standardize INSTITUT ;
MPRINT(EM_DIAGRAM):   drop T_INSTITUT ;
MPRINT(EM_DIAGRAM):   if missing( INSTITUT ) then T_INSTITUT = .;
MPRINT(EM_DIAGRAM):   else T_INSTITUT = (INSTITUT - 0) * 3.1608756439435;
MPRINT(EM_DIAGRAM):   *** Standardize INTEREST ;
MPRINT(EM_DIAGRAM):   drop T_INTEREST ;
MPRINT(EM_DIAGRAM):   if missing( INTEREST ) then T_INTEREST = .;
MPRINT(EM_DIAGRAM):   else T_INTEREST = (INTEREST - 0) * 5.51854784066428;
MPRINT(EM_DIAGRAM):   *** Standardize INTERNET ;
MPRINT(EM_DIAGRAM):   drop T_INTERNET ;
MPRINT(EM_DIAGRAM):   if missing( INTERNET ) then T_INTERNET = .;
MPRINT(EM_DIAGRAM):   else T_INTERNET = (INTERNET - 0) * 1.88889117212133;
MPRINT(EM_DIAGRAM):   *** Standardize ISRA ;
MPRINT(EM_DIAGRAM):   drop T_ISRA ;
MPRINT(EM_DIAGRAM):   if missing( ISRA ) then T_ISRA = .;
MPRINT(EM_DIAGRAM):   else T_ISRA = (ISRA - 0) * 2.93382132882602;
MPRINT(EM_DIAGRAM):   *** Standardize ISRAEL ;
MPRINT(EM_DIAGRAM):   drop T_ISRAEL ;
MPRINT(EM_DIAGRAM):   if missing( ISRAEL ) then T_ISRAEL = .;
MPRINT(EM_DIAGRAM):   else T_ISRAEL = (ISRAEL - 0) * 3.39785495462447;
MPRINT(EM_DIAGRAM):   *** Standardize JEW ;
MPRINT(EM_DIAGRAM):   drop T_JEW ;
MPRINT(EM_DIAGRAM):   if missing( JEW ) then T_JEW = .;
MPRINT(EM_DIAGRAM):   else T_JEW = (JEW - 0) * 3.14491364076581;
MPRINT(EM_DIAGRAM):   *** Standardize JEWISH ;
MPRINT(EM_DIAGRAM):   drop T_JEWISH ;
MPRINT(EM_DIAGRAM):   if missing( JEWISH ) then T_JEWISH = .;
MPRINT(EM_DIAGRAM):   else T_JEWISH = (JEWISH - 0) * 5.92217056150352;
MPRINT(EM_DIAGRAM):   *** Standardize JOHN ;
MPRINT(EM_DIAGRAM):   drop T_JOHN ;
MPRINT(EM_DIAGRAM):   if missing( JOHN ) then T_JOHN = .;
MPRINT(EM_DIAGRAM):   else T_JOHN = (JOHN - 0) * 3.59085427385425;
MPRINT(EM_DIAGRAM):   *** Standardize KEYBOARD ;
MPRINT(EM_DIAGRAM):   drop T_KEYBOARD ;
MPRINT(EM_DIAGRAM):   if missing( KEYBOARD ) then T_KEYBOARD = .;
MPRINT(EM_DIAGRAM):   else T_KEYBOARD = (KEYBOARD - 0) * 1.43127982922717;
MPRINT(EM_DIAGRAM):   *** Standardize KEYWORD ;
MPRINT(EM_DIAGRAM):   drop T_KEYWORD ;
MPRINT(EM_DIAGRAM):   if missing( KEYWORD ) then T_KEYWORD = .;
MPRINT(EM_DIAGRAM):   else T_KEYWORD = (KEYWORD - 0) * 5.02226940309122;
MPRINT(EM_DIAGRAM):   *** Standardize KILL ;
MPRINT(EM_DIAGRAM):   drop T_KILL ;
MPRINT(EM_DIAGRAM):   if missing( KILL ) then T_KILL = .;
MPRINT(EM_DIAGRAM):   else T_KILL = (KILL - 0) * 4.07596293417053;
MPRINT(EM_DIAGRAM):   *** Standardize KIND ;
MPRINT(EM_DIAGRAM):   drop T_KIND ;
MPRINT(EM_DIAGRAM):   if missing( KIND ) then T_KIND = .;
MPRINT(EM_DIAGRAM):   else T_KIND = (KIND - 0) * 5.00154702429699;
MPRINT(EM_DIAGRAM):   *** Standardize LEVEL ;
MPRINT(EM_DIAGRAM):   drop T_LEVEL ;
MPRINT(EM_DIAGRAM):   if missing( LEVEL ) then T_LEVEL = .;
MPRINT(EM_DIAGRAM):   else T_LEVEL = (LEVEL - 0) * 3.79255144404833;
MPRINT(EM_DIAGRAM):   *** Standardize LIST ;
MPRINT(EM_DIAGRAM):   drop T_LIST ;
MPRINT(EM_DIAGRAM):   if missing( LIST ) then T_LIST = .;
MPRINT(EM_DIAGRAM):   else T_LIST = (LIST - 0) * 3.01527314406741;
MPRINT(EM_DIAGRAM):   *** Standardize LIVE ;
MPRINT(EM_DIAGRAM):   drop T_LIVE ;
MPRINT(EM_DIAGRAM):   if missing( LIVE ) then T_LIVE = .;
MPRINT(EM_DIAGRAM):   else T_LIVE = (LIVE - 0) * 5.54620113841454;
MPRINT(EM_DIAGRAM):   *** Standardize LONG ;
MPRINT(EM_DIAGRAM):   drop T_LONG ;
MPRINT(EM_DIAGRAM):   if missing( LONG ) then T_LONG = .;
MPRINT(EM_DIAGRAM):   else T_LONG = (LONG - 0) * 4.19939497891168;
MPRINT(EM_DIAGRAM):   *** Standardize MACHIN ;
MPRINT(EM_DIAGRAM):   drop T_MACHIN ;
MPRINT(EM_DIAGRAM):   if missing( MACHIN ) then T_MACHIN = .;
MPRINT(EM_DIAGRAM):   else T_MACHIN = (MACHIN - 0) * 4.78877337764077;
MPRINT(EM_DIAGRAM):   *** Standardize MAIL ;
MPRINT(EM_DIAGRAM):   drop T_MAIL ;
MPRINT(EM_DIAGRAM):   if missing( MAIL ) then T_MAIL = .;
MPRINT(EM_DIAGRAM):   else T_MAIL = (MAIL - 0) * 3.59372355302247;
MPRINT(EM_DIAGRAM):   *** Standardize MANAG ;
MPRINT(EM_DIAGRAM):   drop T_MANAG ;
MPRINT(EM_DIAGRAM):   if missing( MANAG ) then T_MANAG = .;
MPRINT(EM_DIAGRAM):   else T_MANAG = (MANAG - 0) * 3.76132037636571;
MPRINT(EM_DIAGRAM):   *** Standardize MARK ;
MPRINT(EM_DIAGRAM):   drop T_MARK ;
MPRINT(EM_DIAGRAM):   if missing( MARK ) then T_MARK = .;
MPRINT(EM_DIAGRAM):   else T_MARK = (MARK - 0) * 3.0438061756493;
MPRINT(EM_DIAGRAM):   *** Standardize MED ;
MPRINT(EM_DIAGRAM):   drop T_MED ;
MPRINT(EM_DIAGRAM):   if missing( MED ) then T_MED = .;
MPRINT(EM_DIAGRAM):   else T_MED = (MED - 0) * 9.37751776577826;
MPRINT(EM_DIAGRAM):   *** Standardize MEDIC ;
MPRINT(EM_DIAGRAM):   drop T_MEDIC ;
MPRINT(EM_DIAGRAM):   if missing( MEDIC ) then T_MEDIC = .;
MPRINT(EM_DIAGRAM):   else T_MEDIC = (MEDIC - 0) * 5.50007463226141;
MPRINT(EM_DIAGRAM):   *** Standardize MEDICIN ;
MPRINT(EM_DIAGRAM):   drop T_MEDICIN ;
MPRINT(EM_DIAGRAM):   if missing( MEDICIN ) then T_MEDICIN = .;
MPRINT(EM_DIAGRAM):   else T_MEDICIN = (MEDICIN - 0) * 3.69632394160673;
MPRINT(EM_DIAGRAM):   *** Standardize MEMORI ;
MPRINT(EM_DIAGRAM):   drop T_MEMORI ;
MPRINT(EM_DIAGRAM):   if missing( MEMORI ) then T_MEMORI = .;
MPRINT(EM_DIAGRAM):   else T_MEMORI = (MEMORI - 0) * 3.08243006790177;
MPRINT(EM_DIAGRAM):   *** Standardize MICHAEL ;
MPRINT(EM_DIAGRAM):   drop T_MICHAEL ;
MPRINT(EM_DIAGRAM):   if missing( MICHAEL ) then T_MICHAEL = .;
MPRINT(EM_DIAGRAM):   else T_MICHAEL = (MICHAEL - 0) * 2.376254304054;
MPRINT(EM_DIAGRAM):   *** Standardize MIKE ;
MPRINT(EM_DIAGRAM):   drop T_MIKE ;
MPRINT(EM_DIAGRAM):   if missing( MIKE ) then T_MIKE = .;
MPRINT(EM_DIAGRAM):   else T_MIKE = (MIKE - 0) * 1.86275620709937;
MPRINT(EM_DIAGRAM):   *** Standardize MON ;
MPRINT(EM_DIAGRAM):   drop T_MON ;
MPRINT(EM_DIAGRAM):   if missing( MON ) then T_MON = .;
MPRINT(EM_DIAGRAM):   else T_MON = (MON - 0) * 3.11461914988643;
MPRINT(EM_DIAGRAM):   *** Standardize MOTIF ;
MPRINT(EM_DIAGRAM):   drop T_MOTIF ;
MPRINT(EM_DIAGRAM):   if missing( MOTIF ) then T_MOTIF = .;
MPRINT(EM_DIAGRAM):   else T_MOTIF = (MOTIF - 0) * 1.77833146496822;
MPRINT(EM_DIAGRAM):   *** Standardize MOTOROLA ;
MPRINT(EM_DIAGRAM):   drop T_MOTOROLA ;
MPRINT(EM_DIAGRAM):   if missing( MOTOROLA ) then T_MOTOROLA = .;
MPRINT(EM_DIAGRAM):   else T_MOTOROLA = (MOTOROLA - 0) * 2.9016104519679;
MPRINT(EM_DIAGRAM):   *** Standardize NATION ;
MPRINT(EM_DIAGRAM):   drop T_NATION ;
MPRINT(EM_DIAGRAM):   if missing( NATION ) then T_NATION = .;
MPRINT(EM_DIAGRAM):   else T_NATION = (NATION - 0) * 4.71969762486743;
MPRINT(EM_DIAGRAM):   *** Standardize NETWORK ;
MPRINT(EM_DIAGRAM):   drop T_NETWORK ;
MPRINT(EM_DIAGRAM):   if missing( NETWORK ) then T_NETWORK = .;
MPRINT(EM_DIAGRAM):   else T_NETWORK = (NETWORK - 0) * 4.22356430684241;
MPRINT(EM_DIAGRAM):   *** Standardize NEW ;
MPRINT(EM_DIAGRAM):   drop T_NEW ;
MPRINT(EM_DIAGRAM):   if missing( NEW ) then T_NEW = .;
MPRINT(EM_DIAGRAM):   else T_NEW = (NEW - 0) * 5.28609191862929;
MPRINT(EM_DIAGRAM):   *** Standardize NEWS ;
MPRINT(EM_DIAGRAM):   drop T_NEWS ;
MPRINT(EM_DIAGRAM):   if missing( NEWS ) then T_NEWS = .;
MPRINT(EM_DIAGRAM):   else T_NEWS = (NEWS - 0) * 6.63244786409493;
MPRINT(EM_DIAGRAM):   *** Standardize NEWSREAD ;
MPRINT(EM_DIAGRAM):   drop T_NEWSREAD ;
MPRINT(EM_DIAGRAM):   if missing( NEWSREAD ) then T_NEWSREAD = .;
MPRINT(EM_DIAGRAM):   else T_NEWSREAD = (NEWSREAD - 0) * 5.31710677495046;
MPRINT(EM_DIAGRAM):   *** Standardize NOIS ;
MPRINT(EM_DIAGRAM):   drop T_NOIS ;
MPRINT(EM_DIAGRAM):   if missing( NOIS ) then T_NOIS = .;
MPRINT(EM_DIAGRAM):   else T_NOIS = (NOIS - 0) * 2.08482728145691;
MPRINT(EM_DIAGRAM):   *** Standardize NUMBER ;
MPRINT(EM_DIAGRAM):   drop T_NUMBER ;
MPRINT(EM_DIAGRAM):   if missing( NUMBER ) then T_NUMBER = .;
MPRINT(EM_DIAGRAM):   else T_NUMBER = (NUMBER - 0) * 3.36789722047143;
MPRINT(EM_DIAGRAM):   *** Standardize OPER ;
MPRINT(EM_DIAGRAM):   drop T_OPER ;
MPRINT(EM_DIAGRAM):   if missing( OPER ) then T_OPER = .;
MPRINT(EM_DIAGRAM):   else T_OPER = (OPER - 0) * 4.43940874156981;
MPRINT(EM_DIAGRAM):   *** Standardize OPINION ;
MPRINT(EM_DIAGRAM):   drop T_OPINION ;
MPRINT(EM_DIAGRAM):   if missing( OPINION ) then T_OPINION = .;
MPRINT(EM_DIAGRAM):   else T_OPINION = (OPINION - 0) * 6.49554772318911;
MPRINT(EM_DIAGRAM):   *** Standardize ORIGIN ;
MPRINT(EM_DIAGRAM):   drop T_ORIGIN ;
MPRINT(EM_DIAGRAM):   if missing( ORIGIN ) then T_ORIGIN = .;
MPRINT(EM_DIAGRAM):   else T_ORIGIN = (ORIGIN - 0) * 5.47874632775651;
MPRINT(EM_DIAGRAM):   *** Standardize OUTPUT ;
MPRINT(EM_DIAGRAM):   drop T_OUTPUT ;
MPRINT(EM_DIAGRAM):   if missing( OUTPUT ) then T_OUTPUT = .;
MPRINT(EM_DIAGRAM):   else T_OUTPUT = (OUTPUT - 0) * 3.45534764240484;
MPRINT(EM_DIAGRAM):   *** Standardize PAIN ;
MPRINT(EM_DIAGRAM):   drop T_PAIN ;
MPRINT(EM_DIAGRAM):   if missing( PAIN ) then T_PAIN = .;
MPRINT(EM_DIAGRAM):   else T_PAIN = (PAIN - 0) * 2.24484759770233;
MPRINT(EM_DIAGRAM):   *** Standardize PALESTINIAN ;
MPRINT(EM_DIAGRAM):   drop T_PALESTINIAN ;
MPRINT(EM_DIAGRAM):   if missing( PALESTINIAN ) then T_PALESTINIAN = .;
MPRINT(EM_DIAGRAM):   else T_PALESTINIAN = (PALESTINIAN - 0) * 3.33089082968775;
MPRINT(EM_DIAGRAM):   *** Standardize PART ;
MPRINT(EM_DIAGRAM):   drop T_PART ;
MPRINT(EM_DIAGRAM):   if missing( PART ) then T_PART = .;
MPRINT(EM_DIAGRAM):   else T_PART = (PART - 0) * 2.36437545659518;
MPRINT(EM_DIAGRAM):   *** Standardize PATIENT ;
MPRINT(EM_DIAGRAM):   drop T_PATIENT ;
MPRINT(EM_DIAGRAM):   if missing( PATIENT ) then T_PATIENT = .;
MPRINT(EM_DIAGRAM):   else T_PATIENT = (PATIENT - 0) * 5.37603723162367;
MPRINT(EM_DIAGRAM):   *** Standardize PERSON ;
MPRINT(EM_DIAGRAM):   drop T_PERSON ;
MPRINT(EM_DIAGRAM):   if missing( PERSON ) then T_PERSON = .;
MPRINT(EM_DIAGRAM):   else T_PERSON = (PERSON - 0) * 4.19729146778759;
MPRINT(EM_DIAGRAM):   *** Standardize PHONE ;
MPRINT(EM_DIAGRAM):   drop T_PHONE ;
MPRINT(EM_DIAGRAM):   if missing( PHONE ) then T_PHONE = .;
MPRINT(EM_DIAGRAM):   else T_PHONE = (PHONE - 0) * 3.42665222382902;
MPRINT(EM_DIAGRAM):   *** Standardize PITT ;
MPRINT(EM_DIAGRAM):   drop T_PITT ;
MPRINT(EM_DIAGRAM):   if missing( PITT ) then T_PITT = .;
MPRINT(EM_DIAGRAM):   else T_PITT = (PITT - 0) * 2.66789121160375;
MPRINT(EM_DIAGRAM):   *** Standardize PITTSBURGH ;
MPRINT(EM_DIAGRAM):   drop T_PITTSBURGH ;
MPRINT(EM_DIAGRAM):   if missing( PITTSBURGH ) then T_PITTSBURGH = .;
MPRINT(EM_DIAGRAM):   else T_PITTSBURGH = (PITTSBURGH - 0) * 4.87153141210063;
MPRINT(EM_DIAGRAM):   *** Standardize PLACE ;
MPRINT(EM_DIAGRAM):   drop T_PLACE ;
MPRINT(EM_DIAGRAM):   if missing( PLACE ) then T_PLACE = .;
MPRINT(EM_DIAGRAM):   else T_PLACE = (PLACE - 0) * 5.0827629036618;
MPRINT(EM_DIAGRAM):   *** Standardize POINT ;
MPRINT(EM_DIAGRAM):   drop T_POINT ;
MPRINT(EM_DIAGRAM):   if missing( POINT ) then T_POINT = .;
MPRINT(EM_DIAGRAM):   else T_POINT = (POINT - 0) * 4.65455214211544;
MPRINT(EM_DIAGRAM):   *** Standardize POLICI ;
MPRINT(EM_DIAGRAM):   drop T_POLICI ;
MPRINT(EM_DIAGRAM):   if missing( POLICI ) then T_POLICI = .;
MPRINT(EM_DIAGRAM):   else T_POLICI = (POLICI - 0) * 8.41452739753352;
MPRINT(EM_DIAGRAM):   *** Standardize POSIT ;
MPRINT(EM_DIAGRAM):   drop T_POSIT ;
MPRINT(EM_DIAGRAM):   if missing( POSIT ) then T_POSIT = .;
MPRINT(EM_DIAGRAM):   else T_POSIT = (POSIT - 0) * 3.98645548043578;
MPRINT(EM_DIAGRAM):   *** Standardize POST ;
MPRINT(EM_DIAGRAM):   drop T_POST ;
MPRINT(EM_DIAGRAM):   if missing( POST ) then T_POST = .;
MPRINT(EM_DIAGRAM):   else T_POST = (POST - 0) * 6.1241631127725;
MPRINT(EM_DIAGRAM):   *** Standardize POWER ;
MPRINT(EM_DIAGRAM):   drop T_POWER ;
MPRINT(EM_DIAGRAM):   if missing( POWER ) then T_POWER = .;
MPRINT(EM_DIAGRAM):   else T_POWER = (POWER - 0) * 3.01621257128619;
MPRINT(EM_DIAGRAM):   *** Standardize PROBLEM ;
MPRINT(EM_DIAGRAM):   drop T_PROBLEM ;
MPRINT(EM_DIAGRAM):   if missing( PROBLEM ) then T_PROBLEM = .;
MPRINT(EM_DIAGRAM):   else T_PROBLEM = (PROBLEM - 0) * 7.0126506335806;
MPRINT(EM_DIAGRAM):   *** Standardize PRODUCT ;
MPRINT(EM_DIAGRAM):   drop T_PRODUCT ;
MPRINT(EM_DIAGRAM):   if missing( PRODUCT ) then T_PRODUCT = .;
MPRINT(EM_DIAGRAM):   else T_PRODUCT = (PRODUCT - 0) * 4.84857704765892;
MPRINT(EM_DIAGRAM):   *** Standardize PROGRAM ;
MPRINT(EM_DIAGRAM):   drop T_PROGRAM ;
MPRINT(EM_DIAGRAM):   if missing( PROGRAM ) then T_PROGRAM = .;
MPRINT(EM_DIAGRAM):   else T_PROGRAM = (PROGRAM - 0) * 3.85619513795463;
MPRINT(EM_DIAGRAM):   *** Standardize PROJECT ;
MPRINT(EM_DIAGRAM):   drop T_PROJECT ;
MPRINT(EM_DIAGRAM):   if missing( PROJECT ) then T_PROJECT = .;
MPRINT(EM_DIAGRAM):   else T_PROJECT = (PROJECT - 0) * 3.85177641840636;
MPRINT(EM_DIAGRAM):   *** Standardize PUBLIC ;
MPRINT(EM_DIAGRAM):   drop T_PUBLIC ;
MPRINT(EM_DIAGRAM):   if missing( PUBLIC ) then T_PUBLIC = .;
MPRINT(EM_DIAGRAM):   else T_PUBLIC = (PUBLIC - 0) * 3.22461720691186;
MPRINT(EM_DIAGRAM):   *** Standardize QUESTION ;
MPRINT(EM_DIAGRAM):   drop T_QUESTION ;
MPRINT(EM_DIAGRAM):   if missing( QUESTION ) then T_QUESTION = .;
MPRINT(EM_DIAGRAM):   else T_QUESTION = (QUESTION - 0) * 6.05202205428262;
MPRINT(EM_DIAGRAM):   *** Standardize RADAR ;
MPRINT(EM_DIAGRAM):   drop T_RADAR ;
MPRINT(EM_DIAGRAM):   if missing( RADAR ) then T_RADAR = .;
MPRINT(EM_DIAGRAM):   else T_RADAR = (RADAR - 0) * 1.64028348569154;
MPRINT(EM_DIAGRAM):   *** Standardize RADIO ;
MPRINT(EM_DIAGRAM):   drop T_RADIO ;
MPRINT(EM_DIAGRAM):   if missing( RADIO ) then T_RADIO = .;
MPRINT(EM_DIAGRAM):   else T_RADIO = (RADIO - 0) * 3.27810759013307;
MPRINT(EM_DIAGRAM):   *** Standardize READ ;
MPRINT(EM_DIAGRAM):   drop T_READ ;
MPRINT(EM_DIAGRAM):   if missing( READ ) then T_READ = .;
MPRINT(EM_DIAGRAM):   else T_READ = (READ - 0) * 4.42237465935729;
MPRINT(EM_DIAGRAM):   *** Standardize REASON ;
MPRINT(EM_DIAGRAM):   drop T_REASON ;
MPRINT(EM_DIAGRAM):   if missing( REASON ) then T_REASON = .;
MPRINT(EM_DIAGRAM):   else T_REASON = (REASON - 0) * 9.31761791253643;
MPRINT(EM_DIAGRAM):   *** Standardize RECEIV ;
MPRINT(EM_DIAGRAM):   drop T_RECEIV ;
MPRINT(EM_DIAGRAM):   if missing( RECEIV ) then T_RECEIV = .;
MPRINT(EM_DIAGRAM):   else T_RECEIV = (RECEIV - 0) * 3.29627760495118;
MPRINT(EM_DIAGRAM):   *** Standardize REMEMB ;
MPRINT(EM_DIAGRAM):   drop T_REMEMB ;
MPRINT(EM_DIAGRAM):   if missing( REMEMB ) then T_REMEMB = .;
MPRINT(EM_DIAGRAM):   else T_REMEMB = (REMEMB - 0) * 5.36096344091829;
MPRINT(EM_DIAGRAM):   *** Standardize REPLI ;
MPRINT(EM_DIAGRAM):   drop T_REPLI ;
MPRINT(EM_DIAGRAM):   if missing( REPLI ) then T_REPLI = .;
MPRINT(EM_DIAGRAM):   else T_REPLI = (REPLI - 0) * 6.302186984309;
MPRINT(EM_DIAGRAM):   *** Standardize REPORT ;
MPRINT(EM_DIAGRAM):   drop T_REPORT ;
MPRINT(EM_DIAGRAM):   if missing( REPORT ) then T_REPORT = .;
MPRINT(EM_DIAGRAM):   else T_REPORT = (REPORT - 0) * 4.8008784102956;
MPRINT(EM_DIAGRAM):   *** Standardize REQUIR ;
MPRINT(EM_DIAGRAM):   drop T_REQUIR ;
MPRINT(EM_DIAGRAM):   if missing( REQUIR ) then T_REQUIR = .;
MPRINT(EM_DIAGRAM):   else T_REQUIR = (REQUIR - 0) * 7.93928217872022;
MPRINT(EM_DIAGRAM):   *** Standardize RESEARCH ;
MPRINT(EM_DIAGRAM):   drop T_RESEARCH ;
MPRINT(EM_DIAGRAM):   if missing( RESEARCH ) then T_RESEARCH = .;
MPRINT(EM_DIAGRAM):   else T_RESEARCH = (RESEARCH - 0) * 5.28309774587878;
MPRINT(EM_DIAGRAM):   *** Standardize RESPONS ;
MPRINT(EM_DIAGRAM):   drop T_RESPONS ;
MPRINT(EM_DIAGRAM):   if missing( RESPONS ) then T_RESPONS = .;
MPRINT(EM_DIAGRAM):   else T_RESPONS = (RESPONS - 0) * 5.9381275927421;
MPRINT(EM_DIAGRAM):   *** Standardize ROBERT ;
MPRINT(EM_DIAGRAM):   drop T_ROBERT ;
MPRINT(EM_DIAGRAM):   if missing( ROBERT ) then T_ROBERT = .;
MPRINT(EM_DIAGRAM):   else T_ROBERT = (ROBERT - 0) * 1.8248903937835;
MPRINT(EM_DIAGRAM):   *** Standardize RUN ;
MPRINT(EM_DIAGRAM):   drop T_RUN ;
MPRINT(EM_DIAGRAM):   if missing( RUN ) then T_RUN = .;
MPRINT(EM_DIAGRAM):   else T_RUN = (RUN - 0) * 6.08016199674241;
MPRINT(EM_DIAGRAM):   *** Standardize SAT ;
MPRINT(EM_DIAGRAM):   drop T_SAT ;
MPRINT(EM_DIAGRAM):   if missing( SAT ) then T_SAT = .;
MPRINT(EM_DIAGRAM):   else T_SAT = (SAT - 0) * 5.28116628047848;
MPRINT(EM_DIAGRAM):   *** Standardize SCHOOL ;
MPRINT(EM_DIAGRAM):   drop T_SCHOOL ;
MPRINT(EM_DIAGRAM):   if missing( SCHOOL ) then T_SCHOOL = .;
MPRINT(EM_DIAGRAM):   else T_SCHOOL = (SCHOOL - 0) * 5.41530789631916;
MPRINT(EM_DIAGRAM):   *** Standardize SCI ;
MPRINT(EM_DIAGRAM):   drop T_SCI ;
MPRINT(EM_DIAGRAM):   if missing( SCI ) then T_SCI = .;
MPRINT(EM_DIAGRAM):   else T_SCI = (SCI - 0) * 3.86334678194681;
MPRINT(EM_DIAGRAM):   *** Standardize SCIENC ;
MPRINT(EM_DIAGRAM):   drop T_SCIENC ;
MPRINT(EM_DIAGRAM):   if missing( SCIENC ) then T_SCIENC = .;
MPRINT(EM_DIAGRAM):   else T_SCIENC = (SCIENC - 0) * 6.56365560945997;
MPRINT(EM_DIAGRAM):   *** Standardize SCREEN ;
MPRINT(EM_DIAGRAM):   drop T_SCREEN ;
MPRINT(EM_DIAGRAM):   if missing( SCREEN ) then T_SCREEN = .;
MPRINT(EM_DIAGRAM):   else T_SCREEN = (SCREEN - 0) * 2.80730286771813;
MPRINT(EM_DIAGRAM):   *** Standardize SELL ;
MPRINT(EM_DIAGRAM):   drop T_SELL ;
MPRINT(EM_DIAGRAM):   if missing( SELL ) then T_SELL = .;
MPRINT(EM_DIAGRAM):   else T_SELL = (SELL - 0) * 4.48708374071907;
MPRINT(EM_DIAGRAM):   *** Standardize SEND ;
MPRINT(EM_DIAGRAM):   drop T_SEND ;
MPRINT(EM_DIAGRAM):   if missing( SEND ) then T_SEND = .;
MPRINT(EM_DIAGRAM):   else T_SEND = (SEND - 0) * 5.56197567358981;
MPRINT(EM_DIAGRAM):   *** Standardize SERDAR ;
MPRINT(EM_DIAGRAM):   drop T_SERDAR ;
MPRINT(EM_DIAGRAM):   if missing( SERDAR ) then T_SERDAR = .;
MPRINT(EM_DIAGRAM):   else T_SERDAR = (SERDAR - 0) * 2.09987060606459;
MPRINT(EM_DIAGRAM):   *** Standardize SERVER ;
MPRINT(EM_DIAGRAM):   drop T_SERVER ;
MPRINT(EM_DIAGRAM):   if missing( SERVER ) then T_SERVER = .;
MPRINT(EM_DIAGRAM):   else T_SERVER = (SERVER - 0) * 2.57500352960129;
MPRINT(EM_DIAGRAM):   *** Standardize SERVIC ;
MPRINT(EM_DIAGRAM):   drop T_SERVIC ;
MPRINT(EM_DIAGRAM):   if missing( SERVIC ) then T_SERVIC = .;
MPRINT(EM_DIAGRAM):   else T_SERVIC = (SERVIC - 0) * 7.39693461644889;
MPRINT(EM_DIAGRAM):   *** Standardize SHOW ;
MPRINT(EM_DIAGRAM):   drop T_SHOW ;
MPRINT(EM_DIAGRAM):   if missing( SHOW ) then T_SHOW = .;
MPRINT(EM_DIAGRAM):   else T_SHOW = (SHOW - 0) * 9.06604212992825;
MPRINT(EM_DIAGRAM):   *** Standardize SIDE ;
MPRINT(EM_DIAGRAM):   drop T_SIDE ;
MPRINT(EM_DIAGRAM):   if missing( SIDE ) then T_SIDE = .;
MPRINT(EM_DIAGRAM):   else T_SIDE = (SIDE - 0) * 4.93914957474677;
MPRINT(EM_DIAGRAM):   *** Standardize SIGNAL ;
MPRINT(EM_DIAGRAM):   drop T_SIGNAL ;
MPRINT(EM_DIAGRAM):   if missing( SIGNAL ) then T_SIGNAL = .;
MPRINT(EM_DIAGRAM):   else T_SIGNAL = (SIGNAL - 0) * 3.38065533154697;
MPRINT(EM_DIAGRAM):   *** Standardize SOFTWAR ;
MPRINT(EM_DIAGRAM):   drop T_SOFTWAR ;
MPRINT(EM_DIAGRAM):   if missing( SOFTWAR ) then T_SOFTWAR = .;
MPRINT(EM_DIAGRAM):   else T_SOFTWAR = (SOFTWAR - 0) * 4.29749579343883;
MPRINT(EM_DIAGRAM):   *** Standardize SOUND ;
MPRINT(EM_DIAGRAM):   drop T_SOUND ;
MPRINT(EM_DIAGRAM):   if missing( SOUND ) then T_SOUND = .;
MPRINT(EM_DIAGRAM):   else T_SOUND = (SOUND - 0) * 3.65781122916394;
MPRINT(EM_DIAGRAM):   *** Standardize SOURC ;
MPRINT(EM_DIAGRAM):   drop T_SOURC ;
MPRINT(EM_DIAGRAM):   if missing( SOURC ) then T_SOURC = .;
MPRINT(EM_DIAGRAM):   else T_SOURC = (SOURC - 0) * 2.78630007892985;
MPRINT(EM_DIAGRAM):   *** Standardize STANDARD ;
MPRINT(EM_DIAGRAM):   drop T_STANDARD ;
MPRINT(EM_DIAGRAM):   if missing( STANDARD ) then T_STANDARD = .;
MPRINT(EM_DIAGRAM):   else T_STANDARD = (STANDARD - 0) * 4.02897864307366;
MPRINT(EM_DIAGRAM):   *** Standardize START ;
MPRINT(EM_DIAGRAM):   drop T_START ;
MPRINT(EM_DIAGRAM):   if missing( START ) then T_START = .;
MPRINT(EM_DIAGRAM):   else T_START = (START - 0) * 7.53680562133528;
MPRINT(EM_DIAGRAM):   *** Standardize STATE ;
MPRINT(EM_DIAGRAM):   drop T_STATE ;
MPRINT(EM_DIAGRAM):   if missing( STATE ) then T_STATE = .;
MPRINT(EM_DIAGRAM):   else T_STATE = (STATE - 0) * 5.92066543507595;
MPRINT(EM_DIAGRAM):   *** Standardize STEVE ;
MPRINT(EM_DIAGRAM):   drop T_STEVE ;
MPRINT(EM_DIAGRAM):   if missing( STEVE ) then T_STEVE = .;
MPRINT(EM_DIAGRAM):   else T_STEVE = (STEVE - 0) * 3.48935132106124;
MPRINT(EM_DIAGRAM):   *** Standardize STUDI ;
MPRINT(EM_DIAGRAM):   drop T_STUDI ;
MPRINT(EM_DIAGRAM):   if missing( STUDI ) then T_STUDI = .;
MPRINT(EM_DIAGRAM):   else T_STUDI = (STUDI - 0) * 5.33160690355022;
MPRINT(EM_DIAGRAM):   *** Standardize SUBSCRIB ;
MPRINT(EM_DIAGRAM):   drop T_SUBSCRIB ;
MPRINT(EM_DIAGRAM):   if missing( SUBSCRIB ) then T_SUBSCRIB = .;
MPRINT(EM_DIAGRAM):   else T_SUBSCRIB = (SUBSCRIB - 0) * 0.71855697064332;
MPRINT(EM_DIAGRAM):   *** Standardize SUGGEST ;
MPRINT(EM_DIAGRAM):   drop T_SUGGEST ;
MPRINT(EM_DIAGRAM):   if missing( SUGGEST ) then T_SUGGEST = .;
MPRINT(EM_DIAGRAM):   else T_SUGGEST = (SUGGEST - 0) * 7.92691956749453;
MPRINT(EM_DIAGRAM):   *** Standardize SUN ;
MPRINT(EM_DIAGRAM):   drop T_SUN ;
MPRINT(EM_DIAGRAM):   if missing( SUN ) then T_SUN = .;
MPRINT(EM_DIAGRAM):   else T_SUN = (SUN - 0) * 4.80667325525575;
MPRINT(EM_DIAGRAM):   *** Standardize SUPPORT ;
MPRINT(EM_DIAGRAM):   drop T_SUPPORT ;
MPRINT(EM_DIAGRAM):   if missing( SUPPORT ) then T_SUPPORT = .;
MPRINT(EM_DIAGRAM):   else T_SUPPORT = (SUPPORT - 0) * 3.37328146905376;
MPRINT(EM_DIAGRAM):   *** Standardize SWITCH ;
MPRINT(EM_DIAGRAM):   drop T_SWITCH ;
MPRINT(EM_DIAGRAM):   if missing( SWITCH ) then T_SWITCH = .;
MPRINT(EM_DIAGRAM):   else T_SWITCH = (SWITCH - 0) * 2.88035001519678;
MPRINT(EM_DIAGRAM):   *** Standardize SYSTEM ;
MPRINT(EM_DIAGRAM):   drop T_SYSTEM ;
MPRINT(EM_DIAGRAM):   if missing( SYSTEM ) then T_SYSTEM = .;
MPRINT(EM_DIAGRAM):   else T_SYSTEM = (SYSTEM - 0) * 6.55169316226039;
MPRINT(EM_DIAGRAM):   *** Standardize TALK ;
MPRINT(EM_DIAGRAM):   drop T_TALK ;
MPRINT(EM_DIAGRAM):   if missing( TALK ) then T_TALK = .;
MPRINT(EM_DIAGRAM):   else T_TALK = (TALK - 0) * 3.35400694955132;
MPRINT(EM_DIAGRAM):   *** Standardize TECHNOLOG ;
MPRINT(EM_DIAGRAM):   drop T_TECHNOLOG ;
MPRINT(EM_DIAGRAM):   if missing( TECHNOLOG ) then T_TECHNOLOG = .;
MPRINT(EM_DIAGRAM):   else T_TECHNOLOG = (TECHNOLOG - 0) * 3.19896414213013;
MPRINT(EM_DIAGRAM):   *** Standardize TERMIN ;
MPRINT(EM_DIAGRAM):   drop T_TERMIN ;
MPRINT(EM_DIAGRAM):   if missing( TERMIN ) then T_TERMIN = .;
MPRINT(EM_DIAGRAM):   else T_TERMIN = (TERMIN - 0) * 3.20544894695733;
MPRINT(EM_DIAGRAM):   *** Standardize TEST ;
MPRINT(EM_DIAGRAM):   drop T_TEST ;
MPRINT(EM_DIAGRAM):   if missing( TEST ) then T_TEST = .;
MPRINT(EM_DIAGRAM):   else T_TEST = (TEST - 0) * 3.44941004862211;
MPRINT(EM_DIAGRAM):   *** Standardize THAT ;
MPRINT(EM_DIAGRAM):   drop T_THAT ;
MPRINT(EM_DIAGRAM):   if missing( THAT ) then T_THAT = .;
MPRINT(EM_DIAGRAM):   else T_THAT = (THAT - 0) * 9.43387301812898;
MPRINT(EM_DIAGRAM):   *** Standardize THU ;
MPRINT(EM_DIAGRAM):   drop T_THU ;
MPRINT(EM_DIAGRAM):   if missing( THU ) then T_THU = .;
MPRINT(EM_DIAGRAM):   else T_THU = (THU - 0) * 5.15275447711372;
MPRINT(EM_DIAGRAM):   *** Standardize TIME ;
MPRINT(EM_DIAGRAM):   drop T_TIME ;
MPRINT(EM_DIAGRAM):   if missing( TIME ) then T_TIME = .;
MPRINT(EM_DIAGRAM):   else T_TIME = (TIME - 0) * 6.00969282466044;
MPRINT(EM_DIAGRAM):   *** Standardize TREATMENT ;
MPRINT(EM_DIAGRAM):   drop T_TREATMENT ;
MPRINT(EM_DIAGRAM):   if missing( TREATMENT ) then T_TREATMENT = .;
MPRINT(EM_DIAGRAM):   else T_TREATMENT = (TREATMENT - 0) * 4.28116834159018;
MPRINT(EM_DIAGRAM):   *** Standardize TRUE ;
MPRINT(EM_DIAGRAM):   drop T_TRUE ;
MPRINT(EM_DIAGRAM):   if missing( TRUE ) then T_TRUE = .;
MPRINT(EM_DIAGRAM):   else T_TRUE = (TRUE - 0) * 4.99164342356806;
MPRINT(EM_DIAGRAM):   *** Standardize TUE ;
MPRINT(EM_DIAGRAM):   drop T_TUE ;
MPRINT(EM_DIAGRAM):   if missing( TUE ) then T_TUE = .;
MPRINT(EM_DIAGRAM):   else T_TUE = (TUE - 0) * 6.10720937566147;
MPRINT(EM_DIAGRAM):   *** Standardize TURKISH ;
MPRINT(EM_DIAGRAM):   drop T_TURKISH ;
MPRINT(EM_DIAGRAM):   if missing( TURKISH ) then T_TURKISH = .;
MPRINT(EM_DIAGRAM):   else T_TURKISH = (TURKISH - 0) * 2.72926345909578;
MPRINT(EM_DIAGRAM):   *** Standardize TYPE ;
MPRINT(EM_DIAGRAM):   drop T_TYPE ;
MPRINT(EM_DIAGRAM):   if missing( TYPE ) then T_TYPE = .;
MPRINT(EM_DIAGRAM):   else T_TYPE = (TYPE - 0) * 3.10963939675502;
MPRINT(EM_DIAGRAM):   *** Standardize UNIV ;
MPRINT(EM_DIAGRAM):   drop T_UNIV ;
MPRINT(EM_DIAGRAM):   if missing( UNIV ) then T_UNIV = .;
MPRINT(EM_DIAGRAM):   else T_UNIV = (UNIV - 0) * 5.92777154989409;
MPRINT(EM_DIAGRAM):   *** Standardize UNIVERS ;
MPRINT(EM_DIAGRAM):   drop T_UNIVERS ;
MPRINT(EM_DIAGRAM):   if missing( UNIVERS ) then T_UNIVERS = .;
MPRINT(EM_DIAGRAM):   else T_UNIVERS = (UNIVERS - 0) * 5.80931195996725;
MPRINT(EM_DIAGRAM):   *** Standardize UNIX ;
MPRINT(EM_DIAGRAM):   drop T_UNIX ;
MPRINT(EM_DIAGRAM):   if missing( UNIX ) then T_UNIX = .;
MPRINT(EM_DIAGRAM):   else T_UNIX = (UNIX - 0) * 3.30072892529905;
MPRINT(EM_DIAGRAM):   *** Standardize USENET ;
MPRINT(EM_DIAGRAM):   drop T_USENET ;
MPRINT(EM_DIAGRAM):   if missing( USENET ) then T_USENET = .;
MPRINT(EM_DIAGRAM):   else T_USENET = (USENET - 0) * 5.99794705751076;
MPRINT(EM_DIAGRAM):   *** Standardize USER ;
MPRINT(EM_DIAGRAM):   drop T_USER ;
MPRINT(EM_DIAGRAM):   if missing( USER ) then T_USER = .;
MPRINT(EM_DIAGRAM):   else T_USER = (USER - 0) * 3.29881440691399;
MPRINT(EM_DIAGRAM):   *** Standardize UTEXA ;
MPRINT(EM_DIAGRAM):   drop T_UTEXA ;
MPRINT(EM_DIAGRAM):   if missing( UTEXA ) then T_UTEXA = .;
MPRINT(EM_DIAGRAM):   else T_UTEXA = (UTEXA - 0) * 1.33446294548045;
MPRINT(EM_DIAGRAM):   *** Standardize UUCP ;
MPRINT(EM_DIAGRAM):   drop T_UUCP ;
MPRINT(EM_DIAGRAM):   if missing( UUCP ) then T_UUCP = .;
MPRINT(EM_DIAGRAM):   else T_UUCP = (UUCP - 0) * 5.1465616359408;
MPRINT(EM_DIAGRAM):   *** Standardize VERSION ;
MPRINT(EM_DIAGRAM):   drop T_VERSION ;
MPRINT(EM_DIAGRAM):   if missing( VERSION ) then T_VERSION = .;
MPRINT(EM_DIAGRAM):   else T_VERSION = (VERSION - 0) * 5.44024908108807;
MPRINT(EM_DIAGRAM):   *** Standardize VIRGINIA ;
MPRINT(EM_DIAGRAM):   drop T_VIRGINIA ;
MPRINT(EM_DIAGRAM):   if missing( VIRGINIA ) then T_VIRGINIA = .;
MPRINT(EM_DIAGRAM):   else T_VIRGINIA = (VIRGINIA - 0) * 1.56848971585599;
MPRINT(EM_DIAGRAM):   *** Standardize VOLTAG ;
MPRINT(EM_DIAGRAM):   drop T_VOLTAG ;
MPRINT(EM_DIAGRAM):   if missing( VOLTAG ) then T_VOLTAG = .;
MPRINT(EM_DIAGRAM):   else T_VOLTAG = (VOLTAG - 0) * 2.82398405328062;
MPRINT(EM_DIAGRAM):   *** Standardize WATER ;
MPRINT(EM_DIAGRAM):   drop T_WATER ;
MPRINT(EM_DIAGRAM):   if missing( WATER ) then T_WATER = .;
MPRINT(EM_DIAGRAM):   else T_WATER = (WATER - 0) * 2.41062120349601;
MPRINT(EM_DIAGRAM):   *** Standardize WED ;
MPRINT(EM_DIAGRAM):   drop T_WED ;
MPRINT(EM_DIAGRAM):   if missing( WED ) then T_WED = .;
MPRINT(EM_DIAGRAM):   else T_WED = (WED - 0) * 4.00164111577006;
MPRINT(EM_DIAGRAM):   *** Standardize WIDGET ;
MPRINT(EM_DIAGRAM):   drop T_WIDGET ;
MPRINT(EM_DIAGRAM):   if missing( WIDGET ) then T_WIDGET = .;
MPRINT(EM_DIAGRAM):   else T_WIDGET = (WIDGET - 0) * 1.62705336812421;
MPRINT(EM_DIAGRAM):   *** Standardize WINDOW ;
MPRINT(EM_DIAGRAM):   drop T_WINDOW ;
MPRINT(EM_DIAGRAM):   if missing( WINDOW ) then T_WINDOW = .;
MPRINT(EM_DIAGRAM):   else T_WINDOW = (WINDOW - 0) * 2.81462439954458;
MPRINT(EM_DIAGRAM):   *** Standardize WIRE ;
MPRINT(EM_DIAGRAM):   drop T_WIRE ;
MPRINT(EM_DIAGRAM):   if missing( WIRE ) then T_WIRE = .;
MPRINT(EM_DIAGRAM):   else T_WIRE = (WIRE - 0) * 2.45211024512543;
MPRINT(EM_DIAGRAM):   *** Standardize WONDER ;
MPRINT(EM_DIAGRAM):   drop T_WONDER ;
MPRINT(EM_DIAGRAM):   if missing( WONDER ) then T_WONDER = .;
MPRINT(EM_DIAGRAM):   else T_WONDER = (WONDER - 0) * 7.46037303280928;
MPRINT(EM_DIAGRAM):   *** Standardize WORK ;
MPRINT(EM_DIAGRAM):   drop T_WORK ;
MPRINT(EM_DIAGRAM):   if missing( WORK ) then T_WORK = .;
MPRINT(EM_DIAGRAM):   else T_WORK = (WORK - 0) * 6.75133541473952;
MPRINT(EM_DIAGRAM):   *** Standardize WORLD ;
MPRINT(EM_DIAGRAM):   drop T_WORLD ;
MPRINT(EM_DIAGRAM):   if missing( WORLD ) then T_WORLD = .;
MPRINT(EM_DIAGRAM):   else T_WORLD = (WORLD - 0) * 8.3425896333976;
MPRINT(EM_DIAGRAM):   *** Standardize XLIB ;
MPRINT(EM_DIAGRAM):   drop T_XLIB ;
MPRINT(EM_DIAGRAM):   if missing( XLIB ) then T_XLIB = .;
MPRINT(EM_DIAGRAM):   else T_XLIB = (XLIB - 0) * 1.99512053695088;
MPRINT(EM_DIAGRAM):   *** Standardize XTERM ;
MPRINT(EM_DIAGRAM):   drop T_XTERM ;
MPRINT(EM_DIAGRAM):   if missing( XTERM ) then T_XTERM = .;
MPRINT(EM_DIAGRAM):   else T_XTERM = (XTERM - 0) * 1.87682582544599;
MPRINT(EM_DIAGRAM):   *** Standardize YEAR ;
MPRINT(EM_DIAGRAM):   drop T_YEAR ;
MPRINT(EM_DIAGRAM):   if missing( YEAR ) then T_YEAR = .;
MPRINT(EM_DIAGRAM):   else T_YEAR = (YEAR - 0) * 8.57780075115767;
MPRINT(EM_DIAGRAM):   *** Standardize YOU ;
MPRINT(EM_DIAGRAM):   drop T_YOU ;
MPRINT(EM_DIAGRAM):   if missing( YOU ) then T_YOU = .;
MPRINT(EM_DIAGRAM):   else T_YOU = (YOU - 0) * 5.2943325608246;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUS2vlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Id de segmento' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distancia' ;
MPRINT(EM_DIAGRAM):   array CLUS2vads [10] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 10;
MPRINT(EM_DIAGRAM):   CLUS2vads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_ACCESS ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ACCESS - 0.38537668909835 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ACCESS - 0.00742734502287 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ACCESS - 0.00637809152638 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ACCESS - 0.00110358222186 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ACCESS - 0.0038121690119 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ACCESS - 0.00770445410461 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ACCESS - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00357448900726;
MPRINT(EM_DIAGRAM):   if not missing( T_ADAM ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ADAM - 0.00094227335846 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ADAM - 0.00031933846515 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ADAM - 0.03952961077497 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ADAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ADAM - 0.0013582054194 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ADAM - 0.00035014183195 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ADAM - 0.03070635361432 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00263050473814;
MPRINT(EM_DIAGRAM):   if not missing( T_ADDRESS ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ADDRESS - 0.02083524833777 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ADDRESS - 0.00456482302492 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ADDRESS - 0.00626165460054 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ADDRESS - 0.00862842389626 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ADDRESS - 0.00226089128174 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ADDRESS - 0.00594707106749 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ADDRESS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ADDRESS - 0.00745581345053 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ADDRESS - 0.00811109955816 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ADDRESS - 0.00061002014243 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194998376212;
MPRINT(EM_DIAGRAM):   if not missing( T_ADVANC ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ADVANC - 0.06609814733542 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ADVANC - 0.0020034342491 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ADVANC - 0.02774911304394 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ADVANC - 0.07628838515958 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ADVANC - 0.00118609478574 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ADVANC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ADVANC - 0.00493370336108 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ADVANC - 0.02125067364436 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ADVANC - 0.01272113440066 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ADVANC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00802279459761;
MPRINT(EM_DIAGRAM):   if not missing( T_AMERICAN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_AMERICAN - 0.01003288213283 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_AMERICAN - 0.00454106197994 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_AMERICAN - 0.00072106717942 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_AMERICAN - 0.0517297270582 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_AMERICAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_AMERICAN - 0.00636267232237 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_AMERICAN - 0.00909215298562 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_AMERICAN - 0.00990147438399 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_AMERICAN - 0.01779090269434 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00613792893604;
MPRINT(EM_DIAGRAM):   if not missing( T_ANDI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ANDI - 0.00063803103622 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ANDI - 0.01568304916904 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ANDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ANDI - 0.00414111366927 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ANDI - 0.00034889558232 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ANDI - 0.00353260869565 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00100139210422;
MPRINT(EM_DIAGRAM):   if not missing( T_ANSWER ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ANSWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ANSWER - 0.00793156054342 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ANSWER - 0.01251525161048 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ANSWER - 0.01999327063099 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ANSWER - 0.01245498349074 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ANSWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ANSWER - 0.01026184843788 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ANSWER - 0.01175969518267 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ANSWER - 0.00811299189485 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ANSWER - 0.04117228213829 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00336220864585;
MPRINT(EM_DIAGRAM):   if not missing( T_APPLIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_APPLIC - 0.02198265516642 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_APPLIC - 0.06242986161965 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_APPLIC - 0.04677207811276 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_APPLIC - 0.0006668769027 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_APPLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_APPLIC - 0.01004004772019 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_APPLIC - 0.00189119064269 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_APPLIC - 0.00241631980887 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00514779472168;
MPRINT(EM_DIAGRAM):   if not missing( T_APPRECI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_APPRECI - 0.03912580656766 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_APPRECI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_APPRECI - 0.02643029591672 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_APPRECI - 0.01184983495022 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_APPRECI - 0.00709188826965 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_APPRECI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_APPRECI - 0.00990978380231 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_APPRECI - 0.01413573644244 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_APPRECI - 0.01329276252446 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_APPRECI - 0.00942872605881 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00452860811928;
MPRINT(EM_DIAGRAM):   if not missing( T_ARAB ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ARAB - 0.0035720198085 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ARAB - 0.15070415883445 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ARAB - 0.00169017069147 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ARAB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ARAB - 0.07361639098106 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00757788329944;
MPRINT(EM_DIAGRAM):   if not missing( T_AREA ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_AREA - 0.00930232558139 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_AREA - 0.01141270784182 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_AREA - 0.00834232629361 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_AREA - 0.00795512493625 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_AREA - 0.01405775163961 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_AREA - 0.13977967488024 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_AREA - 0.00297287253808 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_AREA - 0.01715880292368 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_AREA - 0.01824566249492 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_AREA - 0.02588375532479 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00506812794404;
MPRINT(EM_DIAGRAM):   if not missing( T_ARGIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ARGIC - 0.00296511627906 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ARGIC - 0.1257288739661 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ARGIC - 0.00020942666371 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ARGIC - 0.00126252973093 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ARGIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00234228830211;
MPRINT(EM_DIAGRAM):   if not missing( T_ARMENIA ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ARMENIA - 0.00155038759689 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ARMENIA - 0.07300655303799 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ARMENIA - 0.00003650137929 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ARMENIA - 0.00069688071235 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ARMENIA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00091579971232;
MPRINT(EM_DIAGRAM):   if not missing( T_ARMENIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ARMENIAN - 0.01878354203935 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ARMENIAN - 0.38405235969053 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ARMENIAN - 0.00008552182669 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ARMENIAN - 0.00207614176923 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ARMENIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00943357450269;
MPRINT(EM_DIAGRAM):   if not missing( T_ATTACK ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ATTACK - 0.03637966105588 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ATTACK - 0.00064426984776 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ATTACK - 0.07821651062739 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ATTACK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ATTACK - 0.01559333115397 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ATTACK - 0.00215417679484 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ATTACK - 0.00626452086417 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ATTACK - 0.00606046683425 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00465524898098;
MPRINT(EM_DIAGRAM):   if not missing( T_AUDIO ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_AUDIO - 0.00393950946753 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_AUDIO - 0.00353768360725 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_AUDIO - 0.00166639789281 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_AUDIO - 0.01456743682044 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_AUDIO - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00319775466892;
MPRINT(EM_DIAGRAM):   if not missing( T_BANK ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_BANK - 0.00003828186217 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_BANK - 0.01334002122276 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_BANK - 0.53222601602206 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_BANK - 0.00264597908289 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_BANK - 0.01154274547281 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_BANK - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00770333013271;
MPRINT(EM_DIAGRAM):   if not missing( T_BASE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_BASE - 0.0166431759455 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_BASE - 0.01116288640499 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_BASE - 0.01631896544115 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_BASE - 0.02784794601051 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_BASE - 0.02830870084751 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_BASE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_BASE - 0.0251259264232 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_BASE - 0.01324317857813 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_BASE - 0.00732130762834 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_BASE - 0.02374681583458 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00564879559042;
MPRINT(EM_DIAGRAM):   if not missing( T_BATTERI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_BATTERI - 0.00007748200695 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_BATTERI - 0.00192972828098 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_BATTERI - 0.00027886224205 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_BATTERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_BATTERI - 0.01492232123692 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_BATTERI - 0.00035913452136 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_BATTERI - 0.00239263929678 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00353960326361;
MPRINT(EM_DIAGRAM):   if not missing( T_BILL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_BILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_BILL - 0.0005333800172 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_BILL - 0.00423786190383 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_BILL - 0.00600242745227 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_BILL - 0.00176280590914 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_BILL - 0.016761772345 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_BILL - 0.00707938935323 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_BILL - 0.00721676183318 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_BILL - 0.00689618561873 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_BILL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00159099402995;
MPRINT(EM_DIAGRAM):   if not missing( T_BOOK ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_BOOK - 0.00456956344349 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_BOOK - 0.00891525749159 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_BOOK - 0.00296922834935 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_BOOK - 0.00514257377112 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_BOOK - 0.00561618523871 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_BOOK - 0.01786283891547 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_BOOK - 0.00590445517981 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_BOOK - 0.01553744734428 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_BOOK - 0.01444336325904 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_BOOK - 0.00677155861078 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00378502613574;
MPRINT(EM_DIAGRAM):   if not missing( T_BRAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_BRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_BRAIN - 0.00956856784412 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_BRAIN - 0.01137714871796 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_BRAIN - 0.00400872570683 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_BRAIN - 0.00568566856824 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_BRAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_BRAIN - 0.02938039686128 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_BRAIN - 0.00432317436408 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_BRAIN - 0.00845532818042 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_BRAIN - 0.01448612491092 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00225834820048;
MPRINT(EM_DIAGRAM):   if not missing( T_BRIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_BRIAN - 0.00600775193798 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_BRIAN - 0.00068454210443 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_BRIAN - 0.01155937151386 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_BRIAN - 0.00676974143955 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_BRIAN - 0.00255270092226 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_BRIAN - 0.00461756326821 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_BRIAN - 0.00519970254421 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_BRIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0021856704032;
MPRINT(EM_DIAGRAM):   if not missing( T_BUILD ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_BUILD - 0.00436046511627 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_BUILD - 0.00643090198986 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_BUILD - 0.01825308299448 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_BUILD - 0.00784529086415 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_BUILD - 0.00251005343302 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_BUILD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_BUILD - 0.00142551674982 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_BUILD - 0.01900444563655 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_BUILD - 0.00318541075872 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_BUILD - 0.00339276353159 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00393417257323;
MPRINT(EM_DIAGRAM):   if not missing( T_BUTTON ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_BUTTON - 0.00686369509043 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_BUTTON - 0.01406339496655 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_BUTTON - 0.0122177136008 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_BUTTON - 0.00366811556189 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_BUTTON - 0.00017494219301 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_BUTTON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00150884596115;
MPRINT(EM_DIAGRAM):   if not missing( T_CALIFORNIA ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CALIFORNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CALIFORNIA - 0.00554009191067 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CALIFORNIA - 0.00240112107934 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CALIFORNIA - 0.00752570896855 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CALIFORNIA - 0.01731425914466 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CALIFORNIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CALIFORNIA - 0.00644122383252 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CALIFORNIA - 0.00879999285684 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CALIFORNIA - 0.01250882162637 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CALIFORNIA - 0.01189152253889 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00334946171345;
MPRINT(EM_DIAGRAM):   if not missing( T_CALL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CALL - 0.00891720953581 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CALL - 0.00918259255163 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CALL - 0.03040045113656 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CALL - 0.0242846105783 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CALL - 0.02238926600264 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CALL - 0.1524289970248 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CALL - 0.01978542049427 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CALL - 0.01672893341678 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CALL - 0.01791844989869 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CALL - 0.01573469514669 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00430180286262;
MPRINT(EM_DIAGRAM):   if not missing( T_CAN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CAN - 0.0191738755945 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CAN - 0.02393875332323 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CAN - 0.02170145219999 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CAN - 0.00544250989828 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CAN - 0.01135907262858 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CAN - 0.05024278108888 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CAN - 0.02279082215455 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CAN - 0.02199242483252 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CAN - 0.02300531811052 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CAN - 0.01583227546389 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00584895262832;
MPRINT(EM_DIAGRAM):   if not missing( T_CARD ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CARD - 0.01734581740527 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CARD - 0.0064458425058 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CARD - 0.00524109014675 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CARD - 0.00230311256722 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CARD - 0.00124508192639 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CARD - 0.00723444486114 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CARD - 0.01169436069033 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00228853567535;
MPRINT(EM_DIAGRAM):   if not missing( T_CASE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CASE - 0.0208453596559 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CASE - 0.00762083557802 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CASE - 0.02275090597073 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CASE - 0.0063673641948 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CASE - 0.03734911784058 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CASE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CASE - 0.02680341145396 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CASE - 0.02049979641685 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CASE - 0.0403500309946 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CASE - 0.04313220411494 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00714032805844;
MPRINT(EM_DIAGRAM):   if not missing( T_CENTER ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CENTER - 0.00872093023255 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CENTER - 0.03795078716518 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CENTER - 0.0173902176154 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CENTER - 0.00913325664953 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CENTER - 0.0162995788697 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CENTER - 0.01754385964912 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CENTER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CENTER - 0.01042846007156 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CENTER - 0.01746649168161 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CENTER - 0.3005166719831 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00734044785206;
MPRINT(EM_DIAGRAM):   if not missing( T_CHANG ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CHANG - 0.00401439645625 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CHANG - 0.00322540892697 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CHANG - 0.01765516388546 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CHANG - 0.01652289813311 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CHANG - 0.00307768378254 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CHANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CHANG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CHANG - 0.00762992413377 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CHANG - 0.00807760157833 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CHANG - 0.01072483237959 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00223602384301;
MPRINT(EM_DIAGRAM):   if not missing( T_CHIP ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CHIP - 0.03046704082008 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CHIP - 0.00232910549483 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CHIP - 0.000105601931 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CHIP - 0.02629276189699 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CHIP - 0.00206459192735 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CHIP - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00460467806333;
MPRINT(EM_DIAGRAM):   if not missing( T_CIRCUIT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CIRCUIT - 0.00059539074943 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CIRCUIT - 0.02926645743475 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CIRCUIT - 0.00037463285979 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CIRCUIT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0054635886551;
MPRINT(EM_DIAGRAM):   if not missing( T_CLIENT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CLIENT - 0.05559333706676 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CLIENT - 0.02349315037488 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CLIENT - 0.00223978919631 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CLIENT - 0.00092023226182 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CLIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0041521077325;
MPRINT(EM_DIAGRAM):   if not missing( T_CODE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CODE - 0.02161915274235 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CODE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CODE - 0.02716676193657 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CODE - 0.03462519850191 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CODE - 0.00064172250277 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CODE - 0.02226720647773 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CODE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CODE - 0.01394718967352 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CODE - 0.00153157390836 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CODE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00410754144058;
MPRINT(EM_DIAGRAM):   if not missing( T_COLOR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_COLOR - 0.01355736161152 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_COLOR - 0.0000662911424 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_COLOR - 0.02994180132353 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_COLOR - 0.02172577486352 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_COLOR - 0.00099179302042 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_COLOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_COLOR - 0.00519927536231 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_COLOR - 0.00490070662055 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_COLOR - 0.00158090727108 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_COLOR - 0.00507246376811 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00329555912783;
MPRINT(EM_DIAGRAM):   if not missing( T_COMMUN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_COMMUN - 0.10046234465624 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_COMMUN - 0.0095698113605 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_COMMUN - 0.0130685664496 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_COMMUN - 0.0236704592231 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_COMMUN - 0.00943121245041 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_COMMUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_COMMUN - 0.01926891979008 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_COMMUN - 0.01614812096335 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_COMMUN - 0.01528904429271 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_COMMUN - 0.0027607287806 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00501247265599;
MPRINT(EM_DIAGRAM):   if not missing( T_COMP ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_COMP - 0.0664327354133 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_COMP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_COMP - 0.08566670846317 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_COMP - 0.28633968053041 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_COMP - 0.00121809036434 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_COMP - 0.00898587933247 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_COMP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_COMP - 0.0101272027229 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_COMP - 0.00020371340434 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_COMP - 0.01640028284296 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00836858224829;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPANI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_COMPANI - 0.0244986878455 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_COMPANI - 0.00668925309717 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_COMPANI - 0.0055216084567 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_COMPANI - 0.01181664358995 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_COMPANI - 0.00136963386427 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_COMPANI - 0.10269816917738 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_COMPANI - 0.00463255231608 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_COMPANI - 0.02002890385468 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_COMPANI - 0.0060262632217 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_COMPANI - 0.00526199701173 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00422826374553;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPIL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_COMPIL - 0.01741867090704 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_COMPIL - 0.02495234619283 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_COMPIL - 0.01336657075418 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_COMPIL - 0.00046864349011 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_COMPIL - 0.003393130914 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_COMPIL - 0.00049208250434 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_COMPIL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0021340542775;
MPRINT(EM_DIAGRAM):   if not missing( T_COMPUT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_COMPUT - 0.00532218034745 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_COMPUT - 0.02428452522172 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_COMPUT - 0.04993606722307 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_COMPUT - 0.01045219862227 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_COMPUT - 0.01357035327231 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_COMPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_COMPUT - 0.15252478027304 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_COMPUT - 0.02908198011177 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_COMPUT - 0.02209751474496 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_COMPUT - 0.02866467146004 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00667425988144;
MPRINT(EM_DIAGRAM):   if not missing( T_CONNECT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CONNECT - 0.0079457364341 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CONNECT - 0.00057491969646 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CONNECT - 0.02318895329915 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CONNECT - 0.00407473830589 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CONNECT - 0.00118734143415 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CONNECT - 0.01467955603293 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CONNECT - 0.0078026643244 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CONNECT - 0.01460841283451 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CONNECT - 0.0050268774878 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CONNECT - 0.00206467317187 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00365708369664;
MPRINT(EM_DIAGRAM):   if not missing( T_CONTROL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CONTROL - 0.06850808514355 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CONTROL - 0.00314215868098 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CONTROL - 0.00910282285955 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CONTROL - 0.00184979652238 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CONTROL - 0.01859026416112 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CONTROL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CONTROL - 0.01262549664294 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CONTROL - 0.0242663600097 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CONTROL - 0.01491920684032 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CONTROL - 0.00345258525724 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00605835001324;
MPRINT(EM_DIAGRAM):   if not missing( T_COPI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_COPI - 0.01146500031038 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_COPI - 0.00120325984054 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_COPI - 0.01133763352793 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_COPI - 0.0052482202694 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_COPI - 0.00231651863391 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_COPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_COPI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_COPI - 0.02180695672453 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_COPI - 0.00106637731048 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_COPI - 0.0026455977281 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00488180943163;
MPRINT(EM_DIAGRAM):   if not missing( T_CORRECT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CORRECT - 0.01905033270909 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CORRECT - 0.00364117040236 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CORRECT - 0.01161499922018 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CORRECT - 0.01408837678392 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CORRECT - 0.00310740679181 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CORRECT - 0.02681491865256 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CORRECT - 0.00674107911647 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CORRECT - 0.00958801989317 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CORRECT - 0.01450364350252 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CORRECT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00280739680636;
MPRINT(EM_DIAGRAM):   if not missing( T_CREAT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CREAT - 0.00718816067653 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CREAT - 0.00218780896747 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CREAT - 0.04743970343823 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CREAT - 0.07632455474863 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CREAT - 0.00686750141972 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CREAT - 0.00728677768085 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CREAT - 0.0055398012968 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CREAT - 0.00180820079657 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00655530340844;
MPRINT(EM_DIAGRAM):   if not missing( T_CURRENT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_CURRENT - 0.00176158538677 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_CURRENT - 0.00773020330348 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_CURRENT - 0.01351637700167 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_CURRENT - 0.00564687131019 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_CURRENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_CURRENT - 0.02236504443953 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_CURRENT - 0.0057070362125 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_CURRENT - 0.00165576346767 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00427224609771;
MPRINT(EM_DIAGRAM):   if not missing( T_DAI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DAI - 0.01018826135105 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DAI - 0.00904610857286 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DAI - 0.0053052693034 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DAI - 0.01108622099188 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DAI - 0.00566898550288 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DAI - 0.00399700943179 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DAI - 0.00893064103797 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DAI - 0.01630892281263 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DAI - 0.00398198166948 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00174689902549;
MPRINT(EM_DIAGRAM):   if not missing( T_DATA ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DATA - 0.00861326442721 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DATA - 0.01867821606901 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DATA - 0.00251572327044 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DATA - 0.00009646178184 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DATA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DATA - 0.01507421197263 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DATA - 0.00684718436372 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DATA - 0.00211029717588 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00385138209;
MPRINT(EM_DIAGRAM):   if not missing( T_DAVID ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DAVID - 0.01843569866825 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DAVID - 0.05138935933448 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DAVID - 0.01017969425589 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DAVID - 0.00657400288707 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DAVID - 0.00272375225023 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DAVID - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DAVID - 0.00588773780714 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DAVID - 0.0208818337907 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DAVID - 0.02665373992013 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DAVID - 0.00912929088624 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00691673325015;
MPRINT(EM_DIAGRAM):   if not missing( T_DEPART ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DEPART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DEPART - 0.00370863097308 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DEPART - 0.03470929480028 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DEPART - 0.01794734072291 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DEPART - 0.07098332597527 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DEPART - 0.05201119619473 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DEPART - 0.01831714345623 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DEPART - 0.02186126476673 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DEPART - 0.00680773878707 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DEPART - 0.05576773296882 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01152300821202;
MPRINT(EM_DIAGRAM):   if not missing( T_DEPT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DEPT - 0.05044281618349 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DEPT - 0.0029216034423 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DEPT - 0.05023060950346 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DEPT - 0.0069231144264 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DEPT - 0.01253812091986 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DEPT - 0.01243615367532 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DEPT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DEPT - 0.01375385278699 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DEPT - 0.00830910062962 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DEPT - 0.00698757763975 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00713544971934;
MPRINT(EM_DIAGRAM):   if not missing( T_DESIGN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DESIGN - 0.00536302185486 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DESIGN - 0.00073217115104 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DESIGN - 0.00784986571743 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DESIGN - 0.00080599768137 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DESIGN - 0.00075305915756 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DESIGN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DESIGN - 0.01422779028593 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DESIGN - 0.00098087568713 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DESIGN - 0.00387964968017 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00187054605814;
MPRINT(EM_DIAGRAM):   if not missing( T_DETECTOR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DETECTOR - 0.0079833581439 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DETECTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0016340005264;
MPRINT(EM_DIAGRAM):   if not missing( T_DEVIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DEVIC - 0.01395348837209 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DEVIC - 0.01298892327832 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DEVIC - 0.17440743244842 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DEVIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DEVIC - 0.01724133283123 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DEVIC - 0.00268577813423 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DEVIC - 0.00778684597388 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00448975568447;
MPRINT(EM_DIAGRAM):   if not missing( T_DISEAS ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DISEAS - 0.00595930232558 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DISEAS - 0.00069734103297 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DISEAS - 0.00022458369851 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DISEAS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DISEAS - 0.03429181356581 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DISEAS - 0.00273885155617 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DISEAS - 0.03993175549049 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DISEAS - 0.00017303520633 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00296395104832;
MPRINT(EM_DIAGRAM):   if not missing( T_DISPLAI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DISPLAI - 0.00649486695998 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DISPLAI - 0.00100343434437 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DISPLAI - 0.08183004511983 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DISPLAI - 0.01944173773393 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DISPLAI - 0.00046818772151 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DISPLAI - 0.00450798952014 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DISPLAI - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00542321360685;
MPRINT(EM_DIAGRAM):   if not missing( T_DISTRIBUT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DISTRIBUT - 0.04070299396386 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DISTRIBUT - 0.02814401070702 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DISTRIBUT - 0.04187225639662 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DISTRIBUT - 0.06754375489378 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DISTRIBUT - 0.00677745266446 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DISTRIBUT - 0.029767893696 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DISTRIBUT - 0.00457433066128 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DISTRIBUT - 0.03747128680766 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DISTRIBUT - 0.04590201357324 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DISTRIBUT - 0.01094746433959 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00865567001839;
MPRINT(EM_DIAGRAM):   if not missing( T_DOCTOR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DOCTOR - 0.00086576742779 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DOCTOR - 0.00133180192224 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DOCTOR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DOCTOR - 0.01949676001074 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DOCTOR - 0.0019659937018 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DOCTOR - 0.05281370235179 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DOCTOR - 0.00488842880147 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00317355505604;
MPRINT(EM_DIAGRAM):   if not missing( T_DOESN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DOESN - 0.02843833396873 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DOESN - 0.00318554088704 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DOESN - 0.02871749741561 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DOESN - 0.01400765318226 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DOESN - 0.0126165977316 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DOESN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DOESN - 0.0219463279294 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DOESN - 0.01804786215845 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DOESN - 0.02012533223071 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DOESN - 0.00102580233874 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00556103648851;
MPRINT(EM_DIAGRAM):   if not missing( T_DON ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DON - 0.03580082988576 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DON - 0.03265508966749 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DON - 0.02410518334013 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DON - 0.04246736230068 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DON - 0.04631116268474 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DON - 0.29644339026915 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DON - 0.0645073290193 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DON - 0.04804387249244 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DON - 0.05241620419743 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DON - 0.02926608501002 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00984988778005;
MPRINT(EM_DIAGRAM):   if not missing( T_DRAW ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DRAW - 0.02827504093402 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DRAW - 0.02425564659652 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DRAW - 0.0024035325587 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DRAW - 0.00408322146294 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DRAW - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00311280364982;
MPRINT(EM_DIAGRAM):   if not missing( T_DRIVE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DRIVE - 0.00122827872809 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DRIVE - 0.00476558847258 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DRIVE - 0.0065446922091 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DRIVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DRIVE - 0.01144676363302 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DRIVE - 0.00086185757998 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DRIVE - 0.00170749315653 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00209677995678;
MPRINT(EM_DIAGRAM):   if not missing( T_DRUG ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_DRUG - 0.00050517359917 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_DRUG - 0.00626352770619 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_DRUG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_DRUG - 0.02300077397713 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_DRUG - 0.00245457045008 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_DRUG - 0.03022020088659 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_DRUG - 0.00892778928385 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00270119779196;
MPRINT(EM_DIAGRAM):   if not missing( T_EDU ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_EDU - 0.0032703488372 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_EDU - 0.05529339302165 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_EDU - 0.01689878280927 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_EDU - 0.00465264897934 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_EDU - 0.01049664698827 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_EDU - 0.05522426756546 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_EDU - 0.31529070792804 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_EDU - 0.0259904186178 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_EDU - 0.03583719178665 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_EDU - 0.0135456341534 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01018096044943;
MPRINT(EM_DIAGRAM):   if not missing( T_EFFECT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_EFFECT - 0.00568475452196 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_EFFECT - 0.00477461478582 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_EFFECT - 0.0043231861098 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_EFFECT - 0.00049304521719 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_EFFECT - 0.00227319720983 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_EFFECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_EFFECT - 0.01765518459516 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_EFFECT - 0.00620777107981 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_EFFECT - 0.02713906755756 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_EFFECT - 0.00155691397339 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00170444052488;
MPRINT(EM_DIAGRAM):   if not missing( T_ELECTR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ELECTR - 0.00139371795908 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ELECTR - 0.0046703587494 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ELECTR - 0.0038098779203 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ELECTR - 0.01932045303131 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ELECTR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ELECTR - 0.0179800385114 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ELECTR - 0.00417770951257 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ELECTR - 0.01189499589827 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00421821746014;
MPRINT(EM_DIAGRAM):   if not missing( T_ELECTRON ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ELECTRON - 0.03365188636566 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ELECTRON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ELECTRON - 0.00373313854979 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ELECTRON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ELECTRON - 0.00230145174964 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ELECTRON - 0.08037608669626 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ELECTRON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ELECTRON - 0.03452125493332 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ELECTRON - 0.0012005958443 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ELECTRON - 0.00658450791756 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00188195528935;
MPRINT(EM_DIAGRAM):   if not missing( T_EMAIL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_EMAIL - 0.01510634068773 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_EMAIL - 0.00259574741854 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_EMAIL - 0.03074260935445 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_EMAIL - 0.04311888221455 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_EMAIL - 0.00160105416844 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_EMAIL - 0.02564102564102 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_EMAIL - 0.01046799951338 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_EMAIL - 0.01353687121287 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_EMAIL - 0.01297074765425 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_EMAIL - 0.01198510757283 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00528353968317;
MPRINT(EM_DIAGRAM):   if not missing( T_ENGIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ENGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ENGIN - 0.01093962011942 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ENGIN - 0.02391793846534 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ENGIN - 0.01238346138898 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ENGIN - 0.0143862905454 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ENGIN - 0.01199200532978 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ENGIN - 0.00725336463879 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ENGIN - 0.03028442124003 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ENGIN - 0.00752214140666 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ENGIN - 0.00348948106591 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00841015892288;
MPRINT(EM_DIAGRAM):   if not missing( T_ERROR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ERROR - 0.00465116279069 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ERROR - 0.0006430412414 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ERROR - 0.04205376328587 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ERROR - 0.00255218302798 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ERROR - 0.00128558770691 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ERROR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ERROR - 0.00388829975256 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ERROR - 0.00358554694006 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ERROR - 0.00166034916217 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ERROR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00271516175395;
MPRINT(EM_DIAGRAM):   if not missing( T_EVENT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_EVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_EVENT - 0.00489195667188 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_EVENT - 0.02648825146188 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_EVENT - 0.02151720441325 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_EVENT - 0.01085773122166 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_EVENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_EVENT - 0.00186649099692 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_EVENT - 0.00485512727827 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_EVENT - 0.00193654993737 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_EVENT - 0.0011266940987 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00292364919943;
MPRINT(EM_DIAGRAM):   if not missing( T_EXPERI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_EXPERI - 0.04027475305281 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_EXPERI - 0.00336657523534 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_EXPERI - 0.01049319888067 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_EXPERI - 0.01438841727409 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_EXPERI - 0.00125330695997 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_EXPERI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_EXPERI - 0.00722684479862 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_EXPERI - 0.01725413234179 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_EXPERI - 0.02226905368341 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_EXPERI - 0.01061242346471 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00454901538184;
MPRINT(EM_DIAGRAM):   if not missing( T_FACT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FACT - 0.00686046511627 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FACT - 0.04100652032417 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FACT - 0.01092885885208 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FACT - 0.00456517086729 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FACT - 0.06771231284958 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FACT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FACT - 0.02681664637668 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FACT - 0.01856941990102 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FACT - 0.03898333065903 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FACT - 0.03415579207364 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00905844390357;
MPRINT(EM_DIAGRAM):   if not missing( T_FAX ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FAX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FAX - 0.00017228754791 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FAX - 0.04411128063475 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FAX - 0.05755962800062 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FAX - 0.01861802284753 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FAX - 0.0464454662741 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FAX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FAX - 0.01356615493473 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FAX - 0.00684422351038 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FAX - 0.01478534120312 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00775350103067;
MPRINT(EM_DIAGRAM):   if not missing( T_FEEL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FEEL - 0.00448304847296 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FEEL - 0.00695143970076 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FEEL - 0.00424878721426 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FEEL - 0.00079864230807 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FEEL - 0.02289722130811 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FEEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FEEL - 0.0055210489993 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FEEL - 0.01145340487939 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FEEL - 0.01919774246466 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FEEL - 0.00445930880713 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00374578836291;
MPRINT(EM_DIAGRAM):   if not missing( T_FILE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FILE - 0.03488422075699 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FILE - 0.00173528594963 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FILE - 0.03209950861325 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FILE - 0.02871566615709 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FILE - 0.00209563245881 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FILE - 0.00426742532005 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FILE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FILE - 0.00702447923528 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FILE - 0.00032562683165 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FILE - 0.00020257780253 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0025055111111;
MPRINT(EM_DIAGRAM):   if not missing( T_FIND ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FIND - 0.00841305644136 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FIND - 0.01017813316776 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FIND - 0.01948357629084 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FIND - 0.03828928763112 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FIND - 0.01072234642361 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FIND - 0.41812429696659 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FIND - 0.01653175328894 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FIND - 0.02571721246637 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FIND - 0.02736123695425 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FIND - 0.01207555646982 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00694155278948;
MPRINT(EM_DIAGRAM):   if not missing( T_FOLLOWUP ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FOLLOWUP - 0.00983899821109 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FOLLOWUP - 0.03809395583245 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FOLLOWUP - 0.01255547629804 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FOLLOWUP - 0.0057394549568 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FOLLOWUP - 0.00574369788049 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FOLLOWUP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FOLLOWUP - 0.01299040126767 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FOLLOWUP - 0.01068219857311 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FOLLOWUP - 0.01212747235854 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FOLLOWUP - 0.00082079468851 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00246291976259;
MPRINT(EM_DIAGRAM):   if not missing( T_FONT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FONT - 0.01661095694925 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FONT - 0.01092311402284 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FONT - 0.00110593201091 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FONT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00164279251308;
MPRINT(EM_DIAGRAM):   if not missing( T_FOOD ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FOOD - 0.01240310077519 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FOOD - 0.00351362647887 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FOOD - 0.0004412047109 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FOOD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FOOD - 0.00141706924315 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FOOD - 0.01034073332826 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FOOD - 0.03375159870784 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FOOD - 0.00014855705519 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00394717678326;
MPRINT(EM_DIAGRAM):   if not missing( T_FRI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FRI - 0.07852229944828 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FRI - 0.00948671232269 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FRI - 0.03045931964198 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FRI - 0.03514270542854 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FRI - 0.0141198491429 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FRI - 0.00866089273817 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FRI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FRI - 0.02673028408531 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FRI - 0.01936318651252 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FRI - 0.00998965821191 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00708758507999;
MPRINT(EM_DIAGRAM):   if not missing( T_FRIEND ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FRIEND - 0.00414144632048 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FRIEND - 0.00128367221521 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FRIEND - 0.00234551749435 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FRIEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FRIEND - 0.00259115948222 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FRIEND - 0.04155602971392 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FRIEND - 0.00547733449409 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FRIEND - 0.0090563448158 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FRIEND - 0.02686710345194 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FRIEND - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00303918802304;
MPRINT(EM_DIAGRAM):   if not missing( T_FUNCTION ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_FUNCTION - 0.02619726077764 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_FUNCTION - 0.00063365531117 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_FUNCTION - 0.0328657345809 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_FUNCTION - 0.03476646028157 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_FUNCTION - 0.00069973822088 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_FUNCTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_FUNCTION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_FUNCTION - 0.01024892517002 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_FUNCTION - 0.00671835029557 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_FUNCTION - 0.0159616137877 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00494034847805;
MPRINT(EM_DIAGRAM):   if not missing( T_GEB ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GEB - 0.53423662085758 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GEB - 0.00104211315899 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GEB - 0.01062888234918 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GEB - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00745996646351;
MPRINT(EM_DIAGRAM):   if not missing( T_GENER ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GENER - 0.02655064603518 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GENER - 0.01546917825123 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GENER - 0.02020209558221 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GENER - 0.0166962211234 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GENER - 0.01589706896976 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GENER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GENER - 0.00483584738243 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GENER - 0.02344929310638 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GENER - 0.0338449663171 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GENER - 0.0105635700933 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00692775045609;
MPRINT(EM_DIAGRAM):   if not missing( T_GEORGIA ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GEORGIA - 0.00884162389104 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GEORGIA - 0.00102284350494 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GEORGIA - 0.00603940503631 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GEORGIA - 0.00549754645453 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GEORGIA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194129598548;
MPRINT(EM_DIAGRAM):   if not missing( T_GIVE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GIVE - 0.01381024603977 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GIVE - 0.01412912672075 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GIVE - 0.02533762389356 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GIVE - 0.02122996811304 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GIVE - 0.02425210022245 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GIVE - 0.0556146722739 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GIVE - 0.01762103300483 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GIVE - 0.01119518313993 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GIVE - 0.01283462725457 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GIVE - 0.01952314562271 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0039867412386;
MPRINT(EM_DIAGRAM):   if not missing( T_GOOD ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GOOD - 0.03898430990213 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GOOD - 0.00736395766227 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GOOD - 0.01488587218579 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GOOD - 0.0114064055707 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GOOD - 0.01432431507149 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GOOD - 0.03003270889087 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GOOD - 0.03829859630269 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GOOD - 0.04966139360956 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GOOD - 0.04467593562895 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GOOD - 0.00222971888358 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01052053368232;
MPRINT(EM_DIAGRAM):   if not missing( T_GORDON ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GORDON - 0.01459188326493 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GORDON - 0.0023290518465 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GORDON - 0.00008939846011 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GORDON - 0.52966842061441 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GORDON - 0.00281649818652 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GORDON - 0.01042944872696 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GORDON - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00770529986509;
MPRINT(EM_DIAGRAM):   if not missing( T_GOVERN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GOVERN - 0.08547404683961 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GOVERN - 0.0008108438896 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GOVERN - 0.05528988625757 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GOVERN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GOVERN - 0.01016863226095 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GOVERN - 0.0012150475438 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GOVERN - 0.0223518284051 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00484733616596;
MPRINT(EM_DIAGRAM):   if not missing( T_GRAPHIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GRAPHIC - 0.00216180805764 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GRAPHIC - 0.00014389744036 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GRAPHIC - 0.01442875936879 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GRAPHIC - 0.02312451978651 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GRAPHIC - 0.00938833570412 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GRAPHIC - 0.00095656551208 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GRAPHIC - 0.00034876347495 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GRAPHIC - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00115008148989;
MPRINT(EM_DIAGRAM):   if not missing( T_GREAT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GREAT - 0.02338558251472 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GREAT - 0.00461793788198 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GREAT - 0.00920256779262 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GREAT - 0.01116107834616 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GREAT - 0.00932711525649 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GREAT - 0.01828325496271 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GREAT - 0.01155841080529 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GREAT - 0.01278076501881 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GREAT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00269364504316;
MPRINT(EM_DIAGRAM):   if not missing( T_GREEK ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GREEK - 0.03190188862539 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GREEK - 0.00155203888956 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GREEK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GREEK - 0.01016810394971 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GREEK - 0.00121538786725 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GREEK - 0.00813008130081 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00300479601726;
MPRINT(EM_DIAGRAM):   if not missing( T_GROUND ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GROUND - 0.00153171250086 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GROUND - 0.00116128861641 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GROUND - 0.00120952728172 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GROUND - 0.01012058314517 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GROUND - 0.0001169500366 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GROUND - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00185029919574;
MPRINT(EM_DIAGRAM):   if not missing( T_GROUP ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GROUP - 0.01687923955761 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GROUP - 0.00540078481219 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_GROUP - 0.01028772859877 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_GROUP - 0.02414397245204 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_GROUP - 0.01205804769541 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_GROUP - 0.00632211158526 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_GROUP - 0.00414885845854 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_GROUP - 0.01399514683327 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_GROUP - 0.01544090790538 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_GROUP - 0.01905609793463 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00346574744131;
MPRINT(EM_DIAGRAM):   if not missing( T_HAPPEN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_HAPPEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_HAPPEN - 0.02478383070291 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_HAPPEN - 0.01110221564296 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_HAPPEN - 0.0062893081761 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_HAPPEN - 0.02867761359095 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_HAPPEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_HAPPEN - 0.00461059227987 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_HAPPEN - 0.00878174990174 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_HAPPEN - 0.02850615658289 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_HAPPEN - 0.003647183031 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00501228233194;
MPRINT(EM_DIAGRAM):   if not missing( T_HEAR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_HEAR - 0.00991792065663 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_HEAR - 0.00966665393084 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_HEAR - 0.00117180745195 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_HEAR - 0.00325696316262 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_HEAR - 0.01670041207753 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_HEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_HEAR - 0.0091944065117 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_HEAR - 0.01325232645115 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_HEAR - 0.0110690847367 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_HEAR - 0.00091766343902 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00335092305857;
MPRINT(EM_DIAGRAM):   if not missing( T_HIGH ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_HIGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_HIGH - 0.00168750086637 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_HIGH - 0.00224403390235 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_HIGH - 0.00111877116594 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_HIGH - 0.00380109629502 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_HIGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_HIGH - 0.00869505723328 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_HIGH - 0.01552991916422 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_HIGH - 0.00744924499147 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_HIGH - 0.00499878439151 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194351445074;
MPRINT(EM_DIAGRAM):   if not missing( T_HOME ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_HOME - 0.00908084163898 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_HOME - 0.01209269239731 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_HOME - 0.00972487986714 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_HOME - 0.00229210342417 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_HOME - 0.02191756642259 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_HOME - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_HOME - 0.00418947041798 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_HOME - 0.01045168007886 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_HOME - 0.01095087470239 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_HOME - 0.00337815485682 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00278083727473;
MPRINT(EM_DIAGRAM):   if not missing( T_IDEA ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_IDEA - 0.01160471301335 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_IDEA - 0.00185145599162 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_IDEA - 0.009872052126 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_IDEA - 0.0040013043735 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_IDEA - 0.00411069155188 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_IDEA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_IDEA - 0.00375045452184 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_IDEA - 0.01410806451935 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_IDEA - 0.0103848297729 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_IDEA - 0.00783979237745 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219729366702;
MPRINT(EM_DIAGRAM):   if not missing( T_IMAG ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_IMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_IMAG - 0.0005787770982 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_IMAG - 0.03275198067803 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_IMAG - 0.00865025497378 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_IMAG - 0.00352289128568 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_IMAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_IMAG - 0.00154808959156 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_IMAG - 0.00466127863567 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_IMAG - 0.00752607277207 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_IMAG - 0.00694913561295 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00371744239839;
MPRINT(EM_DIAGRAM):   if not missing( T_INCLUD ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_INCLUD - 0.0047238372093 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_INCLUD - 0.01655279854208 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_INCLUD - 0.04068611753308 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_INCLUD - 0.02468542020665 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_INCLUD - 0.02561700672525 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_INCLUD - 0.0328947368421 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_INCLUD - 0.00991793233947 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_INCLUD - 0.01776267309444 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_INCLUD - 0.01589185165014 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_INCLUD - 0.02748480172863 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00639259130048;
MPRINT(EM_DIAGRAM):   if not missing( T_INFO ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_INFO - 0.01653980826124 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_INFO - 0.00018402876892 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_INFO - 0.00843766197158 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_INFO - 0.01012541220202 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_INFO - 0.0001582432564 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_INFO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_INFO - 0.00229763167196 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_INFO - 0.01133486836282 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_INFO - 0.01136277616349 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_INFO - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00198648562754;
MPRINT(EM_DIAGRAM):   if not missing( T_INFORM ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_INFORM - 0.03568798496771 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_INFORM - 0.00591284971553 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_INFORM - 0.01802790323675 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_INFORM - 0.04215987742232 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_INFORM - 0.01211844457529 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_INFORM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_INFORM - 0.02134032521492 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_INFORM - 0.01847920669712 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_INFORM - 0.03949902457853 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_INFORM - 0.00658247333945 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00588961957597;
MPRINT(EM_DIAGRAM):   if not missing( T_INPUT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_INPUT - 0.01103224372662 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_INPUT - 0.00292627533193 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_INPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_INPUT - 0.0128165615483 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_INPUT - 0.0001419178825 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_INPUT - 0.00393030754753 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00251815963322;
MPRINT(EM_DIAGRAM):   if not missing( T_INSTITUT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_INSTITUT - 0.01046511627906 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_INSTITUT - 0.00611552230794 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_INSTITUT - 0.01522284195155 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_INSTITUT - 0.01975257946622 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_INSTITUT - 0.00455167994505 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_INSTITUT - 0.03564067972385 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_INSTITUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_INSTITUT - 0.009631110389 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_INSTITUT - 0.00914167785759 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_INSTITUT - 0.01609339857377 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00320854425513;
MPRINT(EM_DIAGRAM):   if not missing( T_INTEREST ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_INTEREST - 0.03447899605793 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_INTEREST - 0.00362195550262 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_INTEREST - 0.01319725787179 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_INTEREST - 0.01391169330655 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_INTEREST - 0.01758841532768 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_INTEREST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_INTEREST - 0.01467797035794 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_INTEREST - 0.02385150886257 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_INTEREST - 0.0197549914447 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_INTEREST - 0.00703209183107 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00549624250428;
MPRINT(EM_DIAGRAM):   if not missing( T_INTERNET ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_INTERNET - 0.03346220394362 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_INTERNET - 0.01934605122373 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_INTERNET - 0.00924165646422 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_INTERNET - 0.0757572895491 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_INTERNET - 0.00268911906216 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_INTERNET - 0.00401427297056 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_INTERNET - 0.0011244377811 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_INTERNET - 0.00495760420938 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_INTERNET - 0.00282614410121 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_INTERNET - 0.00463206052976 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023033906012;
MPRINT(EM_DIAGRAM):   if not missing( T_ISRA ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ISRA - 0.00087349531537 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ISRA - 0.12075130370593 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ISRA - 0.0027685321134 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ISRA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ISRA - 0.10183701040348 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00454165303342;
MPRINT(EM_DIAGRAM):   if not missing( T_ISRAEL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ISRAEL - 0.00374153571876 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ISRAEL - 0.00022948411969 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ISRAEL - 0.17415425658158 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ISRAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ISRAEL - 0.00324007203826 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ISRAEL - 0.00290190379913 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ISRAEL - 0.09179183062345 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00756701302047;
MPRINT(EM_DIAGRAM):   if not missing( T_JEW ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_JEW - 0.00751884153274 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_JEW - 0.09884977891365 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_JEW - 0.00109793588054 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_JEW - 0.0024649964002 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_JEW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_JEW - 0.04707719077776 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00429198045122;
MPRINT(EM_DIAGRAM):   if not missing( T_JEWISH ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_JEWISH - 0.00896054949931 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_JEWISH - 0.08548561248475 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_JEWISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_JEWISH - 0.0039240969438 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_JEWISH - 0.00027753289581 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_JEWISH - 0.04838481475227 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00405993378627;
MPRINT(EM_DIAGRAM):   if not missing( T_JOHN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_JOHN - 0.00620155038759 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_JOHN - 0.00102593785958 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_JOHN - 0.01284652682472 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_JOHN - 0.01609109913768 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_JOHN - 0.00585520422032 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_JOHN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_JOHN - 0.01379829076703 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_JOHN - 0.01710200632852 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_JOHN - 0.00862110306796 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_JOHN - 0.01194947112793 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00403753054142;
MPRINT(EM_DIAGRAM):   if not missing( T_KEYBOARD ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_KEYBOARD - 0.00096899224806 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_KEYBOARD - 0.010848923304 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_KEYBOARD - 0.00459219327143 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_KEYBOARD - 0.00331615187938 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_KEYBOARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_KEYBOARD - 0.00621890547263 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00128522091314;
MPRINT(EM_DIAGRAM):   if not missing( T_KEYWORD ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_KEYWORD - 0.05667007411193 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_KEYWORD - 0.0083901281281 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_KEYWORD - 0.02967768892836 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_KEYWORD - 0.02491324284052 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_KEYWORD - 0.00150039594968 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_KEYWORD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_KEYWORD - 0.00528009804621 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_KEYWORD - 0.0144644322864 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_KEYWORD - 0.0223675710395 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_KEYWORD - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00455869962824;
MPRINT(EM_DIAGRAM):   if not missing( T_KILL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_KILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_KILL - 0.03669786525444 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_KILL - 0.00236183033889 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_KILL - 0.00083857442348 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_KILL - 0.08791781679874 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_KILL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_KILL - 0.00788633479363 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_KILL - 0.00362073667797 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_KILL - 0.00314498109629 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_KILL - 0.01819334252289 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00467303917338;
MPRINT(EM_DIAGRAM):   if not missing( T_KIND ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_KIND - 0.01650120132372 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_KIND - 0.00321206808407 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_KIND - 0.0075567001053 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_KIND - 0.00586801480545 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_KIND - 0.01106346691767 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_KIND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_KIND - 0.01215043462193 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_KIND - 0.01391928031064 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_KIND - 0.01796705862237 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_KIND - 0.00302057006825 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00342577386398;
MPRINT(EM_DIAGRAM):   if not missing( T_LEVEL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_LEVEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_LEVEL - 0.00171485474725 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_LEVEL - 0.004864978107 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_LEVEL - 0.00393533060387 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_LEVEL - 0.00185795120113 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_LEVEL - 0.00839054157131 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_LEVEL - 0.00809036008111 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_LEVEL - 0.0105228969356 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_LEVEL - 0.01176377880142 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_LEVEL - 0.00046424079748 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229007745831;
MPRINT(EM_DIAGRAM):   if not missing( T_LIST ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_LIST - 0.03577299809921 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_LIST - 0.0030850914261 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_LIST - 0.00433317920646 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_LIST - 0.05635136610895 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_LIST - 0.00263924967812 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_LIST - 0.02711323763955 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_LIST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_LIST - 0.00758741070317 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_LIST - 0.00491294794038 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_LIST - 0.00273752012882 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00317252187615;
MPRINT(EM_DIAGRAM):   if not missing( T_LIVE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_LIVE - 0.01076658053402 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_LIVE - 0.02541920737395 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_LIVE - 0.00182004630048 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_LIVE - 0.0037436358191 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_LIVE - 0.03452254630749 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_LIVE - 0.05767681284213 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_LIVE - 0.01927889136609 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_LIVE - 0.01051251697301 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_LIVE - 0.01012208571577 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_LIVE - 0.03067958180178 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00308449074548;
MPRINT(EM_DIAGRAM):   if not missing( T_LONG ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_LONG - 0.01197103885714 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_LONG - 0.00635652760323 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_LONG - 0.01014272346369 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_LONG - 0.02529877877975 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_LONG - 0.00716429956181 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_LONG - 0.01755439650176 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_LONG - 0.03017313627953 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_LONG - 0.01204308082948 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_LONG - 0.0178645008353 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_LONG - 0.00337957060607 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0029548016993;
MPRINT(EM_DIAGRAM):   if not missing( T_MACHIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MACHIN - 0.0190148066117 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MACHIN - 0.00099485407972 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MACHIN - 0.03128725175502 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MACHIN - 0.02026704524038 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MACHIN - 0.02011085325047 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MACHIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MACHIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MACHIN - 0.01185453404626 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MACHIN - 0.00274176915848 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MACHIN - 0.01690027939787 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00445586487322;
MPRINT(EM_DIAGRAM):   if not missing( T_MAIL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MAIL - 0.0095516375332 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MAIL - 0.0283828647666 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MAIL - 0.01963027086716 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MAIL - 0.07551193666314 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MAIL - 0.00629320643775 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MAIL - 0.0140304012703 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MAIL - 0.00256274301873 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MAIL - 0.01956085685009 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MAIL - 0.01671579996984 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MAIL - 0.0008829618804 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00543251060544;
MPRINT(EM_DIAGRAM):   if not missing( T_MANAG ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MANAG - 0.01483670806218 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MANAG - 0.00030817198809 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MANAG - 0.02373410395354 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MANAG - 0.09504461109227 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MANAG - 0.00226291685964 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MANAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MANAG - 0.01053029647952 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MANAG - 0.00415387518417 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MANAG - 0.00469517341855 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MANAG - 0.01290514157248 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00477039637363;
MPRINT(EM_DIAGRAM):   if not missing( T_MARK ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MARK - 0.00775193798449 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MARK - 0.00136203072028 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MARK - 0.0054592013006 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MARK - 0.00137413455948 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MARK - 0.00680335440973 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MARK - 0.08304093567251 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MARK - 0.00292102011009 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MARK - 0.01287502674623 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MARK - 0.00946741263763 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MARK - 0.00919593451966 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00316774788826;
MPRINT(EM_DIAGRAM):   if not missing( T_MED ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MED - 0.05440010765628 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MED - 0.0030310262916 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MED - 0.22661840330333 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MED - 0.01137709680963 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MED - 0.27009740637104 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MED - 0.00992712773556 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01588003300758;
MPRINT(EM_DIAGRAM):   if not missing( T_MEDIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MEDIC - 0.00170872538229 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MEDIC - 0.00278394196763 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MEDIC - 0.00030798768847 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MEDIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MEDIC - 0.06148721691486 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MEDIC - 0.00464061924867 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MEDIC - 0.07403010929723 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MEDIC - 0.00858273379277 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00577261567568;
MPRINT(EM_DIAGRAM):   if not missing( T_MEDICIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MEDICIN - 0.00015793025225 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MEDICIN - 0.00141558477544 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MEDICIN - 0.00288259958071 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MEDICIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MEDICIN - 0.01460360574639 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MEDICIN - 0.00403234622912 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MEDICIN - 0.03132504143304 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MEDICIN - 0.00027854447848 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00195561474876;
MPRINT(EM_DIAGRAM):   if not missing( T_MEMORI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MEMORI - 0.01535931768489 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MEMORI - 0.00181056518728 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MEMORI - 0.02381344199927 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MEMORI - 0.00286772102809 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MEMORI - 0.00260524434839 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MEMORI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MEMORI - 0.00661730134852 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MEMORI - 0.00074231764149 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MEMORI - 0.00106364752739 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00244757624292;
MPRINT(EM_DIAGRAM):   if not missing( T_MICHAEL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MICHAEL - 0.03602993952561 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MICHAEL - 0.00023224453101 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MICHAEL - 0.00339867529004 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MICHAEL - 0.0040885675273 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MICHAEL - 0.00062658174657 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MICHAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MICHAEL - 0.00147787948131 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MICHAEL - 0.01029177546649 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MICHAEL - 0.00865016918923 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MICHAEL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00222087040818;
MPRINT(EM_DIAGRAM):   if not missing( T_MIKE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MIKE - 0.00583175493812 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MIKE - 0.0000502505348 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MIKE - 0.00192416875781 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MIKE - 0.01956944633751 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MIKE - 0.00158698761605 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MIKE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MIKE - 0.00156075808249 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MIKE - 0.00544946666489 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MIKE - 0.002117628907 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MIKE - 0.00142886303327 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0015123279714;
MPRINT(EM_DIAGRAM):   if not missing( T_MON ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MON - 0.02144569080704 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MON - 0.00931127896356 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MON - 0.00717872551083 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MON - 0.01710240847889 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MON - 0.01794505405886 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MON - 0.01624337005303 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MON - 0.01125770582414 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MON - 0.01511881905053 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MON - 0.02924668774186 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00256503596773;
MPRINT(EM_DIAGRAM):   if not missing( T_MOTIF ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MOTIF - 0.01003222952477 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MOTIF - 0.02885591158758 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MOTIF - 0.02882497768782 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MOTIF - 0.0070433778533 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MOTIF - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MOTIF - 0.00521739130434 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00293609315228;
MPRINT(EM_DIAGRAM):   if not missing( T_MOTOROLA ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MOTOROLA - 0.02157769556025 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_MOTOROLA - 0.00600689923911 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_MOTOROLA - 0.01066340894095 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_MOTOROLA - 0.00213397032234 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_MOTOROLA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00286625253481;
MPRINT(EM_DIAGRAM):   if not missing( T_NATION ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_NATION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_NATION - 0.01712190989177 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_NATION - 0.00870109628667 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_NATION - 0.00175515577007 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_NATION - 0.01812049670748 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_NATION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_NATION - 0.00228832951945 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_NATION - 0.00890568418718 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_NATION - 0.00907532202961 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_NATION - 0.02551791534799 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023241280317;
MPRINT(EM_DIAGRAM):   if not missing( T_NETWORK ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_NETWORK - 0.04399510504161 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_NETWORK - 0.00579057374191 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_NETWORK - 0.01627799468801 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_NETWORK - 0.00698006099446 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_NETWORK - 0.01380215811241 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_NETWORK - 0.00806069227121 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_NETWORK - 0.00260716202745 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_NETWORK - 0.01302926251945 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_NETWORK - 0.01232977324364 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_NETWORK - 0.00925369702857 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00387809117101;
MPRINT(EM_DIAGRAM):   if not missing( T_NEW ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_NEW - 0.01058437686344 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_NEW - 0.03724365358465 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_NEW - 0.03251498619719 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_NEW - 0.03048292146654 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_NEW - 0.02748319323954 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_NEW - 0.02573880256415 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_NEW - 0.01667605831393 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_NEW - 0.03305089410884 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_NEW - 0.03797808332316 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_NEW - 0.02789292107297 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00609636093392;
MPRINT(EM_DIAGRAM):   if not missing( T_NEWS ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_NEWS - 0.00161208213134 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_NEWS - 0.03051841038486 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_NEWS - 0.00832620309849 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_NEWS - 0.0139042807773 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_NEWS - 0.025 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_NEWS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_NEWS - 0.0162048829878 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_NEWS - 0.01356602426842 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_NEWS - 0.01264243147374 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00584575256874;
MPRINT(EM_DIAGRAM):   if not missing( T_NEWSREAD ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_NEWSREAD - 0.01317246604884 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_NEWSREAD - 0.0024494794856 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_NEWSREAD - 0.03051122974841 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_NEWSREAD - 0.05316748587118 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_NEWSREAD - 0.00164278369059 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_NEWSREAD - 0.02476780185758 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_NEWSREAD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_NEWSREAD - 0.01178807994963 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_NEWSREAD - 0.01712457408355 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_NEWSREAD - 0.00626713670191 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00650673348804;
MPRINT(EM_DIAGRAM):   if not missing( T_NOIS ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_NOIS - 0.02267441860465 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_NOIS - 0.00318236967035 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_NOIS - 0.00012918634136 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_NOIS - 0.00534257978227 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_NOIS - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_NOIS - 0.0068322805252 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_NOIS - 0.00255476496306 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_NOIS - 0.00567646920122 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00153852325528;
MPRINT(EM_DIAGRAM):   if not missing( T_NUMBER ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_NUMBER - 0.00598395212838 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_NUMBER - 0.01110792355496 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_NUMBER - 0.00951982099828 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_NUMBER - 0.00998444751454 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_NUMBER - 0.01137896192236 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_NUMBER - 0.59966728991892 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_NUMBER - 0.00293580808162 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_NUMBER - 0.01114807507067 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_NUMBER - 0.00595448303396 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_NUMBER - 0.0120766117553 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00412508625723;
MPRINT(EM_DIAGRAM):   if not missing( T_OPER ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_OPER - 0.00999729417963 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_OPER - 0.00530792804202 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_OPER - 0.00693900011553 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_OPER - 0.00561454434344 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_OPER - 0.00583689426857 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_OPER - 0.18466582267756 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_OPER - 0.00276052449965 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_OPER - 0.01052575022869 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_OPER - 0.00781548757979 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_OPER - 0.0099236610242 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00267764526657;
MPRINT(EM_DIAGRAM):   if not missing( T_OPINION ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_OPINION - 0.01785998725708 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_OPINION - 0.00650783520121 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_OPINION - 0.00851146712246 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_OPINION - 0.00337558409976 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_OPINION - 0.07712890349444 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_OPINION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_OPINION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_OPINION - 0.01170192926174 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_OPINION - 0.02852385502861 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_OPINION - 0.04703823743168 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00691079636555;
MPRINT(EM_DIAGRAM):   if not missing( T_ORIGIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ORIGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ORIGIN - 0.00289148727723 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ORIGIN - 0.01057123211603 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ORIGIN - 0.00809612962776 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ORIGIN - 0.00930952602004 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ORIGIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ORIGIN - 0.00317028985507 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ORIGIN - 0.01889756775943 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ORIGIN - 0.02042417399889 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ORIGIN - 0.00080836075985 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00440179949478;
MPRINT(EM_DIAGRAM):   if not missing( T_OUTPUT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_OUTPUT - 0.00436696357397 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_OUTPUT - 0.01307671008114 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_OUTPUT - 0.00368497014735 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_OUTPUT - 0.01370868628755 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_OUTPUT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00263837166284;
MPRINT(EM_DIAGRAM):   if not missing( T_PAIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PAIN - 0.00134816312773 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PAIN - 0.00028429515561 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PAIN - 0.00031314821919 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PAIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PAIN - 0.01448091583024 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PAIN - 0.00203077965842 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PAIN - 0.01985308471384 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PAIN - 0.00760275599904 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00175256121979;
MPRINT(EM_DIAGRAM):   if not missing( T_PALESTINIAN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PALESTINIAN - 0.00151231163905 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PALESTINIAN - 0.06657872888527 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PALESTINIAN - 0.00025680180975 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PALESTINIAN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PALESTINIAN - 0.01235477883894 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00260941378693;
MPRINT(EM_DIAGRAM):   if not missing( T_PART ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PART - 0.01465692177663 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PART - 0.00306640947447 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PART - 0.00406413976498 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PART - 0.00110698960934 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PART - 0.01365523148622 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PART - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PART - 0.00120772946859 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PART - 0.00971589778037 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PART - 0.00464627471872 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PART - 0.00210831818487 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00114007849037;
MPRINT(EM_DIAGRAM):   if not missing( T_PATIENT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PATIENT - 0.00034903297335 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PATIENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PATIENT - 0.05202846804637 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PATIENT - 0.00344356850257 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PATIENT - 0.05826711197036 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PATIENT - 0.00114794088104 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00504883490175;
MPRINT(EM_DIAGRAM):   if not missing( T_PERSON ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PERSON - 0.00978354492004 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PERSON - 0.00857365511826 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PERSON - 0.00793846830286 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PERSON - 0.01195301953895 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PERSON - 0.01041520274654 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PERSON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PERSON - 0.01171639244025 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PERSON - 0.00938937386653 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PERSON - 0.01676467558844 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PERSON - 0.0162547061405 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229967059068;
MPRINT(EM_DIAGRAM):   if not missing( T_PHONE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PHONE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PHONE - 0.01950311373879 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PHONE - 0.00924970917287 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PHONE - 0.02476384782214 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PHONE - 0.00126243941628 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PHONE - 0.50282846790098 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PHONE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PHONE - 0.01422027585765 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PHONE - 0.00769978802862 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PHONE - 0.00109609061015 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00507930156386;
MPRINT(EM_DIAGRAM):   if not missing( T_PITT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PITT - 0.00079882413087 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PITT - 0.31013723823855 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PITT - 0.00112963632193 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PITT - 0.01652958739575 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PITT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00327917408148;
MPRINT(EM_DIAGRAM):   if not missing( T_PITTSBURGH ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PITTSBURGH - 0.00607295810229 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PITTSBURGH - 0.00524109014675 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PITTSBURGH - 0.00071894171779 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PITTSBURGH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PITTSBURGH - 0.25712777555229 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PITTSBURGH - 0.00459861056433 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PITTSBURGH - 0.02200263460209 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PITTSBURGH - 0.00801719740845 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00478154657828;
MPRINT(EM_DIAGRAM):   if not missing( T_PLACE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PLACE - 0.03308051328074 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PLACE - 0.0150813554075 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PLACE - 0.00499983172592 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PLACE - 0.03391859534456 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PLACE - 0.0099411214409 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PLACE - 0.13099109531862 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PLACE - 0.00822752962184 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PLACE - 0.01251875153745 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PLACE - 0.0137711766441 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PLACE - 0.00582415882683 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00360256293573;
MPRINT(EM_DIAGRAM):   if not missing( T_POINT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_POINT - 0.00381242851696 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_POINT - 0.00604705499047 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_POINT - 0.01028786864618 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_POINT - 0.00378788261325 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_POINT - 0.01743543618941 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_POINT - 0.01594896331738 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_POINT - 0.00838650571678 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_POINT - 0.01377211949811 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_POINT - 0.01170803776753 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_POINT - 0.02401036961248 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00219530643596;
MPRINT(EM_DIAGRAM):   if not missing( T_POLICI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_POLICI - 0.02569894977383 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_POLICI - 0.00127960679204 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_POLICI - 0.03970438399228 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_POLICI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_POLICI - 0.00238949133042 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_POLICI - 0.00169898814477 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_POLICI - 0.45900222378798 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00773216228441;
MPRINT(EM_DIAGRAM):   if not missing( T_POSIT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_POSIT - 0.00581395348837 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_POSIT - 0.00910275412716 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_POSIT - 0.00482877450376 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_POSIT - 0.05305558937853 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_POSIT - 0.00521721767486 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_POSIT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_POSIT - 0.00540484743383 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_POSIT - 0.00662462157902 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_POSIT - 0.00329427788279 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_POSIT - 0.02261866421002 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00263257033987;
MPRINT(EM_DIAGRAM):   if not missing( T_POST ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_POST - 0.02547233785253 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_POST - 0.02588872570811 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_POST - 0.01947166242952 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_POST - 0.01642258521249 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_POST - 0.02943850806775 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_POST - 0.05951954469569 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_POST - 0.01372470398435 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_POST - 0.02913325682518 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_POST - 0.02761820173766 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_POST - 0.0384308676267 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0077906236798;
MPRINT(EM_DIAGRAM):   if not missing( T_POWER ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_POWER - 0.00282119710255 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_POWER - 0.00485987445765 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_POWER - 0.00143176768918 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_POWER - 0.00310272536687 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_POWER - 0.00755401813229 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_POWER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_POWER - 0.00387369680974 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_POWER - 0.02112343419203 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_POWER - 0.00152667215093 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_POWER - 0.01281572316999 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00274036787096;
MPRINT(EM_DIAGRAM):   if not missing( T_PROBLEM ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PROBLEM - 0.02401706641047 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PROBLEM - 0.01307097691504 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PROBLEM - 0.12349859549481 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PROBLEM - 0.02116882961697 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PROBLEM - 0.01240265672718 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PROBLEM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PROBLEM - 0.00944708154936 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PROBLEM - 0.01979423505732 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PROBLEM - 0.04572959684393 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PROBLEM - 0.00260985999425 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01039754221923;
MPRINT(EM_DIAGRAM):   if not missing( T_PRODUCT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PRODUCT - 0.02100887540725 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PRODUCT - 0.00132325764997 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PRODUCT - 0.01624852265608 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PRODUCT - 0.00449292403737 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PRODUCT - 0.00170206062566 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PRODUCT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PRODUCT - 0.00255481233742 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PRODUCT - 0.01584710596584 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PRODUCT - 0.01642412320825 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PRODUCT - 0.00280669524392 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00427694699893;
MPRINT(EM_DIAGRAM):   if not missing( T_PROGRAM ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PROGRAM - 0.01009923817161 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PROGRAM - 0.00075850687582 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PROGRAM - 0.05589822758456 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PROGRAM - 0.05229690637878 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PROGRAM - 0.00119318011891 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PROGRAM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PROGRAM - 0.0043583940994 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PROGRAM - 0.01840927682878 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PROGRAM - 0.00674177964882 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PROGRAM - 0.0007315309536 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00600993010939;
MPRINT(EM_DIAGRAM):   if not missing( T_PROJECT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PROJECT - 0.04868569356368 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PROJECT - 0.0018140233765 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PROJECT - 0.00423102168965 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PROJECT - 0.0081005765705 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PROJECT - 0.00071729507176 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PROJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PROJECT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PROJECT - 0.01701503103046 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PROJECT - 0.00528852385817 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PROJECT - 0.00294496799733 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00372018245335;
MPRINT(EM_DIAGRAM):   if not missing( T_PUBLIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PUBLIC - 0.15585226390411 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PUBLIC - 0.01330596576973 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_PUBLIC - 0.00215899344746 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_PUBLIC - 0.0113809229511 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_PUBLIC - 0.00556357148251 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_PUBLIC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_PUBLIC - 0.00462482392202 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_PUBLIC - 0.00708123901836 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_PUBLIC - 0.00967950955317 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_PUBLIC - 0.01178177722153 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00210583570684;
MPRINT(EM_DIAGRAM):   if not missing( T_QUESTION ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_QUESTION - 0.05551643764485 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_QUESTION - 0.00788719039772 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_QUESTION - 0.03001768001914 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_QUESTION - 0.03900646864635 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_QUESTION - 0.02351340116566 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_QUESTION - 0.12749679707123 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_QUESTION - 0.02600298021341 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_QUESTION - 0.02715396916361 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_QUESTION - 0.03087449243896 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_QUESTION - 0.11175033523795 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00821767592665;
MPRINT(EM_DIAGRAM):   if not missing( T_RADAR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_RADAR - 0.00238929595412 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_RADAR - 0.00852705543334 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_RADAR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00178172574485;
MPRINT(EM_DIAGRAM):   if not missing( T_RADIO ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_RADIO - 0.013923651975 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_RADIO - 0.00149456936769 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_RADIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_RADIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_RADIO - 0.00380423409332 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_RADIO - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_RADIO - 0.00301932367149 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_RADIO - 0.02141858238713 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_RADIO - 0.00468035047643 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_RADIO - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00390177164566;
MPRINT(EM_DIAGRAM):   if not missing( T_READ ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_READ - 0.00634249471458 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_READ - 0.00671534680417 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_READ - 0.01807064842093 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_READ - 0.00789799230548 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_READ - 0.01792670463415 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_READ - 0.11197423321174 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_READ - 0.02381809037816 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_READ - 0.01536711857857 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_READ - 0.02077265261811 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_READ - 0.0217169521177 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00375545385412;
MPRINT(EM_DIAGRAM):   if not missing( T_REASON ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_REASON - 0.01276248130418 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_REASON - 0.00906751158073 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_REASON - 0.01128779208523 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_REASON - 0.02672210484991 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_REASON - 0.03234956023658 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_REASON - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_REASON - 0.00811858221832 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_REASON - 0.0275266606698 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_REASON - 0.02489671419991 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_REASON - 0.04216545285407 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00845976378128;
MPRINT(EM_DIAGRAM):   if not missing( T_RECEIV ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_RECEIV - 0.0098066685346 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_RECEIV - 0.00399297780878 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_RECEIV - 0.00816744679016 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_RECEIV - 0.00851118635404 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_RECEIV - 0.00591500679729 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_RECEIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_RECEIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_RECEIV - 0.01199249478366 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_RECEIV - 0.0046107079552 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_RECEIV - 0.00431001235349 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00234927298682;
MPRINT(EM_DIAGRAM):   if not missing( T_REMEMB ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_REMEMB - 0.02182952182952 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_REMEMB - 0.01888114989786 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_REMEMB - 0.00446812503737 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_REMEMB - 0.00714774148313 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_REMEMB - 0.0084703587621 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_REMEMB - 0.05520356299003 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_REMEMB - 0.00324577294685 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_REMEMB - 0.01350970905895 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_REMEMB - 0.01487514742705 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_REMEMB - 0.00166183574879 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00331829295085;
MPRINT(EM_DIAGRAM):   if not missing( T_REPLI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_REPLI - 0.00600303725099 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_REPLI - 0.02285967751556 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_REPLI - 0.04544912353281 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_REPLI - 0.0515328842101 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_REPLI - 0.02148335666704 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_REPLI - 0.04364674271795 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_REPLI - 0.14078142630512 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_REPLI - 0.03155997051752 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_REPLI - 0.03264731109706 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_REPLI - 0.02434827903773 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00610141205665;
MPRINT(EM_DIAGRAM):   if not missing( T_REPORT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_REPORT - 0.0297157622739 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_REPORT - 0.01336218064651 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_REPORT - 0.00288095251065 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_REPORT - 0.00107693633152 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_REPORT - 0.04892869205668 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_REPORT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_REPORT - 0.00201288244766 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_REPORT - 0.00896196830463 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_REPORT - 0.01001376098153 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_REPORT - 0.00294782612813 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00395186228763;
MPRINT(EM_DIAGRAM):   if not missing( T_REQUIR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_REQUIR - 0.02850471654058 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_REQUIR - 0.00224391084411 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_REQUIR - 0.02442723458447 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_REQUIR - 0.0155367164931 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_REQUIR - 0.00476645158168 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_REQUIR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_REQUIR - 0.00742311770943 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_REQUIR - 0.022434360915 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_REQUIR - 0.00904870720315 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_REQUIR - 0.00035451115444 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00622638521405;
MPRINT(EM_DIAGRAM):   if not missing( T_RESEARCH ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_RESEARCH - 0.00947744466237 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_RESEARCH - 0.00151329980833 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_RESEARCH - 0.01781815559643 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_RESEARCH - 0.0220025400833 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_RESEARCH - 0.01321687418127 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_RESEARCH - 0.01286549707602 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_RESEARCH - 0.0108738460075 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_RESEARCH - 0.01724822853081 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_RESEARCH - 0.02718669956537 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_RESEARCH - 0.20270910346813 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00604738146756;
MPRINT(EM_DIAGRAM):   if not missing( T_RESPONS ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_RESPONS - 0.03615019557188 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_RESPONS - 0.01244217162032 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_RESPONS - 0.01155459410743 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_RESPONS - 0.00253319357092 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_RESPONS - 0.01366087191503 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_RESPONS - 0.14132184251585 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_RESPONS - 0.00575109270761 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_RESPONS - 0.01001715278002 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_RESPONS - 0.02203934626614 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_RESPONS - 0.00401396348785 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00369205432189;
MPRINT(EM_DIAGRAM):   if not missing( T_ROBERT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_ROBERT - 0.00108276945585 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_ROBERT - 0.00155100732289 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_ROBERT - 0.02271336778134 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_ROBERT - 0.00003098469356 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_ROBERT - 0.00279662912968 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_ROBERT - 0.00493810970324 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_ROBERT - 0.00660656645942 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_ROBERT - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00145376466257;
MPRINT(EM_DIAGRAM):   if not missing( T_RUN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_RUN - 0.05344579589004 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_RUN - 0.00058198275777 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_RUN - 0.10881390135027 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_RUN - 0.01586572978739 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_RUN - 0.00256825762573 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_RUN - 0.03545996862952 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_RUN - 0.00197837589141 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_RUN - 0.00895075975821 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_RUN - 0.00410421701137 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_RUN - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00740297854665;
MPRINT(EM_DIAGRAM):   if not missing( T_SAT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SAT - 0.03798991705968 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SAT - 0.02519458611496 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SAT - 0.00648441553811 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SAT - 0.01302797468461 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SAT - 0.01034681845786 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SAT - 0.00871088942872 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SAT - 0.01731163481793 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SAT - 0.00236616385684 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00422799501443;
MPRINT(EM_DIAGRAM):   if not missing( T_SCHOOL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SCHOOL - 0.02708078335373 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SCHOOL - 0.01075469939353 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SCHOOL - 0.01074580450283 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SCHOOL - 0.01023283113403 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SCHOOL - 0.00304729566286 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SCHOOL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SCHOOL - 0.01848502768915 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SCHOOL - 0.01022987806425 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SCHOOL - 0.03250623819023 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SCHOOL - 0.00604876762012 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00487685785717;
MPRINT(EM_DIAGRAM):   if not missing( T_SCI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SCI - 0.03715765961466 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SCI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SCI - 0.00370431293285 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SCI - 0.00111264338995 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SCI - 0.00052203872757 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SCI - 0.07715374512805 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SCI - 0.05279630473339 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SCI - 0.03258180344682 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SCI - 0.06396033091468 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SCI - 0.00775430133793 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00194851612595;
MPRINT(EM_DIAGRAM):   if not missing( T_SCIENC ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SCIENC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SCIENC - 0.010192958185 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SCIENC - 0.0620633357579 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SCIENC - 0.03102323018947 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SCIENC - 0.00927822595008 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SCIENC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SCIENC - 0.22471838434701 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SCIENC - 0.02412007589592 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SCIENC - 0.02256212034195 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SCIENC - 0.02725875411379 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01027128116445;
MPRINT(EM_DIAGRAM):   if not missing( T_SCREEN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SCREEN - 0.00148859678687 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SCREEN - 0.03097468237695 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SCREEN - 0.0135100863816 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SCREEN - 0.00016025704162 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SCREEN - 0.0044676139362 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SCREEN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SCREEN - 0.00133448387938 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00239287393542;
MPRINT(EM_DIAGRAM):   if not missing( T_SELL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SELL - 0.00571864277544 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SELL - 0.00019453012279 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SELL - 0.00033795049137 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SELL - 0.00084990651028 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SELL - 0.00375217849164 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SELL - 0.02155203851656 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SELL - 0.00092746351976 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SELL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00410242352789;
MPRINT(EM_DIAGRAM):   if not missing( T_SEND ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SEND - 0.07497697606205 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SEND - 0.00725321720308 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SEND - 0.02760737978114 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SEND - 0.02713017175213 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SEND - 0.0026721334849 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SEND - 0.01093312992626 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SEND - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SEND - 0.01684898639033 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SEND - 0.00915622729975 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SEND - 0.00178575647565 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00502622487998;
MPRINT(EM_DIAGRAM):   if not missing( T_SERDAR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SERDAR - 0.00203488372093 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SERDAR - 0.09799788250531 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SERDAR - 0.00014372418097 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SERDAR - 0.00109822752977 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SERDAR - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0016942279763;
MPRINT(EM_DIAGRAM):   if not missing( T_SERVER ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SERVER - 0.0655957022236 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SERVER - 0.00022475277195 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SERVER - 0.06773839959154 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SERVER - 0.0254803884167 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SERVER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SERVER - 0.00128430579354 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SERVER - 0.00029529884242 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SERVER - 0.00648360030511 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00428936570397;
MPRINT(EM_DIAGRAM):   if not missing( T_SERVIC ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SERVIC - 0.01075581395348 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SERVIC - 0.03346362543534 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SERVIC - 0.01605691885071 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SERVIC - 0.0120507637017 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SERVIC - 0.00491320894978 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SERVIC - 0.13715456516403 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SERVIC - 0.02031879902371 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SERVIC - 0.02608437054715 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SERVIC - 0.03179487279291 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SERVIC - 0.00190994472766 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00946954762195;
MPRINT(EM_DIAGRAM):   if not missing( T_SHOW ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SHOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SHOW - 0.01559249353463 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SHOW - 0.03451899199458 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SHOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SHOW - 0.02231775695929 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SHOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SHOW - 0.02706039807458 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SHOW - 0.01423013396037 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SHOW - 0.02753259341392 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SHOW - 0.01137089687698 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00643307433223;
MPRINT(EM_DIAGRAM):   if not missing( T_SIDE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SIDE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SIDE - 0.008873813485 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SIDE - 0.00484338752679 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SIDE - 0.00763352577157 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SIDE - 0.01760549002032 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SIDE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SIDE - 0.00445387062566 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SIDE - 0.01334980597803 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SIDE - 0.0190398241489 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SIDE - 0.00610255119737 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00351439601268;
MPRINT(EM_DIAGRAM):   if not missing( T_SIGNAL ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SIGNAL - 0.00117140411886 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SIGNAL - 0.00537186674164 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SIGNAL - 0.00411223996129 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SIGNAL - 0.00036213360599 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SIGNAL - 0.0157983000079 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SIGNAL - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0027011007046;
MPRINT(EM_DIAGRAM):   if not missing( T_SOFTWAR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SOFTWAR - 0.03941645133505 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SOFTWAR - 0.00018269997342 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SOFTWAR - 0.01924752284073 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SOFTWAR - 0.04336545126768 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SOFTWAR - 0.00442465639404 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SOFTWAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SOFTWAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SOFTWAR - 0.02000468583839 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SOFTWAR - 0.01010840257604 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SOFTWAR - 0.00296809408686 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0058381351654;
MPRINT(EM_DIAGRAM):   if not missing( T_SOUND ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SOUND - 0.01526162790697 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SOUND - 0.00122398326427 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SOUND - 0.00327024538117 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SOUND - 0.00169327527818 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SOUND - 0.00521268301617 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SOUND - 0.02028985507246 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SOUND - 0.00695995087562 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SOUND - 0.01075261447286 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SOUND - 0.00949898154497 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SOUND - 0.0068055039812 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00220193396153;
MPRINT(EM_DIAGRAM):   if not missing( T_SOURC ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SOURC - 0.00313376216394 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SOURC - 0.01422327532635 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SOURC - 0.0097454836624 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SOURC - 0.03750439286419 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SOURC - 0.00642949399196 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SOURC - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SOURC - 0.0023348981247 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SOURC - 0.00932884116701 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SOURC - 0.00341414275631 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SOURC - 0.00263788117522 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00201442174899;
MPRINT(EM_DIAGRAM):   if not missing( T_STANDARD ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_STANDARD - 0.00180878552971 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_STANDARD - 0.0001312349451 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_STANDARD - 0.01443722910835 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_STANDARD - 0.00419868505822 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_STANDARD - 0.02006676047065 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_STANDARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_STANDARD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_STANDARD - 0.00971149586482 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_STANDARD - 0.0027105938363 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_STANDARD - 0.0099674664018 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00229514349459;
MPRINT(EM_DIAGRAM):   if not missing( T_START ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_START - 0.00278058645096 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_START - 0.01855091012501 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_START - 0.04050013100602 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_START - 0.01807194921798 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_START - 0.02512041084077 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_START - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_START - 0.02104702092906 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_START - 0.01986337838415 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_START - 0.01581708747087 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_START - 0.02884899662791 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00725482807573;
MPRINT(EM_DIAGRAM):   if not missing( T_STATE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_STATE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_STATE - 0.02175162783298 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_STATE - 0.01275219086997 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_STATE - 0.00987973734317 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_STATE - 0.05730977950765 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_STATE - 0.06728847435043 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_STATE - 0.01112209547392 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_STATE - 0.02643512954399 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_STATE - 0.01996540921938 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_STATE - 0.04845009351098 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00702601847959;
MPRINT(EM_DIAGRAM):   if not missing( T_STEVE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_STEVE - 0.01443219160768 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_STEVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_STEVE - 0.00237989857478 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_STEVE - 0.00844977315653 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_STEVE - 0.01579472095195 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_STEVE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_STEVE - 0.00791314412238 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_STEVE - 0.00927721519875 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_STEVE - 0.02592304784376 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_STEVE - 0.02214707208025 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00433669128972;
MPRINT(EM_DIAGRAM):   if not missing( T_STUDI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_STUDI - 0.00505561172901 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_STUDI - 0.03510197274901 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_STUDI - 0.00137213684871 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_STUDI - 0.00223397441688 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_STUDI - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_STUDI - 0.01440466019761 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_STUDI - 0.01071519538897 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_STUDI - 0.02808345784615 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_STUDI - 0.00164594464561 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00414494438826;
MPRINT(EM_DIAGRAM):   if not missing( T_SUBSCRIB ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SUBSCRIB - 0.0000718597298 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SUBSCRIB - 0.00003695151466 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SUBSCRIB - 0.0274950347567 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SUBSCRIB - 0.00006170227769 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SUBSCRIB - 0.00027028250183 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SUBSCRIB - 0.00022605040043 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SUBSCRIB - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00126038052881;
MPRINT(EM_DIAGRAM):   if not missing( T_SUGGEST ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SUGGEST - 0.00940128649183 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SUGGEST - 0.00190390649055 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SUGGEST - 0.04234408862026 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SUGGEST - 0.00426774483378 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SUGGEST - 0.00925244342914 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SUGGEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SUGGEST - 0.01864395603224 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SUGGEST - 0.02162972485947 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SUGGEST - 0.02478083640523 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SUGGEST - 0.02422332110974 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00745529695284;
MPRINT(EM_DIAGRAM):   if not missing( T_SUN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SUN - 0.04076923659439 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SUN - 0.00528550208177 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SUN - 0.01846600928978 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SUN - 0.01140876645257 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SUN - 0.00945114385802 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SUN - 0.01503759398496 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SUN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SUN - 0.01126543426632 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SUN - 0.01105787417108 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SUN - 0.00548374461417 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00428325704696;
MPRINT(EM_DIAGRAM):   if not missing( T_SUPPORT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SUPPORT - 0.03651538070142 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SUPPORT - 0.00805254840468 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SUPPORT - 0.0199792168494 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SUPPORT - 0.02679568033323 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SUPPORT - 0.0107592503188 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SUPPORT - 0.00568990042674 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SUPPORT - 0.00110420979986 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SUPPORT - 0.00769713354642 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SUPPORT - 0.00384975870271 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SUPPORT - 0.00570830187375 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0023391841892;
MPRINT(EM_DIAGRAM):   if not missing( T_SWITCH ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SWITCH - 0.00568088684085 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SWITCH - 0.00017226934206 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SWITCH - 0.00316574902147 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SWITCH - 0.00457579258118 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SWITCH - 0.00117226887488 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SWITCH - 0.02436404600351 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SWITCH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SWITCH - 0.01263264087062 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SWITCH - 0.00076706156287 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SWITCH - 0.0033279656468 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00319721638896;
MPRINT(EM_DIAGRAM):   if not missing( T_SYSTEM ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_SYSTEM - 0.04918429685098 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_SYSTEM - 0.02953456090205 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_SYSTEM - 0.05561449938658 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_SYSTEM - 0.04438409696643 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_SYSTEM - 0.01096216003132 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_SYSTEM - 0.01223990208078 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_SYSTEM - 0.00723505769578 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_SYSTEM - 0.04384703041853 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_SYSTEM - 0.03750183270406 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_SYSTEM - 0.04244117792552 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.01019489070689;
MPRINT(EM_DIAGRAM):   if not missing( T_TALK ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_TALK - 0.0211606955793 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_TALK - 0.0094030248577 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_TALK - 0.00153721153751 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_TALK - 0.00104821802935 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_TALK - 0.01966126937024 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_TALK - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_TALK - 0.00718170814924 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_TALK - 0.00621209938455 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_TALK - 0.00731168472989 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_TALK - 0.01638311279143 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00169307087435;
MPRINT(EM_DIAGRAM):   if not missing( T_TECHNOLOG ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_TECHNOLOG - 0.02856324876673 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_TECHNOLOG - 0.00568797399783 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_TECHNOLOG - 0.01078317957438 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_TECHNOLOG - 0.01702469509172 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_TECHNOLOG - 0.00465246661463 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_TECHNOLOG - 0.01528013582342 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_TECHNOLOG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_TECHNOLOG - 0.01554414430536 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_TECHNOLOG - 0.00265635572921 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_TECHNOLOG - 0.00560695245344 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00307390350034;
MPRINT(EM_DIAGRAM):   if not missing( T_TERMIN ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_TERMIN - 0.03749456075037 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_TERMIN - 0.00037965076945 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_TERMIN - 0.02126476324989 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_TERMIN - 0.02871555683107 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_TERMIN - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_TERMIN - 0.00311519041516 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_TERMIN - 0.00162817338517 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_TERMIN - 0.00257129499766 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00297309134992;
MPRINT(EM_DIAGRAM):   if not missing( T_TEST ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_TEST - 0.01096244380729 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_TEST - 0.00036065449299 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_TEST - 0.01351954654829 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_TEST - 0.00434509346828 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_TEST - 0.00086342448974 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_TEST - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_TEST - 0.0169060427342 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_TEST - 0.00861312913864 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_TEST - 0.01893107731049 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_TEST - 0.00088205751521 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00299203737115;
MPRINT(EM_DIAGRAM):   if not missing( T_THAT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_THAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_THAT - 0.01299432178382 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_THAT - 0.0139833373294 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_THAT - 0.00977031644705 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_THAT - 0.0163744704633 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_THAT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_THAT - 0.02191107243008 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_THAT - 0.02951846005289 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_THAT - 0.02963536751861 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_THAT - 0.01315710002372 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00801117666596;
MPRINT(EM_DIAGRAM):   if not missing( T_THU ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_THU - 0.04264625985556 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_THU - 0.0078813805617 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_THU - 0.01831517714583 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_THU - 0.01608208342514 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_THU - 0.02207472820464 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_THU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_THU - 0.00617283950617 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_THU - 0.02515636575648 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_THU - 0.0140693591331 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_THU - 0.03056718405926 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00595455629046;
MPRINT(EM_DIAGRAM):   if not missing( T_TIME ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_TIME - 0.00676704794604 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_TIME - 0.03251272632373 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_TIME - 0.03559421127666 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_TIME - 0.01639546239001 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_TIME - 0.0232683670966 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_TIME - 0.02089114430886 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_TIME - 0.02019960576133 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_TIME - 0.03096747648213 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_TIME - 0.03946394926297 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_TIME - 0.02754180078072 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00594474521637;
MPRINT(EM_DIAGRAM):   if not missing( T_TREATMENT ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_TREATMENT - 0.00133876932185 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_TREATMENT - 0.00003207153668 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_TREATMENT - 0.00268781116731 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_TREATMENT - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_TREATMENT - 0.04170191078722 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_TREATMENT - 0.00245611362224 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_TREATMENT - 0.03780208667455 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_TREATMENT - 0.00318230490081 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00309383652357;
MPRINT(EM_DIAGRAM):   if not missing( T_TRUE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_TRUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_TRUE - 0.00302810449788 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_TRUE - 0.0053152261496 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_TRUE - 0.00212933698902 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_TRUE - 0.01624434901362 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_TRUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_TRUE - 0.00731707317073 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_TRUE - 0.01115045863101 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_TRUE - 0.01197624528107 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_TRUE - 0.06400710363085 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00342821558826;
MPRINT(EM_DIAGRAM):   if not missing( T_TUE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_TUE - 0.02360537559442 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_TUE - 0.01104201160971 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_TUE - 0.01953250982727 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_TUE - 0.03126232180367 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_TUE - 0.02306912842588 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_TUE - 0.07891270783828 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_TUE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_TUE - 0.02984248352658 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_TUE - 0.03548832604476 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_TUE - 0.03051711839922 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00859116671322;
MPRINT(EM_DIAGRAM):   if not missing( T_TURKISH ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_TURKISH - 0.15255008093939 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_TURKISH - 0.00162122569505 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_TURKISH - 0.00452981737277 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_TURKISH - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_TURKISH - 0.00141392718275 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00313015511446;
MPRINT(EM_DIAGRAM):   if not missing( T_TYPE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_TYPE - 0.00269632625547 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_TYPE - 0.00046909148811 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_TYPE - 0.01472794903277 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_TYPE - 0.0043081841084 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_TYPE - 0.00151125849573 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_TYPE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_TYPE - 0.01745900482717 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_TYPE - 0.01102120185364 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_TYPE - 0.00817446031325 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_TYPE - 0.00277906733554 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00182027955585;
MPRINT(EM_DIAGRAM):   if not missing( T_UNIV ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_UNIV - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_UNIV - 0.0074942802354 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_UNIV - 0.01254352089851 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_UNIV - 0.00448742632031 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_UNIV - 0.00296025267755 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_UNIV - 0.01199200532978 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_UNIV - 0.30077301029662 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_UNIV - 0.0076010821839 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_UNIV - 0.01427534876186 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_UNIV - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00592342750402;
MPRINT(EM_DIAGRAM):   if not missing( T_UNIVERS ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_UNIVERS - 0.03597871187429 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_UNIVERS - 0.00940602441339 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_UNIVERS - 0.03828847572035 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_UNIVERS - 0.03921655165398 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_UNIVERS - 0.04944758939918 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_UNIVERS - 0.05925722167914 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_UNIVERS - 0.00079051383399 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_UNIVERS - 0.04975306267281 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_UNIVERS - 0.04855987031531 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_UNIVERS - 0.04862166700953 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00719594216449;
MPRINT(EM_DIAGRAM):   if not missing( T_UNIX ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_UNIX - 0.26209919496211 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_UNIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_UNIX - 0.01567967917367 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_UNIX - 0.00566257641729 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_UNIX - 0.00078805723587 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_UNIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_UNIX - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_UNIX - 0.00479741100238 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_UNIX - 0.00196588559875 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_UNIX - 0.00686627289524 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00265671058408;
MPRINT(EM_DIAGRAM):   if not missing( T_USENET ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_USENET - 0.01250377529447 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_USENET - 0.01837386784324 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_USENET - 0.02520181260329 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_USENET - 0.0178221298707 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_USENET - 0.01005853212894 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_USENET - 0.03251381684777 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_USENET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_USENET - 0.03477217538702 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_USENET - 0.02669520689898 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_USENET - 0.04780245178236 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00732864598104;
MPRINT(EM_DIAGRAM):   if not missing( T_USER ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_USER - 0.02451645819276 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_USER - 0.00009086778736 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_USER - 0.02450493148104 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_USER - 0.03324905759106 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_USER - 0.00072650952534 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_USER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_USER - 0.00124223602484 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_USER - 0.00993745256136 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_USER - 0.0030472221799 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_USER - 0.00673523694452 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00268311839465;
MPRINT(EM_DIAGRAM):   if not missing( T_UTEXA ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_UTEXA - 0.06344735077129 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_UTEXA - 0.00034860958408 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_UTEXA - 0.00029200359389 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_UTEXA - 0.00178851949607 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_UTEXA - 0.00017402945113 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_UTEXA - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00277973983993;
MPRINT(EM_DIAGRAM):   if not missing( T_UUCP ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_UUCP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_UUCP - 0.1237702747252 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_UUCP - 0.00904374231794 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_UUCP - 0.02353870302461 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_UUCP - 0.01315520618182 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_UUCP - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_UUCP - 0.01609407958422 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_UUCP - 0.00923283882963 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_UUCP - 0.00482427334369 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_UUCP - 0.03920779329972 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00562613382866;
MPRINT(EM_DIAGRAM):   if not missing( T_VERSION ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_VERSION - 0.01790085679314 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_VERSION - 0.00245198186419 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_VERSION - 0.06365758989513 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_VERSION - 0.06439216550723 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_VERSION - 0.00165760558168 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_VERSION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_VERSION - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_VERSION - 0.01609647910236 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_VERSION - 0.01162855980094 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_VERSION - 0.00495804729214 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00734158965988;
MPRINT(EM_DIAGRAM):   if not missing( T_VIRGINIA ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_VIRGINIA - 0.00974633641287 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_VIRGINIA - 0.0005688967299 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_VIRGINIA - 0.00230607966457 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_VIRGINIA - 0.01221250156213 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_VIRGINIA - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_VIRGINIA - 0.00501685111091 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_VIRGINIA - 0.00411988721608 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_VIRGINIA - 0.00270138404048 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00164735534843;
MPRINT(EM_DIAGRAM):   if not missing( T_VOLTAG ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_VOLTAG - 0.00539112050739 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_VOLTAG - 0.00029329729418 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_VOLTAG - 0.01332114973103 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_VOLTAG - 0.00073243164227 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_VOLTAG - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00210511344856;
MPRINT(EM_DIAGRAM):   if not missing( T_WATER ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_WATER - 0.0000311014351 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_WATER - 0.01169306771477 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_WATER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_WATER - 0.00583075661008 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_WATER - 0.00649777951745 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_WATER - 0.00822203860606 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_WATER - 0.0028019428566 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00231973760625;
MPRINT(EM_DIAGRAM):   if not missing( T_WED ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_WED - 0.05911794780456 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_WED - 0.00324772513228 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_WED - 0.01375545306849 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_WED - 0.02255984426347 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_WED - 0.00974724753602 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_WED - 0.02859435173299 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_WED - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_WED - 0.01225395338261 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_WED - 0.01160604131672 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_WED - 0.00456200375067 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00373891787652;
MPRINT(EM_DIAGRAM):   if not missing( T_WIDGET ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_WIDGET - 0.00792811839323 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_WIDGET - 0.02826297656828 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_WIDGET - 0.02784407043307 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_WIDGET - 0.00496544147294 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_WIDGET - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00305772433842;
MPRINT(EM_DIAGRAM):   if not missing( T_WINDOW ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_WINDOW - 0.04611507119202 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_WINDOW - 0.00048974969654 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_WINDOW - 0.09498410685156 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_WINDOW - 0.31765349405666 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_WINDOW - 0.00003331860554 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_WINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_WINDOW - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_WINDOW - 0.00929680350262 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_WINDOW - 0.00047916581101 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_WINDOW - 0.01518510754351 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00894373389346;
MPRINT(EM_DIAGRAM):   if not missing( T_WIRE ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_WIRE - 0.0007917038471 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_WIRE - 0.00151015308249 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_WIRE - 0.01449455556658 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_WIRE - 0.00021598019986 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_WIRE - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00310011279429;
MPRINT(EM_DIAGRAM):   if not missing( T_WONDER ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_WONDER - 0.06492283158605 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_WONDER - 0.00008330741547 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_WONDER - 0.00664168810796 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_WONDER - 0.01871690774586 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_WONDER - 0.01397384358659 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_WONDER - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_WONDER - 0.02531686763372 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_WONDER - 0.02464286015277 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_WONDER - 0.010603081083 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_WONDER - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00827537367685;
MPRINT(EM_DIAGRAM):   if not missing( T_WORK ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_WORK - 0.02926416015671 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_WORK - 0.03107013532846 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_WORK - 0.06367921712733 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_WORK - 0.02923800434307 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_WORK - 0.01638577289306 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_WORK - 0.06474322924368 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_WORK - 0.04062712106072 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_WORK - 0.04207760384009 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_WORK - 0.02194681489522 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_WORK - 0.0257357397675 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00771451112306;
MPRINT(EM_DIAGRAM):   if not missing( T_WORLD ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_WORLD - 0.07248881947808 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_WORLD - 0.07505639587616 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_WORLD - 0.04213183670913 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_WORLD - 0.02779642186755 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_WORLD - 0.0254699994081 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_WORLD - 0.03698435277382 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_WORLD - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_WORLD - 0.02727945434886 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_WORLD - 0.0427834242815 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_WORLD - 0.03308224257928 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00889550468158;
MPRINT(EM_DIAGRAM):   if not missing( T_XLIB ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_XLIB - 0.01813651727227 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_XLIB - 0.02139875053307 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_XLIB - 0.00138179140765 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_XLIB - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00148056818937;
MPRINT(EM_DIAGRAM):   if not missing( T_XTERM ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_XTERM - 0.02550224643247 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_XTERM - 0.02263903029657 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_XTERM - 0.01826061188742 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_XTERM - 0.00446737090812 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_XTERM - 0 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00316724119173;
MPRINT(EM_DIAGRAM):   if not missing( T_YEAR ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_YEAR - 0.01786316144253 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_YEAR - 0.04139604066723 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_YEAR - 0.0057363485066 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_YEAR - 0.00041743195859 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_YEAR - 0.06716298098646 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_YEAR - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_YEAR - 0.05158736260811 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_YEAR - 0.02975343005602 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_YEAR - 0.05375911882752 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_YEAR - 0.02931114141586 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.00946716453807;
MPRINT(EM_DIAGRAM):   if not missing( T_YOU ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_YOU - 0.01424383001751 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_YOU - 0.02745882616158 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [3] + ( T_YOU - 0.01089941716211 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [4] + ( T_YOU - 0.00558569343282 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [5] + ( T_YOU - 0.01476591660526 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [6] + ( T_YOU - 0 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [7] + ( T_YOU - 0.03432993667146 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [8] + ( T_YOU - 0.02246416535584 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [9] + ( T_YOU - 0.01436368077135 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [10] + ( T_YOU - 0.00676500446911 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.0052221653489;
MPRINT(EM_DIAGRAM):   _vqnvar = 1.07541898032061 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 2.9464896926727E-11 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUS2vads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 10;
MPRINT(EM_DIAGRAM):   if CLUS2vads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUS2vads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (1.07541898032061 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUS2vlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 5 then _SEGMENT_LABEL_="Cluster5";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 6 then _SEGMENT_LABEL_="Cluster6";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 7 then _SEGMENT_LABEL_="Cluster7";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 8 then _SEGMENT_LABEL_="Cluster8";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 9 then _SEGMENT_LABEL_="Cluster9";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 10 then _SEGMENT_LABEL_="Cluster10";
26760      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS3.CLUS2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.IDS2_DATA.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
26761      quit;
26762      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
26763      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
26764      * Clus2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus2: Computing metadata for TRAIN data;
26765      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS3.Clus2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS3.Clus2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS3.Clus2_TRAIN out=WORK.M38BFPEP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38BFPEP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M38BFPEP(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38BFPEP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M38BFPEP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M220EM9Z NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M220EM9Z;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M220EM9Z;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_JJPJP(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M220EM9Z;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M220EM9Z;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M220EM9Z;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M220EM9Z;
MPRINT(EMADVISECOLUMNS):   set WORK.M220EM9Z;
MPRINT(EMADVISECOLUMNS):   label NAME = "Nombre de la variable" TYPE = "Tipo" ROLE = "Rol" LEVEL= "Nivel de medida" ORDER= "Orden" CREATOR= "Creador" FORMATTYPE= "Tipo de formato" FAMILY= "Familia" DISTRIBUTION= "Distribución" PRICE= "Precio" LOWERLIMIT=
"Límite inferior" UPPERLIMIT= "Límite superior" REPORT= "Informe" COMMENT= "Comentario" INDEX= "Índice" INDEXTYPE= "TipoÍndice" LABEL= "Etiqueta" LENGTH= "Longitud";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS3.Ids2_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Ids2_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15H43" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log del informe";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log del informe
Fecha:                13/12/20
Hora:                15H43
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1DV1Q2S "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1DV1Q2S new;
MPRINT(EM_DIAGRAM):   run;
27175      data WORK.M2VMTT4R;
MPRINT(EM_DIAGRAM):    data WORK.M2VMTT4R;
27176      set WORK.M2VMTT4R;
MPRINT(EM_DIAGRAM):   set WORK.M2VMTT4R;
27177      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
27178      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.M2VMTT4R.
NOTE: The data set WORK.M2VMTT4R has 241 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27179      data WORK.M2VMTT4R;
MPRINT(EM_DIAGRAM):    data WORK.M2VMTT4R;
27180      set WORK.M2VMTT4R end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M2VMTT4R end=_eof_ nobs=_nobs_;
27181      output;
MPRINT(EM_DIAGRAM):   output;
27182      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
27183      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
27184      ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
27185      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
27186      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
27187      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
27188      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
27189      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
27190      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
27191      output;
MPRINT(EM_DIAGRAM):   output;
27192      end;
MPRINT(EM_DIAGRAM):   end;
27193      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.M2VMTT4R.
NOTE: The data set WORK.M2VMTT4R has 242 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27194      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27195      * Clus2: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Clus2: Create decision matrix;
27196      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27197      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27198      * Clus2: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Tree Variables Macro ;
27199      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27200      %macro EM_TREEVARS;
27201          ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC
27202         ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD
27203         BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
27204         COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT
27205         CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI
27206         DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL
27207         ENGIN ERROR EVENT EXPERI FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND
27208         FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND
27209         GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT
27210         INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD KILL KIND LEVEL
27211         LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON
27212         MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN
27213         OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
27214         POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR
27215         RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN
27216         SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL
27217         SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN
27218         SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE
27219         TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA
27220         VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
27221      %mend EM_TREEVARS;
27222      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27223      * Clus2: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Tree Targets Macro ;
27224      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27225      %macro EM_TREETARGETS;
27226          _SEGMENT_
27227      %mend EM_TREETARGETS;
27228      data EMWS3.EM_Clus2 / view=EMWS3.EM_Clus2;
MPRINT(EM_DIAGRAM):   data EMWS3.EM_Clus2 / view=EMWS3.EM_Clus2;
27229      set
27229    ! EMWS3.Clus2_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS3.Clus2_TRAIN(keep
MPRINT(EM_DIAGRAM):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
27230      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS3.EM_CLUS2.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus2: Inputs intervalo Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27231      *------------------------------------------------------------* ;
27232      * Clus2: Inputs intervalo Macro ;
27233      *------------------------------------------------------------* ;
27234      %macro INTINPUTS;
27235          ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC
27236         ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD
27237         BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
27238         COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT
27239         CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI
27240         DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL
27241         ENGIN ERROR EVENT EXPERI FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND
27242         FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND
27243         GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT
27244         INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD KILL KIND LEVEL
27245         LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON
27246         MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN
27247         OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
27248         POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR
27249         RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN
27250         SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL
27251         SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN
27252         SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE
27253         TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA
27254         VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
27255      %mend INTINPUTS;
27256      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27257      * Clus2: Inputs binarios y nominales Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Inputs binarios y nominales Macro ;
27258      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27259      %macro NOMINPUTS;
27260
27261      %mend NOMINPUTS;
27262      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27263      * Clus2: Inputs ordinales Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Inputs ordinales Macro ;
27264      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27265      %macro ORDINPUTS;
27266
27267      %mend ORDINPUTS;
27268      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27269      * Clus2: ejecutar procedimiento ARBOR;
MPRINT(EM_DIAGRAM):   * Clus2: ejecutar procedimiento ARBOR;
27270      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
27271      proc arbor data=EMWS3.EM_Clus2
27272      MAXSURRS=5
27273      ;
MPRINT(EM_DIAGRAM):    proc arbor data=EMWS3.EM_Clus2 MAXSURRS=5 ;
27274      ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
27275      input %INTINPUTS
MPRINT(INTINPUTS):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER
WORK WORLD XLIB XTERM YEAR YOU
27276      / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
27277      target _SEGMENT_ / level=NOMINAL
27278      Criterion=PROBCHISQ
27279      ;
MPRINT(EM_DIAGRAM):   target _SEGMENT_ / level=NOMINAL Criterion=PROBCHISQ ;
27280      ;
MPRINT(EM_DIAGRAM):   ;
27281      Performance DISK
27282      ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
27283      MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: 1479906 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 334440448 bytes.
NOTE: Passed training data 18 times.
NOTE: Training used 17800664 bytes of work memory.
NOTE: The subtree sequence contains 14 subtrees. The largest has 27 nodes and 14 leaves.
NOTE: Using subtree with 21 nodes and 11 leaves.
NOTE: Created macro variable NLEAVES equal to 11.
27284      save
27285      MODEL=EMWS3.Clus2_PLOTDS
27286      SEQUENCE=EMWS3.Clus2_OUTSEQ
27287      IMPORTANCE=EMWS3.Clus2_OUTIMPORT
27288      NODESTAT=EMWS3.Clus2_OUTNODES
27289      SUMMARY=WORK.OUTSUMMARY_TREE_32X9GL2
27290      STATSBYNODE=WORK.OUTSTATS_TREE_32X9GL2
27291      Pathlistnonmissing = WORK.OUTPATH_TREE_32X9GL2
27292      Rules = WORK.OUTRULES_TREE_32X9GL2
27293      ;
MPRINT(EM_DIAGRAM):   save MODEL=EMWS3.Clus2_PLOTDS SEQUENCE=EMWS3.Clus2_OUTSEQ IMPORTANCE=EMWS3.Clus2_OUTIMPORT NODESTAT=EMWS3.Clus2_OUTNODES SUMMARY=WORK.OUTSUMMARY_TREE_32X9GL2 STATSBYNODE=WORK.OUTSTATS_TREE_32X9GL2 Pathlistnonmissing =
WORK.OUTPATH_TREE_32X9GL2 Rules = WORK.OUTRULES_TREE_32X9GL2 ;
NOTE: The data set EMWS3.CLUS2_OUTIMPORT has 241 observations and 5 variables.
NOTE: The data set EMWS3.CLUS2_PLOTDS has 3435 observations and 4 variables.
NOTE: The data set EMWS3.CLUS2_OUTNODES has 21 observations and 36 variables.
NOTE: The data set WORK.OUTPATH_TREE_32X9GL2 has 118 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_32X9GL2 has 410 observations and 6 variables.
NOTE: The data set EMWS3.CLUS2_OUTSEQ has 14 observations and 11 variables.
NOTE: The data set WORK.OUTSTATS_TREE_32X9GL2 has 252 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_32X9GL2 has 44 observations and 13 variables.
27294      run;
MPRINT(EM_DIAGRAM):   run;
 
27295      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista EMWS3.EM_CLUS2.VIEW ha utilizado (Tiempo de proceso total):
      real time           1.15 seconds
      cpu time            1.14 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set EMWS3.EM_CLUS2.
NOTE: The data set WORK._NAMEDAT has 10 observations and 5 variables.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           1.16 seconds
      cpu time            1.15 seconds
 
 
27296      data EMWS3.Clus2_OUTIMPORT;
MPRINT(EM_DIAGRAM):    data EMWS3.Clus2_OUTIMPORT;
27297      set EMWS3.Clus2_OUTIMPORT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus2_OUTIMPORT;
27298      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
27299         "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
27300      ;
MPRINT(EM_DIAGRAM):   label NAME = "Nombre de la variable" LABEL = "Etiqueta" NRULES = "Número de reglas de división" IMPORTANCE = "Importancia" NSURROGATES = "Número de reglas sustitutas" ;
27301      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set EMWS3.CLUS2_OUTIMPORT.
NOTE: The data set EMWS3.CLUS2_OUTIMPORT has 241 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27302      filename x "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
27303      data temp;
MPRINT(EM_DIAGRAM):    data temp;
27304      length varname $11;
MPRINT(EM_DIAGRAM):   length varname $11;
27305      retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
27306      set WORK.OUTPATH_TREE_32X9GL2;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_32X9GL2;
27307      if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
27308      else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
27309      output;
MPRINT(EM_DIAGRAM):   output;
27310      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 118 observations read from the data set WORK.OUTPATH_TREE_32X9GL2.
NOTE: The data set WORK.TEMP has 118 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27311      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
27312      by node;
MPRINT(EM_DIAGRAM):   by node;
27313      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 118 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 118 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27314      proc sort data=EMWS3.Clus2_OUTNODES out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus2_OUTNODES out=outnodes;
27315      by node;
MPRINT(EM_DIAGRAM):   by node;
27316      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS2_OUTNODES.
NOTE: The data set WORK.OUTNODES has 21 observations and 36 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27317      data temp;
MPRINT(EM_DIAGRAM):   data temp;
27318      merge temp(in=_a) outnodes(keep= node
27319      NPRIORS
27320      P__SEGMENT_8
27321      P__SEGMENT_3
27322      P__SEGMENT_9
27323      P__SEGMENT_5
27324      P__SEGMENT_4
27325      P__SEGMENT_10
27326      P__SEGMENT_2
27327      P__SEGMENT_7
27328      P__SEGMENT_6
27329      P__SEGMENT_1
27330      );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P__SEGMENT_8 P__SEGMENT_3 P__SEGMENT_9 P__SEGMENT_5 P__SEGMENT_4 P__SEGMENT_10 P__SEGMENT_2 P__SEGMENT_7 P__SEGMENT_6 P__SEGMENT_1 );
27331      by node;
MPRINT(EM_DIAGRAM):   by node;
27332      if _a;
MPRINT(EM_DIAGRAM):   if _a;
27333      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 118 observations read from the data set WORK.TEMP.
NOTE: There were 21 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 118 observations and 19 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27334      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
27335      by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
27336      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 118 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 118 observations and 19 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27337      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
27338      file x;
MPRINT(EM_DIAGRAM):   file x;
27339      set temp;
MPRINT(EM_DIAGRAM):   set temp;
27340      by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
27341      retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
27342      length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
27343      if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
27344      origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
27345      oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
27346      end;
MPRINT(EM_DIAGRAM):   end;
27347      if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
27348      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
27349      put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
27350      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
27351      end;
MPRINT(EM_DIAGRAM):   end;
27352      if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
27353      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
27354      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
27355      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
27356      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
27357      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
27358      end;
MPRINT(EM_DIAGRAM):   end;
27359      else do;
MPRINT(EM_DIAGRAM):   else do;
27360      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
27361      end;
MPRINT(EM_DIAGRAM):   end;
27362      end;
MPRINT(EM_DIAGRAM):   end;
27363      end;
MPRINT(EM_DIAGRAM):   end;
27364      else do;
MPRINT(EM_DIAGRAM):   else do;
27365      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
27366      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
27367      end;
MPRINT(EM_DIAGRAM):   end;
27368      else do;
MPRINT(EM_DIAGRAM):   else do;
27369      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
27370      end;
MPRINT(EM_DIAGRAM):   end;
27371      end;
MPRINT(EM_DIAGRAM):   end;
27372      end;
MPRINT(EM_DIAGRAM):   end;
27373      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
27374      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
27375      string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
27376      end;
MPRINT(EM_DIAGRAM):   end;
27377      else do;
MPRINT(EM_DIAGRAM):   else do;
27378      string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
27379      end;
MPRINT(EM_DIAGRAM):   end;
27380      end;
MPRINT(EM_DIAGRAM):   end;
27381      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
27382      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
27383      string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
27384      end;
MPRINT(EM_DIAGRAM):   end;
27385      else do;
MPRINT(EM_DIAGRAM):   else do;
27386      string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
27387      end;
MPRINT(EM_DIAGRAM):   end;
27388      end;
MPRINT(EM_DIAGRAM):   end;
27389      else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
27390      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
27391      string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
27392      end;
MPRINT(EM_DIAGRAM):   end;
27393      else do;
MPRINT(EM_DIAGRAM):   else do;
27394      string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
27395      end;
MPRINT(EM_DIAGRAM):   end;
27396      end;
MPRINT(EM_DIAGRAM):   end;
27397      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
27398      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
27399      end;
MPRINT(EM_DIAGRAM):   end;
27400      else do;
MPRINT(EM_DIAGRAM):   else do;
27401      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
27402      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
27403      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
27404      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
27405      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
27406      end;
MPRINT(EM_DIAGRAM):   end;
27407      end;
MPRINT(EM_DIAGRAM):   end;
27408      else do;
MPRINT(EM_DIAGRAM):   else do;
27409      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
27410      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
27411      end;
MPRINT(EM_DIAGRAM):   end;
27412      end;
MPRINT(EM_DIAGRAM):   end;
27413      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
27414      string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
27415      end;
MPRINT(EM_DIAGRAM):   end;
27416      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
27417      end;
MPRINT(EM_DIAGRAM):   end;
27418      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
27419      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
27420      end;
MPRINT(EM_DIAGRAM):   end;
27421      if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
27422      if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
27423      if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
27424      string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
27425      end;
MPRINT(EM_DIAGRAM):   end;
27426      end;
MPRINT(EM_DIAGRAM):   end;
27427      put string;
MPRINT(EM_DIAGRAM):   put string;
27428      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
27429      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
27430      end;
MPRINT(EM_DIAGRAM):   end;
27431      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
27432      put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
27433      put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
27434      put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
27435      put " Predicted: _SEGMENT_=8  = " P__SEGMENT_8;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=8  = " P__SEGMENT_8;
27436      put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
27437      put " Predicted: _SEGMENT_=9  = " P__SEGMENT_9;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=9  = " P__SEGMENT_9;
27438      put " Predicted: _SEGMENT_=5  = " P__SEGMENT_5;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=5  = " P__SEGMENT_5;
27439      put " Predicted: _SEGMENT_=4  = " P__SEGMENT_4;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=4  = " P__SEGMENT_4;
27440      put " Predicted: _SEGMENT_=10  = " P__SEGMENT_10;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=10  = " P__SEGMENT_10;
27441      put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
27442      put " Predicted: _SEGMENT_=7  = " P__SEGMENT_7;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=7  = " P__SEGMENT_7;
27443      put " Predicted: _SEGMENT_=6  = " P__SEGMENT_6;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=6  = " P__SEGMENT_6;
27444      put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
27445      put " ";
MPRINT(EM_DIAGRAM):   put " ";
27446      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
27447      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
27448      end;
MPRINT(EM_DIAGRAM):   end;
27449      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      27357:67    27360:66    27404:108   27405:72
NOTE: The file X is:
      Nombre archivo=C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,
      Tamaño de archivo (bytes)=0,
      Última modificación=13 de diciembre de 2020 15H43,
      Create Time=13 de diciembre de 2020 15H39
 
NOTE: 231 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 62.
NOTE: There were 118 observations read from the data set WORK.TEMP.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27450      filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
27451      /* belowtext */
27452      data templabel;
MPRINT(EM_DIAGRAM):    data templabel;
27453      set WORK.OUTRULES_TREE_32X9GL2;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_32X9GL2;
27454      if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
27455      rename character_value = belowtext;
MPRINT(EM_DIAGRAM):   rename character_value = belowtext;
27456      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
27457      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 410 observations read from the data set WORK.OUTRULES_TREE_32X9GL2.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27458      data tempvar;
MPRINT(EM_DIAGRAM):   data tempvar;
27459      set WORK.OUTRULES_TREE_32X9GL2;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_32X9GL2;
27460      if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
27461      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
27462      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 410 observations read from the data set WORK.OUTRULES_TREE_32X9GL2.
NOTE: The data set WORK.TEMPVAR has 10 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27463      proc sort data=templabel;
MPRINT(EM_DIAGRAM):   proc sort data=templabel;
27464      by node;
MPRINT(EM_DIAGRAM):   by node;
27465      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27466      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
27467      by node;
MPRINT(EM_DIAGRAM):   by node;
27468      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 10 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27469      data tempbelow;
MPRINT(EM_DIAGRAM):   data tempbelow;
27470      merge templabel tempvar;
MPRINT(EM_DIAGRAM):   merge templabel tempvar;
27471      by node;
MPRINT(EM_DIAGRAM):   by node;
27472      if missing(belowtext) then belowtext= character_value;
MPRINT(EM_DIAGRAM):   if missing(belowtext) then belowtext= character_value;
27473      keep node belowtext;
MPRINT(EM_DIAGRAM):   keep node belowtext;
27474      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TEMPLABEL.
NOTE: There were 10 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPBELOW has 10 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27475      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
27476      by node;
MPRINT(EM_DIAGRAM):   by node;
27477      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.TEMPBELOW has 10 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27478      /* abovetext */
27479      data tempoutrules;
MPRINT(EM_DIAGRAM):   data tempoutrules;
27480      set WORK.OUTRULES_TREE_32X9GL2;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_32X9GL2;
27481      if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
MPRINT(EM_DIAGRAM):   if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
27482      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 410 observations read from the data set WORK.OUTRULES_TREE_32X9GL2.
NOTE: The data set WORK.TEMPOUTRULES has 10 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27483      proc sort data=tempoutrules;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutrules;
27484      by node numeric_value;
MPRINT(EM_DIAGRAM):   by node numeric_value;
27485      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPOUTRULES has 10 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27486      data tempabove;
MPRINT(EM_DIAGRAM):   data tempabove;
27487      set tempoutrules(rename=(node=parent));
MPRINT(EM_DIAGRAM):   set tempoutrules(rename=(node=parent));
27488      by parent numeric_value;
MPRINT(EM_DIAGRAM):   by parent numeric_value;
27489      retain abovetext tempstring flag branch origval origchar;
MPRINT(EM_DIAGRAM):   retain abovetext tempstring flag branch origval origchar;
27490      *length abovetext tempstring origchar $45;
MPRINT(EM_DIAGRAM):   *length abovetext tempstring origchar $45;
27491      length abovetext $256;
MPRINT(EM_DIAGRAM):   length abovetext $256;
27492      length tempstring origchar $64;
MPRINT(EM_DIAGRAM):   length tempstring origchar $64;
27493      if STAT in ("INTERVAL", "ORDINAL") then do;
MPRINT(EM_DIAGRAM):   if STAT in ("INTERVAL", "ORDINAL") then do;
27494      if first.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent then do;
27495      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
27496      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
27497      abovetext = "< "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(NUMERIC_VALUE);
27498      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
27499      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
27500      output;
MPRINT(EM_DIAGRAM):   output;
27501      end;
MPRINT(EM_DIAGRAM):   end;
27502      else do;
MPRINT(EM_DIAGRAM):   else do;
27503      abovetext = "< "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(CHARACTER_VALUE);
27504      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
27505      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
27506      output;
MPRINT(EM_DIAGRAM):   output;
27507      end;
MPRINT(EM_DIAGRAM):   end;
27508      if first.parent AND last.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent AND last.parent then do;
27509      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
27510      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
27511      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
27512      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
27513      output;
MPRINT(EM_DIAGRAM):   output;
27514      end;
MPRINT(EM_DIAGRAM):   end;
27515      else do;
MPRINT(EM_DIAGRAM):   else do;
27516      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
27517      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
27518      output;
MPRINT(EM_DIAGRAM):   output;
27519      end;
MPRINT(EM_DIAGRAM):   end;
27520      end;
MPRINT(EM_DIAGRAM):   end;
27521      end;
MPRINT(EM_DIAGRAM):   end;
27522      else if last.parent then do;
MPRINT(EM_DIAGRAM):   else if last.parent then do;
27523      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
27524      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
27525      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
27526      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
27527      end;
MPRINT(EM_DIAGRAM):   end;
27528      else do;
MPRINT(EM_DIAGRAM):   else do;
27529      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
27530      end;
MPRINT(EM_DIAGRAM):   end;
27531      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
27532      output;
MPRINT(EM_DIAGRAM):   output;
27533      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
27534      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
27535      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
27536      end;
MPRINT(EM_DIAGRAM):   end;
27537      else do;
MPRINT(EM_DIAGRAM):   else do;
27538      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
27539      end;
MPRINT(EM_DIAGRAM):   end;
27540      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
27541      output;
MPRINT(EM_DIAGRAM):   output;
27542      end;
MPRINT(EM_DIAGRAM):   end;
27543      else do;
MPRINT(EM_DIAGRAM):   else do;
27544      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
27545      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
27546      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
27547      end;
MPRINT(EM_DIAGRAM):   end;
27548      else do;
MPRINT(EM_DIAGRAM):   else do;
27549      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
27550      end;
MPRINT(EM_DIAGRAM):   end;
27551      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
27552      output;
MPRINT(EM_DIAGRAM):   output;
27553      end;
MPRINT(EM_DIAGRAM):   end;
27554      end;
MPRINT(EM_DIAGRAM):   end;
27555      else do;
MPRINT(EM_DIAGRAM):   else do;
27556      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
27557      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
27558      numeric_value = round(numeric_value,0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value,0.0001);
27559      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
27560      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
27561      end;
MPRINT(EM_DIAGRAM):   end;
27562      else do;
MPRINT(EM_DIAGRAM):   else do;
27563      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
27564      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
27565      end;
MPRINT(EM_DIAGRAM):   end;
27566      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
27567      output;
MPRINT(EM_DIAGRAM):   output;
27568      end;
MPRINT(EM_DIAGRAM):   end;
27569      else do;
MPRINT(EM_DIAGRAM):   else do;
27570      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
27571      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
27572      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
27573      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
27574      end;
MPRINT(EM_DIAGRAM):   end;
27575      else do;
MPRINT(EM_DIAGRAM):   else do;
27576      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
27577      origval = character_value;
MPRINT(EM_DIAGRAM):   origval = character_value;
27578      end;
MPRINT(EM_DIAGRAM):   end;
27579      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
27580      output;
MPRINT(EM_DIAGRAM):   output;
27581      end;
MPRINT(EM_DIAGRAM):   end;
27582      end;
MPRINT(EM_DIAGRAM):   end;
27583      end;
MPRINT(EM_DIAGRAM):   end;
27584      else do;
MPRINT(EM_DIAGRAM):   else do;
27585      if first.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value then do;
27586      flag = 0;
MPRINT(EM_DIAGRAM):   flag = 0;
27587      abovetext = CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   abovetext = CHARACTER_VALUE;
27588      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
27589      if first.numeric_value AND last.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value AND last.numeric_value then do;
27590      output;
MPRINT(EM_DIAGRAM):   output;
27591      end;
MPRINT(EM_DIAGRAM):   end;
27592      end;
MPRINT(EM_DIAGRAM):   end;
27593      else if last.numeric_value then do;
MPRINT(EM_DIAGRAM):   else if last.numeric_value then do;
27594      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
27595      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
27596      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
27597      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
27598      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
27599      end;
MPRINT(EM_DIAGRAM):   end;
27600      else do;
MPRINT(EM_DIAGRAM):   else do;
27601      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
27602      flag = 1;
MPRINT(EM_DIAGRAM):   flag = 1;
27603      end;
MPRINT(EM_DIAGRAM):   end;
27604      end;
MPRINT(EM_DIAGRAM):   end;
27605      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
27606      output;
MPRINT(EM_DIAGRAM):   output;
27607      end;
MPRINT(EM_DIAGRAM):   end;
27608      else do;
MPRINT(EM_DIAGRAM):   else do;
27609      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
27610      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
27611      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
27612      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
27613      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
27614      end;
MPRINT(EM_DIAGRAM):   end;
27615      else do;
MPRINT(EM_DIAGRAM):   else do;
27616      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
27617      flag=1;
MPRINT(EM_DIAGRAM):   flag=1;
27618      end;
MPRINT(EM_DIAGRAM):   end;
27619      end;
MPRINT(EM_DIAGRAM):   end;
27620      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
27621      end;
MPRINT(EM_DIAGRAM):   end;
27622      end;
MPRINT(EM_DIAGRAM):   end;
27623      keep parent branch abovetext;
MPRINT(EM_DIAGRAM):   keep parent branch abovetext;
27624      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      27497:25   27512:26   27526:24   27526:47   27535:26   27546:26   27559:24   27559:47   27572:26
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      27577:11
NOTE: There were 10 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPABOVE has 20 observations and 3 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27625      /* MIssing value to abovetext */
27626      data tempmissing;
MPRINT(EM_DIAGRAM):   data tempmissing;
27627      set WORK.OUTRULES_TREE_32X9GL2;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_32X9GL2;
27628      if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
27629      rename node=parent numeric_value=branch character_value=misschar;
MPRINT(EM_DIAGRAM):   rename node=parent numeric_value=branch character_value=misschar;
27630      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 410 observations read from the data set WORK.OUTRULES_TREE_32X9GL2.
NOTE: The data set WORK.TEMPMISSING has 10 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27631      proc sort data=work.tempabove;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempabove;
27632      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
27633      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.TEMPABOVE.
NOTE: The data set WORK.TEMPABOVE has 20 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27634      proc sort data=EMWS3.Clus2_OUTNODES out=tempoutnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus2_OUTNODES out=tempoutnodes;
27635      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
27636      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS2_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 21 observations and 36 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27637      proc sort data=tempmissing;
MPRINT(EM_DIAGRAM):   proc sort data=tempmissing;
27638      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
27639      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 10 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27640      data WORK.Clus2_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus2_outnodes;
27641      merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
MPRINT(EM_DIAGRAM):   merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
27642      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
27643      length traintotal validtotal 8;
MPRINT(EM_DIAGRAM):   length traintotal validtotal 8;
27644      retain traintotal validtotal;
MPRINT(EM_DIAGRAM):   retain traintotal validtotal;
27645      if _a then do;
MPRINT(EM_DIAGRAM):   if _a then do;
27646      if ^MISSING(abovetext) then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(abovetext) then do;
27647      abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext= strip(abovetext)||" Falta Or";
27648      end;
MPRINT(EM_DIAGRAM):   end;
27649      else do;
MPRINT(EM_DIAGRAM):   else do;
27650      abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext = " Sólo valores ausentes";
27651      end;
MPRINT(EM_DIAGRAM):   end;
27652      end;
MPRINT(EM_DIAGRAM):   end;
27653      if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   if MISSING(abovetext) then abovetext="Valores no ausentes";
27654      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
27655      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
27656      validtotal=VN;
MPRINT(EM_DIAGRAM):   validtotal=VN;
27657      end;
MPRINT(EM_DIAGRAM):   end;
27658      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Total de entrenamiento";
27659      drop role rank stat misschar belowtext;
MPRINT(EM_DIAGRAM):   drop role rank stat misschar belowtext;
27660      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VN is uninitialized.
NOTE: There were 20 observations read from the data set WORK.TEMPABOVE.
NOTE: There were 21 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 10 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.CLUS2_OUTNODES has 21 observations and 38 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27661      proc sort data=WORK.Clus2_outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus2_outnodes;
27662      by node;
MPRINT(EM_DIAGRAM):   by node;
27663      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.CLUS2_OUTNODES.
NOTE: The data set WORK.CLUS2_OUTNODES has 21 observations and 38 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27664      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
27665      by node;
MPRINT(EM_DIAGRAM):   by node;
27666      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27667      data WORK.Clus2_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus2_outnodes;
27668      merge WORK.Clus2_outnodes tempbelow;
MPRINT(EM_DIAGRAM):   merge WORK.Clus2_outnodes tempbelow;
27669      by node;
MPRINT(EM_DIAGRAM):   by node;
27670      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.CLUS2_OUTNODES.
NOTE: There were 10 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.CLUS2_OUTNODES has 21 observations and 39 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista EMWS3.EM_CLUS2.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.42 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
27671      data tempoutstats;
MPRINT(EM_DIAGRAM):    data tempoutstats;
27672      set WORK.OUTSTATS_TREE_32X9GL2;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_32X9GL2;
27673      length tarlevel $8;
MPRINT(EM_DIAGRAM):   length tarlevel $8;
27674      tarlevel ="NOMINAL";
MPRINT(EM_DIAGRAM):   tarlevel ="NOMINAL";
27675      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 252 observations read from the data set WORK.OUTSTATS_TREE_32X9GL2.
NOTE: The data set WORK.TEMPOUTSTATS has 252 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27676      data EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS3.Clus2_TREE_PLOT;
27677      length NODETEXT TEXTALL $800 N NODECOLOR 8;
MPRINT(EM_DIAGRAM):   length NODETEXT TEXTALL $800 N NODECOLOR 8;
27678      set WORK.Clus2_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus2_outnodes;
27679      label parent = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentID_vlabel, noquote))" depth = "%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, noquote))" belowtext= "%sysfunc(sasmsg(sashelp.dmine, rpt_belowtext_vlabel, noquote))" abovetext =
27680         "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))" linkwidth = "%sysfunc(sasmsg(sashelp.dmine, rpt_linkwidth_vlabel, noquote))" nodetext = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodetext_vlabel, noquote))" textall =
27681         "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainn_vlabel, noquote))" nodecolor = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))" node =
27682         "%sysfunc(sasmsg(sashelp.dmine, rpt_node_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label parent = "Id padre" depth = "Profundidad" belowtext= "Por debajo del texto" abovetext = "Por encima del texto" linkwidth = "Anchura del enlace" nodetext = "Texto del nodo" textall = "Todo el texto" N = "Entrenar: número de
observaciones" nodecolor = "Color del nodo" node = "Nodo";
27683      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
27684      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TEXTALL is uninitialized.
NOTE: Variable NODECOLOR is uninitialized.
NOTE: There were 21 observations read from the data set WORK.CLUS2_OUTNODES.
NOTE: The data set EMWS3.CLUS2_TREE_PLOT has 21 observations and 10 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27685      proc sort data=EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus2_TREE_PLOT;
27686      by node;
MPRINT(EM_DIAGRAM):   by node;
27687      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS2_TREE_PLOT.
NOTE: The data set EMWS3.CLUS2_TREE_PLOT has 21 observations and 10 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27688      proc sort data=tempoutstats;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutstats;
27689      by node;
MPRINT(EM_DIAGRAM):   by node;
27690      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 252 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 252 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27691      data EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS3.Clus2_TREE_PLOT;
27692      merge EMWS3.Clus2_TREE_PLOT tempoutstats;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus2_TREE_PLOT tempoutstats;
27693      length text $800 _RASE_ P__SEGMENT_8 8;
MPRINT(EM_DIAGRAM):   length text $800 _RASE_ P__SEGMENT_8 8;
27694      retain P__SEGMENT_8 eventlevel;
MPRINT(EM_DIAGRAM):   retain P__SEGMENT_8 eventlevel;
27695      by node;
MPRINT(EM_DIAGRAM):   by node;
27696      if statname='N' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='N' then N=statvalue;
27697      if statname='NPRIORS' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='NPRIORS' then N=statvalue;
27698      if statname='PREDICTION' then eventlevel=category;
MPRINT(EM_DIAGRAM):   if statname='PREDICTION' then eventlevel=category;
27699      _RASE_ = .;
MPRINT(EM_DIAGRAM):   _RASE_ = .;
27700      if tarlevel ^= 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if tarlevel ^= 'INTERVAL' then do;
27701      if STATNAME = 'PROBABILITY' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PROBABILITY' then do;
27702      if CATEGORY=EVENTLEVEL then do;
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL then do;
27703      nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
27704      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
27705      P__SEGMENT_8 = round(STATVALUE, .01);
MPRINT(EM_DIAGRAM):   P__SEGMENT_8 = round(STATVALUE, .01);
27706      end;
MPRINT(EM_DIAGRAM):   end;
27707      else do;
MPRINT(EM_DIAGRAM):   else do;
27708      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
27709      end;
MPRINT(EM_DIAGRAM):   end;
27710      textall = strip(textall)||'0A'x||strip( text);
MPRINT(EM_DIAGRAM):   textall = strip(textall)||'0A'x||strip( text);
27711      end;
MPRINT(EM_DIAGRAM):   end;
27712      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
27713      nodetext = trim(nodetext)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext = trim(nodetext)||'0A'x||" Número:"|| put(N, 13.);
27714      textall = trim(textall)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   textall = trim(textall)||'0A'x||" Número:"|| put(N, 13.);
27715      output EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS3.Clus2_TREE_PLOT;
27716      end;
MPRINT(EM_DIAGRAM):   end;
27717      end;
MPRINT(EM_DIAGRAM):   end;
27718      else do;
MPRINT(EM_DIAGRAM):   else do;
27719      if statname='RASE' then _RASE_=statvalue;
MPRINT(EM_DIAGRAM):   if statname='RASE' then _RASE_=statvalue;
27720      label _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trase_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _RASE_ = "Entrenar: error cuadrado del promedio de la raíz";
27721      if STATNAME = 'PREDICTION' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PREDICTION' then do;
27722      nodetext= "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"|| put(STATVALUE, 13.4)||'0A'x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext= "Promedio"|| put(STATVALUE, 13.4)||'0A'x|| "Número:"|| put(N, 13.);
27723      textall = nodetext;
MPRINT(EM_DIAGRAM):   textall = nodetext;
27724      P__SEGMENT_8 = STATVALUE;
MPRINT(EM_DIAGRAM):   P__SEGMENT_8 = STATVALUE;
27725      ;
MPRINT(EM_DIAGRAM):   ;
27726      ;
MPRINT(EM_DIAGRAM):   ;
27727      end;
MPRINT(EM_DIAGRAM):   end;
27728      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
27729      output EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS3.Clus2_TREE_PLOT;
27730      end;
MPRINT(EM_DIAGRAM):   end;
27731      ;
MPRINT(EM_DIAGRAM):   ;
27732      end;
MPRINT(EM_DIAGRAM):   end;
27733      label P__SEGMENT_8 = "%sysfunc(sasmsg(sashelp.dmine, rpt_predictedvar_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label P__SEGMENT_8 = "Variable predicha";
27734      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_8;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_8;
27735      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS2_TREE_PLOT.
NOTE: There were 252 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set EMWS3.CLUS2_TREE_PLOT has 21 observations and 12 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27736      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
27737      set WORK.OUTSTATS_TREE_32X9GL2;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_32X9GL2;
27738      retain eventlevel;
MPRINT(EM_DIAGRAM):   retain eventlevel;
27739      if STATNAME='PREDICTION' then eventlevel=CATEGORY;
MPRINT(EM_DIAGRAM):   if STATNAME='PREDICTION' then eventlevel=CATEGORY;
27740      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 252 observations read from the data set WORK.OUTSTATS_TREE_32X9GL2.
NOTE: The data set WORK.TEMPCOLOR has 252 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27741      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
27742      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
27743      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
27744      if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
27745      end;
MPRINT(EM_DIAGRAM):   end;
27746      else do;
MPRINT(EM_DIAGRAM):   else do;
27747      if STATNAME="PREDICTION";
MPRINT(EM_DIAGRAM):   if STATNAME="PREDICTION";
27748      end;
MPRINT(EM_DIAGRAM):   end;
27749      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 252 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 21 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27750      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
27751      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
27752      length nodecolor 8;
MPRINT(EM_DIAGRAM):   length nodecolor 8;
27753      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
27754      nodecolor = round(100*(STATVALUE), .01);
MPRINT(EM_DIAGRAM):   nodecolor = round(100*(STATVALUE), .01);
27755      end;
MPRINT(EM_DIAGRAM):   end;
27756      else do;
MPRINT(EM_DIAGRAM):   else do;
27757      nodecolor=round(statvalue, .01);
MPRINT(EM_DIAGRAM):   nodecolor=round(statvalue, .01);
27758      end;
MPRINT(EM_DIAGRAM):   end;
27759      keep node nodecolor;
MPRINT(EM_DIAGRAM):   keep node nodecolor;
27760      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 21 observations and 2 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27761      proc sort data=EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus2_TREE_PLOT;
27762      by node;
MPRINT(EM_DIAGRAM):   by node;
27763      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS2_TREE_PLOT.
NOTE: The data set EMWS3.CLUS2_TREE_PLOT has 21 observations and 12 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27764      proc sort data=tempcolor;
MPRINT(EM_DIAGRAM):   proc sort data=tempcolor;
27765      by node;
MPRINT(EM_DIAGRAM):   by node;
27766      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 21 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27767      data EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_TREE_PLOT;
27768      merge EMWS3.Clus2_TREE_PLOT tempcolor;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus2_TREE_PLOT tempcolor;
27769      by node;
MPRINT(EM_DIAGRAM):   by node;
27770      length traintotal 8;
MPRINT(EM_DIAGRAM):   length traintotal 8;
27771      retain traintotal;
MPRINT(EM_DIAGRAM):   retain traintotal;
27772      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Total de entrenamiento";
27773      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
27774      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
27775      end;
MPRINT(EM_DIAGRAM):   end;
27776      if NODE eq . then delete;
MPRINT(EM_DIAGRAM):   if NODE eq . then delete;
27777      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS2_TREE_PLOT.
NOTE: There were 21 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set EMWS3.CLUS2_TREE_PLOT has 21 observations and 13 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27778      data EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_TREE_PLOT;
27779      set EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus2_TREE_PLOT;
27780      textall = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote, )):"|| put(Node, 13.)||'0A'x||trim(textall);
MPRINT(EM_DIAGRAM):   textall = "Id de nodo:"|| put(Node, 13.)||'0A'x||trim(textall);
27781      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS2_TREE_PLOT.
NOTE: The data set EMWS3.CLUS2_TREE_PLOT has 21 observations and 13 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27782      data tempout;
MPRINT(EM_DIAGRAM):   data tempout;
27783      set WORK.Clus2_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus2_outnodes;
27784      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.CLUS2_OUTNODES.
NOTE: The data set WORK.TEMPOUT has 21 observations and 39 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27785      proc sort data=tempout;
MPRINT(EM_DIAGRAM):   proc sort data=tempout;
27786      by descending P__SEGMENT_8;
MPRINT(EM_DIAGRAM):   by descending P__SEGMENT_8;
27787      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TEMPOUT has 21 observations and 39 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27788      data tree_temp;
MPRINT(EM_DIAGRAM):   data tree_temp;
27789      set tempout;
MPRINT(EM_DIAGRAM):   set tempout;
27790      if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
27791      label index="%sysfunc(sasmsg(sashelp.dmine, rpt_leafindex_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label index= "Índice de hoja";
27792      label percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percevent_train = "Casos de porcentaje";
27793      label perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label perc_train = "Porcentaje de evento";
27794      label tprob="%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel  , NOQUOTE, %nrbquote()))";
MPRINT(EM_DIAGRAM):   label tprob= "Porcentaje de entrenamiento ";
27795      tprob = round(P__SEGMENT_8, .01);
MPRINT(EM_DIAGRAM):   tprob = round(P__SEGMENT_8, .01);
27796      percevent_train = round ( tprob*100, .01);
MPRINT(EM_DIAGRAM):   percevent_train = round ( tprob*100, .01);
27797      *perc_train =round( ( N / traintotal)*100, .001);
MPRINT(EM_DIAGRAM):   *perc_train =round( ( N / traintotal)*100, .001);
27798      perc_train =round( ( N / traintotal), .01);
MPRINT(EM_DIAGRAM):   perc_train =round( ( N / traintotal), .01);
27799      if missing(perc_train) then perc_train = round( linkwidth*100, .001);
MPRINT(EM_DIAGRAM):   if missing(perc_train) then perc_train = round( linkwidth*100, .001);
27800      index = _n_;
MPRINT(EM_DIAGRAM):   index = _n_;
27801      keep NODE index tprob perc_train percevent_train
27802      ;
MPRINT(EM_DIAGRAM):   keep NODE index tprob perc_train percevent_train ;
27803      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TREE_TEMP has 11 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27804      proc sort data=tree_temp;
MPRINT(EM_DIAGRAM):   proc sort data=tree_temp;
27805      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
27806      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set WORK.TREE_TEMP has 11 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27807      proc sort data=EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus2_TREE_PLOT;
27808      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
27809      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS2_TREE_PLOT.
NOTE: The data set EMWS3.CLUS2_TREE_PLOT has 21 observations and 13 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27810      data EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_TREE_PLOT;
27811      merge EMWS3.Clus2_TREE_PLOT tree_temp;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus2_TREE_PLOT tree_temp;
27812      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
27813      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS2_TREE_PLOT.
NOTE: There were 11 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set EMWS3.CLUS2_TREE_PLOT has 21 observations and 17 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27814      proc sort data=EMWS3.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus2_TREE_PLOT;
27815      by node index;
MPRINT(EM_DIAGRAM):   by node index;
27816      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS3.CLUS2_TREE_PLOT.
NOTE: The data set EMWS3.CLUS2_TREE_PLOT has 21 observations and 17 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27817      title9 ' ';
MPRINT(EM_DIAGRAM):    title9 ' ';
27818      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_VariableImportance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Importancia de la variable";
27819      proc print data=EMWS3.Clus2_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS3.Clus2_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
27820      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS3.CLUS2_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27821      title10;
MPRINT(EM_DIAGRAM):   title10;
27822      data WORK.M2S64EEM;
MPRINT(EM_DIAGRAM):    data WORK.M2S64EEM;
27823      set WORK.M2S64EEM;
MPRINT(EM_DIAGRAM):   set WORK.M2S64EEM;
27824      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
27825      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 242 observations read from the data set WORK.M2S64EEM.
NOTE: The data set WORK.M2S64EEM has 242 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27826      proc sort data=EMWS3.Clus2_OUTIMPORT out=WORK.Clus2_GRAPHVARS(keep=NAME);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS3.Clus2_OUTIMPORT out=WORK.Clus2_GRAPHVARS(keep=NAME);
27827      where IMPORTANCE>0;
MPRINT(EM_DIAGRAM):   where IMPORTANCE>0;
27828      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27829      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS3.CLUS2_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The data set WORK.CLUS2_GRAPHVARS has 44 observations and 1 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27830      proc sort data = WORK.M2S64EEM;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.M2S64EEM;
27831      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27832      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 242 observations read from the data set WORK.M2S64EEM.
NOTE: The data set WORK.M2S64EEM has 242 observations and 21 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27833      data WORK.M2S64EEM;
MPRINT(EM_DIAGRAM):   data WORK.M2S64EEM;
27834      merge WORK.M2S64EEM WORK.Clus2_GRAPHVARS(in=_b_);
MPRINT(EM_DIAGRAM):   merge WORK.M2S64EEM WORK.Clus2_GRAPHVARS(in=_b_);
27835      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27836      if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
MPRINT(EM_DIAGRAM):   if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
27837      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 242 observations read from the data set WORK.M2S64EEM.
NOTE: There were 44 observations read from the data set WORK.CLUS2_GRAPHVARS.
NOTE: The data set WORK.M2S64EEM has 44 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27838      data WORK.M2S64EEM;
MPRINT(EM_DIAGRAM):    data WORK.M2S64EEM;
27839      set WORK.M2S64EEM end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M2S64EEM end=_eof_ nobs=_nobs_;
27840      output;
MPRINT(EM_DIAGRAM):   output;
27841      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
27842      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
27843      ROLE = 'BY';
MPRINT(EM_DIAGRAM):   ROLE = 'BY';
27844      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
27845      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
27846      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
27847      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
27848      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
27849      output;
MPRINT(EM_DIAGRAM):   output;
27850      end;
MPRINT(EM_DIAGRAM):   end;
27851      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.M2S64EEM.
NOTE: The data set WORK.M2S64EEM has 45 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27852      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
27853      * Clus2: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: STDIZE Variables Macro ;
27854      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27855      %macro stdizevar;
27856          ACCESS ARGIC ARMENIA ARMENIAN BANK BOOK CALIFORNIA CENTER CODE COLOR COMMUN
27857         COMPUT CONTROL DEPT DISEAS DOCTOR DON EDU FIND FRIEND GEB GORDON KILL MARK MED
27858         MEDIC NUMBER ORIGIN PHONE PITT PITTSBURGH POLICI PUBLIC QUESTION SERDAR TALK
27859         TREATMENT TRUE TURKISH UNIV UNIVERS UNIX WONDER WORLD
27860      %mend stdizevar;
27861      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27862      * Clus2: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Clus2: Computing Summary Statistics;
27863      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27864      proc stdize
27865      data = EMWS3.Clus2_TRAIN
27866      out=_null_
27867      outstat=WORK.Clus2_STAT
27868      add=0 fuzz=1E-14 initial=MAD
27869      vardef=df
27870      method=STD
27871      mult=1
27872      pctlmtd=ORD_STAT pctldef=2
27873      pctlpts=(
27874      0
27875      100
27876      )
27877      ;
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS3.Clus2_TRAIN out=_null_ outstat=WORK.Clus2_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 100 ) ;
MPRINT(EM_DIAGRAM):   var
27878      var %stdizevar;
MPRINT(STDIZEVAR):   ACCESS ARGIC ARMENIA ARMENIAN BANK BOOK CALIFORNIA CENTER CODE COLOR COMMUN COMPUT CONTROL DEPT DISEAS DOCTOR DON EDU FIND FRIEND GEB GORDON KILL MARK MED MEDIC NUMBER ORIGIN PHONE PITT PITTSBURGH POLICI PUBLIC QUESTION SERDAR TALK
TREATMENT TRUE TURKISH UNIV UNIVERS UNIX WONDER WORLD
MPRINT(EM_DIAGRAM):  ;
27879      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.40 seconds
      cpu time            0.40 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: The data set WORK.CLUS2_STAT has 10 observations and 45 variables.
NOTE: PROCEDURE STDIZE ha utilizado (Tiempo de proceso total):
      real time           0.40 seconds
      cpu time            0.40 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
27880      quit;
 
27881      data WORK.Clus2_MINMAX;
MPRINT(EM_DIAGRAM):    data WORK.Clus2_MINMAX;
27882      set WORK.Clus2_STAT;
MPRINT(EM_DIAGRAM):   set WORK.Clus2_STAT;
27883      where _TYPE_ in('P0','P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('P0','P100');
27884      if _TYPE_='P0' then _TYPE_='MIN';
MPRINT(EM_DIAGRAM):   if _TYPE_='P0' then _TYPE_='MIN';
27885      else if _TYPE_='P100' then _TYPE_='MAX';
MPRINT(EM_DIAGRAM):   else if _TYPE_='P100' then _TYPE_='MAX';
27886      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS2_STAT.
      WHERE _TYPE_ in ('P0', 'P100');
NOTE: The data set WORK.CLUS2_MINMAX has 2 observations and 45 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27887      proc transpose data=WORK.Clus2_MINMAX out=WORK.Clus2_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Clus2_MINMAX out=WORK.Clus2_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
27888      id _TYPE_;
MPRINT(EM_DIAGRAM):   id _TYPE_;
27889      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 2 observations read from the data set WORK.CLUS2_MINMAX.
NOTE: The data set WORK.CLUS2_MINMAX has 44 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27890      data WORK.Clus2_UGRID;
MPRINT(EM_DIAGRAM):    data WORK.Clus2_UGRID;
27891      set WORK.Clus2_MINMAX;
MPRINT(EM_DIAGRAM):   set WORK.Clus2_MINMAX;
27892      B1 = MIN + (1-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B1 = MIN + (1-1)*(MAX-MIN)/8;
27893      B2 = MIN + (2-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B2 = MIN + (2-1)*(MAX-MIN)/8;
27894      B3 = MIN + (3-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B3 = MIN + (3-1)*(MAX-MIN)/8;
27895      B4 = MIN + (4-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B4 = MIN + (4-1)*(MAX-MIN)/8;
27896      B5 = MIN + (5-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B5 = MIN + (5-1)*(MAX-MIN)/8;
27897      B6 = MIN + (6-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B6 = MIN + (6-1)*(MAX-MIN)/8;
27898      B7 = MIN + (7-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B7 = MIN + (7-1)*(MAX-MIN)/8;
27899      B8 = MIN + (8-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B8 = MIN + (8-1)*(MAX-MIN)/8;
27900      B9 = MIN + (9-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B9 = MIN + (9-1)*(MAX-MIN)/8;
27901      drop MIN MAX;
MPRINT(EM_DIAGRAM):   drop MIN MAX;
27902      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.CLUS2_MINMAX.
NOTE: The data set WORK.CLUS2_UGRID has 44 observations and 10 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27903      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27904      * Clus2: creando formatos para las variables de intervalo de agrupamiento;
MPRINT(EM_DIAGRAM):   * Clus2: creando formatos para las variables de intervalo de agrupamiento;
27905      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27906      proc format;
MPRINT(EM_DIAGRAM):   proc format;
27907      value F1_
27908      0-0.03050540510048 = "0:0.0305"
27909      0.03050540510048-0.06101081020097 = "0.0305:0.061"
27910      0.06101081020097-0.09151621530146 = "0.061:0.0915"
27911      0.09151621530146-0.12202162040195 = "0.0915:0.122"
27912      0.12202162040195-0.15252702550244 = "0.122:0.1525"
27913      0.15252702550244-0.18303243060293 = "0.1525:0.183"
27914      0.18303243060293-0.21353783570342 = "0.183:0.2135"
27915      0.21353783570342-0.24404324080391 = "0.2135:0.244"
27916      ;
MPRINT(EM_DIAGRAM):   value F1_ 0-0.03050540510048 = "0:0.0305" 0.03050540510048-0.06101081020097 = "0.0305:0.061" 0.06101081020097-0.09151621530146 = "0.061:0.0915" 0.09151621530146-0.12202162040195 = "0.0915:0.122" 0.12202162040195-0.15252702550244 =
"0.122:0.1525" 0.15252702550244-0.18303243060293 = "0.1525:0.183" 0.18303243060293-0.21353783570342 = "0.183:0.2135" 0.21353783570342-0.24404324080391 = "0.2135:0.244" ;
NOTE: Format F1_ has been output.
27917      value F2_
27918      0-0.0406252412429 = "0:0.0406"
27919      0.0406252412429-0.08125048248581 = "0.0406:0.0813"
27920      0.08125048248581-0.12187572372871 = "0.0813:0.1219"
27921      0.12187572372871-0.16250096497162 = "0.1219:0.1625"
27922      0.16250096497162-0.20312620621452 = "0.1625:0.2031"
27923      0.20312620621452-0.24375144745743 = "0.2031:0.2438"
27924      0.24375144745743-0.28437668870033 = "0.2438:0.2844"
27925      0.28437668870033-0.32500192994324 = "0.2844:0.325"
27926      ;
MPRINT(EM_DIAGRAM):   value F2_ 0-0.0406252412429 = "0:0.0406" 0.0406252412429-0.08125048248581 = "0.0406:0.0813" 0.08125048248581-0.12187572372871 = "0.0813:0.1219" 0.12187572372871-0.16250096497162 = "0.1219:0.1625" 0.16250096497162-0.20312620621452 =
"0.1625:0.2031" 0.20312620621452-0.24375144745743 = "0.2031:0.2438" 0.24375144745743-0.28437668870033 = "0.2438:0.2844" 0.28437668870033-0.32500192994324 = "0.2844:0.325" ;
NOTE: Format F2_ has been output.
27927      value F3_
27928      0-0.07250889098236 = "0:0.0725"
27929      0.07250889098236-0.14501778196472 = "0.0725:0.145"
27930      0.14501778196472-0.21752667294709 = "0.145:0.2175"
27931      0.21752667294709-0.29003556392945 = "0.2175:0.29"
27932      0.29003556392945-0.36254445491181 = "0.29:0.3625"
27933      0.36254445491181-0.43505334589418 = "0.3625:0.4351"
27934      0.43505334589418-0.50756223687654 = "0.4351:0.5076"
27935      0.50756223687654-0.58007112785891 = "0.5076:0.5801"
27936      ;
MPRINT(EM_DIAGRAM):   value F3_ 0-0.07250889098236 = "0:0.0725" 0.07250889098236-0.14501778196472 = "0.0725:0.145" 0.14501778196472-0.21752667294709 = "0.145:0.2175" 0.21752667294709-0.29003556392945 = "0.2175:0.29" 0.29003556392945-0.36254445491181 =
"0.29:0.3625" 0.36254445491181-0.43505334589418 = "0.3625:0.4351" 0.43505334589418-0.50756223687654 = "0.4351:0.5076" 0.50756223687654-0.58007112785891 = "0.5076:0.5801" ;
NOTE: Format F3_ has been output.
27937      value F4_
27938      0-0.02948806596317 = "0:0.0295"
27939      0.02948806596317-0.05897613192634 = "0.0295:0.059"
27940      0.05897613192634-0.08846419788951 = "0.059:0.0885"
27941      0.08846419788951-0.11795226385268 = "0.0885:0.118"
27942      0.11795226385268-0.14744032981586 = "0.118:0.1474"
27943      0.14744032981586-0.17692839577903 = "0.1474:0.1769"
27944      0.17692839577903-0.2064164617422 = "0.1769:0.2064"
27945      0.2064164617422-0.23590452770537 = "0.2064:0.2359"
27946      ;
MPRINT(EM_DIAGRAM):   value F4_ 0-0.02948806596317 = "0:0.0295" 0.02948806596317-0.05897613192634 = "0.0295:0.059" 0.05897613192634-0.08846419788951 = "0.059:0.0885" 0.08846419788951-0.11795226385268 = "0.0885:0.118" 0.11795226385268-0.14744032981586 =
"0.118:0.1474" 0.14744032981586-0.17692839577903 = "0.1474:0.1769" 0.17692839577903-0.2064164617422 = "0.1769:0.2064" 0.2064164617422-0.23590452770537 = "0.2064:0.2359" ;
NOTE: Format F4_ has been output.
27947      value F5_
27948      0-0.03413223476769 = "0:0.0341"
27949      0.03413223476769-0.06826446953539 = "0.0341:0.0683"
27950      0.06826446953539-0.10239670430309 = "0.0683:0.1024"
27951      0.10239670430309-0.13652893907078 = "0.1024:0.1365"
27952      0.13652893907078-0.17066117383848 = "0.1365:0.1707"
27953      0.17066117383848-0.20479340860618 = "0.1707:0.2048"
27954      0.20479340860618-0.23892564337387 = "0.2048:0.2389"
27955      0.23892564337387-0.27305787814157 = "0.2389:0.2731"
27956      ;
MPRINT(EM_DIAGRAM):   value F5_ 0-0.03413223476769 = "0:0.0341" 0.03413223476769-0.06826446953539 = "0.0341:0.0683" 0.06826446953539-0.10239670430309 = "0.0683:0.1024" 0.10239670430309-0.13652893907078 = "0.1024:0.1365" 0.13652893907078-0.17066117383848 =
"0.1365:0.1707" 0.17066117383848-0.20479340860618 = "0.1707:0.2048" 0.20479340860618-0.23892564337387 = "0.2048:0.2389" 0.23892564337387-0.27305787814157 = "0.2389:0.2731" ;
NOTE: Format F5_ has been output.
27957      value F6_
27958      0-0.03091434826808 = "0:0.0309"
27959      0.03091434826808-0.06182869653616 = "0.0309:0.0618"
27960      0.06182869653616-0.09274304480425 = "0.0618:0.0927"
27961      0.09274304480425-0.12365739307233 = "0.0927:0.1237"
27962      0.12365739307233-0.15457174134041 = "0.1237:0.1546"
27963      0.15457174134041-0.1854860896085 = "0.1546:0.1855"
27964      0.1854860896085-0.21640043787658 = "0.1855:0.2164"
27965      0.21640043787658-0.24731478614466 = "0.2164:0.2473"
27966      ;
MPRINT(EM_DIAGRAM):   value F6_ 0-0.03091434826808 = "0:0.0309" 0.03091434826808-0.06182869653616 = "0.0309:0.0618" 0.06182869653616-0.09274304480425 = "0.0618:0.0927" 0.09274304480425-0.12365739307233 = "0.0927:0.1237" 0.12365739307233-0.15457174134041 =
"0.1237:0.1546" 0.15457174134041-0.1854860896085 = "0.1546:0.1855" 0.1854860896085-0.21640043787658 = "0.1855:0.2164" 0.21640043787658-0.24731478614466 = "0.2164:0.2473" ;
NOTE: Format F6_ has been output.
27967      value F7_
27968      0-0.02816372592616 = "0:0.0282"
27969      0.02816372592616-0.05632745185233 = "0.0282:0.0563"
27970      0.05632745185233-0.08449117777849 = "0.0563:0.0845"
27971      0.08449117777849-0.11265490370466 = "0.0845:0.1127"
27972      0.11265490370466-0.14081862963083 = "0.1127:0.1408"
27973      0.14081862963083-0.16898235555699 = "0.1408:0.169"
27974      0.16898235555699-0.19714608148316 = "0.169:0.1971"
27975      0.19714608148316-0.22530980740933 = "0.1971:0.2253"
27976      ;
MPRINT(EM_DIAGRAM):   value F7_ 0-0.02816372592616 = "0:0.0282" 0.02816372592616-0.05632745185233 = "0.0282:0.0563" 0.05632745185233-0.08449117777849 = "0.0563:0.0845" 0.08449117777849-0.11265490370466 = "0.0845:0.1127" 0.11265490370466-0.14081862963083 =
"0.1127:0.1408" 0.14081862963083-0.16898235555699 = "0.1408:0.169" 0.16898235555699-0.19714608148316 = "0.169:0.1971" 0.19714608148316-0.22530980740933 = "0.1971:0.2253" ;
NOTE: Format F7_ has been output.
27977      value F8_
27978      0-0.01955737793242 = "0:0.0196"
27979      0.01955737793242-0.03911475586484 = "0.0196:0.0391"
27980      0.03911475586484-0.05867213379726 = "0.0391:0.0587"
27981      0.05867213379726-0.07822951172968 = "0.0587:0.0782"
27982      0.07822951172968-0.0977868896621 = "0.0782:0.0978"
27983      0.0977868896621-0.11734426759453 = "0.0978:0.1173"
27984      0.11734426759453-0.13690164552695 = "0.1173:0.1369"
27985      0.13690164552695-0.15645902345937 = "0.1369:0.1565"
27986      ;
MPRINT(EM_DIAGRAM):   value F8_ 0-0.01955737793242 = "0:0.0196" 0.01955737793242-0.03911475586484 = "0.0196:0.0391" 0.03911475586484-0.05867213379726 = "0.0391:0.0587" 0.05867213379726-0.07822951172968 = "0.0587:0.0782" 0.07822951172968-0.0977868896621 =
"0.0782:0.0978" 0.0977868896621-0.11734426759453 = "0.0978:0.1173" 0.11734426759453-0.13690164552695 = "0.1173:0.1369" 0.13690164552695-0.15645902345937 = "0.1369:0.1565" ;
NOTE: Format F8_ has been output.
27987      value F9_
27988      0-0.03135617608511 = "0:0.0314"
27989      0.03135617608511-0.06271235217022 = "0.0314:0.0627"
27990      0.06271235217022-0.09406852825533 = "0.0627:0.0941"
27991      0.09406852825533-0.12542470434044 = "0.0941:0.1254"
27992      0.12542470434044-0.15678088042555 = "0.1254:0.1568"
27993      0.15678088042555-0.18813705651066 = "0.1568:0.1881"
27994      0.18813705651066-0.21949323259577 = "0.1881:0.2195"
27995      0.21949323259577-0.25084940868088 = "0.2195:0.2508"
27996      ;
MPRINT(EM_DIAGRAM):   value F9_ 0-0.03135617608511 = "0:0.0314" 0.03135617608511-0.06271235217022 = "0.0314:0.0627" 0.06271235217022-0.09406852825533 = "0.0627:0.0941" 0.09406852825533-0.12542470434044 = "0.0941:0.1254" 0.12542470434044-0.15678088042555 =
"0.1254:0.1568" 0.15678088042555-0.18813705651066 = "0.1568:0.1881" 0.18813705651066-0.21949323259577 = "0.1881:0.2195" 0.21949323259577-0.25084940868088 = "0.2195:0.2508" ;
NOTE: Format F9_ has been output.
27997      value F10_
27998      0-0.05485524347356 = "0:0.0549"
27999      0.05485524347356-0.10971048694712 = "0.0549:0.1097"
28000      0.10971048694712-0.16456573042069 = "0.1097:0.1646"
28001      0.16456573042069-0.21942097389425 = "0.1646:0.2194"
28002      0.21942097389425-0.27427621736781 = "0.2194:0.2743"
28003      0.27427621736781-0.32913146084138 = "0.2743:0.3291"
28004      0.32913146084138-0.38398670431494 = "0.3291:0.384"
28005      0.38398670431494-0.4388419477885 = "0.384:0.4388"
28006      ;
MPRINT(EM_DIAGRAM):   value F10_ 0-0.05485524347356 = "0:0.0549" 0.05485524347356-0.10971048694712 = "0.0549:0.1097" 0.10971048694712-0.16456573042069 = "0.1097:0.1646" 0.16456573042069-0.21942097389425 = "0.1646:0.2194" 0.21942097389425-0.27427621736781
= "0.2194:0.2743" 0.27427621736781-0.32913146084138 = "0.2743:0.3291" 0.32913146084138-0.38398670431494 = "0.3291:0.384" 0.38398670431494-0.4388419477885 = "0.384:0.4388" ;
NOTE: Format F10_ has been output.
28007      value F11_
28008      0-0.01969977057937 = "0:0.0197"
28009      0.01969977057937-0.03939954115874 = "0.0197:0.0394"
28010      0.03939954115874-0.05909931173811 = "0.0394:0.0591"
28011      0.05909931173811-0.07879908231748 = "0.0591:0.0788"
28012      0.07879908231748-0.09849885289685 = "0.0788:0.0985"
28013      0.09849885289685-0.11819862347623 = "0.0985:0.1182"
28014      0.11819862347623-0.1378983940556 = "0.1182:0.1379"
28015      0.1378983940556-0.15759816463497 = "0.1379:0.1576"
28016      ;
MPRINT(EM_DIAGRAM):   value F11_ 0-0.01969977057937 = "0:0.0197" 0.01969977057937-0.03939954115874 = "0.0197:0.0394" 0.03939954115874-0.05909931173811 = "0.0394:0.0591" 0.05909931173811-0.07879908231748 = "0.0591:0.0788" 0.07879908231748-0.09849885289685
= "0.0788:0.0985" 0.09849885289685-0.11819862347623 = "0.0985:0.1182" 0.11819862347623-0.1378983940556 = "0.1182:0.1379" 0.1378983940556-0.15759816463497 = "0.1379:0.1576" ;
NOTE: Format F11_ has been output.
28017      value F12_
28018      0-0.02311452984623 = "0:0.0231"
28019      0.02311452984623-0.04622905969247 = "0.0231:0.0462"
28020      0.04622905969247-0.06934358953871 = "0.0462:0.0693"
28021      0.06934358953871-0.09245811938494 = "0.0693:0.0925"
28022      0.09245811938494-0.11557264923118 = "0.0925:0.1156"
28023      0.11557264923118-0.13868717907742 = "0.1156:0.1387"
28024      0.13868717907742-0.16180170892366 = "0.1387:0.1618"
28025      0.16180170892366-0.18491623876989 = "0.1618:0.1849"
28026      ;
MPRINT(EM_DIAGRAM):   value F12_ 0-0.02311452984623 = "0:0.0231" 0.02311452984623-0.04622905969247 = "0.0231:0.0462" 0.04622905969247-0.06934358953871 = "0.0462:0.0693" 0.06934358953871-0.09245811938494 = "0.0693:0.0925" 0.09245811938494-0.11557264923118
= "0.0925:0.1156" 0.11557264923118-0.13868717907742 = "0.1156:0.1387" 0.13868717907742-0.16180170892366 = "0.1387:0.1618" 0.16180170892366-0.18491623876989 = "0.1618:0.1849" ;
NOTE: Format F12_ has been output.
28027      value F13_
28028      0-0.0200971349004 = "0:0.0201"
28029      0.0200971349004-0.0401942698008 = "0.0201:0.0402"
28030      0.0401942698008-0.06029140470121 = "0.0402:0.0603"
28031      0.06029140470121-0.08038853960161 = "0.0603:0.0804"
28032      0.08038853960161-0.10048567450201 = "0.0804:0.1005"
28033      0.10048567450201-0.12058280940242 = "0.1005:0.1206"
28034      0.12058280940242-0.14067994430282 = "0.1206:0.1407"
28035      0.14067994430282-0.16077707920322 = "0.1407:0.1608"
28036      ;
MPRINT(EM_DIAGRAM):   value F13_ 0-0.0200971349004 = "0:0.0201" 0.0200971349004-0.0401942698008 = "0.0201:0.0402" 0.0401942698008-0.06029140470121 = "0.0402:0.0603" 0.06029140470121-0.08038853960161 = "0.0603:0.0804" 0.08038853960161-0.10048567450201 =
"0.0804:0.1005" 0.10048567450201-0.12058280940242 = "0.1005:0.1206" 0.12058280940242-0.14067994430282 = "0.1206:0.1407" 0.14067994430282-0.16077707920322 = "0.1407:0.1608" ;
NOTE: Format F13_ has been output.
28037      value F14_
28038      0-0.01902844817227 = "0:0.019"
28039      0.01902844817227-0.03805689634455 = "0.019:0.0381"
28040      0.03805689634455-0.05708534451683 = "0.0381:0.0571"
28041      0.05708534451683-0.0761137926891 = "0.0571:0.0761"
28042      0.0761137926891-0.09514224086138 = "0.0761:0.0951"
28043      0.09514224086138-0.11417068903366 = "0.0951:0.1142"
28044      0.11417068903366-0.13319913720594 = "0.1142:0.1332"
28045      0.13319913720594-0.15222758537821 = "0.1332:0.1522"
28046      ;
MPRINT(EM_DIAGRAM):   value F14_ 0-0.01902844817227 = "0:0.019" 0.01902844817227-0.03805689634455 = "0.019:0.0381" 0.03805689634455-0.05708534451683 = "0.0381:0.0571" 0.05708534451683-0.0761137926891 = "0.0571:0.0761" 0.0761137926891-0.09514224086138 =
"0.0761:0.0951" 0.09514224086138-0.11417068903366 = "0.0951:0.1142" 0.11417068903366-0.13319913720594 = "0.1142:0.1332" 0.13319913720594-0.15222758537821 = "0.1332:0.1522" ;
NOTE: Format F14_ has been output.
28047      value F15_
28048      0-0.03755016929869 = "0:0.0376"
28049      0.03755016929869-0.07510033859739 = "0.0376:0.0751"
28050      0.07510033859739-0.11265050789608 = "0.0751:0.1127"
28051      0.11265050789608-0.15020067719478 = "0.1127:0.1502"
28052      0.15020067719478-0.18775084649347 = "0.1502:0.1878"
28053      0.18775084649347-0.22530101579217 = "0.1878:0.2253"
28054      0.22530101579217-0.26285118509086 = "0.2253:0.2629"
28055      0.26285118509086-0.30040135438956 = "0.2629:0.3004"
28056      ;
MPRINT(EM_DIAGRAM):   value F15_ 0-0.03755016929869 = "0:0.0376" 0.03755016929869-0.07510033859739 = "0.0376:0.0751" 0.07510033859739-0.11265050789608 = "0.0751:0.1127" 0.11265050789608-0.15020067719478 = "0.1127:0.1502" 0.15020067719478-0.18775084649347
= "0.1502:0.1878" 0.18775084649347-0.22530101579217 = "0.1878:0.2253" 0.22530101579217-0.26285118509086 = "0.2253:0.2629" 0.26285118509086-0.30040135438956 = "0.2629:0.3004" ;
NOTE: Format F15_ has been output.
28057      value F16_
28058      0-0.03791520014754 = "0:0.0379"
28059      0.03791520014754-0.07583040029508 = "0.0379:0.0758"
28060      0.07583040029508-0.11374560044262 = "0.0758:0.1137"
28061      0.11374560044262-0.15166080059016 = "0.1137:0.1517"
28062      0.15166080059016-0.1895760007377 = "0.1517:0.1896"
28063      0.1895760007377-0.22749120088524 = "0.1896:0.2275"
28064      0.22749120088524-0.26540640103279 = "0.2275:0.2654"
28065      0.26540640103279-0.30332160118033 = "0.2654:0.3033"
28066      ;
MPRINT(EM_DIAGRAM):   value F16_ 0-0.03791520014754 = "0:0.0379" 0.03791520014754-0.07583040029508 = "0.0379:0.0758" 0.07583040029508-0.11374560044262 = "0.0758:0.1137" 0.11374560044262-0.15166080059016 = "0.1137:0.1517" 0.15166080059016-0.1895760007377 =
"0.1517:0.1896" 0.1895760007377-0.22749120088524 = "0.1896:0.2275" 0.22749120088524-0.26540640103279 = "0.2275:0.2654" 0.26540640103279-0.30332160118033 = "0.2654:0.3033" ;
NOTE: Format F16_ has been output.
28067      value F17_
28068      0-0.01516289343396 = "0:0.0152"
28069      0.01516289343396-0.03032578686793 = "0.0152:0.0303"
28070      0.03032578686793-0.0454886803019 = "0.0303:0.0455"
28071      0.0454886803019-0.06065157373587 = "0.0455:0.0607"
28072      0.06065157373587-0.07581446716983 = "0.0607:0.0758"
28073      0.07581446716983-0.0909773606038 = "0.0758:0.091"
28074      0.0909773606038-0.10614025403777 = "0.091:0.1061"
28075      0.10614025403777-0.12130314747174 = "0.1061:0.1213"
28076      ;
MPRINT(EM_DIAGRAM):   value F17_ 0-0.01516289343396 = "0:0.0152" 0.01516289343396-0.03032578686793 = "0.0152:0.0303" 0.03032578686793-0.0454886803019 = "0.0303:0.0455" 0.0454886803019-0.06065157373587 = "0.0455:0.0607" 0.06065157373587-0.07581446716983 =
"0.0607:0.0758" 0.07581446716983-0.0909773606038 = "0.0758:0.091" 0.0909773606038-0.10614025403777 = "0.091:0.1061" 0.10614025403777-0.12130314747174 = "0.1061:0.1213" ;
NOTE: Format F17_ has been output.
28077      value F18_
28078      0-0.02704506072317 = "0:0.027"
28079      0.02704506072317-0.05409012144634 = "0.027:0.0541"
28080      0.05409012144634-0.08113518216951 = "0.0541:0.0811"
28081      0.08113518216951-0.10818024289269 = "0.0811:0.1082"
28082      0.10818024289269-0.13522530361586 = "0.1082:0.1352"
28083      0.13522530361586-0.16227036433903 = "0.1352:0.1623"
28084      0.16227036433903-0.18931542506221 = "0.1623:0.1893"
28085      0.18931542506221-0.21636048578538 = "0.1893:0.2164"
28086      ;
MPRINT(EM_DIAGRAM):   value F18_ 0-0.02704506072317 = "0:0.027" 0.02704506072317-0.05409012144634 = "0.027:0.0541" 0.05409012144634-0.08113518216951 = "0.0541:0.0811" 0.08113518216951-0.10818024289269 = "0.0811:0.1082" 0.10818024289269-0.13522530361586 =
"0.1082:0.1352" 0.13522530361586-0.16227036433903 = "0.1352:0.1623" 0.16227036433903-0.18931542506221 = "0.1623:0.1893" 0.18931542506221-0.21636048578538 = "0.1893:0.2164" ;
NOTE: Format F18_ has been output.
28087      value F19_
28088      0-0.02150778849793 = "0:0.0215"
28089      0.02150778849793-0.04301557699586 = "0.0215:0.043"
28090      0.04301557699586-0.06452336549379 = "0.043:0.0645"
28091      0.06452336549379-0.08603115399172 = "0.0645:0.086"
28092      0.08603115399172-0.10753894248966 = "0.086:0.1075"
28093      0.10753894248966-0.12904673098759 = "0.1075:0.129"
28094      0.12904673098759-0.15055451948552 = "0.129:0.1506"
28095      0.15055451948552-0.17206230798345 = "0.1506:0.1721"
28096      ;
MPRINT(EM_DIAGRAM):   value F19_ 0-0.02150778849793 = "0:0.0215" 0.02150778849793-0.04301557699586 = "0.0215:0.043" 0.04301557699586-0.06452336549379 = "0.043:0.0645" 0.06452336549379-0.08603115399172 = "0.0645:0.086" 0.08603115399172-0.10753894248966 =
"0.086:0.1075" 0.10753894248966-0.12904673098759 = "0.1075:0.129" 0.12904673098759-0.15055451948552 = "0.129:0.1506" 0.15055451948552-0.17206230798345 = "0.1506:0.1721" ;
NOTE: Format F19_ has been output.
28097      value F20_
28098      0-0.02867776006542 = "0:0.0287"
28099      0.02867776006542-0.05735552013084 = "0.0287:0.0574"
28100      0.05735552013084-0.08603328019626 = "0.0574:0.086"
28101      0.08603328019626-0.11471104026169 = "0.086:0.1147"
28102      0.11471104026169-0.14338880032711 = "0.1147:0.1434"
28103      0.14338880032711-0.17206656039253 = "0.1434:0.1721"
28104      0.17206656039253-0.20074432045795 = "0.1721:0.2007"
28105      0.20074432045795-0.22942208052338 = "0.2007:0.2294"
28106      ;
MPRINT(EM_DIAGRAM):   value F20_ 0-0.02867776006542 = "0:0.0287" 0.02867776006542-0.05735552013084 = "0.0287:0.0574" 0.05735552013084-0.08603328019626 = "0.0574:0.086" 0.08603328019626-0.11471104026169 = "0.086:0.1147" 0.11471104026169-0.14338880032711 =
"0.1147:0.1434" 0.14338880032711-0.17206656039253 = "0.1434:0.1721" 0.17206656039253-0.20074432045795 = "0.1721:0.2007" 0.20074432045795-0.22942208052338 = "0.2007:0.2294" ;
NOTE: Format F20_ has been output.
28107      value F21_
28108      0-0.02641714651848 = "0:0.0264"
28109      0.02641714651848-0.05283429303696 = "0.0264:0.0528"
28110      0.05283429303696-0.07925143955545 = "0.0528:0.0793"
28111      0.07925143955545-0.10566858607393 = "0.0793:0.1057"
28112      0.10566858607393-0.13208573259242 = "0.1057:0.1321"
28113      0.13208573259242-0.1585028791109 = "0.1321:0.1585"
28114      0.1585028791109-0.18492002562938 = "0.1585:0.1849"
28115      0.18492002562938-0.21133717214787 = "0.1849:0.2113"
28116      ;
MPRINT(EM_DIAGRAM):   value F21_ 0-0.02641714651848 = "0:0.0264" 0.02641714651848-0.05283429303696 = "0.0264:0.0528" 0.05283429303696-0.07925143955545 = "0.0528:0.0793" 0.07925143955545-0.10566858607393 = "0.0793:0.1057" 0.10566858607393-0.13208573259242
= "0.1057:0.1321" 0.13208573259242-0.1585028791109 = "0.1321:0.1585" 0.1585028791109-0.18492002562938 = "0.1585:0.1849" 0.18492002562938-0.21133717214787 = "0.1849:0.2113" ;
NOTE: Format F21_ has been output.
28117      value F22_
28118      0-0.03599875352952 = "0:0.036"
28119      0.03599875352952-0.07199750705905 = "0.036:0.072"
28120      0.07199750705905-0.10799626058857 = "0.072:0.108"
28121      0.10799626058857-0.1439950141181 = "0.108:0.144"
28122      0.1439950141181-0.17999376764763 = "0.144:0.18"
28123      0.17999376764763-0.21599252117715 = "0.18:0.216"
28124      0.21599252117715-0.25199127470668 = "0.216:0.252"
28125      0.25199127470668-0.2879900282362 = "0.252:0.288"
28126      ;
MPRINT(EM_DIAGRAM):   value F22_ 0-0.03599875352952 = "0:0.036" 0.03599875352952-0.07199750705905 = "0.036:0.072" 0.07199750705905-0.10799626058857 = "0.072:0.108" 0.10799626058857-0.1439950141181 = "0.108:0.144" 0.1439950141181-0.17999376764763 =
"0.144:0.18" 0.17999376764763-0.21599252117715 = "0.18:0.216" 0.21599252117715-0.25199127470668 = "0.216:0.252" 0.25199127470668-0.2879900282362 = "0.252:0.288" ;
NOTE: Format F22_ has been output.
28127      value F23_
28128      0-0.0306675997841 = "0:0.0307"
28129      0.0306675997841-0.06133519956821 = "0.0307:0.0613"
28130      0.06133519956821-0.09200279935232 = "0.0613:0.092"
28131      0.09200279935232-0.12267039913643 = "0.092:0.1227"
28132      0.12267039913643-0.15333799892053 = "0.1227:0.1533"
28133      0.15333799892053-0.18400559870464 = "0.1533:0.184"
28134      0.18400559870464-0.21467319848875 = "0.184:0.2147"
28135      0.21467319848875-0.24534079827286 = "0.2147:0.2453"
28136      ;
MPRINT(EM_DIAGRAM):   value F23_ 0-0.0306675997841 = "0:0.0307" 0.0306675997841-0.06133519956821 = "0.0307:0.0613" 0.06133519956821-0.09200279935232 = "0.0613:0.092" 0.09200279935232-0.12267039913643 = "0.092:0.1227" 0.12267039913643-0.15333799892053 =
"0.1227:0.1533" 0.15333799892053-0.18400559870464 = "0.1533:0.184" 0.18400559870464-0.21467319848875 = "0.184:0.2147" 0.21467319848875-0.24534079827286 = "0.2147:0.2453" ;
NOTE: Format F23_ has been output.
28137      value F24_
28138      0-0.04106700387166 = "0:0.0411"
28139      0.04106700387166-0.08213400774333 = "0.0411:0.0821"
28140      0.08213400774333-0.123201011615 = "0.0821:0.1232"
28141      0.123201011615-0.16426801548667 = "0.1232:0.1643"
28142      0.16426801548667-0.20533501935834 = "0.1643:0.2053"
28143      0.20533501935834-0.24640202323001 = "0.2053:0.2464"
28144      0.24640202323001-0.28746902710168 = "0.2464:0.2875"
28145      0.28746902710168-0.32853603097335 = "0.2875:0.3285"
28146      ;
MPRINT(EM_DIAGRAM):   value F24_ 0-0.04106700387166 = "0:0.0411" 0.04106700387166-0.08213400774333 = "0.0411:0.0821" 0.08213400774333-0.123201011615 = "0.0821:0.1232" 0.123201011615-0.16426801548667 = "0.1232:0.1643" 0.16426801548667-0.20533501935834 =
"0.1643:0.2053" 0.20533501935834-0.24640202323001 = "0.2053:0.2464" 0.24640202323001-0.28746902710168 = "0.2464:0.2875" 0.28746902710168-0.32853603097335 = "0.2875:0.3285" ;
NOTE: Format F24_ has been output.
28147      value F25_
28148      0-0.0133297534723 = "0:0.0133"
28149      0.0133297534723-0.02665950694461 = "0.0133:0.0267"
28150      0.02665950694461-0.03998926041691 = "0.0267:0.04"
28151      0.03998926041691-0.05331901388922 = "0.04:0.0533"
28152      0.05331901388922-0.06664876736153 = "0.0533:0.0666"
28153      0.06664876736153-0.07997852083383 = "0.0666:0.08"
28154      0.07997852083383-0.09330827430614 = "0.08:0.0933"
28155      0.09330827430614-0.10663802777845 = "0.0933:0.1066"
28156      ;
MPRINT(EM_DIAGRAM):   value F25_ 0-0.0133297534723 = "0:0.0133" 0.0133297534723-0.02665950694461 = "0.0133:0.0267" 0.02665950694461-0.03998926041691 = "0.0267:0.04" 0.03998926041691-0.05331901388922 = "0.04:0.0533" 0.05331901388922-0.06664876736153 =
"0.0533:0.0666" 0.06664876736153-0.07997852083383 = "0.0666:0.08" 0.07997852083383-0.09330827430614 = "0.08:0.0933" 0.09330827430614-0.10663802777845 = "0.0933:0.1066" ;
NOTE: Format F25_ has been output.
28157      value F26_
28158      0-0.02272696433368 = "0:0.0227"
28159      0.02272696433368-0.04545392866736 = "0.0227:0.0455"
28160      0.04545392866736-0.06818089300104 = "0.0455:0.0682"
28161      0.06818089300104-0.09090785733473 = "0.0682:0.0909"
28162      0.09090785733473-0.11363482166841 = "0.0909:0.1136"
28163      0.11363482166841-0.13636178600209 = "0.1136:0.1364"
28164      0.13636178600209-0.15908875033578 = "0.1364:0.1591"
28165      0.15908875033578-0.18181571466946 = "0.1591:0.1818"
28166      ;
MPRINT(EM_DIAGRAM):   value F26_ 0-0.02272696433368 = "0:0.0227" 0.02272696433368-0.04545392866736 = "0.0227:0.0455" 0.04545392866736-0.06818089300104 = "0.0455:0.0682" 0.06818089300104-0.09090785733473 = "0.0682:0.0909" 0.09090785733473-0.11363482166841
= "0.0909:0.1136" 0.11363482166841-0.13636178600209 = "0.1136:0.1364" 0.13636178600209-0.15908875033578 = "0.1364:0.1591" 0.15908875033578-0.18181571466946 = "0.1591:0.1818" ;
NOTE: Format F26_ has been output.
28167      value F27_
28168      0-0.03711514687568 = "0:0.0371"
28169      0.03711514687568-0.07423029375136 = "0.0371:0.0742"
28170      0.07423029375136-0.11134544062704 = "0.0742:0.1113"
28171      0.11134544062704-0.14846058750273 = "0.1113:0.1485"
28172      0.14846058750273-0.18557573437841 = "0.1485:0.1856"
28173      0.18557573437841-0.22269088125409 = "0.1856:0.2227"
28174      0.22269088125409-0.25980602812977 = "0.2227:0.2598"
28175      0.25980602812977-0.29692117500546 = "0.2598:0.2969"
28176      ;
MPRINT(EM_DIAGRAM):   value F27_ 0-0.03711514687568 = "0:0.0371" 0.03711514687568-0.07423029375136 = "0.0371:0.0742" 0.07423029375136-0.11134544062704 = "0.0742:0.1113" 0.11134544062704-0.14846058750273 = "0.1113:0.1485" 0.14846058750273-0.18557573437841
= "0.1485:0.1856" 0.18557573437841-0.22269088125409 = "0.1856:0.2227" 0.22269088125409-0.25980602812977 = "0.2227:0.2598" 0.25980602812977-0.29692117500546 = "0.2598:0.2969" ;
NOTE: Format F27_ has been output.
28177      value F28_
28178      0-0.02281543851861 = "0:0.0228"
28179      0.02281543851861-0.04563087703722 = "0.0228:0.0456"
28180      0.04563087703722-0.06844631555583 = "0.0456:0.0684"
28181      0.06844631555583-0.09126175407444 = "0.0684:0.0913"
28182      0.09126175407444-0.11407719259306 = "0.0913:0.1141"
28183      0.11407719259306-0.13689263111167 = "0.1141:0.1369"
28184      0.13689263111167-0.15970806963028 = "0.1369:0.1597"
28185      0.15970806963028-0.18252350814889 = "0.1597:0.1825"
28186      ;
MPRINT(EM_DIAGRAM):   value F28_ 0-0.02281543851861 = "0:0.0228" 0.02281543851861-0.04563087703722 = "0.0228:0.0456" 0.04563087703722-0.06844631555583 = "0.0456:0.0684" 0.06844631555583-0.09126175407444 = "0.0684:0.0913" 0.09126175407444-0.11407719259306
= "0.0913:0.1141" 0.11407719259306-0.13689263111167 = "0.1141:0.1369" 0.13689263111167-0.15970806963028 = "0.1369:0.1597" 0.15970806963028-0.18252350814889 = "0.1597:0.1825" ;
NOTE: Format F28_ has been output.
28187      value F29_
28188      0-0.03647875297374 = "0:0.0365"
28189      0.03647875297374-0.07295750594749 = "0.0365:0.073"
28190      0.07295750594749-0.10943625892124 = "0.073:0.1094"
28191      0.10943625892124-0.14591501189498 = "0.1094:0.1459"
28192      0.14591501189498-0.18239376486873 = "0.1459:0.1824"
28193      0.18239376486873-0.21887251784248 = "0.1824:0.2189"
28194      0.21887251784248-0.25535127081622 = "0.2189:0.2554"
28195      0.25535127081622-0.29183002378997 = "0.2554:0.2918"
28196      ;
MPRINT(EM_DIAGRAM):   value F29_ 0-0.03647875297374 = "0:0.0365" 0.03647875297374-0.07295750594749 = "0.0365:0.073" 0.07295750594749-0.10943625892124 = "0.073:0.1094" 0.10943625892124-0.14591501189498 = "0.1094:0.1459" 0.14591501189498-0.18239376486873 =
"0.1459:0.1824" 0.18239376486873-0.21887251784248 = "0.1824:0.2189" 0.21887251784248-0.25535127081622 = "0.2189:0.2554" 0.25535127081622-0.29183002378997 = "0.2554:0.2918" ;
NOTE: Format F29_ has been output.
28197      value F30_
28198      0-0.04685348467595 = "0:0.0469"
28199      0.04685348467595-0.09370696935191 = "0.0469:0.0937"
28200      0.09370696935191-0.14056045402787 = "0.0937:0.1406"
28201      0.14056045402787-0.18741393870383 = "0.1406:0.1874"
28202      0.18741393870383-0.23426742337979 = "0.1874:0.2343"
28203      0.23426742337979-0.28112090805574 = "0.2343:0.2811"
28204      0.28112090805574-0.3279743927317 = "0.2811:0.328"
28205      0.3279743927317-0.37482787740766 = "0.328:0.3748"
28206      ;
MPRINT(EM_DIAGRAM):   value F30_ 0-0.04685348467595 = "0:0.0469" 0.04685348467595-0.09370696935191 = "0.0469:0.0937" 0.09370696935191-0.14056045402787 = "0.0937:0.1406" 0.14056045402787-0.18741393870383 = "0.1406:0.1874" 0.18741393870383-0.23426742337979
= "0.1874:0.2343" 0.23426742337979-0.28112090805574 = "0.2343:0.2811" 0.28112090805574-0.3279743927317 = "0.2811:0.328" 0.3279743927317-0.37482787740766 = "0.328:0.3748" ;
NOTE: Format F30_ has been output.
28207      value F31_
28208      0-0.0256592823541 = "0:0.0257"
28209      0.0256592823541-0.05131856470821 = "0.0257:0.0513"
28210      0.05131856470821-0.07697784706232 = "0.0513:0.077"
28211      0.07697784706232-0.10263712941643 = "0.077:0.1026"
28212      0.10263712941643-0.12829641177054 = "0.1026:0.1283"
28213      0.12829641177054-0.15395569412465 = "0.1283:0.154"
28214      0.15395569412465-0.17961497647876 = "0.154:0.1796"
28215      0.17961497647876-0.20527425883286 = "0.1796:0.2053"
28216      ;
MPRINT(EM_DIAGRAM):   value F31_ 0-0.0256592823541 = "0:0.0257" 0.0256592823541-0.05131856470821 = "0.0257:0.0513" 0.05131856470821-0.07697784706232 = "0.0513:0.077" 0.07697784706232-0.10263712941643 = "0.077:0.1026" 0.10263712941643-0.12829641177054 =
"0.1026:0.1283" 0.12829641177054-0.15395569412465 = "0.1283:0.154" 0.15395569412465-0.17961497647876 = "0.154:0.1796" 0.17961497647876-0.20527425883286 = "0.1796:0.2053" ;
NOTE: Format F31_ has been output.
28217      value F32_
28218      0-0.01485526091894 = "0:0.0149"
28219      0.01485526091894-0.02971052183789 = "0.0149:0.0297"
28220      0.02971052183789-0.04456578275684 = "0.0297:0.0446"
28221      0.04456578275684-0.05942104367579 = "0.0446:0.0594"
28222      0.05942104367579-0.07427630459474 = "0.0594:0.0743"
28223      0.07427630459474-0.08913156551369 = "0.0743:0.0891"
28224      0.08913156551369-0.10398682643263 = "0.0891:0.104"
28225      0.10398682643263-0.11884208735158 = "0.104:0.1188"
28226      ;
MPRINT(EM_DIAGRAM):   value F32_ 0-0.01485526091894 = "0:0.0149" 0.01485526091894-0.02971052183789 = "0.0149:0.0297" 0.02971052183789-0.04456578275684 = "0.0297:0.0446" 0.04456578275684-0.05942104367579 = "0.0446:0.0594" 0.05942104367579-0.07427630459474
= "0.0594:0.0743" 0.07427630459474-0.08913156551369 = "0.0743:0.0891" 0.08913156551369-0.10398682643263 = "0.0891:0.104" 0.10398682643263-0.11884208735158 = "0.104:0.1188" ;
NOTE: Format F32_ has been output.
28227      value F33_
28228      0-0.0387642910706 = "0:0.0388"
28229      0.0387642910706-0.0775285821412 = "0.0388:0.0775"
28230      0.0775285821412-0.1162928732118 = "0.0775:0.1163"
28231      0.1162928732118-0.1550571642824 = "0.1163:0.1551"
28232      0.1550571642824-0.193821455353 = "0.1551:0.1938"
28233      0.193821455353-0.2325857464236 = "0.1938:0.2326"
28234      0.2325857464236-0.2713500374942 = "0.2326:0.2714"
28235      0.2713500374942-0.3101143285648 = "0.2714:0.3101"
28236      ;
MPRINT(EM_DIAGRAM):   value F33_ 0-0.0387642910706 = "0:0.0388" 0.0387642910706-0.0775285821412 = "0.0388:0.0775" 0.0775285821412-0.1162928732118 = "0.0775:0.1163" 0.1162928732118-0.1550571642824 = "0.1163:0.1551" 0.1550571642824-0.193821455353 =
"0.1551:0.1938" 0.193821455353-0.2325857464236 = "0.1938:0.2326" 0.2325857464236-0.2713500374942 = "0.2326:0.2714" 0.2713500374942-0.3101143285648 = "0.2714:0.3101" ;
NOTE: Format F33_ has been output.
28237      value F34_
28238      0-0.02065425388057 = "0:0.0207"
28239      0.02065425388057-0.04130850776115 = "0.0207:0.0413"
28240      0.04130850776115-0.06196276164172 = "0.0413:0.062"
28241      0.06196276164172-0.0826170155223 = "0.062:0.0826"
28242      0.0826170155223-0.10327126940288 = "0.0826:0.1033"
28243      0.10327126940288-0.12392552328345 = "0.1033:0.1239"
28244      0.12392552328345-0.14457977716403 = "0.1239:0.1446"
28245      0.14457977716403-0.16523403104461 = "0.1446:0.1652"
28246      ;
MPRINT(EM_DIAGRAM):   value F34_ 0-0.02065425388057 = "0:0.0207" 0.02065425388057-0.04130850776115 = "0.0207:0.0413" 0.04130850776115-0.06196276164172 = "0.0413:0.062" 0.06196276164172-0.0826170155223 = "0.062:0.0826" 0.0826170155223-0.10327126940288 =
"0.0826:0.1033" 0.10327126940288-0.12392552328345 = "0.1033:0.1239" 0.12392552328345-0.14457977716403 = "0.1239:0.1446" 0.14457977716403-0.16523403104461 = "0.1446:0.1652" ;
NOTE: Format F34_ has been output.
28247      value F35_
28248      0-0.05952747737836 = "0:0.0595"
28249      0.05952747737836-0.11905495475672 = "0.0595:0.1191"
28250      0.11905495475672-0.17858243213508 = "0.1191:0.1786"
28251      0.17858243213508-0.23810990951345 = "0.1786:0.2381"
28252      0.23810990951345-0.29763738689181 = "0.2381:0.2976"
28253      0.29763738689181-0.35716486427017 = "0.2976:0.3572"
28254      0.35716486427017-0.41669234164854 = "0.3572:0.4167"
28255      0.41669234164854-0.4762198190269 = "0.4167:0.4762"
28256      ;
MPRINT(EM_DIAGRAM):   value F35_ 0-0.05952747737836 = "0:0.0595" 0.05952747737836-0.11905495475672 = "0.0595:0.1191" 0.11905495475672-0.17858243213508 = "0.1191:0.1786" 0.17858243213508-0.23810990951345 = "0.1786:0.2381" 0.23810990951345-0.29763738689181
= "0.2381:0.2976" 0.29763738689181-0.35716486427017 = "0.2976:0.3572" 0.35716486427017-0.41669234164854 = "0.3572:0.4167" 0.41669234164854-0.4762198190269 = "0.4167:0.4762" ;
NOTE: Format F35_ has been output.
28257      value F36_
28258      0-0.03726885539599 = "0:0.0373"
28259      0.03726885539599-0.07453771079199 = "0.0373:0.0745"
28260      0.07453771079199-0.11180656618799 = "0.0745:0.1118"
28261      0.11180656618799-0.14907542158399 = "0.1118:0.1491"
28262      0.14907542158399-0.18634427697998 = "0.1491:0.1863"
28263      0.18634427697998-0.22361313237598 = "0.1863:0.2236"
28264      0.22361313237598-0.26088198777198 = "0.2236:0.2609"
28265      0.26088198777198-0.29815084316798 = "0.2609:0.2982"
28266      ;
MPRINT(EM_DIAGRAM):   value F36_ 0-0.03726885539599 = "0:0.0373" 0.03726885539599-0.07453771079199 = "0.0373:0.0745" 0.07453771079199-0.11180656618799 = "0.0745:0.1118" 0.11180656618799-0.14907542158399 = "0.1118:0.1491" 0.14907542158399-0.18634427697998
= "0.1491:0.1863" 0.18634427697998-0.22361313237598 = "0.1863:0.2236" 0.22361313237598-0.26088198777198 = "0.2236:0.2609" 0.26088198777198-0.29815084316798 = "0.2609:0.2982" ;
NOTE: Format F36_ has been output.
28267      value F37_
28268      0-0.02919763719302 = "0:0.0292"
28269      0.02919763719302-0.05839527438604 = "0.0292:0.0584"
28270      0.05839527438604-0.08759291157906 = "0.0584:0.0876"
28271      0.08759291157906-0.11679054877208 = "0.0876:0.1168"
28272      0.11679054877208-0.1459881859651 = "0.1168:0.146"
28273      0.1459881859651-0.17518582315812 = "0.146:0.1752"
28274      0.17518582315812-0.20438346035115 = "0.1752:0.2044"
28275      0.20438346035115-0.23358109754417 = "0.2044:0.2336"
28276      ;
MPRINT(EM_DIAGRAM):   value F37_ 0-0.02919763719302 = "0:0.0292" 0.02919763719302-0.05839527438604 = "0.0292:0.0584" 0.05839527438604-0.08759291157906 = "0.0584:0.0876" 0.08759291157906-0.11679054877208 = "0.0876:0.1168" 0.11679054877208-0.1459881859651 =
"0.1168:0.146" 0.1459881859651-0.17518582315812 = "0.146:0.1752" 0.17518582315812-0.20438346035115 = "0.1752:0.2044" 0.20438346035115-0.23358109754417 = "0.2044:0.2336" ;
NOTE: Format F37_ has been output.
28277      value F38_
28278      0-0.02504185283143 = "0:0.025"
28279      0.02504185283143-0.05008370566287 = "0.025:0.0501"
28280      0.05008370566287-0.0751255584943 = "0.0501:0.0751"
28281      0.0751255584943-0.10016741132574 = "0.0751:0.1002"
28282      0.10016741132574-0.12520926415718 = "0.1002:0.1252"
28283      0.12520926415718-0.15025111698861 = "0.1252:0.1503"
28284      0.15025111698861-0.17529296982005 = "0.1503:0.1753"
28285      0.17529296982005-0.20033482265149 = "0.1753:0.2003"
28286      ;
MPRINT(EM_DIAGRAM):   value F38_ 0-0.02504185283143 = "0:0.025" 0.02504185283143-0.05008370566287 = "0.025:0.0501" 0.05008370566287-0.0751255584943 = "0.0501:0.0751" 0.0751255584943-0.10016741132574 = "0.0751:0.1002" 0.10016741132574-0.12520926415718 =
"0.1002:0.1252" 0.12520926415718-0.15025111698861 = "0.1252:0.1503" 0.15025111698861-0.17529296982005 = "0.1503:0.1753" 0.17529296982005-0.20033482265149 = "0.1753:0.2003" ;
NOTE: Format F38_ has been output.
28287      value F39_
28288      0-0.0457999023815 = "0:0.0458"
28289      0.0457999023815-0.09159980476301 = "0.0458:0.0916"
28290      0.09159980476301-0.13739970714451 = "0.0916:0.1374"
28291      0.13739970714451-0.18319960952602 = "0.1374:0.1832"
28292      0.18319960952602-0.22899951190753 = "0.1832:0.229"
28293      0.22899951190753-0.27479941428903 = "0.229:0.2748"
28294      0.27479941428903-0.32059931667054 = "0.2748:0.3206"
28295      0.32059931667054-0.36639921905205 = "0.3206:0.3664"
28296      ;
MPRINT(EM_DIAGRAM):   value F39_ 0-0.0457999023815 = "0:0.0458" 0.0457999023815-0.09159980476301 = "0.0458:0.0916" 0.09159980476301-0.13739970714451 = "0.0916:0.1374" 0.13739970714451-0.18319960952602 = "0.1374:0.1832" 0.18319960952602-0.22899951190753 =
"0.1832:0.229" 0.22899951190753-0.27479941428903 = "0.229:0.2748" 0.27479941428903-0.32059931667054 = "0.2748:0.3206" 0.32059931667054-0.36639921905205 = "0.3206:0.3664" ;
NOTE: Format F39_ has been output.
28297      value F40_
28298      0-0.02108718241718 = "0:0.0211"
28299      0.02108718241718-0.04217436483436 = "0.0211:0.0422"
28300      0.04217436483436-0.06326154725154 = "0.0422:0.0633"
28301      0.06326154725154-0.08434872966872 = "0.0633:0.0843"
28302      0.08434872966872-0.10543591208591 = "0.0843:0.1054"
28303      0.10543591208591-0.12652309450309 = "0.1054:0.1265"
28304      0.12652309450309-0.14761027692027 = "0.1265:0.1476"
28305      0.14761027692027-0.16869745933745 = "0.1476:0.1687"
28306      ;
MPRINT(EM_DIAGRAM):   value F40_ 0-0.02108718241718 = "0:0.0211" 0.02108718241718-0.04217436483436 = "0.0211:0.0422" 0.04217436483436-0.06326154725154 = "0.0422:0.0633" 0.06326154725154-0.08434872966872 = "0.0633:0.0843" 0.08434872966872-0.10543591208591
= "0.0843:0.1054" 0.10543591208591-0.12652309450309 = "0.1054:0.1265" 0.12652309450309-0.14761027692027 = "0.1265:0.1476" 0.14761027692027-0.16869745933745 = "0.1476:0.1687" ;
NOTE: Format F40_ has been output.
28307      value F41_
28308      0-0.02151717808604 = "0:0.0215"
28309      0.02151717808604-0.04303435617208 = "0.0215:0.043"
28310      0.04303435617208-0.06455153425813 = "0.043:0.0646"
28311      0.06455153425813-0.08606871234417 = "0.0646:0.0861"
28312      0.08606871234417-0.10758589043021 = "0.0861:0.1076"
28313      0.10758589043021-0.12910306851626 = "0.1076:0.1291"
28314      0.12910306851626-0.1506202466023 = "0.1291:0.1506"
28315      0.1506202466023-0.17213742468835 = "0.1506:0.1721"
28316      ;
MPRINT(EM_DIAGRAM):   value F41_ 0-0.02151717808604 = "0:0.0215" 0.02151717808604-0.04303435617208 = "0.0215:0.043" 0.04303435617208-0.06455153425813 = "0.043:0.0646" 0.06455153425813-0.08606871234417 = "0.0646:0.0861" 0.08606871234417-0.10758589043021 =
"0.0861:0.1076" 0.10758589043021-0.12910306851626 = "0.1076:0.1291" 0.12910306851626-0.1506202466023 = "0.1291:0.1506" 0.1506202466023-0.17213742468835 = "0.1506:0.1721" ;
NOTE: Format F41_ has been output.
28317      value F42_
28318      0-0.03787042281537 = "0:0.0379"
28319      0.03787042281537-0.07574084563074 = "0.0379:0.0757"
28320      0.07574084563074-0.11361126844611 = "0.0757:0.1136"
28321      0.11361126844611-0.15148169126148 = "0.1136:0.1515"
28322      0.15148169126148-0.18935211407685 = "0.1515:0.1894"
28323      0.18935211407685-0.22722253689222 = "0.1894:0.2272"
28324      0.22722253689222-0.26509295970759 = "0.2272:0.2651"
28325      0.26509295970759-0.30296338252296 = "0.2651:0.303"
28326      ;
MPRINT(EM_DIAGRAM):   value F42_ 0-0.03787042281537 = "0:0.0379" 0.03787042281537-0.07574084563074 = "0.0379:0.0757" 0.07574084563074-0.11361126844611 = "0.0757:0.1136" 0.11361126844611-0.15148169126148 = "0.1136:0.1515" 0.15148169126148-0.18935211407685
= "0.1515:0.1894" 0.18935211407685-0.22722253689222 = "0.1894:0.2272" 0.22722253689222-0.26509295970759 = "0.2272:0.2651" 0.26509295970759-0.30296338252296 = "0.2651:0.303" ;
NOTE: Format F42_ has been output.
28327      value F43_
28328      0-0.01675519433817 = "0:0.0168"
28329      0.01675519433817-0.03351038867635 = "0.0168:0.0335"
28330      0.03351038867635-0.05026558301452 = "0.0335:0.0503"
28331      0.05026558301452-0.0670207773527 = "0.0503:0.067"
28332      0.0670207773527-0.08377597169087 = "0.067:0.0838"
28333      0.08377597169087-0.10053116602905 = "0.0838:0.1005"
28334      0.10053116602905-0.11728636036722 = "0.1005:0.1173"
28335      0.11728636036722-0.1340415547054 = "0.1173:0.134"
28336      ;
MPRINT(EM_DIAGRAM):   value F43_ 0-0.01675519433817 = "0:0.0168" 0.01675519433817-0.03351038867635 = "0.0168:0.0335" 0.03351038867635-0.05026558301452 = "0.0335:0.0503" 0.05026558301452-0.0670207773527 = "0.0503:0.067" 0.0670207773527-0.08377597169087 =
"0.067:0.0838" 0.08377597169087-0.10053116602905 = "0.0838:0.1005" 0.10053116602905-0.11728636036722 = "0.1005:0.1173" 0.11728636036722-0.1340415547054 = "0.1173:0.134" ;
NOTE: Format F43_ has been output.
28337      value F44_
28338      0-0.01498335714603 = "0:0.015"
28339      0.01498335714603-0.02996671429206 = "0.015:0.03"
28340      0.02996671429206-0.0449500714381 = "0.03:0.045"
28341      0.0449500714381-0.05993342858413 = "0.045:0.0599"
28342      0.05993342858413-0.07491678573017 = "0.0599:0.0749"
28343      0.07491678573017-0.0899001428762 = "0.0749:0.0899"
28344      0.0899001428762-0.10488350002224 = "0.0899:0.1049"
28345      0.10488350002224-0.11986685716827 = "0.1049:0.1199"
28346      ;
MPRINT(EM_DIAGRAM):   value F44_ 0-0.01498335714603 = "0:0.015" 0.01498335714603-0.02996671429206 = "0.015:0.03" 0.02996671429206-0.0449500714381 = "0.03:0.045" 0.0449500714381-0.05993342858413 = "0.045:0.0599" 0.05993342858413-0.07491678573017 =
"0.0599:0.0749" 0.07491678573017-0.0899001428762 = "0.0749:0.0899" 0.0899001428762-0.10488350002224 = "0.0899:0.1049" 0.10488350002224-0.11986685716827 = "0.1049:0.1199" ;
NOTE: Format F44_ has been output.
MPRINT(EM_DIAGRAM):   run;
28347      run;
 
NOTE: PROCEDURE FORMAT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28348      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
28349      ods output crosstabfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output crosstabfreqs=WORK.TEMPFREQ;
28350      proc freq data = EMWS3.Clus2_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS3.Clus2_TRAIN order=formatted addnames;
28351      table ACCESS * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ACCESS * _SEGMENT_ / missing;
28352      table ARGIC * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ARGIC * _SEGMENT_ / missing;
28353      table ARMENIA * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ARMENIA * _SEGMENT_ / missing;
28354      table ARMENIAN * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ARMENIAN * _SEGMENT_ / missing;
28355      table BANK * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table BANK * _SEGMENT_ / missing;
28356      table BOOK * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table BOOK * _SEGMENT_ / missing;
28357      table CALIFORNIA * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CALIFORNIA * _SEGMENT_ / missing;
28358      table CENTER * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CENTER * _SEGMENT_ / missing;
28359      table CODE * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CODE * _SEGMENT_ / missing;
28360      table COLOR * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table COLOR * _SEGMENT_ / missing;
28361      table COMMUN * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table COMMUN * _SEGMENT_ / missing;
28362      table COMPUT * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table COMPUT * _SEGMENT_ / missing;
28363      table CONTROL * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CONTROL * _SEGMENT_ / missing;
28364      table DEPT * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table DEPT * _SEGMENT_ / missing;
28365      table DISEAS * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table DISEAS * _SEGMENT_ / missing;
28366      table DOCTOR * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table DOCTOR * _SEGMENT_ / missing;
28367      table DON * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table DON * _SEGMENT_ / missing;
28368      table EDU * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table EDU * _SEGMENT_ / missing;
28369      table FIND * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table FIND * _SEGMENT_ / missing;
28370      table FRIEND * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table FRIEND * _SEGMENT_ / missing;
28371      table GEB * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GEB * _SEGMENT_ / missing;
28372      table GORDON * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GORDON * _SEGMENT_ / missing;
28373      table KILL * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table KILL * _SEGMENT_ / missing;
28374      table MARK * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MARK * _SEGMENT_ / missing;
28375      table MED * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MED * _SEGMENT_ / missing;
28376      table MEDIC * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MEDIC * _SEGMENT_ / missing;
28377      table NUMBER * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table NUMBER * _SEGMENT_ / missing;
28378      table ORIGIN * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table ORIGIN * _SEGMENT_ / missing;
28379      table PHONE * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PHONE * _SEGMENT_ / missing;
28380      table PITT * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PITT * _SEGMENT_ / missing;
28381      table PITTSBURGH * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PITTSBURGH * _SEGMENT_ / missing;
28382      table POLICI * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table POLICI * _SEGMENT_ / missing;
28383      table PUBLIC * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PUBLIC * _SEGMENT_ / missing;
28384      table QUESTION * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table QUESTION * _SEGMENT_ / missing;
28385      table SERDAR * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table SERDAR * _SEGMENT_ / missing;
28386      table TALK * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table TALK * _SEGMENT_ / missing;
28387      table TREATMENT * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table TREATMENT * _SEGMENT_ / missing;
28388      table TRUE * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table TRUE * _SEGMENT_ / missing;
28389      table TURKISH * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table TURKISH * _SEGMENT_ / missing;
28390      table UNIV * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table UNIV * _SEGMENT_ / missing;
28391      table UNIVERS * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table UNIVERS * _SEGMENT_ / missing;
28392      table UNIX * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table UNIX * _SEGMENT_ / missing;
28393      table WONDER * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table WONDER * _SEGMENT_ / missing;
28394      table WORLD * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table WORLD * _SEGMENT_ / missing;
28395      format ACCESS F1_.;
MPRINT(EM_DIAGRAM):   format ACCESS F1_.;
28396      format ARGIC F2_.;
MPRINT(EM_DIAGRAM):   format ARGIC F2_.;
28397      format ARMENIA F3_.;
MPRINT(EM_DIAGRAM):   format ARMENIA F3_.;
28398      format ARMENIAN F4_.;
MPRINT(EM_DIAGRAM):   format ARMENIAN F4_.;
28399      format BANK F5_.;
MPRINT(EM_DIAGRAM):   format BANK F5_.;
28400      format BOOK F6_.;
MPRINT(EM_DIAGRAM):   format BOOK F6_.;
28401      format CALIFORNIA F7_.;
MPRINT(EM_DIAGRAM):   format CALIFORNIA F7_.;
28402      format CENTER F8_.;
MPRINT(EM_DIAGRAM):   format CENTER F8_.;
28403      format CODE F9_.;
MPRINT(EM_DIAGRAM):   format CODE F9_.;
28404      format COLOR F10_.;
MPRINT(EM_DIAGRAM):   format COLOR F10_.;
28405      format COMMUN F11_.;
MPRINT(EM_DIAGRAM):   format COMMUN F11_.;
28406      format COMPUT F12_.;
MPRINT(EM_DIAGRAM):   format COMPUT F12_.;
28407      format CONTROL F13_.;
MPRINT(EM_DIAGRAM):   format CONTROL F13_.;
28408      format DEPT F14_.;
MPRINT(EM_DIAGRAM):   format DEPT F14_.;
28409      format DISEAS F15_.;
MPRINT(EM_DIAGRAM):   format DISEAS F15_.;
28410      format DOCTOR F16_.;
MPRINT(EM_DIAGRAM):   format DOCTOR F16_.;
28411      format DON F17_.;
MPRINT(EM_DIAGRAM):   format DON F17_.;
28412      format EDU F18_.;
MPRINT(EM_DIAGRAM):   format EDU F18_.;
28413      format FIND F19_.;
MPRINT(EM_DIAGRAM):   format FIND F19_.;
28414      format FRIEND F20_.;
MPRINT(EM_DIAGRAM):   format FRIEND F20_.;
28415      format GEB F21_.;
MPRINT(EM_DIAGRAM):   format GEB F21_.;
28416      format GORDON F22_.;
MPRINT(EM_DIAGRAM):   format GORDON F22_.;
28417      format KILL F23_.;
MPRINT(EM_DIAGRAM):   format KILL F23_.;
28418      format MARK F24_.;
MPRINT(EM_DIAGRAM):   format MARK F24_.;
28419      format MED F25_.;
MPRINT(EM_DIAGRAM):   format MED F25_.;
28420      format MEDIC F26_.;
MPRINT(EM_DIAGRAM):   format MEDIC F26_.;
28421      format NUMBER F27_.;
MPRINT(EM_DIAGRAM):   format NUMBER F27_.;
28422      format ORIGIN F28_.;
MPRINT(EM_DIAGRAM):   format ORIGIN F28_.;
28423      format PHONE F29_.;
MPRINT(EM_DIAGRAM):   format PHONE F29_.;
28424      format PITT F30_.;
MPRINT(EM_DIAGRAM):   format PITT F30_.;
28425      format PITTSBURGH F31_.;
MPRINT(EM_DIAGRAM):   format PITTSBURGH F31_.;
28426      format POLICI F32_.;
MPRINT(EM_DIAGRAM):   format POLICI F32_.;
28427      format PUBLIC F33_.;
MPRINT(EM_DIAGRAM):   format PUBLIC F33_.;
28428      format QUESTION F34_.;
MPRINT(EM_DIAGRAM):   format QUESTION F34_.;
28429      format SERDAR F35_.;
MPRINT(EM_DIAGRAM):   format SERDAR F35_.;
28430      format TALK F36_.;
MPRINT(EM_DIAGRAM):   format TALK F36_.;
28431      format TREATMENT F37_.;
MPRINT(EM_DIAGRAM):   format TREATMENT F37_.;
28432      format TRUE F38_.;
MPRINT(EM_DIAGRAM):   format TRUE F38_.;
28433      format TURKISH F39_.;
MPRINT(EM_DIAGRAM):   format TURKISH F39_.;
28434      format UNIV F40_.;
MPRINT(EM_DIAGRAM):   format UNIV F40_.;
28435      format UNIVERS F41_.;
MPRINT(EM_DIAGRAM):   format UNIVERS F41_.;
28436      format UNIX F42_.;
MPRINT(EM_DIAGRAM):   format UNIX F42_.;
28437      format WONDER F43_.;
MPRINT(EM_DIAGRAM):   format WONDER F43_.;
28438      format WORLD F44_.;
MPRINT(EM_DIAGRAM):   format WORLD F44_.;
28439      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.50 seconds
      cpu time            0.48 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: The data set WORK.TEMPFREQ has 4158 observations and 55 variables.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.54 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
28440      quit;
28441      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
28442      data EMWS3.Clus2_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data EMWS3.Clus2_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
28443      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" _SEGMENT_ = "Segment Variable" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
28444         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
28445         "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" _SEGMENT_ = "Segment Variable" Type = "Tipo" _X_ = "Valor numérico" _XLABEL_ = "Valor formateado" COUNT = "Número de ocurrencias" PERCENT = "Porcentaje";
28446      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
28447      varnum = varnum(dsid, 'ROWVARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'ROWVARIABLE');
28448      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
28449      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
28450      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
28451      bynum = varnum(dsid, "_SEGMENT_");
MPRINT(EM_DIAGRAM):   bynum = varnum(dsid, "_SEGMENT_");
28452      length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
MPRINT(EM_DIAGRAM):   length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
28453      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
28454      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
28455      percent = getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent = getvarn(dsid, pvarnum);
28456      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
28457      varblnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   varblnum = varnum(dsid, _VARIABLE_);
28458      _SEGMENT_ = getvarn(dsid, bynum);
MPRINT(EM_DIAGRAM):   _SEGMENT_ = getvarn(dsid, bynum);
28459      type = vartype(dsid, varblnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, varblnum);
28460      varformat = varfmt(dsid, varblnum);
MPRINT(EM_DIAGRAM):   varformat = varfmt(dsid, varblnum);
28461      if varformat eq '' then varformat = 'best12.';
MPRINT(EM_DIAGRAM):   if varformat eq '' then varformat = 'best12.';
28462      _X_=.;
MPRINT(EM_DIAGRAM):   _X_=.;
28463      if type = 'N' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
28464      _X_ = getvarn(dsid, varblnum);
MPRINT(EM_DIAGRAM):   _X_ = getvarn(dsid, varblnum);
28465      _XLABEL_ = left(putn(_X_, varformat));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(putn(_X_, varformat));
28466      end;
MPRINT(EM_DIAGRAM):   end;
28467      else _XLABEL_ = getvarc(dsid, varblnum);
MPRINT(EM_DIAGRAM):   else _XLABEL_ = getvarc(dsid, varblnum);
28468      if getvarc(dsid, typenum) = '11' then output;
MPRINT(EM_DIAGRAM):   if getvarc(dsid, typenum) = '11' then output;
28469      end;
MPRINT(EM_DIAGRAM):   end;
28470      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
28471      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS3.CLUS2_PROFILE has 3340 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
28472      proc sort data=EMWS3.Clus2_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus2_PROFILE NOTHREADS;
28473      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
28474      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3340 observations read from the data set EMWS3.CLUS2_PROFILE.
NOTE: The data set EMWS3.CLUS2_PROFILE has 3340 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28475      proc means data=EMWS3.Clus2_PROFILE noprint missing NWAY;
MPRINT(EM_DIAGRAM):   proc means data=EMWS3.Clus2_PROFILE noprint missing NWAY;
28476      class _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   class _VARIABLE_ _SEGMENT_;
28477      var COUNT;
MPRINT(EM_DIAGRAM):   var COUNT;
28478      output out=WORK.Clus2_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
MPRINT(EM_DIAGRAM):   output out=WORK.Clus2_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
28479      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3340 observations read from the data set EMWS3.CLUS2_PROFILE.
NOTE: The data set WORK.CLUS2_STATCOUNT has 440 observations and 3 variables.
NOTE: PROCEDURE MEANS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28480      proc sort data=WORK.Clus2_STATCOUNT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus2_STATCOUNT NOTHREADS;
28481      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
28482      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 440 observations read from the data set WORK.CLUS2_STATCOUNT.
NOTE: The data set WORK.CLUS2_STATCOUNT has 440 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28483      data EMWS3.Clus2_PROFILE(drop=SUM);
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_PROFILE(drop=SUM);
28484      label BYPERCENT= "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE, _SEGMENT_))";
MPRINT(EM_DIAGRAM):   label BYPERCENT= "Porcentaje";
28485      merge EMWS3.Clus2_PROFILE WORK.Clus2_STATCOUNT;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus2_PROFILE WORK.Clus2_STATCOUNT;
28486      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
28487      if SUM ne . then BYPERCENT = 100*COUNT/SUM;
MPRINT(EM_DIAGRAM):   if SUM ne . then BYPERCENT = 100*COUNT/SUM;
28488      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3340 observations read from the data set EMWS3.CLUS2_PROFILE.
NOTE: There were 440 observations read from the data set WORK.CLUS2_STATCOUNT.
NOTE: The data set EMWS3.CLUS2_PROFILE has 3340 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28489      proc sort data=EMWS3.Clus2_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS3.Clus2_PROFILE NOTHREADS;
28490      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
28491      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3340 observations read from the data set EMWS3.CLUS2_PROFILE.
NOTE: The data set EMWS3.CLUS2_PROFILE has 3340 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28492      proc sort data=WORK.M2S64EEM;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M2S64EEM;
28493      by Name;
MPRINT(EM_DIAGRAM):   by Name;
28494      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 45 observations read from the data set WORK.M2S64EEM.
NOTE: The data set WORK.M2S64EEM has 45 observations and 21 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28495      data EMWS3.Clus2_PROFILE;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_PROFILE;
28496      merge EMWS3.Clus2_PROFILE(in=_a) WORK.M2S64EEM(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus2_PROFILE(in=_a) WORK.M2S64EEM(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
28497      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
28498      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Rol";
28499      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Etiqueta";
28500      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
28501      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 3340 observations read from the data set EMWS3.CLUS2_PROFILE.
NOTE: There were 45 observations read from the data set WORK.M2S64EEM.
NOTE: The data set EMWS3.CLUS2_PROFILE has 3340 observations and 10 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28502      proc sort data=EMWS3.Clus2_PROFILE;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS3.Clus2_PROFILE;
28503      by _SEGMENT_ _VARIABLE_ _X_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_ _X_;
28504      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3340 observations read from the data set EMWS3.CLUS2_PROFILE.
NOTE: The data set EMWS3.CLUS2_PROFILE has 3340 observations and 10 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28505      data EMWS3.Clus2_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
28506      set EMWS3.Clus2_PROFILE;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus2_PROFILE;
28507      retain orderedValue 0;
MPRINT(EM_DIAGRAM):   retain orderedValue 0;
28508      label OrderedValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_OrderedValue_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedValue = "Valores ordenados";
28509      by _SEGMENT_ _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_;
28510      if first._variable_ then orderedValue=1;
MPRINT(EM_DIAGRAM):   if first._variable_ then orderedValue=1;
28511      else orderedValue+1;
MPRINT(EM_DIAGRAM):   else orderedValue+1;
28512      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3340 observations read from the data set EMWS3.CLUS2_PROFILE.
NOTE: The data set EMWS3.CLUS2_PROFILE has 3340 observations and 11 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28513      proc transpose data=EMWS3.Clus2_OUTVAR out=WORK.Clus2_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS3.Clus2_OUTVAR out=WORK.Clus2_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
28514      var ACCESS--YOU;
MPRINT(EM_DIAGRAM):   var ACCESS--YOU;
28515      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
28516      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS3.CLUS2_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS2_OUTVAR has 241 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28517      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
28518      * Clus2: variables DMVQ;
MPRINT(EM_DIAGRAM):   * Clus2: variables DMVQ;
28519      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
28520      %macro dmvqvars;
28521          ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC
28522         ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD
28523         BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE
28524         COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT
28525         CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI
28526         DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL
28527         ENGIN ERROR EVENT EXPERI FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND
28528         FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND
28529         GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT
28530         INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD KILL KIND LEVEL
28531         LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON
28532         MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN
28533         OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
28534         POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR
28535         RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN
28536         SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL
28537         SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN
28538         SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE
28539         TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA
28540         VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
28541      %mend ;
28542
28543
 
28544      data WORK.Clus2_temp;
MPRINT(EM_DIAGRAM):    data WORK.Clus2_temp;
28545      set EMWS3.Clus2_OUTMEAN;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus2_OUTMEAN;
28546      _idvar_=left(put(_SEGMENT_,4.));
MPRINT(EM_DIAGRAM):   _idvar_=left(put(_SEGMENT_,4.));
28547      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS3.CLUS2_OUTMEAN.
NOTE: The data set WORK.CLUS2_TEMP has 10 observations and 251 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28548      proc distance data=WORK.Clus2_temp out=EMWS3.Clus2_DISTANCE method=l(2) shape=square;
MPRINT(EM_DIAGRAM):   proc distance data=WORK.Clus2_temp out=EMWS3.Clus2_DISTANCE method=l(2) shape=square;
28549      id _idvar_;
MPRINT(EM_DIAGRAM):   id _idvar_;
28550      var interval(%dmvqvars);
MPRINT(EM_DIAGRAM):   var interval(
MPRINT(DMVQVARS):  ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE COLOR
COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT FAX FEEL
FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD KEYWORD
KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE POINT
POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND SOURC
STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER WORK
WORLD XLIB XTERM YEAR YOU
MPRINT(EM_DIAGRAM):  );
28551      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS3.CLUS2_DISTANCE has 10 observations and 11 variables.
NOTE: PROCEDURE DISTANCE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28552      proc mds data=EMWS3.Clus2_DISTANCE out=WORK.Clus2_mds level=absolute nohist shape=square dim=3;
MPRINT(EM_DIAGRAM):    proc mds data=EMWS3.Clus2_DISTANCE out=WORK.Clus2_mds level=absolute nohist shape=square dim=3;
28553      object _idvar_;
MPRINT(EM_DIAGRAM):   object _idvar_;
28554      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Convergence reached in 21 iterations.
NOTE: The data set WORK.CLUS2_MDS has 11 observations and 8 variables.
NOTE: PROCEDURE MDS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
28555      quit;
28556      data WORK.Clus2_mds;
MPRINT(EM_DIAGRAM):   data WORK.Clus2_mds;
28557      set WORK.Clus2_mds;
MPRINT(EM_DIAGRAM):   set WORK.Clus2_mds;
28558      if _type_ ne 'CONFIG' then delete;
MPRINT(EM_DIAGRAM):   if _type_ ne 'CONFIG' then delete;
28559      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK.CLUS2_MDS.
NOTE: The data set WORK.CLUS2_MDS has 10 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28560      data WORK.Clus2_mds(label="&label" keep=_idvar_ _radius_ dim1 dim2 dim3);
WARNING: Apparent symbolic reference LABEL not resolved.
MPRINT(EM_DIAGRAM):   data WORK.Clus2_mds(label="&label" KEEP=_idvar_ _radius_ dim1 dim2 dim3);
28561      merge WORK.Clus2_temp WORK.Clus2_mds;
MPRINT(EM_DIAGRAM):   merge WORK.Clus2_temp WORK.Clus2_mds;
28562      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.CLUS2_TEMP.
NOTE: There were 10 observations read from the data set WORK.CLUS2_MDS.
NOTE: The data set WORK.CLUS2_MDS has 10 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28563      goptions reset=all device=PNG;
MPRINT(EM_DIAGRAM):   goptions reset=all device=PNG;
28564      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
28565      title1 "%sysfunc(sasmsg(sashelp.dmine, rpt_ClusterDistance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title1 "Proximidades clúster";
28566      %plotit(data=WORK.Clus2_mds, datatype=mds, radii=_radius_, labelvar=_idvar_, symtype=circle, symbols='*', gout=WORK.Clus2, gname=DISTANCE, gopts2=nodisplay, gopts=device=GIF, gopplot=cback=white, titlecol=black, labelcol=black, tickcol=black,
MPRINT(EM_DIAGRAM):   *------debugging routine to dump out macro variables------;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):  *=========================== Macro Start =============================;
28567         framecol=black, post=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD2372_MIIKYMEDIA_\Prc2\plotit.ps);
MPRINT(PLOTIT):   options nonotes;
MPRINT(PLOTIT):   options missing='.';
MPRINT(PLOTIT):   options noserror;
MPRINT(PLOTIT):   options serror;
MPRINT(PLOTIT):   *------store starting time, initialize a few variables-------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   length name $ 8 __debug value $ 500 glob $ 32767;
MPRINT(PLOTIT):   __time = datetime();
MPRINT(PLOTIT):   call symput('start',compress(put(__time,best15.)));
MPRINT(PLOTIT):   *------override parameters?-------;
MPRINT(PLOTIT):   glob = left(symget('plotitop'));
MPRINT(PLOTIT):   if glob ne ' ' then put 'Overridden Parameters:';
MPRINT(PLOTIT):   do while(glob ne ' ');
MPRINT(PLOTIT):   i = index(glob, '=');
MPRINT(PLOTIT):   name = substr(glob, 1, i - 1);
MPRINT(PLOTIT):   glob = left(substr(glob, i + 1));
MPRINT(PLOTIT):   i = index(glob, ',');
MPRINT(PLOTIT):   if i = 0 then i = length(glob) + 1;
MPRINT(PLOTIT):   value = substr(glob, 1, i);
MPRINT(PLOTIT):   value = translate(value, ' ', ',');
MPRINT(PLOTIT):   glob = left(substr(glob, i + 1));
MPRINT(PLOTIT):   put name +(-1) '=' value;
MPRINT(PLOTIT):   call symput(name, trim(value));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------debugging flags-------;
MPRINT(PLOTIT):   __debug = symget('debug');
MPRINT(PLOTIT):   call symput('dbyes' ,compress(put(index(__debug,'vars') ,3.)));
MPRINT(PLOTIT):   call symput('dbprint' ,compress(put(index(__debug,'dprint'),3.)));
MPRINT(PLOTIT):   call symput('dbtime' ,compress(put(index(__debug,'time') ,3.)));
MPRINT(PLOTIT):   call symput('dbmprint',compress(put(index(__debug,'mprint'),3.)));
MPRINT(PLOTIT):   if (sysprod('stat') + sysprod('graph')) ne 2 then do;
MPRINT(PLOTIT):   put 'ERROR: SAS/STAT and SAS/GRAPH must be licensed ' 'to run this macro.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if symget('style') ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: STYLE= is not supported in this release of the macro.' / '       Use OPTIONS NOGSTYLE to get the old appearance.' / '       Typically, you should set a style ' 'on the ODS destination.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   length s $ 20;
MPRINT(PLOTIT):   retain s ' ';
MPRINT(PLOTIT):   file print;
MPRINT(PLOTIT):   set sashelp.vdest;
MPRINT(PLOTIT):   notb = style ne ' ';
MPRINT(PLOTIT):   style = lowcase(style);
MPRINT(PLOTIT):   if style eq 'listing' and s eq ' ' then call symputx('style', style, 'L');
MPRINT(PLOTIT):   else if style ne 'listing' and notb then do;
MPRINT(PLOTIT):   if s eq ' ' then s = style;
MPRINT(PLOTIT):   else if style ne s then do;
MPRINT(PLOTIT):   file log;
MPRINT(PLOTIT):   put 'ERROR: Multiple non-listing destinations with ' 'multiple ' 'styles ' 'are ' 'open.';
MPRINT(PLOTIT):   call symput('abort', '2');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if s ne ' ' then call symputx('style', s, 'L');
MPRINT(PLOTIT):   if _error_ then call symput('abort', '1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   *------mention var names for ordinary SAS syntax check-------;
MPRINT(PLOTIT):   retain _idvar_ __junk 0;
MPRINT(PLOTIT):   array __1 _idvar_ __junk;
MPRINT(PLOTIT):   *------guard against silly n-literals------;
MPRINT(PLOTIT):   if length(symget('labelvar')) > 67 or length(symget('symvar')) > 67 or length(symget('typevar')) > 67 then do;
MPRINT(PLOTIT):   put 'ERROR: Your names are too long!';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store current linesize and pagesize to restore later------;
MPRINT(PLOTIT):   length __ls __ps __var sysscp $ 8 ;
MPRINT(PLOTIT):   __num = getoption('number');
MPRINT(PLOTIT):   __ls = getoption('linesize');
MPRINT(PLOTIT):   __ps = getoption('pagesize');
MPRINT(PLOTIT):   __lab = getoption('label');
MPRINT(PLOTIT):   __var = getoption('validvarname');
MPRINT(PLOTIT):   __page = input(__ps, 8.);
MPRINT(PLOTIT):   if __page < 200 then __logps = __page + 1;
MPRINT(PLOTIT):   else __logps = 200;
MPRINT(PLOTIT):   if __logps < 20 then __logps = 20;
MPRINT(PLOTIT):   call symput('v7' , put(index(__var, '6') eq 0, 1.));
MPRINT(PLOTIT):   call symput('restornum',compress(__num));
MPRINT(PLOTIT):   call symput('restorla', compress(__lab));
MPRINT(PLOTIT):   call symput('restorls', compress(__ls));
MPRINT(PLOTIT):   call symput('restorps', compress(__ps));
MPRINT(PLOTIT):   call symput('logps' , compress(put(__logps, best8.)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   options label;
MPRINT(PLOTIT):   *------start parameter checking, initialization------;
MPRINT(PLOTIT):   *------initialization------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length data f1-f11 $ 72 name $ 70 post opts datatype plotvars $ 500 filepref $ 32;
MPRINT(PLOTIT):   ok = 1;
MPRINT(PLOTIT):   *------change other options based on GSTYLE/NOGSTYLE------;
MPRINT(PLOTIT):   if upcase(symget('style')) ne ' ' then do;
MPRINT(PLOTIT):   if symget('font') eq ' ' then call symput('font', 'none');
MPRINT(PLOTIT):   if symget('tickaxes') eq ' ' then call symput('tickaxes', 'LBFh');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   if symget('font') eq ' ' then call symput('font', 'swiss');
MPRINT(PLOTIT):   if symget('tickaxes') eq ' ' then call symput('tickaxes', 'LRTBFlb');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   datatype = upcase(symget('datatype'));
MPRINT(PLOTIT):   *------start setting up background color, border------;
MPRINT(PLOTIT):   opts = lowcase(symget('options'));
MPRINT(PLOTIT):   call symput('noback', put(index(opts, 'noback') ge 1, 1.));
MPRINT(PLOTIT):   if symget('noback') eq '1' then call symput('cframe', ' ');
MPRINT(PLOTIT):   if index(opts, 'noborder') then b = '0';
MPRINT(PLOTIT):   else if index(opts, 'border') then b = '1';
MPRINT(PLOTIT):   else if upcase(symget('style')) eq ' ' then b = '0';
MPRINT(PLOTIT):   else b = '1';
MPRINT(PLOTIT):   call symput('border', b);
MPRINT(PLOTIT):   *------initialize some macro variables------;
MPRINT(PLOTIT):   call symput('onetype','1');
MPRINT(PLOTIT):   call symput('singular','1e-8');
MPRINT(PLOTIT):   call symput('allblank','1');
MPRINT(PLOTIT):   call symput('botblank','0');
MPRINT(PLOTIT):   call symput('nlines' ,'0');
MPRINT(PLOTIT):   call symput('symnumer','0');
MPRINT(PLOTIT):   call symput('typenum' ,'0');
MPRINT(PLOTIT):   call symput('search' ,' ');
MPRINT(PLOTIT):   call symput('actualls','-1');
MPRINT(PLOTIT):   call symput('symdummy','#');
MPRINT(PLOTIT):   call symput('paintcol',' ');
MPRINT(PLOTIT):   call symput('paintmin','.');
MPRINT(PLOTIT):   call symput('paintmax','.');
MPRINT(PLOTIT):   call symput('paintnum','0');
MPRINT(PLOTIT):   call symput('ncontour','0');
MPRINT(PLOTIT):   call symput('hcontour','0');
MPRINT(PLOTIT):   call symput('vcontour','0');
MPRINT(PLOTIT):   call symput('hcondir ','0');
MPRINT(PLOTIT):   call symput('vcondir ','0');
MPRINT(PLOTIT):   call symput('looklist','0');
MPRINT(PLOTIT):   call symput('sizsquar','1');
MPRINT(PLOTIT):   call symput('ntitles' ,'0');
MPRINT(PLOTIT):   call symput('device' ,symget('sysdevic'));
MPRINT(PLOTIT):   call symput('datatype',trim(datatype));
MPRINT(PLOTIT):   call symput('listtitl','*** Wrapped Listing of Point Locations ***');
MPRINT(PLOTIT):   *------set vector scale factor------;
MPRINT(PLOTIT):   name = ' ';
MPRINT(PLOTIT):   do i = 5 to 2 by -1;
MPRINT(PLOTIT):   if name = ' ' then name = scan(datatype,i,' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if name = ' ' or nmiss(input(name,?? 32.)) then name = '1';
MPRINT(PLOTIT):   call symput('biplot',trim(name));
MPRINT(PLOTIT):   *------make sure there are input data------;
MPRINT(PLOTIT):   data = left(upcase(symget('data')));
MPRINT(PLOTIT):   if data in (' ' '_LAST_') then do;
MPRINT(PLOTIT):   data = symget('syslast');
MPRINT(PLOTIT):   call symput('data',trim(data));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if data = '_NULL_' then do;
MPRINT(PLOTIT):   put 'ERROR: No input data set.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set default file name------;
MPRINT(PLOTIT):   post = symget('post');
MPRINT(PLOTIT):   if post = ' ' then do;
MPRINT(PLOTIT):   sysscp = symget('sysscp');
MPRINT(PLOTIT):   filepref = symget('filepref');
MPRINT(PLOTIT):   if filepref = ' ' then filepref = 'sasplot';
MPRINT(PLOTIT):   if sysscp = 'CMS' then post = trim(filepref) || ' ' || 'ps';
MPRINT(PLOTIT):   else if sysscp =: 'VMS' or sysscp = 'WIN' or sysscp = 'OS2' then post = trim(filepref) || '.' || 'ps';
MPRINT(PLOTIT):   else post = '.' || trim(filepref) || '.' || 'ps';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('post', trim(post));
MPRINT(PLOTIT):   *------some options cannot have null values------;
MPRINT(PLOTIT):   if symget('out') = ' ' then call symput('out' ,'anno');
MPRINT(PLOTIT):   if symget('tempdat1') = ' ' then call symput('tempdat1','tempdat1');
MPRINT(PLOTIT):   if symget('tempdat2') = ' ' then call symput('tempdat2','tempdat2');
MPRINT(PLOTIT):   if symget('tempdat3') = ' ' then call symput('tempdat3','tempdat3');
MPRINT(PLOTIT):   if symget('tempdat4') = ' ' then call symput('tempdat4','tempdat4');
MPRINT(PLOTIT):   if symget('tempdat5') = ' ' then call symput('tempdat5','tempdat5');
MPRINT(PLOTIT):   if symget('tempdat6') = ' ' then call symput('tempdat6','tempdat6');
MPRINT(PLOTIT):   if symget('regdat') = ' ' then call symput('regdat' ,'regdat');
MPRINT(PLOTIT):   if symget('preproc') = ' ' then call symput('preproc' ,'preproc');
MPRINT(PLOTIT):   if symget('extraobs') = ' ' then call symput('extraobs','extraobs');
MPRINT(PLOTIT):   if symget('radii') = ' ' then call symput('radii' ,'1, 2');
MPRINT(PLOTIT):   if symget('cirsegs') = ' ' then call symput('cirsegs' ,'.1');
MPRINT(PLOTIT):   if symget('cursegs') = ' ' then call symput('cursegs' ,'200');
MPRINT(PLOTIT):   if symget('maxiter') = ' ' then call symput('maxiter' ,'15');
MPRINT(PLOTIT):   if symget('lsinc') = ' ' then call symput('lsinc' ,'15');
MPRINT(PLOTIT):   if symget('place') = ' ' then call symput('place' ,'2 search');
MPRINT(PLOTIT):   if symget('symlen') = ' ' then call symput('symlen' ,'1');
MPRINT(PLOTIT):   if symget('ls') = ' ' then call symput('ls','compute search');
MPRINT(PLOTIT):   if symget('maxokpen') = ' ' then call symput('maxokpen','0');
MPRINT(PLOTIT):   if symget('ticklen') = ' ' then call symput('ticklen' ,'1.5');
MPRINT(PLOTIT):   if symget('tickfor') = ' ' then call symput('tickfor' ,'32.');
MPRINT(PLOTIT):   if symget('hnobs') = ' ' then call symput('hnobs' ,'0');
MPRINT(PLOTIT):   if symget('vnobs') = ' ' then call symput('vnobs' ,'0');
MPRINT(PLOTIT):   *------is radii a variable name?------;
MPRINT(PLOTIT):   name = upcase(substr(left(symget('radii')),1,1));
MPRINT(PLOTIT):   call symput('radname', put('A' <= name <= 'Z' or name = '_' or name = '"' or name = "'", 1.));
MPRINT(PLOTIT):   *------always use a formchar------;
MPRINT(PLOTIT):   call symput('procopts', trim(symget('procopts')) || " formchar='|----|+|---'");
MPRINT(PLOTIT):   *------was TYPES= specified?------;
MPRINT(PLOTIT):   call symput('typespec', put(symget('types') ne ' ',1.));
MPRINT(PLOTIT):   *------set default plotvars------;
MPRINT(PLOTIT):   plotvars = symget('plotvars');
MPRINT(PLOTIT):   if plotvars = ' ' then do;
MPRINT(PLOTIT):   if index(datatype,'MDS') or index(datatype,'MCA') or index(datatype,'ROW') or index(datatype,'COLUMN') or index(datatype,'CORRESP') then plotvars = 'Dim2 Dim1';
MPRINT(PLOTIT):   else if index(datatype,'MDPREF') or index(datatype,'VECTOR') or index(datatype,'IDEAL') then plotvars = 'Prin2 Prin1';
MPRINT(PLOTIT):   call symput('plotvars',trim(plotvars));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check for conflicting data set names------;
MPRINT(PLOTIT):   f1 = left(upcase(symget('data')));
MPRINT(PLOTIT):   f2 = left(upcase(symget('out')));
MPRINT(PLOTIT):   f3 = left(upcase(symget('tempdat1')));
MPRINT(PLOTIT):   f4 = left(upcase(symget('tempdat2')));
MPRINT(PLOTIT):   f5 = left(upcase(symget('tempdat3')));
MPRINT(PLOTIT):   f6 = left(upcase(symget('tempdat4')));
MPRINT(PLOTIT):   f7 = left(upcase(symget('tempdat5')));
MPRINT(PLOTIT):   f8 = left(upcase(symget('tempdat6')));
MPRINT(PLOTIT):   f9 = left(upcase(symget('preproc')));
MPRINT(PLOTIT):   f10 = left(upcase(symget('extraobs')));
MPRINT(PLOTIT):   f11 = left(upcase(symget('regdat')));
MPRINT(PLOTIT):   opts = 'DATA OUT TEMPDAT1 TEMPDAT2 TEMPDAT3 TEMPDAT4 TEMPDAT5 ' || 'TEMPDAT6 PREPROC EXTRAOBS REGDAT';
MPRINT(PLOTIT):   array f[11] f1-f11;
MPRINT(PLOTIT):   do i = 1 to 11;
MPRINT(PLOTIT):   if f[i] =: 'WORK.' then f[i] = substr(f[i],6);
MPRINT(PLOTIT):   __name = f[i];
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   f[i] = __name;
MPRINT(PLOTIT):   do j = 1 to (i - 1);
MPRINT(PLOTIT):   if f[i] = f[j] then do;
MPRINT(PLOTIT):   oi = scan(opts,i,' ');
MPRINT(PLOTIT):   oj = scan(opts,j,' ');
MPRINT(PLOTIT):   put 'ERROR: Data sets ' oi +(-1) '=' f[i] 'and ' oj +(-1) '=' f[j] 'must be different.';
MPRINT(PLOTIT):   if oj = 'DATA' then put 'WARNING: You may have not specified DATA=.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not ok or _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   norm: * Normalize name, upper case, strip n-literals. * Input: __name * Output: __name (updated) * Sample usage: * __name = '"a b"n';
MPRINT(PLOTIT):   * link norm;
MPRINT(PLOTIT):   * Creates: __name = 'A B';
MPRINT(PLOTIT):   __name = upcase(__name);
MPRINT(PLOTIT):   if substr(__name,1,1) in ("'", '"') then __name = dequote(__name);
MPRINT(PLOTIT):   drop __name;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------store input data set variable names------;
MPRINT(PLOTIT):   proc contents data=WORK.Clus2_mds noprint out=tempdat1;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sort data=tempdat1(keep=varnum type name);
MPRINT(PLOTIT):   by varnum;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------look for the type variable, plot variables------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length tvname vplotvar hplotvar upname vnormvar hnormvar pnormvar snormvar $ 70 __list plotvars __name $ 500 __c $ 1;
MPRINT(PLOTIT):   retain tvname vplotvar hplotvar hnormvar vnormvar pnormvar snormvar ' ' ok 1 vfound hfound pfound sfound 0;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   f = (index(symget('datatype'), 'FUNCTION') or index(upcase(symget('symtype')), 'FUNCTION'));
MPRINT(PLOTIT):   call symput('functype', put(f, 1.));
MPRINT(PLOTIT):   __name = symget('typevar');
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   tvname = __name;
MPRINT(PLOTIT):   __list = symget('plotvars');
MPRINT(PLOTIT):   __n = 1;
MPRINT(PLOTIT):   plotvars = __list;
MPRINT(PLOTIT):   link namescan;
MPRINT(PLOTIT):   vplotvar = __name;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   vnormvar = __name;
MPRINT(PLOTIT):   link namescan;
MPRINT(PLOTIT):   hplotvar = __name;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   hnormvar = __name;
MPRINT(PLOTIT):   __name = symget('labelvar');
MPRINT(PLOTIT):   pfound = (lowcase(__name) eq '_blank_' or __name eq ' ');
MPRINT(PLOTIT):   if not pfound then do;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   pnormvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __name = symget('symvar');
MPRINT(PLOTIT):   sfound = (lowcase(__name) eq '_symbol_' or __name eq ' ' or lowcase(__name) eq "'00'x" or lowcase(__name) eq '"00"x');
MPRINT(PLOTIT):   if not sfound then do;
MPRINT(PLOTIT):   link norm;
MPRINT(PLOTIT):   snormvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __list = symget('paint');
MPRINT(PLOTIT):   link namescan;
MPRINT(PLOTIT):   call symput('paintvar',trim(__name));
MPRINT(PLOTIT):   call symput('paint' ,trim(__list));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set tempdat1 end=eof;
MPRINT(PLOTIT):   upname = upcase(name);
MPRINT(PLOTIT):   if upname = tvname or (tvname = ' ' and upname = '_TYPE_') then do;
MPRINT(PLOTIT):   if tvname = ' ' then call symput('typevar','_type_');
MPRINT(PLOTIT):   if (type = 1) then call symput('typenum','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------plotting variables must be numeric------;
MPRINT(PLOTIT):   if (upname = hnormvar or upname = vnormvar) and type = 2 then do;
MPRINT(PLOTIT):   put 'ERROR: PLOTVARS=' plotvars 'must be numeric.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set default plotting variables if not set yet------;
MPRINT(PLOTIT):   if type = 1 then do;
MPRINT(PLOTIT):   if hplotvar = ' ' then do;
MPRINT(PLOTIT):   hplotvar = name;
MPRINT(PLOTIT):   hnormvar = upname;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if vplotvar = ' ' then do;
MPRINT(PLOTIT):   vplotvar = name;
MPRINT(PLOTIT):   vnormvar = upname;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------make sure axis variables are found------;
MPRINT(PLOTIT):   if upname = hnormvar then do;
MPRINT(PLOTIT):   hfound = 1;
MPRINT(PLOTIT):   __name = name;
MPRINT(PLOTIT):   link nliteral;
MPRINT(PLOTIT):   hplotvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if upname = vnormvar then do;
MPRINT(PLOTIT):   vfound = 1;
MPRINT(PLOTIT):   __name = name;
MPRINT(PLOTIT):   link nliteral;
MPRINT(PLOTIT):   vplotvar = __name;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if upname = pnormvar then pfound = 1;
MPRINT(PLOTIT):   if upname = snormvar then sfound = 1;
MPRINT(PLOTIT):   *------at end, output results------;
MPRINT(PLOTIT):   if eof then do;
MPRINT(PLOTIT):   call symput('vplotvar',trim(vplotvar));
MPRINT(PLOTIT):   call symput('hplotvar',trim(hplotvar));
MPRINT(PLOTIT):   __list = trim(hplotvar) || ' ' || trim(vplotvar);
MPRINT(PLOTIT):   call symput('plotvars',trim(hplotvar) || ' ' || trim(vplotvar));
MPRINT(PLOTIT):   name = 'A' || vplotvar;
MPRINT(PLOTIT):   call symput('appvar1',trim(name));
MPRINT(PLOTIT):   if vplotvar = ' ' or hplotvar = ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: Not enough variables to plot.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not hfound then do;
MPRINT(PLOTIT):   put 'ERROR: Horizontal axis variable ' hplotvar 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not vfound then do;
MPRINT(PLOTIT):   put 'ERROR: Vertical axis variable ' vplotvar 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not pfound then do;
MPRINT(PLOTIT):   __name = symget('labelvar');
MPRINT(PLOTIT):   put 'ERROR: Label variable ' __name 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not sfound then do;
MPRINT(PLOTIT):   __name = symget('symvar');
MPRINT(PLOTIT):   put 'ERROR: Symbol variable ' __name 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if hnormvar = '_TYPE_' or vnormvar = '_TYPE_' then put 'WARNING: _TYPE_ is one of the axis variables.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not ok or _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   norm: * Normalize name, upper case, strip n-literals. * Input: __name * Output: __name (updated) * Sample usage: * __name = '"a b"n';
MPRINT(PLOTIT):   * link norm;
MPRINT(PLOTIT):   * Creates: __name = 'A B';
MPRINT(PLOTIT):   __name = upcase(__name);
MPRINT(PLOTIT):   if substr(__name,1,1) in ("'", '"') then __name = dequote(__name);
MPRINT(PLOTIT):   drop __name;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   nliteral: * Puts n-literal on name if necessary. * Input: __name * Output: __name (updated) * Sample usage: * __name = 'a b';
MPRINT(PLOTIT):   * link nliteral;
MPRINT(PLOTIT):   * Creates: __name = "'a b'n";
MPRINT(PLOTIT):   __v7 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789';
MPRINT(PLOTIT):   __len = length(__name);
MPRINT(PLOTIT):   if index(__name, ' ') < __len or '0' <= substr(__name, 1, 1) <= '9' or compress(upcase(__name), __v7) ne ' ' then do;
MPRINT(PLOTIT):   __k = 1;
MPRINT(PLOTIT):   do __i = 1 to length(__name);
MPRINT(PLOTIT):   if substr(__name, __k, 1) eq "'" then do;
MPRINT(PLOTIT):   substr(__name, __k + 1) = "'" || substr(__name, __k + 1);
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __name = "'" || trim(__name) || "'n";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   drop __name __i __k __v7 __len;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   namescan: * Returns nth name from a list. * Input: __list, __n * Output: __list, (trashed) * __name * Sample usage: * __list = 'a "b"n "C d"N d';
MPRINT(PLOTIT):   * __n = 2;
MPRINT(PLOTIT):   * link namescan;
MPRINT(PLOTIT):   * Creates: __name = '"b"n' * Notes: __name must have a length of at least 67. * a much longer length (say > 256) helps guard * against long, blank padded n-literals.;
MPRINT(PLOTIT):   __list = left(__list);
MPRINT(PLOTIT):   do __i = 1 to __n;
MPRINT(PLOTIT):   __c = substr(__list, 1, 1);
MPRINT(PLOTIT):   if trim(__c) in ("'", '"') then do;
MPRINT(PLOTIT):   __e = 0;
MPRINT(PLOTIT):   __len = length(__list);
MPRINT(PLOTIT):   do __k = 2 to __len until(__e);
MPRINT(PLOTIT):   if upcase(substr(__list, __k, 2)) in ("''", '""') then __k + 1;
MPRINT(PLOTIT):   else if upcase(substr(__list, __k, 2)) = compress(__c || 'N') then __e = __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else __e = index(__list, ' ') - 1;
MPRINT(PLOTIT):   if __e < 1 then __e = length(__list);
MPRINT(PLOTIT):   __name = substr(__list, 1, __e);
MPRINT(PLOTIT):   __list = left(substr(__list, __e + 2));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------guard against silly n-literals------;
MPRINT(PLOTIT):   if length(__name) > 67 then do;
MPRINT(PLOTIT):   put 'ERROR: Your names are too long!';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   drop __list __n __i __k __len __name __c __e;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------generate TYPES= list from data?------;
MPRINT(PLOTIT):   *------preliminary preprocessing that changes the data------;
MPRINT(PLOTIT):   data preproc;
MPRINT(PLOTIT):   set WORK.Clus2_mds;
MPRINT(PLOTIT):   if n(Dim2,Dim1) = 2;
MPRINT(PLOTIT):   *------eliminate anti-ideal points------;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------get colors from style------;
MPRINT(PLOTIT):   data tempdat5 tempdat4 tempdat3 tempdat2;
MPRINT(PLOTIT):   length w c $ 20 n 8;
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat6 tempdat6(memtype=view);
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   * Set defaults based on options (from the pre-style days);
MPRINT(PLOTIT):   data tempdat6;
MPRINT(PLOTIT):   length w c $ 20;
MPRINT(PLOTIT):   w = 'parent      ';
MPRINT(PLOTIT):   n = ._;
MPRINT(PLOTIT):   c = ' ';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gaxis       ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('framecol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gborderlines';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('color');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata      ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('color');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcfit       ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('curvecol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'glabel      ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('labelcol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gtext       ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('titlecol');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gwalls      ';
MPRINT(PLOTIT):   n = .;
MPRINT(PLOTIT):   c = symget('cframe');
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata1     ';
MPRINT(PLOTIT):   n = 1;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata2     ';
MPRINT(PLOTIT):   n = 2;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata3     ';
MPRINT(PLOTIT):   n = 3;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata4     ';
MPRINT(PLOTIT):   n = 4;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata5     ';
MPRINT(PLOTIT):   n = 5;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata6     ';
MPRINT(PLOTIT):   n = 6;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata7     ';
MPRINT(PLOTIT):   n = 7;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata8     ';
MPRINT(PLOTIT):   n = 8;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata9     ';
MPRINT(PLOTIT):   n = 9;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata10    ';
MPRINT(PLOTIT):   n = 10;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata11    ';
MPRINT(PLOTIT):   n = 11;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   w = 'gcdata12    ';
MPRINT(PLOTIT):   n = 12;
MPRINT(PLOTIT):   c = scan(symget('colors'), n);
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   * Get values from style and style parents up to four levels;
MPRINT(PLOTIT):   proc template;
MPRINT(PLOTIT):   source styles.listing / file="C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD2372_MIIKYMEDIA_\Prc2\plotit.ps";
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat2(keep=w c n);
MPRINT(PLOTIT):   infile "C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD2372_MIIKYMEDIA_\Prc2\plotit.ps" lrecl=80 pad;
MPRINT(PLOTIT):   input line $80.;
MPRINT(PLOTIT):   length w c $ 20;
MPRINT(PLOTIT):   if _n_ eq 1 then call symput('abort', '0');
MPRINT(PLOTIT):   line = lowcase(line);
MPRINT(PLOTIT):   w = scan(line, 1, '"'' =');
MPRINT(PLOTIT):   c = left(scan(line, 2, '=;'));
MPRINT(PLOTIT):   if index(c, '(') then c = ' ';
MPRINT(PLOTIT):   if (w eq 'gaxis') or (w eq 'gtext') or (w eq 'parent') or (w eq 'glabel') or (w eq 'gcfit') or (index(line, 'gwalls') and not index(line, 'olor')) or (index(line, 'gborderlines') and not index(line, 'olor')) or (index(line, 'gcdata') and
not index(line, 'contrast'));
MPRINT(PLOTIT):   line = left(translate(line, '  ', '''"'));
MPRINT(PLOTIT):   n = input(scan(line, 3, 'a '), ?? 3.);
MPRINT(PLOTIT):   if w = 'parent' then do;
MPRINT(PLOTIT):   call symputx('style', scan(c, 2, '.'), 'L');
MPRINT(PLOTIT):   n = ._;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sort;
MPRINT(PLOTIT):   by n w;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc template;
MPRINT(PLOTIT):   source styles.default / file="C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD2372_MIIKYMEDIA_\Prc2\plotit.ps";
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat3(keep=w c n);
MPRINT(PLOTIT):   infile "C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD2372_MIIKYMEDIA_\Prc2\plotit.ps" lrecl=80 pad;
MPRINT(PLOTIT):   input line $80.;
MPRINT(PLOTIT):   length w c $ 20;
MPRINT(PLOTIT):   if _n_ eq 1 then call symput('abort', '0');
MPRINT(PLOTIT):   line = lowcase(line);
MPRINT(PLOTIT):   w = scan(line, 1, '"'' =');
MPRINT(PLOTIT):   c = left(scan(line, 2, '=;'));
MPRINT(PLOTIT):   if index(c, '(') then c = ' ';
MPRINT(PLOTIT):   if (w eq 'gaxis') or (w eq 'gtext') or (w eq 'parent') or (w eq 'glabel') or (w eq 'gcfit') or (index(line, 'gwalls') and not index(line, 'olor')) or (index(line, 'gborderlines') and not index(line, 'olor')) or (index(line, 'gcdata') and
not index(line, 'contrast'));
MPRINT(PLOTIT):   line = left(translate(line, '  ', '''"'));
MPRINT(PLOTIT):   n = input(scan(line, 3, 'a '), ?? 3.);
MPRINT(PLOTIT):   if w = 'parent' then do;
MPRINT(PLOTIT):   call symputx('style', scan(c, 2, '.'), 'L');
MPRINT(PLOTIT):   n = ._;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sort;
MPRINT(PLOTIT):   by n w;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat3;
MPRINT(PLOTIT):   merge tempdat6 tempdat5 tempdat4 tempdat3 tempdat2;
MPRINT(PLOTIT):   by n w;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   length list $ 200;
MPRINT(PLOTIT):   retain list ' ';
MPRINT(PLOTIT):   set tempdat3 end=eof;
MPRINT(PLOTIT):   if w eq 'gaxis' then do;
MPRINT(PLOTIT):   if symget('framecol') eq ' ' then call symputx('framecol', c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if w eq 'gtext' then do;
MPRINT(PLOTIT):   if symget('titlecol') eq ' ' then call symputx('titlecol', c, 'L');
MPRINT(PLOTIT):   if symget('tickcol') eq ' ' then call symputx('tickcol' , c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if w eq 'glabel' then do;
MPRINT(PLOTIT):   if symget('labelcol') eq ' ' then call symputx('labelcol', c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if w eq 'gcfit' then do;
MPRINT(PLOTIT):   if symget('curvecol') eq ' ' then call symputx('curvecol', c, 'L');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not 0 and w eq 'gwalls' and symget('cframe') eq ' ' and c ne '_undef_' then call symputx('cframe', c, 'L');
MPRINT(PLOTIT):   else if 1 and w eq 'gborderlines' then call symput('border', c);
MPRINT(PLOTIT):   if 1 and w =: 'gcdata' then do;
MPRINT(PLOTIT):   if n = 1 then n = .;
MPRINT(PLOTIT):   else if n = . then n = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(n);
MPRINT(PLOTIT):   list = trim(list) || ' ' || c;
MPRINT(PLOTIT):   list = compbl(list);
MPRINT(PLOTIT):   if eof then call symput('colors', compbl(list));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------more initializations------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length name symvar $ 70 color framecol titlecol labelcol tickcol curvecol monochro font size name1-name2 tsize $ 12 anele anele2 $ 16 word $ 24 list list2 datatype types colors symbols symcol symtype symfont symsize labcol labfont
labsize britypes rgbtypes exttypes $ 500;
MPRINT(PLOTIT):   *------finalize border, border color------;
MPRINT(PLOTIT):   word = symget('border');
MPRINT(PLOTIT):   if word eq '1' then word = "black";
MPRINT(PLOTIT):   else if word eq '0' then word = ' ';
MPRINT(PLOTIT):   call symput('border', trim(word));
MPRINT(PLOTIT):   *------set default symbol variable------;
MPRINT(PLOTIT):   symvar = symget('symvar');
MPRINT(PLOTIT):   *------list of valid DATATYPE= values------;
MPRINT(PLOTIT):   array dts[15] corresp mca row column mdpref mdpref2 vector ideal mds curve curve2 function contour square symbol;
MPRINT(PLOTIT):   *------22 lists, 10 lists of ntypes elements, 9 single-element lists 3 longer lists------;
MPRINT(PLOTIT):   listn = 22;
MPRINT(PLOTIT):   listm = 10;
MPRINT(PLOTIT):   listo = 19;
MPRINT(PLOTIT):   array vars[22] $ types colors symbols symcol symtype symfont symsize labcol labfont labsize color framecol titlecol labelcol tickcol curvecol monochro font cframe britypes rgbtypes exttypes;
MPRINT(PLOTIT):   ok = 1;
MPRINT(PLOTIT):   *------check method------;
MPRINT(PLOTIT):   name = symget('method');
MPRINT(PLOTIT):   word = lowcase(compress(name,' 2'));
MPRINT(PLOTIT):   if not (word in ('gplot' 'print' 'plot' 'none')) then do;
MPRINT(PLOTIT):   put 'ERROR: METHOD=' name 'is not valid.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   call symput('method',trim(word));
MPRINT(PLOTIT):   if word = 'plot' then call symput('looklist', '1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------convert binary options ------;
MPRINT(PLOTIT):   list = lowcase(symget('options'));
MPRINT(PLOTIT):   call symput('diag' ,put(index(list,'diag') > 0,1.));
MPRINT(PLOTIT):   call symput('expand' ,put(index(list,'expand') > 0,1.));
MPRINT(PLOTIT):   call symput('closebord',put(index(list,'close') > 0,1.));
MPRINT(PLOTIT):   call symput('center' ,put(index(list,'nocenter') = 0,1.));
MPRINT(PLOTIT):   call symput('clip' ,put(index(list,'noclip') = 0,1.));
MPRINT(PLOTIT):   call symput('delete' ,put(index(list,'nodelete') = 0,1.));
MPRINT(PLOTIT):   call symput('linetext' ,put(index(list,'textline') = 0,1.));
MPRINT(PLOTIT):   call symput('squarplt' ,put(index(list,'square') > 0,1.));
MPRINT(PLOTIT):   print = (index(list,'noprint') = 0);
MPRINT(PLOTIT):   call symput('legend' ,put(index(list,'nolegend') = 0 and print,1.));
MPRINT(PLOTIT):   call symput('history',put(index(list,'nohistory') = 0 and print,1.));
MPRINT(PLOTIT):   call symput('code' ,put(index(list,'nocode') = 0 and print,1.));
MPRINT(PLOTIT):   *------make sure all options are recognized------;
MPRINT(PLOTIT):   list2 = 'noborder border close diag expand noclip nocode nodelete ' || 'nocenter noback nohistory nolegend noprint square textline';
MPRINT(PLOTIT):   do i = 1 to 13;
MPRINT(PLOTIT):   word = scan(list2,i);
MPRINT(PLOTIT):   j = index(list,trim(word));
MPRINT(PLOTIT):   if j then substr(list,j,length(word)) = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if list ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: The following options are not recognized: ' list +(-1) '.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check INTERPOL=------;
MPRINT(PLOTIT):   list = lowcase(symget('interpol'));
MPRINT(PLOTIT):   call symput('intrtick',put((index(list,'tick') or not (index(list,'ls') or index(list,'no'))),1.));
MPRINT(PLOTIT):   call symput('intrls' ,put((index(list,'ls') or not index(list,'no')),1.));
MPRINT(PLOTIT):   call symput('hlogscal',put((index(list,'hlog') > 0),1.));
MPRINT(PLOTIT):   call symput('vlogscal',put((index(list,'vlog') > 0),1.));
MPRINT(PLOTIT):   *------parse the DATATYPE= option------;
MPRINT(PLOTIT):   datatype = symget('datatype');
MPRINT(PLOTIT):   list = datatype;
MPRINT(PLOTIT):   do i = 1 to 15;
MPRINT(PLOTIT):   call vname(dts[i],name);
MPRINT(PLOTIT):   j = index(datatype,trim(upcase(name)));
MPRINT(PLOTIT):   if j then substr(list,j,length(name)) = ' ';
MPRINT(PLOTIT):   dts[i] = (j ne 0);
MPRINT(PLOTIT):   call symput(name,compress(put(dts[i],1.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   list = compress(list,'0123456789.e+-');
MPRINT(PLOTIT):   if list ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: Invalid DATATYPE=' datatype +(-1) '.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------get the lists that must be quoted------;
MPRINT(PLOTIT):   do i = 1 to listn;
MPRINT(PLOTIT):   call vname(vars[i],name);
MPRINT(PLOTIT):   vars[i] = symget(name);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   symtype = lowcase(symtype);
MPRINT(PLOTIT):   britypes = lowcase(britypes);
MPRINT(PLOTIT):   rgbtypes = lowcase(rgbtypes);
MPRINT(PLOTIT):   exttypes = lowcase(exttypes);
MPRINT(PLOTIT):   *-----make sure these are set------;
MPRINT(PLOTIT):   if font = ' ' then font = 'swiss';
MPRINT(PLOTIT):   tsize = symget('tsize');
MPRINT(PLOTIT):   if tsize = ' ' then do;
MPRINT(PLOTIT):   tsize = '1';
MPRINT(PLOTIT):   call symput('tsize','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------process DATATYPE= option------;
MPRINT(PLOTIT):   if datatype ne ' ' then do;
MPRINT(PLOTIT):   if contour then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' contour';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' 1';
MPRINT(PLOTIT):   symfont = trim(symfont) || ' solid';
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   rgbtypes = trim(rgbtypes) || ' contour';
MPRINT(PLOTIT):   exttypes = trim(exttypes) || ' contour';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if square then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || ' U';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' square';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' 1';
MPRINT(PLOTIT):   symfont = trim(symfont) || ' marker';
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   rgbtypes = trim(rgbtypes) || ' square';
MPRINT(PLOTIT):   exttypes = trim(exttypes) || ' square';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if function then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' function';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' 1';
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ';
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   exttypes = trim(exttypes) || ' function';
MPRINT(PLOTIT):   name = symget('labelvar');
MPRINT(PLOTIT):   if name = ' ' then call symput('labelvar','_blank_');
MPRINT(PLOTIT):   if symvar = ' ' then put 'WARNING: Null symbol variable ' 'specified with ' 'DATATYPE=function.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mdpref or vector or ideal then types = trim(types) || ' SCORE';
MPRINT(PLOTIT):   if mdpref or vector or ideal or symbol then do;
MPRINT(PLOTIT):   symbols = trim(symbols) || ' *';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || font;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if corresp or row or mca or column then do;
MPRINT(PLOTIT):   types = trim(types) || ' VAR OBS SUPVAR SUPOBS';
MPRINT(PLOTIT):   if row then do;
MPRINT(PLOTIT):   symtype = trim(symtype) || ' vector symbol symbol symbol';
MPRINT(PLOTIT):   symbols = trim(symbols) || " '' * * *";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if column then do;
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol vector symbol symbol';
MPRINT(PLOTIT):   symbols = trim(symbols) || " * '' * *";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol symbol symbol symbol';
MPRINT(PLOTIT):   symbols = trim(symbols) || ' * * * *';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   symsize = trim(symsize) || repeat(' ' || trim(tsize),3);
MPRINT(PLOTIT):   symfont = trim(symfont) || repeat(' ' || trim(font) ,3);
MPRINT(PLOTIT):   labsize = trim(labsize) || repeat(' ' || trim(tsize),3);
MPRINT(PLOTIT):   labfont = trim(labfont) || repeat(' ' || trim(font) ,3);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mdpref then do;
MPRINT(PLOTIT):   types = trim(types) || ' CORR';
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' vector';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   if lowcase(font) eq 'none' then do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font);
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mdpref2 then labsize = trim(labsize) || ' ' || compress(put(input(tsize, ?? 32.) * 0.75, best8.));
MPRINT(PLOTIT):   else labsize = trim(labsize) || ' 0';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   size = compress(put(input(tsize,?? 32.) * 1.5, best8.));
MPRINT(PLOTIT):   if vector then do;
MPRINT(PLOTIT):   types = trim(types) || ' MCOEFFI';
MPRINT(PLOTIT):   symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   symtype = trim(symtype) || ' vector';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || size;
MPRINT(PLOTIT):   if lowcase(font) eq 'none' then do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font);
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if ideal then do;
MPRINT(PLOTIT):   types = trim(types) || ' MPOINT';
MPRINT(PLOTIT):   symbols = trim(symbols) || ' +';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' circle';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || size;
MPRINT(PLOTIT):   if lowcase(font) eq 'none' then do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font);
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || trim(font) || 'i';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if mds then do;
MPRINT(PLOTIT):   types = trim(types) || ' CONFIG';
MPRINT(PLOTIT):   symbols = trim(symbols) || ' *';
MPRINT(PLOTIT):   symtype = trim(symtype) || ' symbol';
MPRINT(PLOTIT):   symsize = trim(symsize) || ' ' || tsize;
MPRINT(PLOTIT):   symfont = trim(symfont) || ' ' || font;
MPRINT(PLOTIT):   labsize = trim(labsize) || ' ' || tsize;
MPRINT(PLOTIT):   labfont = trim(labfont) || ' ' || font;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if (mds or corresp or mca or row or column or mdpref or mdpref2 or vector or ideal) and symget('label') = ' ' then call symput('label','typical');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------ in case these were only specified in the symtype------;
MPRINT(PLOTIT):   if index(symtype, 'contour' ) then call symput('contour' , '1');
MPRINT(PLOTIT):   if index(symtype, 'square' ) then call symput('square' , '1');
MPRINT(PLOTIT):   *------set colors, other defaults------;
MPRINT(PLOTIT):   if color = ' ' then color = 'black';
MPRINT(PLOTIT):   if colors = ' ' then colors = color;
MPRINT(PLOTIT):   if framecol = ' ' then framecol = color;
MPRINT(PLOTIT):   if titlecol = ' ' then titlecol = color;
MPRINT(PLOTIT):   if labelcol = ' ' then labelcol = color;
MPRINT(PLOTIT):   if tickcol = ' ' then tickcol = color;
MPRINT(PLOTIT):   if curvecol = ' ' then curvecol = color;
MPRINT(PLOTIT):   if symtype = ' ' then symtype = 'symbol';
MPRINT(PLOTIT):   if symsize = ' ' then symsize = tsize;
MPRINT(PLOTIT):   if symfont = ' ' then symfont = font;
MPRINT(PLOTIT):   if labsize = ' ' then labsize = tsize;
MPRINT(PLOTIT):   if labfont = ' ' then labfont = font;
MPRINT(PLOTIT):   if exttypes = ' ' then exttypes = "''";
MPRINT(PLOTIT):   if rgbtypes = ' ' then rgbtypes = "''";
MPRINT(PLOTIT):   labcol = trim(labcol) || ' ' || colors;
MPRINT(PLOTIT):   symcol = trim(symcol) || ' ' || colors;
MPRINT(PLOTIT):   *------default symbols when unspecified------;
MPRINT(PLOTIT):   if index(symtype, 'symbol') and symvar eq '_symbol_' and symbols = ' ' then do;
MPRINT(PLOTIT):   word = scan(symtype, 1, ' ');
MPRINT(PLOTIT):   do i = 1 to 500 while(word ne ' ');
MPRINT(PLOTIT):   if index(word, 'symbol') then symbols = trim(symbols) || ' *';
MPRINT(PLOTIT):   else symbols = trim(symbols) || " ''";
MPRINT(PLOTIT):   word = scan(symtype, i + 1, ' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if symbols = ' ' then symbols = "''";
MPRINT(PLOTIT):   *------count the number of types------;
MPRINT(PLOTIT):   if types = ' ' then types = "''";
MPRINT(PLOTIT):   do until(word eq ' ');
MPRINT(PLOTIT):   ntypes + 1;
MPRINT(PLOTIT):   word = scan(types, ntypes + 1, ' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   holdntyp = ntypes;
MPRINT(PLOTIT):   *------output number of observation types------;
MPRINT(PLOTIT):   call symput('ntypes',compress(put(ntypes,3.)));
MPRINT(PLOTIT):   *------output lists, make sure they are quoted------;
MPRINT(PLOTIT):   do i = 1 to listn;
MPRINT(PLOTIT):   if i > listm then ntypes = 1;
MPRINT(PLOTIT):   if i > listo then ntypes = 200;
MPRINT(PLOTIT):   link qlist;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   ntypes = holdntyp;
MPRINT(PLOTIT):   *------output sizes for squares------;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   word = scan(symtype, i, ' ');
MPRINT(PLOTIT):   if index(word, 'square') then call symput('sizsquar', compress(scan(symsize, i, ' '), " '"||'"'));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check for constant symvar with vectors------;
MPRINT(PLOTIT):   symcon = (symvar = ' ' or (compress(symvar,"'"||'"') ne symvar));
MPRINT(PLOTIT):   if symcon then do;
MPRINT(PLOTIT):   i = length(symvar);
MPRINT(PLOTIT):   if i > 3 then do;
MPRINT(PLOTIT):   word = upcase(substr(symvar, i - 1));
MPRINT(PLOTIT):   if word in ('"N', "'N") then symcon = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('symcon',put(symcon,1.));
MPRINT(PLOTIT):   if symcon and index(symtype,'vector') then do;
MPRINT(PLOTIT):   put 'ERROR: Constant SYMVAR= is not allowed with vectors.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------parse RGBROUND= option------;
MPRINT(PLOTIT):   list = symget('rgbround');
MPRINT(PLOTIT):   list2 = ' ';
MPRINT(PLOTIT):   do i = 1 to 4;
MPRINT(PLOTIT):   name = scan(list, i, ' ');
MPRINT(PLOTIT):   num = input(name, ?? 32.);
MPRINT(PLOTIT):   if nmiss(num) then num = .;
MPRINT(PLOTIT):   if i > 1 and num <= 0 then num = 1;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || compress(put(num,best8.));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('rgbround',trim(left(list2)));
MPRINT(PLOTIT):   *------anything specified for the BRIGHT= option?------;
MPRINT(PLOTIT):   if symget('bright') = ' ' then do;
MPRINT(PLOTIT):   britypes = ' ';
MPRINT(PLOTIT):   call symput('britypes', compress(britypes));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------anything specified for the PAINT= option?------;
MPRINT(PLOTIT):   list = left(symget('paint'));
MPRINT(PLOTIT):   if symget('paintvar') = ' ' then do;
MPRINT(PLOTIT):   rgbtypes = ' ';
MPRINT(PLOTIT):   call symput('rgbtypes', compress(rgbtypes));
MPRINT(PLOTIT):   if contour then put 'WARNING: PAINT= was not specified ' 'with a contour plot.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------parse PAINT= option------;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   *------count list elements------;
MPRINT(PLOTIT):   do n = 1 to 500 until(name2 = ' ');
MPRINT(PLOTIT):   name2 = scan(list,n,' ');
MPRINT(PLOTIT):   if n(input(name2,?? 32.)) then name2 = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   n = n - 1;
MPRINT(PLOTIT):   *------set default, when only a variable name is specified------;
MPRINT(PLOTIT):   if n < 1 then do;
MPRINT(PLOTIT):   n = 3;
MPRINT(PLOTIT):   list = 'blue magenta red';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if n < 2 then do;
MPRINT(PLOTIT):   n = 2;
MPRINT(PLOTIT):   name2 = scan(list,1,' ');
MPRINT(PLOTIT):   list = compress(name2) || ' ' || compress(name2);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('paintcol', trim(list));
MPRINT(PLOTIT):   *------store, check number of list elements------;
MPRINT(PLOTIT):   call symput('paintnum',compress(put(n,3.)));
MPRINT(PLOTIT):   *------table of recognized colors and their hex rgb------;
MPRINT(PLOTIT):   allcols = 'BLACK--BLUE---BROWN--GRAY---GREEN--OLIVE--ORANGE-' || 'PINK---PURPLE-RED----VIOLET-WHITE--YELLOW-MAGENTA' || 'CYAN---';
MPRINT(PLOTIT):   hexcols = '000000 0000ff a05000 808080 00ff00 2a8307 ff8000 ' || 'ff0080 703070 ff0000 b090d0 ffffff ffff00 ff00ff ' || '00ffff ';
MPRINT(PLOTIT):   list2 = ' ';
MPRINT(PLOTIT):   *------construct list of (decimal) RGB values------;
MPRINT(PLOTIT):   do j = 1 to 3;
MPRINT(PLOTIT):   do i = 1 to n;
MPRINT(PLOTIT):   color = upcase(scan(list, i, ' '));
MPRINT(PLOTIT):   k = index(allcols,trim(color));
MPRINT(PLOTIT):   *------grab hex code for name, or parse CXrrggbb------;
MPRINT(PLOTIT):   if k then name1 = substr(hexcols,k + (j - 1) * 2,2);
MPRINT(PLOTIT):   else name1 = substr(color ,(j - 1) * 2 + 3,2);
MPRINT(PLOTIT):   *------check for validity------;
MPRINT(PLOTIT):   num = input(name1,?? hex2.);
MPRINT(PLOTIT):   if nmiss(num) then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= color of ' color 'is not valid.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   j = 4;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   name1 = compress(put(num,3.));
MPRINT(PLOTIT):   if length(list2) + length(name1) + 1 > 500 then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= list is too long.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   j = 3;
MPRINT(PLOTIT):   i = n;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------build list------;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || trim(name1);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store line segment end points in list if specified------;
MPRINT(PLOTIT):   list2 = left(list2);
MPRINT(PLOTIT):   name1 = scan(list,n + 1,' ');
MPRINT(PLOTIT):   if name1 ne ' ' then do;
MPRINT(PLOTIT):   do i = 1 to n;
MPRINT(PLOTIT):   name1 = scan(list,n + i,' ');
MPRINT(PLOTIT):   if nmiss(input(name1,?? 32.)) then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= data value of ' name1 'is not valid.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if length(list2) + length(name1) + 1 > 500 then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= list is too long.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   i = n;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || name1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   name1 = scan(list,2 * n + 1,' ');
MPRINT(PLOTIT):   if name1 ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: PAINT= data value list is too long.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store processed PAINT= list------;
MPRINT(PLOTIT):   call symput('paint',trim(list2));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if input(symget('legend'), ?? 32.) then do;
MPRINT(PLOTIT):   awidth = 9;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   anele = scan(types, i, ' ');
MPRINT(PLOTIT):   awidth = max(awidth, length(anele) + 1);
MPRINT(PLOTIT):   awidth = max(awidth, length(scan(symbols, i, ' ')) + 1);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   cols = min(15 + awidth * ntypes, 256);
MPRINT(PLOTIT):   cols = 15 + floor((cols - 15) / awidth) * awidth;
MPRINT(PLOTIT):   m = floor((256 - cols) / 2);
MPRINT(PLOTIT):   cols = cols - 1;
MPRINT(PLOTIT):   put / +m 'Types Legend  |' @@;
MPRINT(PLOTIT):   list = types;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   list = repeat('-', cols);
MPRINT(PLOTIT):   substr(list, 15, 1) = '+';
MPRINT(PLOTIT):   put +m list;
MPRINT(PLOTIT):   put +m 'Symbol Types  |' @@;
MPRINT(PLOTIT):   list = symtype;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Symbols       |' @@;
MPRINT(PLOTIT):   list = symbols;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Symbol Colors |' @@;
MPRINT(PLOTIT):   list = symcol;
MPRINT(PLOTIT):   link legendc;
MPRINT(PLOTIT):   put +m 'Label  Colors |' @@;
MPRINT(PLOTIT):   list = labcol;
MPRINT(PLOTIT):   link legendc;
MPRINT(PLOTIT):   put +m 'Symbol Sizes  |' @@;
MPRINT(PLOTIT):   list = symsize;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Label  Sizes  |' @@;
MPRINT(PLOTIT):   list = labsize;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Symbol Fonts  |' @@;
MPRINT(PLOTIT):   list = symfont;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   put +m 'Label  Fonts  |' @@;
MPRINT(PLOTIT):   list = labfont;
MPRINT(PLOTIT):   link legend;
MPRINT(PLOTIT):   list = repeat('-', cols);
MPRINT(PLOTIT):   put +m list;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ or not ok then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   legend: *------print legend------;
MPRINT(PLOTIT):   j = 0;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   anele = compress(scan(list, i, ' '), "'"||'"');
MPRINT(PLOTIT):   link printele;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   put;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   legendc: *------print legend for colors------;
MPRINT(PLOTIT):   j = 0;
MPRINT(PLOTIT):   do i = 1 to ntypes;
MPRINT(PLOTIT):   anele2 = scan(symtype, i, ' ');
MPRINT(PLOTIT):   if index(rgbtypes, trim(anele2)) or index(britypes, trim(anele2)) then anele = ' ';
MPRINT(PLOTIT):   else anele = compress(scan(list, i, ' '), "'"||'"');
MPRINT(PLOTIT):   link printele;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   put;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   printele: *------print one table element------;
MPRINT(PLOTIT):   j = j + 1;
MPRINT(PLOTIT):   if (15 + awidth * j) > 256 then do;
MPRINT(PLOTIT):   put / +(m+14) '|' @@;
MPRINT(PLOTIT):   j = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   put @(m + 17 + (j - 1) * awidth) anele $ @@;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   qlist: *------quote the elements of a list------;
MPRINT(PLOTIT):   call vname(vars[i],name);
MPRINT(PLOTIT):   list2 = ' ';
MPRINT(PLOTIT):   list = vars[i];
MPRINT(PLOTIT):   charv = not index(upcase(name),'SIZE');
MPRINT(PLOTIT):   word = scan(list,1,' ');
MPRINT(PLOTIT):   do n = 1 to ntypes while(word ne ' ');
MPRINT(PLOTIT):   if charv then do;
MPRINT(PLOTIT):   word = compress("'" || compress(word,"'"||'"') || "'");
MPRINT(PLOTIT):   if not index(substr(word,2),"'") then do;
MPRINT(PLOTIT):   put 'ERROR: The list element ' name +(-1) '=' word 'is too long.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if (length(list2) + length(word)) >= 500 then do;
MPRINT(PLOTIT):   put 'ERROR: The list ' name +(-1) '=' list2 'is too long.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   list2 = trim(list2) || ' ' || word;
MPRINT(PLOTIT):   word = scan(list,n + 1,' ');
MPRINT(PLOTIT):   if word = ' ' and i <= listm then word = scan(list2,1,' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput(name,trim(left(list2)));
MPRINT(PLOTIT):   vars[i] = list2;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
 
                                                                                                                    Types Legend  | CONFIG
                                                                                                                    --------------+---------
                                                                                                                    Symbol Types  | circle
                                                                                                                    Symbols       | *
                                                                                                                    Symbol Colors | cx000000
                                                                                                                    Label  Colors | cx000000
                                                                                                                    Symbol Sizes  | 1
                                                                                                                    Label  Sizes  | 1
                                                                                                                    Symbol Fonts  | none
                                                                                                                    Label  Fonts  | none
                                                                                                                    ------------------------
MPRINT(PLOTIT):   *------inertias for correspondence analysis variable labels------;
MPRINT(PLOTIT):   *------check, set remaining variables------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   set tempdat1 end=eof;
MPRINT(PLOTIT):   length __name setl labelvar tvname symvar paintvar upname $ 70;
MPRINT(PLOTIT):   retain setl labelvar tvname symvar paintvar ' ' paintfou typefoun 0 ok 1;
MPRINT(PLOTIT):   upname = upcase(name);
MPRINT(PLOTIT):   *------get current names------;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   tvname = dequote(symget('typevar'));
MPRINT(PLOTIT):   labelvar = dequote(symget('labelvar'));
MPRINT(PLOTIT):   paintvar = dequote(symget('paintvar'));
MPRINT(PLOTIT):   if 0 then symvar = _symbol_;
MPRINT(PLOTIT):   else symvar = dequote(symget('symvar'));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------is the symbol variable numeric or character?------;
MPRINT(PLOTIT):   if not 0 and upname = upcase(symvar) and type = 1 then call symput('symnumer','1');
MPRINT(PLOTIT):   *------find _type_ variable------;
MPRINT(PLOTIT):   if upname = upcase(tvname) then typefoun = 1;
MPRINT(PLOTIT):   *------find PAINT= variable------;
MPRINT(PLOTIT):   if upname = upcase(paintvar) and type = 1 then paintfou = 1;
MPRINT(PLOTIT):   *------find default label variable name------;
MPRINT(PLOTIT):   else if type = 2 and (setl = ' ' or upname ne '_TYPE_') then setl = name;
MPRINT(PLOTIT):   *------at end, output results------;
MPRINT(PLOTIT):   if eof then do;
MPRINT(PLOTIT):   if labelvar = ' ' and setl ne ' ' then labelvar = setl;
MPRINT(PLOTIT):   if labelvar = ' ' then labelvar = '_blank_';
MPRINT(PLOTIT):   __name = labelvar;
MPRINT(PLOTIT):   link nliteral;
MPRINT(PLOTIT):   call symput('labelvar', trim(__name));
MPRINT(PLOTIT):   *------assorted error checking------;
MPRINT(PLOTIT):   if not typefoun and tvname ne ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: TYPEVAR=' tvname 'not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not typefoun and input(symget('typespec'), ?? 32.) then do;
MPRINT(PLOTIT):   put 'ERROR: A type variable must be available ' 'when TYPES= ' 'is specified.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not (paintvar = ' ' or paintfou) then do;
MPRINT(PLOTIT):   put 'ERROR: A numeric PAINT=' paintvar 'variable was not found.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not ok or _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   nliteral: * Puts n-literal on name if necessary. * Input: __name * Output: __name (updated) * Sample usage: * __name = 'a b';
MPRINT(PLOTIT):   * link nliteral;
MPRINT(PLOTIT):   * Creates: __name = "'a b'n";
MPRINT(PLOTIT):   __v7 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789';
MPRINT(PLOTIT):   __len = length(__name);
MPRINT(PLOTIT):   if index(__name, ' ') < __len or '0' <= substr(__name, 1, 1) <= '9' or compress(upcase(__name), __v7) ne ' ' then do;
MPRINT(PLOTIT):   __k = 1;
MPRINT(PLOTIT):   do __i = 1 to __len;
MPRINT(PLOTIT):   if substr(__name, __k, 1) eq "'" then do;
MPRINT(PLOTIT):   substr(__name, __k + 1) = "'" || substr(__name, __k + 1);
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __k + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __name = "'" || trim(__name) || "'n";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   drop __name __i __k __v7 __len;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------find minima, maxima------;
MPRINT(PLOTIT):   proc means data=preproc noprint;
MPRINT(PLOTIT):   output out=tempdat1 max(Dim2 Dim1 )=vmax hmax min(Dim2 Dim1 )=vmin hmin;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------set goptions------;
MPRINT(PLOTIT):   goptions nodisplay device=PNG cback=white device=GIF;
MPRINT(PLOTIT):   *------check some parameters for valid values, set up others------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length c $ 1 vplotvar hplotvar labelvar $ 70 opt $ 8 str place vecheadr vecheadw tinc device $ 12 outward search vechead ls $ 32 label plotreq plotopts upopts pl list labely labelx label $ 500 ind1 ind2 $ 35;
MPRINT(PLOTIT):   ok = 1;
MPRINT(PLOTIT):   call symput('somedata','0');
MPRINT(PLOTIT):   set tempdat1(drop=_type_);
MPRINT(PLOTIT):   call symput('somedata','1');
MPRINT(PLOTIT):   call symput('vinter', '.');
MPRINT(PLOTIT):   call symput('hinter', '.');
MPRINT(PLOTIT):   call symput('hslope', '.');
MPRINT(PLOTIT):   call symput('vslope', '.');
MPRINT(PLOTIT):   *------check missings------;
MPRINT(PLOTIT):   if n(vmin,hmin,vmax,hmax) < 4 then do;
MPRINT(PLOTIT):   put 'ERROR: At least one variable is all missing.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check for nonpositive data with log scales------;
MPRINT(PLOTIT):   if (vmin <= 0 and 0) or (hmin <= 0 and 0) then do;
MPRINT(PLOTIT):   put "ERROR: Nonpositive data with INTERPOL=yes.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------store extend values------;
MPRINT(PLOTIT):   list = symget('extend');
MPRINT(PLOTIT):   call symput('close',compress(put(index(list,'close'),best3.)));
MPRINT(PLOTIT):   if nmiss(input(scan(list,1,' '),?? 32.)) then call symput('extendl',' ');
MPRINT(PLOTIT):   else call symput('extendl',scan(list,1,' '));
MPRINT(PLOTIT):   if nmiss(input(scan(list,2,' '),?? 32.)) then call symput('extendr',' ');
MPRINT(PLOTIT):   else call symput('extendr',scan(list,2,' '));
MPRINT(PLOTIT):   if nmiss(input(scan(list,3,' '),?? 32.)) then call symput('extendt',' ');
MPRINT(PLOTIT):   else call symput('extendt',scan(list,3,' '));
MPRINT(PLOTIT):   if nmiss(input(scan(list,4,' '),?? 32.)) then call symput('extendb',' ');
MPRINT(PLOTIT):   else call symput('extendb',scan(list,4,' '));
MPRINT(PLOTIT):   *------make sure PAINT= minimum, maximum are stored------;
MPRINT(PLOTIT):   call symput('rgbround', trim(symget('rgbround')) || ' .');
MPRINT(PLOTIT):   *------compute (possibly adjusted) range------;
MPRINT(PLOTIT):   isavec = index(symget('symtype'),'vector');
MPRINT(PLOTIT):   if isavec then do;
MPRINT(PLOTIT):   vmin = min(0,vmin);
MPRINT(PLOTIT):   hmin = min(0,hmin);
MPRINT(PLOTIT):   vmax = max(0,vmax);
MPRINT(PLOTIT):   hmax = max(0,hmax);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   vmax = max(vmax,hmax);
MPRINT(PLOTIT):   hmax = vmax;
MPRINT(PLOTIT):   vmin = min(vmin,hmin);
MPRINT(PLOTIT):   hmin = vmin;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if 0 and not 0 then range = vmax - vmin;
MPRINT(PLOTIT):   else if 0 and not 0 then range = hmax - hmin;
MPRINT(PLOTIT):   else range = max(vmax - vmin, hmax - hmin);
MPRINT(PLOTIT):   range = max(1e4 * 1e-8,range);
MPRINT(PLOTIT):   *------default increment, minima, maxima------;
MPRINT(PLOTIT):   inc = input(symget('inc'),?? 32.);
MPRINT(PLOTIT):   if n(inc) = 0 then do;
MPRINT(PLOTIT):   inc = 10 ** ceil(log10(range) - 1.0);
MPRINT(PLOTIT):   if range / inc >= 7.5 then inc = inc * 2;
MPRINT(PLOTIT):   if range / inc <= 2.5 then inc = inc / 2;
MPRINT(PLOTIT):   if range / inc <= 2.5 then inc = inc / 2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   tinc = compress(put(inc,best12.));
MPRINT(PLOTIT):   if n(inc) = 0 then do;
MPRINT(PLOTIT):   put 'ERROR: Input data set is empty, constant, or corrupt.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('inc' ,trim(tinc));
MPRINT(PLOTIT):   call symput('hmax',compress(put(hmax,best15.)));
MPRINT(PLOTIT):   call symput('hmin',compress(put(hmin,best15.)));
MPRINT(PLOTIT):   call symput('vmax',compress(put(vmax,best15.)));
MPRINT(PLOTIT):   call symput('vmin',compress(put(vmin,best15.)));
MPRINT(PLOTIT):   *------construct plot request------;
MPRINT(PLOTIT):   vplotvar = symget('vplotvar');
MPRINT(PLOTIT):   hplotvar = symget('hplotvar');
MPRINT(PLOTIT):   plotopts = symget('plotopts');
MPRINT(PLOTIT):   labelvar = symget('labelvar');
MPRINT(PLOTIT):   upopts = upcase(plotopts);
MPRINT(PLOTIT):   plotreq = trim(vplotvar) || ' * ' || trim(hplotvar) || ' $ ' || trim(labelvar) || ' = _symbol_';
MPRINT(PLOTIT):   *------check for HREF= VREF= options------;
MPRINT(PLOTIT):   if index(upopts,'HREF') or index(upopts,'VREF') then put 'WARNING: HREF= and VREF= PLOT options are ignored.  ' 'Specify ' 'them as ' 'macro options ' 'instead.';
MPRINT(PLOTIT):   *------see if we need to generate a placement list------;
MPRINT(PLOTIT):   pl = ' ';
MPRINT(PLOTIT):   i = index(upopts,'PLACE');
MPRINT(PLOTIT):   if i then do;
MPRINT(PLOTIT):   pl = substr(plotopts,i);
MPRINT(PLOTIT):   if i > 1 then plotopts = substr(plotopts,1,i - 1);
MPRINT(PLOTIT):   else plotopts = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle horizontal ticks if not already specified------;
MPRINT(PLOTIT):   c = 'h';
MPRINT(PLOTIT):   maxim = hmax;
MPRINT(PLOTIT):   minim = hmin;
MPRINT(PLOTIT):   logscal = 0;
MPRINT(PLOTIT):   link maketick;
MPRINT(PLOTIT):   *------handle vertical ticks if not already specified------;
MPRINT(PLOTIT):   c = 'v';
MPRINT(PLOTIT):   maxim = vmax;
MPRINT(PLOTIT):   minim = vmin;
MPRINT(PLOTIT):   logscal = 0;
MPRINT(PLOTIT):   link maketick;
MPRINT(PLOTIT):   *------outward option------;
MPRINT(PLOTIT):   outward = symget('outward');
MPRINT(PLOTIT):   if outward ne 'none' then do;
MPRINT(PLOTIT):   if outward = ' ' and isavec then outward = symget('symdummy');
MPRINT(PLOTIT):   if outward ne ' ' then plotopts = trim(plotopts) || ' outward="' || compress(outward,"'"||'" ') || '"';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------box option------;
MPRINT(PLOTIT):   plotopts = trim(left(plotopts)) || ' box';
MPRINT(PLOTIT):   *------reference lines------;
MPRINT(PLOTIT):   list = symget('href');
MPRINT(PLOTIT):   if list ne ' ' then plotopts = trim(plotopts) || ' href=' || list;
MPRINT(PLOTIT):   list = symget('vref');
MPRINT(PLOTIT):   if list ne ' ' then plotopts = trim(plotopts) || ' vref=' || list;
MPRINT(PLOTIT):   *------set up vector heads------;
MPRINT(PLOTIT):   vechead = symget('vechead');
MPRINT(PLOTIT):   vecheadr = scan(vechead,1,' ');
MPRINT(PLOTIT):   vecheadw = scan(vechead,2,' ');
MPRINT(PLOTIT):   if vecheadw = ' ' then vecheadr = ' ';
MPRINT(PLOTIT):   *------determine graphics area------;
MPRINT(PLOTIT):   rc1 = ginit();
MPRINT(PLOTIT):   call gask('maxdisp',units,xmax,ymax,xpix,ypix,rc2);
MPRINT(PLOTIT):   call gask('device',device,rc3);
MPRINT(PLOTIT):   rc4 = gterm();
MPRINT(PLOTIT):   if rc1 or rc2 or rc3 or rc4 then do;
MPRINT(PLOTIT):   put 'ERROR: GASK call for XMAX= and YMAX= failed.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   xmax = xmax * 100;
MPRINT(PLOTIT):   ymax = ymax * 100;
MPRINT(PLOTIT):   if symget('unit') = 'in' then do;
MPRINT(PLOTIT):   xmax = xmax / 2.54;
MPRINT(PLOTIT):   ymax = ymax / 2.54;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   xmax = floor(xmax * 100) / 100;
MPRINT(PLOTIT):   ymax = floor(ymax * 100) / 100;
MPRINT(PLOTIT):   *------max horizontal graph size------;
MPRINT(PLOTIT):   if symget('xmax') = ' ' then call symput('xmax',compress(put(xmax,9.2)));
MPRINT(PLOTIT):   *-------max vertical graph size------;
MPRINT(PLOTIT):   if symget('ymax') = ' ' then call symput('ymax',compress(put(ymax,9.2)));
MPRINT(PLOTIT):   *------construct typical label------;
MPRINT(PLOTIT):   label = symget('label');
MPRINT(PLOTIT):   if label = 'typical' then do;
MPRINT(PLOTIT):   ind1 = substr(vplotvar,length(vplotvar),1);
MPRINT(PLOTIT):   ind2 = substr(hplotvar,length(hplotvar),1);
MPRINT(PLOTIT):   if not ('1' <= ind1 <= '9' and '1' <= ind2 <= '9') then label = ' ';
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   do i = length(vplotvar) to 1 by -1;
MPRINT(PLOTIT):   x = substr(vplotvar,i,1);
MPRINT(PLOTIT):   if not ('1' <= x <= '9') then do;
MPRINT(PLOTIT):   ind1 = substr(vplotvar, i + 1);
MPRINT(PLOTIT):   i = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   do i = length(hplotvar) to 1 by -1;
MPRINT(PLOTIT):   x = substr(hplotvar,i,1);
MPRINT(PLOTIT):   if not ('1' <= x <= '9') then do;
MPRINT(PLOTIT):   ind2 = substr(hplotvar, i + 1);
MPRINT(PLOTIT):   i = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------for correspondence analysis, ------;
MPRINT(PLOTIT):   *------put inertia percentages in labels------;
MPRINT(PLOTIT):   if labelx = ' ' then do;
MPRINT(PLOTIT):   labely = "Dimension " || compress(ind1);
MPRINT(PLOTIT):   labelx = "Dimension " || compress(ind2);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   label = 'label ' || symget('vplotvar') || " = '" || trim(labely) || "' " || symget('hplotvar') || " = '" || trim(labelx) || "'";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------simple, imperfect, label statement check------;
MPRINT(PLOTIT):   label = left(label);
MPRINT(PLOTIT):   if label ne ' ' and compress(label,"'"||'="') = label then do;
MPRINT(PLOTIT):   put 'ERROR: Invalid LABEL statement, LABEL=' label +(-1) '.';
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   str = upcase(scan(label,1));
MPRINT(PLOTIT):   if str ne 'LABEL' and str ne ' ' then label = 'label ' || label;
MPRINT(PLOTIT):   call symput('label' ,trim(label));
MPRINT(PLOTIT):   *------make sure we have britypes with BRIGHT= specified------;
MPRINT(PLOTIT):   if symget('bright') ne ' ' and symget('britypes') = ' ' then do;
MPRINT(PLOTIT):   put 'ERROR: Null BRITYPES= is not ' 'permitted ' 'with ' "BRIGHT=.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set up search parameters------;
MPRINT(PLOTIT):   ls = symget('ls');
MPRINT(PLOTIT):   if index(ls,'search') then do;
MPRINT(PLOTIT):   ls = scan(ls,1,' ');
MPRINT(PLOTIT):   if ls = 'compute' then search = 'compute';
MPRINT(PLOTIT):   else search = 'ls';
MPRINT(PLOTIT):   end;
Sistema SAS
 
MPRINT(PLOTIT):   if ls = ' ' or ls = 'compute' then ls = '.';
MPRINT(PLOTIT):   if pl = ' ' then place = symget('place');
MPRINT(PLOTIT):   else place = '.';
MPRINT(PLOTIT):   if index(place,'search') then do;
MPRINT(PLOTIT):   search = trim(search) || ' place';
MPRINT(PLOTIT):   place = scan(place,1,' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if place = ' ' then place = '.';
MPRINT(PLOTIT):   *------see if we should store device------;
MPRINT(PLOTIT):   list = upcase(symget('gopprint'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   list = upcase(symget('gopplot'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   list = upcase(symget('gopts2'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   list = upcase(symget('gopts'));
MPRINT(PLOTIT):   if index(list,'DEVICE') then device = ' ';
MPRINT(PLOTIT):   *------output generated macro variables------;
MPRINT(PLOTIT):   call symput('search' ,trim(search));
MPRINT(PLOTIT):   call symput('ls' ,trim(ls));
MPRINT(PLOTIT):   call symput('place' ,trim(place));
MPRINT(PLOTIT):   call symput('plotopts',trim(plotopts));
MPRINT(PLOTIT):   call symput('plotreq' ,trim(plotreq));
MPRINT(PLOTIT):   call symput('pl' ,trim(pl));
MPRINT(PLOTIT):   call symput('vecheadr',trim(vecheadr));
MPRINT(PLOTIT):   call symput('vecheadw',trim(vecheadw));
MPRINT(PLOTIT):   call symput('device' ,trim(device));
MPRINT(PLOTIT):   *------check some parameters for valid values------;
MPRINT(PLOTIT):   opt='VECHEAD';
MPRINT(PLOTIT):   str=vecheadr;
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VECHEAD';
MPRINT(PLOTIT):   str=vecheadw;
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='INC';
MPRINT(PLOTIT):   str=tinc;
MPRINT(PLOTIT):   min=1e-8;
MPRINT(PLOTIT):   max=1e35;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='HNOBS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max=1e35;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VNOBS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max=1e35;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='BIPLOT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min=1e-8;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='SYMLEN';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 22;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='OFFSET';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 1;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='TSIZE';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 100;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='TICKLEN';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -10;
MPRINT(PLOTIT):   max= 10;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='ANTIIDEA';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -2;
MPRINT(PLOTIT):   max= 2;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='CIRSEGS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min=1e-4;
MPRINT(PLOTIT):   max= 500;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='CURSEGS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 20;
MPRINT(PLOTIT):   max= 500;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VTOH';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 3;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='MAKEFIT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -10;
MPRINT(PLOTIT):   max= 10;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='HSIZE';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VSIZE';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='XMAX';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='YMAX';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='HPOS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='VPOS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0.1;
MPRINT(PLOTIT):   max= 1e5;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='PS';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 15;
MPRINT(PLOTIT):   max= 200;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='MAXITER';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='MAXOKPEN';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 1e9;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='BRIGHT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 5;
MPRINT(PLOTIT):   max= 250;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDL';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDR';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDT';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='EXTENDB';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= -50;
MPRINT(PLOTIT):   max= 50;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='LSINC';
MPRINT(PLOTIT):   str=symget(opt);
MPRINT(PLOTIT):   min= 1;
MPRINT(PLOTIT):   max= 200;
MPRINT(PLOTIT):   link checkit;
MPRINT(PLOTIT):   opt='LS';
MPRINT(PLOTIT):   str=ls;
MPRINT(PLOTIT):   min= 64;
MPRINT(PLOTIT):   max= 200;
MPRINT(PLOTIT):   if ls ne '.' then link checkit;
MPRINT(PLOTIT):   opt='PLACE';
MPRINT(PLOTIT):   str=place;
MPRINT(PLOTIT):   min= 0;
MPRINT(PLOTIT):   max= 13;
MPRINT(PLOTIT):   if place ne '.' then link checkit;
MPRINT(PLOTIT):   list = compress(symget('tickaxes'));
MPRINT(PLOTIT):   call symput('tickaxes',trim(list));
MPRINT(PLOTIT):   if compress(list,'LRTBlrtbFh') ne ' ' then do;
MPRINT(PLOTIT):   put "ERROR: TICKAXES=LBFh is not valid.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('frame',put(indexc(list,'RTrtF') > 0,1.));
MPRINT(PLOTIT):   if not (symget('unit') in ('in' 'cm')) then do;
MPRINT(PLOTIT):   put "ERROR: UNIT=in is not valid.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if scan(symget('lsizes'),5,' ') = ' ' then do;
MPRINT(PLOTIT):   put "ERROR: LSIZES=1 1 1 1 1 must specify five sizes.";
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ or not ok then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   checkit: *------check parameter range------;
MPRINT(PLOTIT):   if str ne ' ' then do;
MPRINT(PLOTIT):   param = input(str,?? 32.);
MPRINT(PLOTIT):   if not (min <= param <= max) then do;
MPRINT(PLOTIT):   ok = 0;
MPRINT(PLOTIT):   put 'ERROR: ' opt +(-1) '=' str 'is not valid.  ' 'The valid range is ' min '<= ' opt '<= ' max +(-1) '.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   maketick: *------handle ticks if not already specified------;
MPRINT(PLOTIT):   minor = input(symget(c ||'minor'),?? 32.);
MPRINT(PLOTIT):   if index(upopts,upcase(c) || 'AXIS') = 0 then do;
MPRINT(PLOTIT):   if maxim > 0 then logmax = ceil(log10(maxim));
MPRINT(PLOTIT):   else logmax = .;
MPRINT(PLOTIT):   if minim > 0 then logmin = floor(log10(minim));
MPRINT(PLOTIT):   else logmin = .;
MPRINT(PLOTIT):   *------major ticks for log scale------;
MPRINT(PLOTIT):   if logscal and n(logmin) then do;
MPRINT(PLOTIT):   plotopts = trim(plotopts) || ' ' || c || 'axis=';
MPRINT(PLOTIT):   do i = logmin to logmax;
MPRINT(PLOTIT):   plotopts = trim(plotopts) || '1e' || compress(put(i,4.)) || ',';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   plotopts = substr(plotopts,1,length(plotopts) - 1);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------ordinary major ticks------;
MPRINT(PLOTIT):   else plotopts = trim(plotopts) || ' ' || c || 'axis=by ' || tinc;
MPRINT(PLOTIT):   *------minor ticks------;
MPRINT(PLOTIT):   if minor >= 1 then do;
MPRINT(PLOTIT):   if n(logmax) then do;
MPRINT(PLOTIT):   if logscal then do;
MPRINT(PLOTIT):   maxim = logmax;
MPRINT(PLOTIT):   minim = logmin;
MPRINT(PLOTIT):   i = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else i = inc;
MPRINT(PLOTIT):   maxim = ceil(2 + maxim / i) * i;
MPRINT(PLOTIT):   minim = floor(minim / i - 2) * i;
MPRINT(PLOTIT):   call symput(c || 'minor', compress(put(minim,best12.)) || ' to ' || compress(put(maxim,best12.)) || ' by ' || compress(put(i / (minor + 1),best12.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else call symput(c||'minor',' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------number of minor ticks only allowed with inc is known------;
MPRINT(PLOTIT):   else if n(minor) then do;
MPRINT(PLOTIT):   put 'WARNING: Minor ticks are suppressed when HAXIS= ' 'or VAXIS= ' 'is specified ' 'on PLOTOPTS=.';
MPRINT(PLOTIT):   call symput(c||'minor',' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *========================preprocessing of data========================;
MPRINT(PLOTIT):   *------preprocess the input data set------;
MPRINT(PLOTIT):   data preproc;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length _symbol_ $ 1 __symbol $ 1 __lfont __lcolor __sfont __scolor __stype __color $ 12 __otype $ 16 __temp $ 60 __excols $ 64;
MPRINT(PLOTIT):   retain __nblank __bblank 0 __oldx __oldy . __color __excols ' ';
MPRINT(PLOTIT):   drop __nblank __bblank __dummy __mrkwrn __nconto __oldx __oldy __excols;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   *------set the variable labels------;
MPRINT(PLOTIT):   label Dim2 = 'Dimension 2' Dim1 = 'Dimension 1';
MPRINT(PLOTIT):   call label(Dim2, __temp);
MPRINT(PLOTIT):   call symput('labely',trim(__temp));
MPRINT(PLOTIT):   call label(Dim1, __temp);
MPRINT(PLOTIT):   call symput('labelx',trim(__temp));
MPRINT(PLOTIT):   drop __temp;
MPRINT(PLOTIT):   *------output x coordinates for the curve------;
MPRINT(PLOTIT):   *------computed colors------;
MPRINT(PLOTIT):   *------excluded colors------;
MPRINT(PLOTIT):   __excols = lowcase(symget('excolors'));
MPRINT(PLOTIT):   drop __roupai __roured __rougre __roublu;
MPRINT(PLOTIT):   retain __roupai __roured __rougre __roublu;
MPRINT(PLOTIT):   array __rou[5] __dummy __roured __rougre __roublu __roupai (-240 1 1 1 .);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set up observation type variable------;
MPRINT(PLOTIT):   _type_ = repeat(' ',7);
MPRINT(PLOTIT):   *------preprocess raw data------;
MPRINT(PLOTIT):   set preproc;
MPRINT(PLOTIT):   *------store label/symbol colors, sizes, fonts, types------;
MPRINT(PLOTIT):   array a__ty[1] $ 15 _temporary_ ('CONFIG');
MPRINT(PLOTIT):   __li = 1;
MPRINT(PLOTIT):   drop __li __i;
MPRINT(PLOTIT):   do __i = 1 to 1;
MPRINT(PLOTIT):   _type_ = compress(_type_);
MPRINT(PLOTIT):   __otype = _type_;
MPRINT(PLOTIT):   if _type_ = a__ty[__i] then do;
MPRINT(PLOTIT):   __li = __i;
MPRINT(PLOTIT):   __i = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   array a__ls[1] _temporary_ (1);
MPRINT(PLOTIT):   array a__ss[1] _temporary_ (1);
MPRINT(PLOTIT):   array a__lf[1] $ 12 _temporary_ ('none');
MPRINT(PLOTIT):   array a__lc[1] $ 12 _temporary_ ('cx000000');
MPRINT(PLOTIT):   array a__sf[1] $ 12 _temporary_ ('none');
MPRINT(PLOTIT):   array a__sc[1] $ 12 _temporary_ ('cx000000');
MPRINT(PLOTIT):   array a__st[1] $ 12 _temporary_ ('circle');
MPRINT(PLOTIT):   array a__sy[1] $ 1 _temporary_ ('*');
MPRINT(PLOTIT):   __lsize = a__ls[__li];
MPRINT(PLOTIT):   __ssize = a__ss[__li];
MPRINT(PLOTIT):   __lfont = a__lf[__li];
MPRINT(PLOTIT):   __lcolor = a__lc[__li];
MPRINT(PLOTIT):   __sfont = a__sf[__li];
MPRINT(PLOTIT):   __scolor = a__sc[__li];
MPRINT(PLOTIT):   __stype = a__st[__li];
MPRINT(PLOTIT):   __symbol = a__sy[__li];
MPRINT(PLOTIT):   if upcase(__sfont) = 'MARKER' and upcase(__stype) = 'CONTOUR' then do;
MPRINT(PLOTIT):   __mrkwrn + 1;
MPRINT(PLOTIT):   __sfont = 'solid';
MPRINT(PLOTIT):   if __mrkwrn = 1 then put 'WARNING: The marker font is obsolete ' 'for contour ' 'plots.  The ' 'SOLID font ' 'will be ' 'used instead.';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------assign specialized symbols------;
MPRINT(PLOTIT):   if symget('symvar') = '_symbol_' then do;
MPRINT(PLOTIT):   _symbol_ = __symbol;
MPRINT(PLOTIT):   if __stype in ('vector' 'circle') and _symbol_ = ' ' then _symbol_ = "#";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   _symbol_ = _symbol_;
MPRINT(PLOTIT):   __symbol = _symbol_;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------blank out labels?------;
MPRINT(PLOTIT):   if __lsize = 0 or symget('labelvar') = '_blank_' then _idvar_ = ' ';
MPRINT(PLOTIT):   *------stretch vectors------;
MPRINT(PLOTIT):   *------computed colors------;
MPRINT(PLOTIT):   *-------count contour observations, determine directions------;
MPRINT(PLOTIT):   if __stype = 'contour' then do;
MPRINT(PLOTIT):   __nconto + 1;
MPRINT(PLOTIT):   if __nconto = 1 then do;
MPRINT(PLOTIT):   __oldx = Dim1;
MPRINT(PLOTIT):   __oldy = Dim2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if __nconto = 2 then do;
MPRINT(PLOTIT):   call symput('hcondir',compress(put(Dim1-__oldx,best8.)));
MPRINT(PLOTIT):   call symput('vcondir',compress(put(Dim2-__oldy,best8.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('ncontour',compress(put(__nconto,best12.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------exclude observations in excluded color list------;
MPRINT(PLOTIT):   if __color eq ' ' or index(__excols, trim(lowcase(__color))) = 0;
MPRINT(PLOTIT):   *------adjustments to preprocessed data------;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):   __xvar = Dim1;
MPRINT(PLOTIT):   __yvar = Dim2;
MPRINT(PLOTIT):   *------are labels all blank?------;
MPRINT(PLOTIT):   if not __nblank then do;
MPRINT(PLOTIT):   if _idvar_ ne ' ' then do;
MPRINT(PLOTIT):   __nblank = 1;
MPRINT(PLOTIT):   call symput('allblank','0');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------are there obs with both label and symbol blank?------;
MPRINT(PLOTIT):   if not __bblank then do;
MPRINT(PLOTIT):   if _idvar_ = ' ' and _symbol_ = ' ' then do;
MPRINT(PLOTIT):   __bblank = 1;
MPRINT(PLOTIT):   call symput('botblank','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   output preproc;
MPRINT(PLOTIT):   *------create regression data set for curve fitting------;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------separate out obs that will not go through PROC PLOT------;
MPRINT(PLOTIT):   data preproc extraobs;
MPRINT(PLOTIT):   retain __listit 0;
MPRINT(PLOTIT):   length __stype $ 12;
MPRINT(PLOTIT):   *------make sure PROC PLOT scales axes based on min, max------;
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   __stype = 'dummy';
MPRINT(PLOTIT):   output extraobs;
MPRINT(PLOTIT):   do Dim1 = -0.098649986942, 0.2549668779121;
MPRINT(PLOTIT):   do Dim2 = -0.221216552036, 0.1388722255612;
MPRINT(PLOTIT):   output preproc;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   __stype = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set preproc;
MPRINT(PLOTIT):   if "gplot" = "plot" then output preproc;
MPRINT(PLOTIT):   else if _idvar_ = ' ' and __stype in ('vector') then output extraobs;
MPRINT(PLOTIT):   else if _idvar_ ne ' ' or not (0 or (0 and (_symbol_ = ' ' and _idvar_ = ' '))) then do;
MPRINT(PLOTIT):   if __listit = 0 then do;
MPRINT(PLOTIT):   call symput('looklist','1');
MPRINT(PLOTIT):   __listit = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   output preproc;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else output extraobs;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------find regression function------;
MPRINT(PLOTIT):   *------see if there is anything more than corners in preproc------;
MPRINT(PLOTIT):   *------initpen=0 when nothing to plot, otherwise missing ------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   if _n_ = 0 then set preproc nobs=__nobs;
MPRINT(PLOTIT):   call symput('initpen', scan('0 .', (__nobs > 4) + 1, ' '));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------set up iteration parameters------;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *=========================create printer plot=========================;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length pl $ 200 search $ 24;
MPRINT(PLOTIT):   iternum = 0 + 1;
MPRINT(PLOTIT):   place = 2;
MPRINT(PLOTIT):   ls = .;
MPRINT(PLOTIT):   search = symget('search');
MPRINT(PLOTIT):   ispl = index(search,'place');
MPRINT(PLOTIT):   isls = index(search,'ls');
MPRINT(PLOTIT):   isco = index(search,'compute');
MPRINT(PLOTIT):   *------adjust placement list, line size------;
MPRINT(PLOTIT):   if iternum > 1 then do;
MPRINT(PLOTIT):   if ispl then place = place + 1;
MPRINT(PLOTIT):   if isls then ls = ls + 15;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if isco then ls = round(36 + 29 * iternum - 20 * log(iternum),5);
MPRINT(PLOTIT):   isls = (isls or isco);
MPRINT(PLOTIT):   *------last iteration if we cannot increment------;
MPRINT(PLOTIT):   *------the parameters any more. ------;
MPRINT(PLOTIT):   if (isls and ispl and ls >= 200 and place >= 13) or (isls and not ispl and ls >= 200) or (ispl and not isls and place >= 13) or (not ispl and not isls and not isco) then maxiter = iternum;
MPRINT(PLOTIT):   else maxiter = 15;
MPRINT(PLOTIT):   if ls > 200 then ls = 200;
MPRINT(PLOTIT):   if ls < 64 then ls = 64;
MPRINT(PLOTIT):   actualps = input(symget('ps'),?? 32.);
MPRINT(PLOTIT):   if n(actualps) = 0 then do;
MPRINT(PLOTIT):   vtoh = input(symget('vtoh'),?? 32.);
MPRINT(PLOTIT):   if nmiss(vtoh) then do;
MPRINT(PLOTIT):   hsize = input(symget('hsize'),?? 32.);
MPRINT(PLOTIT):   vsize = input(symget('vsize'),?? 32.);
MPRINT(PLOTIT):   if nmiss(hsize) then hsize = 8.33;
MPRINT(PLOTIT):   if nmiss(vsize) then vsize = 6.24;
MPRINT(PLOTIT):   actualps = round(ls * (vsize / (hsize * 2)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else actualps = round(10 + ls / vtoh,5);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if actualps > 200 then actualps = 200;
MPRINT(PLOTIT):   *------construct placement list------;
MPRINT(PLOTIT):   if n(place) then do;
MPRINT(PLOTIT):   if place > 13 then place = 13;
MPRINT(PLOTIT):   if place = 0 then pl = '(s=center)';
MPRINT(PLOTIT):   else pl = '(h=2 -2 : s=right left)';
MPRINT(PLOTIT):   if place = 1 then pl = trim(pl) || ' (v=1 * h=0 -1 to -2 by alt)';
MPRINT(PLOTIT):   else if place = 2 then pl = trim(pl) || ' (v=1 -1 * h=0 -1 to -5 by alt)';
MPRINT(PLOTIT):   else if place > 2 then pl = trim(pl) || ' (v=1 to 2 by alt * h=0 -1 to -10 by alt)';
MPRINT(PLOTIT):   if place > 3 then do;
MPRINT(PLOTIT):   pl = trim(pl) || ' (s=center right left * v=0 1 to ' || compress(put(place - 2,5.)) || ' by alt * h=0 -1 to ' || compress(put(-3 * (place - 2),5.)) || ' by alt * l= 1 to ' || compress(put(2 + (place - 3.5) / 3,5.)) || ')';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   pl = 'placement=(' || trim(pl) || ')';
MPRINT(PLOTIT):   if place > 4 then do;
MPRINT(PLOTIT):   pl = trim(pl) || ' penalty(7)=' || compress(put(1.5 * place,5.));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('maxiter' ,compress(put(maxiter,5.)));
MPRINT(PLOTIT):   call symput('iternum' ,compress(put(iternum,5.)));
MPRINT(PLOTIT):   call symput('place' ,compress(put(place,5.)));
MPRINT(PLOTIT):   call symput('ls' ,compress(put(ls,5.)));
MPRINT(PLOTIT):   call symput('actualps',compress(put(actualps,5.)));
MPRINT(PLOTIT):   if pl ne ' ' then call symput('pl',trim(pl));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------initialize data sets because they might not be created------;
MPRINT(PLOTIT):   data tempdat3;
MPRINT(PLOTIT):   value = .;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat4;
MPRINT(PLOTIT):   retain label symbol startposition ' ' vaxis haxis penalty lines vshift hshift length n vposition hposition 0;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   options nonumber ls=65 ps=45;
Sistema SAS
 
MPRINT(PLOTIT):   ods exclude all;
MPRINT(PLOTIT):   proc plot nolegend formchar='|----|+|---'
data=preproc vtoh=2;
MPRINT(PLOTIT):   ods output LocateFacts(nowarn)=tempdat3
Locate(nowarn)=tempdat4 Plot=tempdat5;
MPRINT(PLOTIT):   plot Dim2 * Dim1 $ _idvar_ = _symbol_ /
haxis=by 0.1 vaxis=by 0.1 box placement=((h=2 -2 : s=right left)
(v=1 -1 * h=0 -1 to -5 by alt)) list=-1;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):   label Dim2 = '#' Dim1 = '#';
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   quit;
MPRINT(PLOTIT):   ods exclude none;
MPRINT(PLOTIT):   ods output close;
MPRINT(PLOTIT):   options NONUMBER ls=256 ps=10000;
MPRINT(PLOTIT):   *------look at the total penalty------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   done = '0';
MPRINT(PLOTIT):   set tempdat3(obs=1 rename=(value=penalty));
MPRINT(PLOTIT):   if n(penalty) & penalty <= 0 then done = '1';
MPRINT(PLOTIT):   iternum = 1;
MPRINT(PLOTIT):   *------print iteration history line------;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   place = 2;
MPRINT(PLOTIT):   ls = 65;
MPRINT(PLOTIT):   actualps = 45;
MPRINT(PLOTIT):   m = floor((256 - 55) / 2);
MPRINT(PLOTIT):   if iternum = 1 then do;
MPRINT(PLOTIT):   put / +m +5 'Iterative Scatter Plot of Labeled Points Macro' /;
MPRINT(PLOTIT):   put +m 'Iteration' +4 'Place' +4 'Line Size' +4 'Page Size' +4 'Penalty';
MPRINT(PLOTIT):   put +m '-------------------------------------------------------';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   m = m - 4;
MPRINT(PLOTIT):   put +m iternum 9. place 11. ls 11. actualps 13. penalty 13.;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if iternum >= 15 then done = '1';
MPRINT(PLOTIT):   call symput('done',compress(done));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   run;
 
                                                                                                         Iterative Scatter Plot of Labeled Points Macro
 
                                                                                                    Iteration    Place    Line Size    Page Size    Penalty
                                                                                                    -------------------------------------------------------
                                                                                                        1          2         65           45            0
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *======================post-process plot, step 1======================;
MPRINT(PLOTIT):   *------put titles, footnotes in plot------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat6;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   proc sql;
MPRINT(PLOTIT):   create view tempdat6 as select * from dictionary.titles;
MPRINT(PLOTIT):   quit;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   set tempdat6 end=eof;
MPRINT(PLOTIT):   if type = 'T' then ntitles + 1;
MPRINT(PLOTIT):   if eof then call symput('ntitles', trim(put(ntitles, 2. -L)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   data tempdat5(keep=batch);
MPRINT(PLOTIT):   length batch $ 256;
MPRINT(PLOTIT):   if 0 then set tempdat5;
MPRINT(PLOTIT):   set tempdat6(where=(type='T') rename=(text=batch)) tempdat5 tempdat6(where=(type='F') rename=(text=batch));
MPRINT(PLOTIT):   if type = 'F' or type = 'T' then do;
MPRINT(PLOTIT):   i = round((65 - length(batch)) / 2);
MPRINT(PLOTIT):   if i > 1 then do;
MPRINT(PLOTIT):   substr(batch, i) = batch;
MPRINT(PLOTIT):   substr(batch, 1, i - 1) = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if not (batch = ' ' and lag(batch) = ' ') then output;
MPRINT(PLOTIT):   if type = 'T' and number = 1 then do;
MPRINT(PLOTIT):   batch = ' ';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------start storing locations of lines------;
MPRINT(PLOTIT):   data anno(keep=tx ty comment);
MPRINT(PLOTIT):   length c $ 1 line title $ 256 comment $ 80;
MPRINT(PLOTIT):   retain coln top bottom afterbot nlines xlabline 0 topn botn topextra botextra past 0 vtick1 vtick2 htick1 htick2 . counttop 1 right left col1 labcolum 65 title ' ';
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   *------skip leading blank lines------;
MPRINT(PLOTIT):   if _n_ = 1 then do while(line = ' ');
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------skip note lines and subsequent blanks lines------;
MPRINT(PLOTIT):   if xlabline and _n_ > xlabline and not past then do;
MPRINT(PLOTIT):   if line =: 'NOTE:' then line = ' ';
MPRINT(PLOTIT):   if _n_ > xlabline + 1 then do;
MPRINT(PLOTIT):   do while((line =: 'NOTE:' or line = ' ') and not eof);
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------initialize------;
MPRINT(PLOTIT):   length = length(line);
MPRINT(PLOTIT):   if line = ' ' then length = 0;
MPRINT(PLOTIT):   comment = 'frame, tick';
MPRINT(PLOTIT):   *------store first title line------;
MPRINT(PLOTIT):   if title = ' ' then title = line;
MPRINT(PLOTIT):   *------find frame location------;
MPRINT(PLOTIT):   if left(line) =: '-' and index(line,'-+-') and substr(line,length,1) = '-' then do;
MPRINT(PLOTIT):   bottom = _n_;
MPRINT(PLOTIT):   if top = 0 then do;
MPRINT(PLOTIT):   top = _n_;
MPRINT(PLOTIT):   left = index(line,'-');
MPRINT(PLOTIT):   right = length;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------flag lines after the bottom line of the plot------;
MPRINT(PLOTIT):   c = substr(line,left,1);
MPRINT(PLOTIT):   if _n_ > top and afterbot = 0 and c = '-' and substr(line,right,1) = '-' then afterbot = 1;
MPRINT(PLOTIT):   else if afterbot then afterbot = afterbot + 1;
MPRINT(PLOTIT):   *------can we drop extra top of the plot lines?------;
MPRINT(PLOTIT):   if top and _n_ > top and not afterbot then do;
MPRINT(PLOTIT):   botn = botn + 1;
MPRINT(PLOTIT):   if c = '+' then do;
MPRINT(PLOTIT):   counttop = 0;
MPRINT(PLOTIT):   botextra = 0;
MPRINT(PLOTIT):   botn = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   if counttop then topn = topn + 1;
MPRINT(PLOTIT):   if compress(line,'| ') = ' ' then do;
MPRINT(PLOTIT):   if abs(_n_ - top - 1 - topextra) < 1e-8 then topextra = topextra + 1;
MPRINT(PLOTIT):   botextra = botextra + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------output horizontal axis tick mark coordinates------;
MPRINT(PLOTIT):   if afterbot = 1 then do;
MPRINT(PLOTIT):   ty = .;
MPRINT(PLOTIT):   do i = left to right;
MPRINT(PLOTIT):   if substr(line,i,1) = '+' then do;
MPRINT(PLOTIT):   tx = i;
MPRINT(PLOTIT):   if nmiss(htick1) then htick1 = tx;
MPRINT(PLOTIT):   else if nmiss(htick2) then htick2 = tx;
MPRINT(PLOTIT):   output anno;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------find last line in plot region------;
MPRINT(PLOTIT):   if afterbot > 2 and not past then do;
MPRINT(PLOTIT):   past = (index(line,"*** Wrapped Listing of Point Locations ***") or index(line,title));
MPRINT(PLOTIT):   if length and not past then do;
MPRINT(PLOTIT):   nlines = _n_;
MPRINT(PLOTIT):   *------find x-axis label line------;
MPRINT(PLOTIT):   if compress(line) = '#' then do;
MPRINT(PLOTIT):   xlabline = _n_;
MPRINT(PLOTIT):   *------check for vertically printing ticks------;
MPRINT(PLOTIT):   if not (afterbot = 3 or afterbot = 4) then do;
MPRINT(PLOTIT):   put 'WARNING: Ticks may be printing vertically.  ' 'The plot may be wrong.';
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   call symput('intrls' ,'1');
MPRINT(PLOTIT):   call symput('intrtick','0');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------first, last nonblank column, label column------;
MPRINT(PLOTIT):   if nlines = 0 and length then do;
MPRINT(PLOTIT):   coln = max(coln,length);
MPRINT(PLOTIT):   i = length + 1 - length(left(line));
MPRINT(PLOTIT):   col1 = min(col1,i);
MPRINT(PLOTIT):   if top then labcolum = min(labcolum,i);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------output vertical axis tick mark coordinates------;
MPRINT(PLOTIT):   if top and substr(line,left,1) = '+' then do;
MPRINT(PLOTIT):   tx = .;
MPRINT(PLOTIT):   ty = _n_;
MPRINT(PLOTIT):   if nmiss(vtick1) then vtick1 = ty;
MPRINT(PLOTIT):   else if nmiss(vtick2) then vtick2 = ty;
MPRINT(PLOTIT):   output anno;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------on last observation, output results to macro variables------;
MPRINT(PLOTIT):   if past or eof then do;
MPRINT(PLOTIT):   *------check VTOH=------;
MPRINT(PLOTIT):   vtoh = input(symget('vtoh'),?? 32.);
MPRINT(PLOTIT):   if nmiss(vtoh) then vtoh = 2;
MPRINT(PLOTIT):   else if n(htick1,htick2,vtick1,vtick2) = 4 then do;
MPRINT(PLOTIT):   vtoh = vtick2 - vtick1;
MPRINT(PLOTIT):   if vtoh > 1e-8 then vtoh = (htick2 - htick1) / vtoh;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   * put vtoh= vtick2= vtick1= htick2= htick1=;
MPRINT(PLOTIT):   call symput('vtoh',compress(put(vtoh,best15.)));
MPRINT(PLOTIT):   *------size of plot parameters------;
MPRINT(PLOTIT):   ls = coln - col1 + 1;
MPRINT(PLOTIT):   left = left - col1 + 1;
MPRINT(PLOTIT):   right = right - col1 + 1;
MPRINT(PLOTIT):   labcolum = labcolum - col1 + 1;
MPRINT(PLOTIT):   hpos = ls + 0.5 * (1.0 + abs(1.5));
MPRINT(PLOTIT):   vpos = nlines + 1;
MPRINT(PLOTIT):   uhpos = input(symget('hpos'),?? 32.);
MPRINT(PLOTIT):   if n(uhpos) then do;
MPRINT(PLOTIT):   if uhpos < hpos then do;
MPRINT(PLOTIT):   put "ERROR: HPOS= is too small.  " 'The default ' 'minimum for ' 'this plot is ' hpos +(-1) '.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else hpos = uhpos;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   uvpos = input(symget('vpos'),?? 32.);
MPRINT(PLOTIT):   if n(uvpos) then do;
MPRINT(PLOTIT):   if uvpos < vpos then do;
MPRINT(PLOTIT):   put "ERROR: VPOS= is too small.  " 'The electronics' 'minimum for ' 'this plot is ' vpos +(-1) '.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else vpos = uvpos;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   hpos = ceil(hpos);
MPRINT(PLOTIT):   vpos = ceil(vpos);
MPRINT(PLOTIT):   *------scale plot to use MAKEFIT= proportion of area------;
MPRINT(PLOTIT):   makefit1 = input(symget('makefit'),?? 32.);
MPRINT(PLOTIT):   makefit = makefit1;
MPRINT(PLOTIT):   *------makefit value can be changed inside this loop------;
MPRINT(PLOTIT):   do until(itfits);
MPRINT(PLOTIT):   itfits = 1;
MPRINT(PLOTIT):   *------determine hsize and vsize------;
MPRINT(PLOTIT):   hsize = input(symget('hsize'),?? 32.);
MPRINT(PLOTIT):   vsize = input(symget('vsize'),?? 32.);
MPRINT(PLOTIT):   if n(vsize) and nmiss(hsize) then hsize = hpos * vsize / (vpos * vtoh);
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   if n(hsize) = 0 then hsize = 8.33;
MPRINT(PLOTIT):   if n(vsize) = 0 then vsize = (vpos / hpos) * hsize * vtoh;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *-------scale sizes so plot fits in specified area------;
MPRINT(PLOTIT):   if n(makefit) then do;
MPRINT(PLOTIT):   scale = max(hsize / (abs(makefit) * (8.33)), vsize / (abs(makefit) * (6.24)));
MPRINT(PLOTIT):   if scale > 1.0 then do;
MPRINT(PLOTIT):   hsize = hsize / scale;
MPRINT(PLOTIT):   vsize = vsize / scale;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------add extra positions to center plot, extend axes------;
MPRINT(PLOTIT):   extendl = input(symget('extendl'),?? 32.);
MPRINT(PLOTIT):   extendr = input(symget('extendr'),?? 32.);
MPRINT(PLOTIT):   extendt = input(symget('extendt'),?? 32.);
MPRINT(PLOTIT):   extendb = input(symget('extendb'),?? 32.);
MPRINT(PLOTIT):   setlr = (nmiss(extendl,extendr) = 2 and not 0);
MPRINT(PLOTIT):   settb = (nmiss(extendt,extendb) = 2 and not 0);
MPRINT(PLOTIT):   *------centering, compute horizontal, vertical offsets------;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   hposoff = max(0.5 * ((8.33) - hsize) / (hsize / hpos), 0);
MPRINT(PLOTIT):   vposoff = max(0.5 * ((6.24) - vsize) / (vsize / vpos), 0);
MPRINT(PLOTIT):   hsize = 8.33;
MPRINT(PLOTIT):   vsize = 6.24;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   vposoff = 0;
MPRINT(PLOTIT):   hposoff = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------can we extend the left and right axes a little?------;
MPRINT(PLOTIT):   if setlr then do;
MPRINT(PLOTIT):   extendl = max(min(hposoff - 2.5, 2), 0);
MPRINT(PLOTIT):   extendr = extendl;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------even the top and bottom extra positions------;
MPRINT(PLOTIT):   if settb and topn > botn then do;
MPRINT(PLOTIT):   i = topn - botn;
MPRINT(PLOTIT):   if i <= topextra then extendt = -i;
MPRINT(PLOTIT):   else extendb = i;
MPRINT(PLOTIT):   i = -0.5 * sum(extendb,extendt);
MPRINT(PLOTIT):   if i > 0 then do;
MPRINT(PLOTIT):   extendb = sum(extendb,i);
MPRINT(PLOTIT):   extendt = sum(extendt,i);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set the extend variables if not set yet------;
MPRINT(PLOTIT):   if nmiss(extendt) then extendt = 0;
MPRINT(PLOTIT):   if nmiss(extendl) then extendl = 0;
MPRINT(PLOTIT):   if nmiss(extendr) then extendr = 0;
MPRINT(PLOTIT):   if nmiss(extendb) then extendb = 0;
MPRINT(PLOTIT):   *------make the plot square------;
MPRINT(PLOTIT):   if 0 and not 0 then do;
MPRINT(PLOTIT):   *------first try to adjust the left and right------;
MPRINT(PLOTIT):   if setlr then do;
MPRINT(PLOTIT):   setlr = ((right - left + extendr + extendl) - (vtoh * (bottom - top + extendt + extendb))) / 2;
MPRINT(PLOTIT):   extendl = extendl - setlr;
MPRINT(PLOTIT):   extendl = max(min(extendl,hposoff - 2.5),0);
MPRINT(PLOTIT):   extendr = extendl;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------next try to adjust the top and bottom------;
MPRINT(PLOTIT):   if settb then do;
MPRINT(PLOTIT):   settb = ((right - left + extendr + extendl) - (vtoh * (bottom - top + extendt + extendb))) / (-2 * vtoh);
MPRINT(PLOTIT):   extendt = extendt - settb;
MPRINT(PLOTIT):   extendb = extendb - settb;
MPRINT(PLOTIT):   if -extendt > topextra then extendt = -topextra;
MPRINT(PLOTIT):   if -extendb > botextra then extendb = -botextra;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------check to see if we succeeded, should be zero------;
MPRINT(PLOTIT):   setlr = (right - left + extendr + extendl) - vtoh * (bottom - top + extendt + extendb);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------see if the plot fits, otherwise try again------;
MPRINT(PLOTIT):   if n(makefit) and makefit < 0 and not 0 and ((0 and abs(setlr) > (1e-8 * hpos)) or (1 and (((extendl + extendr) > (2 * hposoff - 2.5)) or ((extendt + extendb) > (2 * vposoff - 0.25))))) and makefit <= 0.75 * makefit1 then do;
MPRINT(PLOTIT):   makefit = makefit * 0.99;
MPRINT(PLOTIT):   itfits = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------warn if we changed MAKEFIT= to make the plot square------;
MPRINT(PLOTIT):   if n(makefit) and abs(makefit - makefit1) > 1e-8 then put 'WARNING: MAKEFIT=' makefit 'was used ' 'to make ' 'the plot ' 'fit.';
MPRINT(PLOTIT):   * put extendt= extendb= extendl= extendr= vtoh= hposoff= vposoff=;
MPRINT(PLOTIT):   *------override electronics positions------;
MPRINT(PLOTIT):   if n(uhpos) then hposoff = 0;
MPRINT(PLOTIT):   else hpos = ceil(hpos + 2.0 * hposoff);
MPRINT(PLOTIT):   if n(uvpos) then vposoff = 0;
MPRINT(PLOTIT):   else vpos = ceil(vpos + 2.0 * vposoff);
MPRINT(PLOTIT):   *------output plot size parameters------;
MPRINT(PLOTIT):   call symput('col1', compress(put(col1,5.0)));
MPRINT(PLOTIT):   call symput('actualls', compress(put(ls,5.0)));
MPRINT(PLOTIT):   call symput('nlines', compress(put(nlines,5.0)));
MPRINT(PLOTIT):   call symput('top', compress(put(top,5.0)));
MPRINT(PLOTIT):   call symput('bottom', compress(put(bottom,5.0)));
MPRINT(PLOTIT):   call symput('left', compress(put(left,5.0)));
MPRINT(PLOTIT):   call symput('right', compress(put(right,5.0)));
MPRINT(PLOTIT):   call symput('labcolum', compress(put(labcolum,5.0)));
MPRINT(PLOTIT):   call symput('xlabline', compress(put(xlabline,5.0)));
MPRINT(PLOTIT):   call symput('hposoff', compress(put(hposoff,7.1)));
MPRINT(PLOTIT):   call symput('vposoff', compress(put(vposoff,7.1)));
MPRINT(PLOTIT):   call symput('hpos', compress(put(hpos,9.0)));
MPRINT(PLOTIT):   call symput('vpos', compress(put(vpos,9.0)));
MPRINT(PLOTIT):   call symput('hsize', compress(put(hsize,9.2)));
MPRINT(PLOTIT):   call symput('vsize', compress(put(vsize,9.2)));
MPRINT(PLOTIT):   call symput('extendl', compress(put(extendl,9.2)));
MPRINT(PLOTIT):   call symput('extendr', compress(put(extendr,9.2)));
MPRINT(PLOTIT):   call symput('extendt', compress(put(extendt,9.2)));
MPRINT(PLOTIT):   call symput('extendb', compress(put(extendb,9.2)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   getline: set tempdat5(keep=batch rename=(batch=line)) end=eof;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *=======================post-process plot, step 2======================;
MPRINT(PLOTIT):   data tempdat1(keep=function x y text angle position comment color size style n __xvar __yvar __otype) tempdat2(keep=tx ty comment _radius_ color size style n __xvar __yvar);
MPRINT(PLOTIT):   length text line label $ 256 function color style $ 8 position symbol $ 1 comment $ 80;
MPRINT(PLOTIT):   retain style ' ';
MPRINT(PLOTIT):   function = 'LABEL';
MPRINT(PLOTIT):   color = ' ';
MPRINT(PLOTIT):   size = .;
MPRINT(PLOTIT):   *------read the plot------;
MPRINT(PLOTIT):   if _n_ <= 41 then do;
MPRINT(PLOTIT):   comment = 'text';
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   *------skip leading blank lines------;
MPRINT(PLOTIT):   if _n_ = 1 then do while(line = ' ');
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------skip note lines and subsequent blanks lines------;
MPRINT(PLOTIT):   if _n_ > 41 then do;
MPRINT(PLOTIT):   if line =: 'NOTE:' then line = ' ';
MPRINT(PLOTIT):   if _n_ > 41 + 1 then do;
MPRINT(PLOTIT):   do while((line =: 'NOTE:' or line = ' ') and not eof);
MPRINT(PLOTIT):   link getline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   line = substr(line, 2, 62);
MPRINT(PLOTIT):   *------is this an axis line?------;
MPRINT(PLOTIT):   istop = (_n_ = 3);
MPRINT(PLOTIT):   isbot = (_n_ = 38);
MPRINT(PLOTIT):   *------set the y-axis label------;
MPRINT(PLOTIT):   if 3 <= _n_ <= 38 and substr(line,1,1) = '#' then substr(line,1,1) = ' ';
MPRINT(PLOTIT):   if _n_ = 41 then do;
MPRINT(PLOTIT):   y = ((2 * 41) - 3 - 38) / 2;
MPRINT(PLOTIT):   x = 1;
MPRINT(PLOTIT):   text = symget('labely');
MPRINT(PLOTIT):   if 27.0 > 1 then x = x - 0.5;
MPRINT(PLOTIT):   if length(text) > 1 then angle = 90;
MPRINT(PLOTIT):   comment = 'text, y label';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   angle = 0;
MPRINT(PLOTIT):   *------remove stuff in the plot------;
MPRINT(PLOTIT):   if 3 <= _n_ <= 38 then substr(line,8,62 - 8 + 1) = ' ';
MPRINT(PLOTIT):   *------output ticks, titles, and so on------;
MPRINT(PLOTIT):   y = 41 - _n_;
MPRINT(PLOTIT):   do iwhile = 1 to 65 while(line ne ' ');
MPRINT(PLOTIT):   i = length(line) - length(left(line)) + 1;
MPRINT(PLOTIT):   text = substr(line,i,1);
MPRINT(PLOTIT):   *------isolate and process one label------;
MPRINT(PLOTIT):   if text ne ' ' then do;
MPRINT(PLOTIT):   position = '+';
MPRINT(PLOTIT):   x = i;
MPRINT(PLOTIT):   *------special handling of title lines, xaxis label------;
MPRINT(PLOTIT):   if _n_ < 3 or _n_ >= 41 then do;
MPRINT(PLOTIT):   text = left(line);
MPRINT(PLOTIT):   i = 62 + 1;
MPRINT(PLOTIT):   line = ' ';
MPRINT(PLOTIT):   x = (8 + 62) / 2.0;
MPRINT(PLOTIT):   *------special handling of title lines------;
MPRINT(PLOTIT):   if _n_ < 3 then do;
MPRINT(PLOTIT):   comment = 'text, title';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------footnotes------;
MPRINT(PLOTIT):   else if _n_ > 41 then do;
MPRINT(PLOTIT):   comment = 'text, footnote';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle x-axis label------;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   text = symget('labelx');
MPRINT(PLOTIT):   comment = 'text, x label';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle label outside the plot, not title------;
MPRINT(PLOTIT):   else if i < 8 or _n_ > 38 then do;
MPRINT(PLOTIT):   do j = i + 1 to 62 until(done);
MPRINT(PLOTIT):   done = substr(line,j,1) = ' ';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   text = substr(line,i,j - i + 1);
MPRINT(PLOTIT):   substr(line,i,j - i + 1) = ' ';
MPRINT(PLOTIT):   *------handle ticks------;
MPRINT(PLOTIT):   position = '<';
MPRINT(PLOTIT):   x = i + length(text) - 1;
MPRINT(PLOTIT):   if j < 8 then comment = 'text, y tick';
MPRINT(PLOTIT):   else if _n_ < 41 then do;
MPRINT(PLOTIT):   comment = 'text, x tick';
MPRINT(PLOTIT):   *------tweak the placement a tad with new options------;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else comment = 'text, other';
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   * put i= text= position=;
MPRINT(PLOTIT):   *------output label------;
MPRINT(PLOTIT):   if text ne ' ' then output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if iwhile >= 65 and symget('abort') ne '1' then do;
MPRINT(PLOTIT):   put 'ERROR: The frame location algorithm is confused.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------read the labels------;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   *------bring in the extra observations------;
MPRINT(PLOTIT):   eofextra = 0;
MPRINT(PLOTIT):   p = '+';
MPRINT(PLOTIT):   tx = .;
MPRINT(PLOTIT):   ty = .;
MPRINT(PLOTIT):   vshift = .;
MPRINT(PLOTIT):   hshift = .;
MPRINT(PLOTIT):   text = ' ';
MPRINT(PLOTIT):   n = 0;
MPRINT(PLOTIT):   lines = 0;
MPRINT(PLOTIT):   do while(not eofextra);
MPRINT(PLOTIT):   set extraobs(keep=__: _radius_) end=eofextra;
MPRINT(PLOTIT):   comment = 'extra,';
MPRINT(PLOTIT):   if n(__xvar,__yvar) = 2 then link process;
MPRINT(PLOTIT):   n = n + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------determine point count------;
MPRINT(PLOTIT):   set tempdat3(firstobs=2 rename=(value=npoints));
MPRINT(PLOTIT):   if nmiss(npoints) then do;
MPRINT(PLOTIT):   npoints = 0;
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   sumh = 0;
MPRINT(PLOTIT):   sumv = 0;
MPRINT(PLOTIT):   sumx = 0;
MPRINT(PLOTIT):   sumy = 0;
MPRINT(PLOTIT):   sumx2 = 0;
MPRINT(PLOTIT):   sumy2 = 0;
MPRINT(PLOTIT):   sumxh = 0;
MPRINT(PLOTIT):   sumyv = 0;
MPRINT(PLOTIT):   nobs = 0;
MPRINT(PLOTIT):   midh = 62 / 2;
MPRINT(PLOTIT):   midv = 45 / 2;
MPRINT(PLOTIT):   midx = (0.2549668779121 + -0.098649986942) / 2;
MPRINT(PLOTIT):   midy = (0.1388722255612 + -0.221216552036) / 2;
MPRINT(PLOTIT):   *------read the labels------;
MPRINT(PLOTIT):   do pointn = 1 to npoints;
MPRINT(PLOTIT):   link getlabel;
MPRINT(PLOTIT):   ty = vpositio;
MPRINT(PLOTIT):   tx = hpositio;
MPRINT(PLOTIT):   comment = 'list,';
MPRINT(PLOTIT):   if _error_ = 1 then put _all_;
MPRINT(PLOTIT):   if startpos = 'Center' then p = '+';
MPRINT(PLOTIT):   else if startpos = 'Left' then p = '<';
MPRINT(PLOTIT):   else p = '>';
MPRINT(PLOTIT):   text = symbol;
MPRINT(PLOTIT):   i = n;
MPRINT(PLOTIT):   set preproc(keep=__: _radius_) point=i;
MPRINT(PLOTIT):   link process;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------least-squares slope and intercept------;
MPRINT(PLOTIT):   b = .;
MPRINT(PLOTIT):   a = .;
MPRINT(PLOTIT):   if nobs > 0 then do;
MPRINT(PLOTIT):   d = sumx - nobs * midx;
MPRINT(PLOTIT):   b = nobs * sumx2 - d * d;
MPRINT(PLOTIT):   if abs(b) < 1e-8 then b = 0;
MPRINT(PLOTIT):   else b = (nobs * sumxh - d * (sumh - nobs * midh)) / b;
MPRINT(PLOTIT):   a = sumh / nobs - b * sumx / nobs;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('hslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('hinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   if nobs > 0 then do;
MPRINT(PLOTIT):   d = (sumy - nobs * midy);
MPRINT(PLOTIT):   b = (nobs * sumy2 - d * d);
MPRINT(PLOTIT):   if abs(b) < 1e-8 then b = 0;
MPRINT(PLOTIT):   else b = (nobs * sumyv - d * (sumv - nobs * midv)) / b;
MPRINT(PLOTIT):   a = sumv / nobs - b * sumy / nobs;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   call symput('vslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('vinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   process: *------handle a point in the plot------;
MPRINT(PLOTIT):   type = __stype;
MPRINT(PLOTIT):   if n(tx) then do;
MPRINT(PLOTIT):   tx = tx + 8 + 1;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(ty) then do;
MPRINT(PLOTIT):   ty = ty + 1 + 41 - 38;
MPRINT(PLOTIT):   y = ty;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   colorset = 0;
MPRINT(PLOTIT):   *------random colors------;
MPRINT(PLOTIT):   *------store full label------;
MPRINT(PLOTIT):   if lines then do;
MPRINT(PLOTIT):   line = label;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   line = compress('('||type||',') || ' ' || compress(put(n,5.)||')');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set colors, sizes, and so on for symbols------;
MPRINT(PLOTIT):   if not colorset then color = __scolor;
MPRINT(PLOTIT):   size = __ssize;
MPRINT(PLOTIT):   style = __sfont;
MPRINT(PLOTIT):   if text = 'NONE' then text = ' ';
MPRINT(PLOTIT):   if __symbol ne '00'x then text = __symbol;
MPRINT(PLOTIT):   if type = 'contour' then function = 'BAR';
MPRINT(PLOTIT):   else if type = 'square' then function = 'SYMBOL';
MPRINT(PLOTIT):   else function = 'LABEL';
MPRINT(PLOTIT):   *------output list info to lines data set------;
MPRINT(PLOTIT):   if type =: 'vector' or type =: 'circle' then do;
MPRINT(PLOTIT):   comment = trim(comment) || ' ' || trim(type) || ', ' || line;
MPRINT(PLOTIT):   output tempdat2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------output list info to text data set------;
MPRINT(PLOTIT):   if (text ne ' ' and type ne 'dummy') or type = 'contour' or type = 'function' then do;
MPRINT(PLOTIT):   position = '+';
MPRINT(PLOTIT):   comment = trim(scan(comment,1,' ')) || ' text, ' || trim(type) || ', ' || line;
MPRINT(PLOTIT):   output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------intermediate results for slope, intercept------;
MPRINT(PLOTIT):   if n(tx,ty,__xvar,__yvar) = 4 then do;
MPRINT(PLOTIT):   sumh = sumh + tx;
MPRINT(PLOTIT):   sumv = sumv + ty;
MPRINT(PLOTIT):   sumx = sumx + __xvar;
MPRINT(PLOTIT):   sumy = sumy + __yvar;
MPRINT(PLOTIT):   d = __xvar - midx;
MPRINT(PLOTIT):   sumx2 = sumx2 + d * d;
MPRINT(PLOTIT):   sumxh = sumxh + (tx - midh) * d;
MPRINT(PLOTIT):   d = __yvar - midy;
MPRINT(PLOTIT):   sumy2 = sumy2 + d * d;
MPRINT(PLOTIT):   sumyv = sumyv + (ty - midv) * d;
MPRINT(PLOTIT):   nobs = nobs + 1;
MPRINT(PLOTIT):   * put sumh= tx= sumv= ty= sumx= __xvar= sumy= __yvar= midx= sumx2= sumxh= midy= sumy2= sumyv= nobs=;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------handle the label fragments------;
MPRINT(PLOTIT):   if lines then do;
MPRINT(PLOTIT):   if not colorset then color = __lcolor;
MPRINT(PLOTIT):   size = __lsize;
MPRINT(PLOTIT):   style = __lfont;
MPRINT(PLOTIT):   function = 'LABEL';
MPRINT(PLOTIT):   position = p;
MPRINT(PLOTIT):   comment = trim(scan(comment,1,' ')) || ' text, label, ' || trim(type) || ', ' || line;
MPRINT(PLOTIT):   shift = floor(1e-8 + (lines - 1) / 2);
MPRINT(PLOTIT):   do i = 1 to lines;
MPRINT(PLOTIT):   if lines > 1 then link getlabel;
MPRINT(PLOTIT):   text = label;
MPRINT(PLOTIT):   if text ne ' ' and type ne 'dummy' then do;
MPRINT(PLOTIT):   x = tx + hshift;
MPRINT(PLOTIT):   y = 1 + ty + vshift + shift - i;
MPRINT(PLOTIT):   output tempdat1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   getline: set tempdat5(keep=batch rename=(batch=line)) end=eof;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   getlabel: set tempdat4(keep=lines symbol n label vshift hshift vposition hposition startposition rename=(startposition=startpos vposition=vpositio hposition=hpositio));
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------delete intermediate data sets------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete extraobs;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------tick mark based slope and intercept------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   merge anno(where=(index(substr(comment,1,12),'tick')) keep=ty tx comment) tempdat1(where=(index(comment,'tick')) keep=text comment);
MPRINT(PLOTIT):   if n(ty) then ty = 41 - ty;
MPRINT(PLOTIT):   data = input(text,?? 32.);
MPRINT(PLOTIT):   if (0 and n(tx)) or (0 and n(ty)) then do;
MPRINT(PLOTIT):   if data > 0 then data = log10(data);
MPRINT(PLOTIT):   else data = .;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   oldty = lag(ty);
MPRINT(PLOTIT):   oldtx = lag(tx);
MPRINT(PLOTIT):   olddata = lag(data);
MPRINT(PLOTIT):   if n(data,olddata) = 2 then do;
MPRINT(PLOTIT):   den = data - olddata;
MPRINT(PLOTIT):   if abs(den) > 1e-8 then do;
MPRINT(PLOTIT):   if n(oldty,ty) = 2 then do;
MPRINT(PLOTIT):   b = (ty - oldty) / den;
MPRINT(PLOTIT):   a = ty - b * data;
MPRINT(PLOTIT):   call symput('vslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('vinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(oldtx,tx) = 2 then do;
MPRINT(PLOTIT):   b = (tx - oldtx) / den;
MPRINT(PLOTIT):   a = tx - b * data - 2 + 1;
MPRINT(PLOTIT):   call symput('hslope',compress(put(b,best15.)));
MPRINT(PLOTIT):   call symput('hinter',compress(put(a,best15.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------switch top and bottom to annotate coordinates------;
MPRINT(PLOTIT):   *------make goptions statement------;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *=================create annotate data set with lines=================;
MPRINT(PLOTIT):   data anno(keep=function x y comment color size style n);
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length text $ 256 comment $ 100 function color style $ 8;
MPRINT(PLOTIT):   retain curven -1 tickaxes "LBFh" vtoh 2 vinter 23 hinter 23 hslope 120 vslope 60 hmax 0.2549668779121 vmax 0.1388722255612 vmin -0.221216552036 hmin -0.098649986942 singular 1e-8 left 8 right 62 top 38 bottom 3;
MPRINT(PLOTIT):   array lsizes[5] _temporary_ (1 1 1 1 1);
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   *------check slope, intercept------;
MPRINT(PLOTIT):   if n(hinter,vinter,hslope,vslope) ne 4 then do;
MPRINT(PLOTIT):   put 'ERROR: Plot algorithm failed.  ' 'Coordinates could ' 'not be ' 'computed.  ' 'Vertically printing ' 'ticks is a ' 'possible cause.  ' 'Another ' 'explanation ' 'is no locate list ' 'was available.  ' 'Look ' 'at the ' 'printer plot
' 'to check.';
MPRINT(PLOTIT):   call symput('abort','1');
MPRINT(PLOTIT):   stop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------how far should plot be extended?------;
MPRINT(PLOTIT):   extendl = input(symget('extendl'), ?? 32.);
MPRINT(PLOTIT):   extendr = input(symget('extendr'), ?? 32.);
MPRINT(PLOTIT):   extendt = input(symget('extendt'), ?? 32.);
MPRINT(PLOTIT):   extendb = input(symget('extendb'), ?? 32.);
MPRINT(PLOTIT):   *------rectangle sizes for contour plots------;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   nobs = 0;
MPRINT(PLOTIT):   if nobs <= 0 and 0 > singular then nobs = sqrt(0);
MPRINT(PLOTIT):   nobs = nobs - 1;
MPRINT(PLOTIT):   if nobs > singular then vcontour = abs(vslope) * (vmax - vmin) / nobs;
MPRINT(PLOTIT):   else vcontour = .;
MPRINT(PLOTIT):   call symput('vcontour',compress(put(vcontour,best15.)));
MPRINT(PLOTIT):   nobs = 0;
MPRINT(PLOTIT):   if nobs <= 0 and 0 > singular then nobs = sqrt(0);
MPRINT(PLOTIT):   nobs = nobs - 1;
MPRINT(PLOTIT):   if nobs > singular then hcontour = abs(hslope) * (hmax - hmin) / nobs;
MPRINT(PLOTIT):   else hcontour = .;
MPRINT(PLOTIT):   call symput('hcontour',compress(put(hcontour,best15.)));
MPRINT(PLOTIT):   *------optionally close up all white space------;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   if n(hcontour) then do;
MPRINT(PLOTIT):   extendl = extendl + left - (hinter + hslope * hmin - 0.5 * hcontour);
MPRINT(PLOTIT):   extendr = extendr + (hinter + hslope * hmax + 0.5 * hcontour) - right;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if n(vcontour) then do;
MPRINT(PLOTIT):   extendt = extendt + (vinter + vslope * vmax + 0.5 * vcontour) - top;
MPRINT(PLOTIT):   extendb = extendb + bottom - (vinter + vslope * vmin - 0.5 * vcontour);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------optionally close up white space with square contours------;
MPRINT(PLOTIT):   if 0 and 0 and not 0 then do;
MPRINT(PLOTIT):   contour = 1 * 0.5;
MPRINT(PLOTIT):   extendl = extendl + left - (hinter + hslope * hmin) + vtoh * contour;
MPRINT(PLOTIT):   extendr = extendr + (hinter + hslope * hmax) - right + vtoh * contour;
MPRINT(PLOTIT):   extendt = extendt + (vinter + vslope * vmax) - top + contour;
MPRINT(PLOTIT):   extendb = extendb + bottom - (vinter + vslope * vmin) + contour;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   call symput('extendl',compress(put(extendl,best15.)));
MPRINT(PLOTIT):   call symput('extendr',compress(put(extendr,best15.)));
MPRINT(PLOTIT):   call symput('extendt',compress(put(extendt,best15.)));
MPRINT(PLOTIT):   call symput('extendb',compress(put(extendb,best15.)));
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------final locations of the axes------;
MPRINT(PLOTIT):   left = left - extendl;
MPRINT(PLOTIT):   right = right + extendr;
MPRINT(PLOTIT):   top = top + extendt;
MPRINT(PLOTIT):   bottom = bottom - extendb;
MPRINT(PLOTIT):   *------frame background color------;
MPRINT(PLOTIT):   color = 'cxffffff';
MPRINT(PLOTIT):   size = 1;
MPRINT(PLOTIT):   style = 'msolid';
MPRINT(PLOTIT):   function = 'POLY';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   comment = 'frame, background, left top start';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   function = 'POLYCONT';
MPRINT(PLOTIT):   comment = 'frame, background, left bottom';
MPRINT(PLOTIT):   y = bottom;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, background, right bottom';
MPRINT(PLOTIT):   x = right;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, background, right top';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, background, left top';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   style = ' ';
MPRINT(PLOTIT):   *------draw frame------;
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   size = lsizes[1];
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   comment = 'frame, box, left top start';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   comment = 'frame, box, left bottom';
MPRINT(PLOTIT):   y = bottom;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, box, right bottom';
MPRINT(PLOTIT):   x = right;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   comment = 'frame, box, right top';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, box, left top';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------diagonal reference line------;
MPRINT(PLOTIT):   if 0 then do;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   x = left;
MPRINT(PLOTIT):   comment = 'frame, diag, left bottom';
MPRINT(PLOTIT):   y = bottom;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'frame, diag, right top';
MPRINT(PLOTIT):   x = right;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   y = top;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------vertical axis reference lines------;
MPRINT(PLOTIT):   *------horizontal axis reference lines------;
MPRINT(PLOTIT):   *------vertical axis minor tick marks------;
MPRINT(PLOTIT):   *------horizontal axis minor tick marks------;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set anno tempdat2(in=td2);
MPRINT(PLOTIT):   *------uncategorize symbol locations------;
MPRINT(PLOTIT):   i = (1 or 1) and td2 and not (comment =: 'frame');
MPRINT(PLOTIT):   if i or (nmiss(tx) and n(__xvar)) then tx = hinter + hslope * __xvar;
MPRINT(PLOTIT):   if i or (nmiss(ty) and n(__yvar)) then ty = vinter + vslope * __yvar;
MPRINT(PLOTIT):   *------figure out curve coordinates------;
MPRINT(PLOTIT):   if comment = 'frame, tick' then do;
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   size = lsizes[2];
MPRINT(PLOTIT):   halftick = 0.5 * abs(1.5);
MPRINT(PLOTIT):   ticklen = (1 + (1.5 > 0)) * halftick;
MPRINT(PLOTIT):   if index(tickaxes,'h') then ticklen = ticklen / 2;
MPRINT(PLOTIT):   *------adjust for blank cols------;
MPRINT(PLOTIT):   if n(tx) then tx = tx - 2 + 1;
MPRINT(PLOTIT):   *------draw y-axis tick marks------;
MPRINT(PLOTIT):   if nmiss(tx) then do;
MPRINT(PLOTIT):   y = 41 - ty;
MPRINT(PLOTIT):   if bottom <= y <= top then do;
MPRINT(PLOTIT):   if index(tickaxes,'L') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, left';
MPRINT(PLOTIT):   x = left - halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x + ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if index(tickaxes,'R') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, right';
MPRINT(PLOTIT):   x = right + halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x - ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw x-axis tick marks------;
MPRINT(PLOTIT):   else if nmiss(ty) then do;
MPRINT(PLOTIT):   halftick = halftick / vtoh;
MPRINT(PLOTIT):   ticklen = ticklen / vtoh;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   if left <= x <= right then do;
MPRINT(PLOTIT):   if index(tickaxes,'T') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, top';
MPRINT(PLOTIT):   y = top + halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   y = y - ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if index(tickaxes,'B') then do;
MPRINT(PLOTIT):   comment = 'frame, tick, bottom';
MPRINT(PLOTIT):   y = bottom - halftick;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   y = y + ticklen;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw vectors------;
MPRINT(PLOTIT):   else if index(substr(comment,1,13),'vector') then do;
MPRINT(PLOTIT):   size = lsizes[3];
MPRINT(PLOTIT):   x = hinter;
MPRINT(PLOTIT):   y = vinter;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   y = ty;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   r = index(comment,'vector');
MPRINT(PLOTIT):   comment = substr(comment,1,r + 7) || 'head,' || substr(comment,r + 7);
MPRINT(PLOTIT):   *------compute slope of vector------;
MPRINT(PLOTIT):   vecslope = tx - hinter;
MPRINT(PLOTIT):   if abs(vecslope) > singular then vecslope = (ty - vinter) / (vecslope / vtoh);
MPRINT(PLOTIT):   else vecslope = .;
MPRINT(PLOTIT):   *------find point on vector vecheadr distance from end------;
MPRINT(PLOTIT):   r = -0.1;
MPRINT(PLOTIT):   fromx = tx;
MPRINT(PLOTIT):   fromy = ty;
MPRINT(PLOTIT):   link linept;
MPRINT(PLOTIT):   fromx = tox;
MPRINT(PLOTIT):   fromy = toy;
MPRINT(PLOTIT):   *------slope of line perpendicular to vector------;
MPRINT(PLOTIT):   if nmiss(vecslope) then vecslope = 0;
MPRINT(PLOTIT):   else if abs(vecslope) > singular then vecslope = -1.0 / vecslope;
MPRINT(PLOTIT):   else vecslope = .;
MPRINT(PLOTIT):   *------draw vector head------;
MPRINT(PLOTIT):   r = -0.025;
MPRINT(PLOTIT):   link linept;
MPRINT(PLOTIT):   x = tox;
MPRINT(PLOTIT):   y = toy;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   r = 0.025;
MPRINT(PLOTIT):   link linept;
MPRINT(PLOTIT):   x = tx;
MPRINT(PLOTIT):   y = ty;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = tox;
MPRINT(PLOTIT):   y = toy;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw circles------;
MPRINT(PLOTIT):   else if index(substr(comment,1,13),'circle') then do;
MPRINT(PLOTIT):   size = lsizes[4];
MPRINT(PLOTIT):   comsplit = 15 + (comment =: 'extra');
MPRINT(PLOTIT):   holdcom = comment;
MPRINT(PLOTIT):   pi = 3.1415926536;
MPRINT(PLOTIT):   do rad = _radius_;
MPRINT(PLOTIT):   radius = max(rad, 0) * hslope;
MPRINT(PLOTIT):   comment = substr(holdcom,1,comsplit - 1) || compress(put(rad,best5.) || ',') || ' ' || compress('(' || put(__xvar,best5.) || ',' || put(__yvar,best5.) || '),') || ' ' || substr(holdcom,comsplit);
MPRINT(PLOTIT):   i = (8.33) / (119);
MPRINT(PLOTIT):   if "in" = 'cm' then i = i / 2.54;
MPRINT(PLOTIT):   inc = 2.0 * pi / ceil(20 + (2.0 * pi * radius * i / .1) ** 0.8);
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   seg0 = (inc * singular) ** 2;
MPRINT(PLOTIT):   do i = -pi + inc to pi by inc;
MPRINT(PLOTIT):   x1 = tx + cos(i - inc) * radius;
MPRINT(PLOTIT):   y1 = ty + sin(i - inc) * radius / vtoh;
MPRINT(PLOTIT):   x2 = tx + cos(i) * radius;
MPRINT(PLOTIT):   y2 = ty + sin(i) * radius / vtoh;
MPRINT(PLOTIT):   link clipline;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   linept: *------find a point (tox,toy) r distance from ------;
MPRINT(PLOTIT):   *------(fromx,fromy) on a line with slope vecslope------;
MPRINT(PLOTIT):   *------negative r means toward origin ------;
MPRINT(PLOTIT):   r = r * (119) / (8.33);
MPRINT(PLOTIT):   if "in" = 'cm' then r = r * 2.54;
MPRINT(PLOTIT):   vecdir = -sign(r);
MPRINT(PLOTIT):   if n(vecslope) then do;
MPRINT(PLOTIT):   vecm2 = sqrt(r * r / (1.0 + vecslope * vecslope));
MPRINT(PLOTIT):   if fromx > hinter then vecm2 = -vecm2;
MPRINT(PLOTIT):   tox = vecdir * vecm2 + fromx;
MPRINT(PLOTIT):   toy = vecdir * vecslope * vecm2 / vtoh + fromy;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   tox = fromx;
MPRINT(PLOTIT):   if fromy > vinter then vecdir = -vecdir;
MPRINT(PLOTIT):   toy = vecdir * abs(r) / vtoh + fromy;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   clipline: *------clip a line that crosses an edge------;
MPRINT(PLOTIT):   *------find where line crosses edges------;
MPRINT(PLOTIT):   b = (x2 - x1);
MPRINT(PLOTIT):   bi = (y2 - y1);
MPRINT(PLOTIT):   xtop = .;
MPRINT(PLOTIT):   xbottom = .;
MPRINT(PLOTIT):   yleft = .;
MPRINT(PLOTIT):   yright = .;
MPRINT(PLOTIT):   if abs(b) > singular then do;
MPRINT(PLOTIT):   b = (y2 - y1) / b;
MPRINT(PLOTIT):   a = y1 - b * x1;
MPRINT(PLOTIT):   yleft = b * left + a;
MPRINT(PLOTIT):   yright = b * right + a;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if abs(bi) > singular then do;
MPRINT(PLOTIT):   bi = (x2 - x1) / bi;
MPRINT(PLOTIT):   xtop = (top - y1) * bi + x1;
MPRINT(PLOTIT):   xbottom = (bottom - y1) * bi + x1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------adjust coordinates when line crosses edges------;
MPRINT(PLOTIT):   if x1 < left then do;
MPRINT(PLOTIT):   x1 = left;
MPRINT(PLOTIT):   y1 = yleft;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if x1 > right then do;
MPRINT(PLOTIT):   x1 = right;
MPRINT(PLOTIT):   y1 = yright;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y1 < bottom then do;
MPRINT(PLOTIT):   y1 = bottom;
MPRINT(PLOTIT):   x1 = xbottom;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y1 > top then do;
MPRINT(PLOTIT):   y1 = top;
MPRINT(PLOTIT):   x1 = xtop;
MPRINT(PLOTIT):   justdraw = 0;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if x2 < left then do;
MPRINT(PLOTIT):   x2 = left;
MPRINT(PLOTIT):   y2 = yleft;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if x2 > right then do;
MPRINT(PLOTIT):   x2 = right;
MPRINT(PLOTIT):   y2 = yright;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y2 < bottom then do;
MPRINT(PLOTIT):   y2 = bottom;
MPRINT(PLOTIT):   x2 = xbottom;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if y2 > top then do;
MPRINT(PLOTIT):   y2 = top;
MPRINT(PLOTIT):   x2 = xtop;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------see if segment should be output------;
MPRINT(PLOTIT):   if n(x1,x2,y1,y2) = 4 and ((x2 - x1) ** 2 + (y2 - y1) ** 2) > seg0 then do;
MPRINT(PLOTIT):   *------draw line------;
MPRINT(PLOTIT):   if not justdraw then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   justdraw = 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else justdraw = 0;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------debugging output------;
MPRINT(PLOTIT):   *------delete intermediate data sets------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat2 regdat;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *======================combine annotate data sets======================;
MPRINT(PLOTIT):   data anno;
MPRINT(PLOTIT):   keep color style function comment x y size text position angle n obstype;
MPRINT(PLOTIT):   length color style function $ 8 comment $ 100 x y size 8 text $ 62 position $ 1 angle n 8 obstype $ 12 excolors $ 64;
MPRINT(PLOTIT):   retain left right top bottom contok conoldx conoldy excolors;
MPRINT(PLOTIT):   array lsizes[5] _temporary_ (1 1 1 1 1);
MPRINT(PLOTIT):   if _n_ = 1 then do;
MPRINT(PLOTIT):   left = 8 - 2.00;
MPRINT(PLOTIT):   right = 62 + 2.00;
MPRINT(PLOTIT):   top = 38 + -0.50;
MPRINT(PLOTIT):   bottom = 3 - 0.50;
MPRINT(PLOTIT):   contok = (n(0,0) = 2);
MPRINT(PLOTIT):   excolors = lowcase(symget('excolors'));
MPRINT(PLOTIT):   *------store goptions with annotate data set------;
MPRINT(PLOTIT):   if not 0 then do;
MPRINT(PLOTIT):   comment = symget('gopts');
MPRINT(PLOTIT):   n = 0;
MPRINT(PLOTIT):   function = 'COMMENT';
MPRINT(PLOTIT):   nobs + 1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------draw border------;
MPRINT(PLOTIT):   if "cx000000" ne ' ' then do;
MPRINT(PLOTIT):   color = 'black';
MPRINT(PLOTIT):   size = lsizes[1];
MPRINT(PLOTIT):   position = '+';
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   y = 45 - 0.001;
MPRINT(PLOTIT):   if 0 and -0.50 < 0 then y = y + -0.50;
MPRINT(PLOTIT):   comment = 'border, box, left top start';
MPRINT(PLOTIT):   x = 0;
MPRINT(PLOTIT):   if 0 and 2.00 < 0 then x = x - 2.00;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   function = 'DRAW';
MPRINT(PLOTIT):   comment = 'border, box, left bottom';
MPRINT(PLOTIT):   y = 0;
MPRINT(PLOTIT):   if 0 and 0.50 < 0 then y = y - 0.50;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'border, box, right bottom';
MPRINT(PLOTIT):   x = 119 - 0.001;
MPRINT(PLOTIT):   if 0 and 2.00 < 0 then x = x + 2.00;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'border, box, right top';
MPRINT(PLOTIT):   y = 45 - 0.001;
MPRINT(PLOTIT):   if 0 and -0.50 < 0 then y = y + -0.50;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   comment = 'border, box, left top';
MPRINT(PLOTIT):   x = 0;
MPRINT(PLOTIT):   if 0 and 2.00 < 0 then x = x - 2.00;
MPRINT(PLOTIT):   n + 0.1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   set anno tempdat1(in=td1 rename=(text=text2));
MPRINT(PLOTIT):   text = text2;
MPRINT(PLOTIT):   if comment = 'text, y label' then x = x - 2.00;
MPRINT(PLOTIT):   if comment = 'text, title' then y = y + -0.50;
MPRINT(PLOTIT):   if comment = 'text, x label' then y = y - 0.50;
MPRINT(PLOTIT):   if comment = 'text, y tick' then x = x - 2.00;
MPRINT(PLOTIT):   if comment = 'text, x tick' then y = y - 0.50;
MPRINT(PLOTIT):   obstype = __otype;
MPRINT(PLOTIT):   len = length(text);
MPRINT(PLOTIT):   *------discard clipped ticks if necessary------;
MPRINT(PLOTIT):   if comment = 'text, y tick' then do;
MPRINT(PLOTIT):   if not (bottom <= y <= top) then return;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if comment = 'text, x tick' then do;
MPRINT(PLOTIT):   d = right + floor(1e-8 + len / 2);
MPRINT(PLOTIT):   if not (left <= x <= d) then return;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------uncategorize symbol locations------;
MPRINT(PLOTIT):   i = (1 or 1) and td1 and (comment =: 'list' or comment =: 'extra') and not (index(substr(comment,1,18),', text, label'));
MPRINT(PLOTIT):   if i or (nmiss(x) and n(__xvar)) then x = 23 + 120 * __xvar;
MPRINT(PLOTIT):   if i or (nmiss(y) and n(__yvar)) then y = 23 + 60 * __yvar;
MPRINT(PLOTIT):   *------all angles are zero, except the y-axis label------;
MPRINT(PLOTIT):   if nmiss(angle) then angle = 0;
MPRINT(PLOTIT):   *------set position if not yet set------;
MPRINT(PLOTIT):   if position = ' ' then position = '+';
MPRINT(PLOTIT):   *------flag contour observations------;
MPRINT(PLOTIT):   contour = (function = 'BAR' and style = 'solid');
MPRINT(PLOTIT):   *------clip if necessary------;
MPRINT(PLOTIT):   if comment =: 'extra, text' or comment =: 'list, text' and text ne ' ' and not contour then do;
MPRINT(PLOTIT):   if y >= top or y <= bottom then return;
MPRINT(PLOTIT):   if position = '<' then d = x - len + 1 - left;
MPRINT(PLOTIT):   else if position = '>' then d = x - left;
MPRINT(PLOTIT):   else d = x - len / 2 - left;
MPRINT(PLOTIT):   d = floor(d);
MPRINT(PLOTIT):   if d <= 0 then do;
MPRINT(PLOTIT):   if (len + d) > 0 then text = substr(text, 1, len + d);
MPRINT(PLOTIT):   else text = ' ';
MPRINT(PLOTIT):   len = length(text);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if position = '<' then d = right - x;
MPRINT(PLOTIT):   else if position = '>' then d = right - (x + len - 1);
MPRINT(PLOTIT):   else d = right - (x + len / 2);
MPRINT(PLOTIT):   d = floor(d);
MPRINT(PLOTIT):   if d <= 0 then do;
MPRINT(PLOTIT):   if (len + d) > 0 then text = substr(text, 1, len + d);
MPRINT(PLOTIT):   else text = ' ';
MPRINT(PLOTIT):   len = length(text);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------adjust justifications------;
MPRINT(PLOTIT):   if position = '<' then x = x + 0.5;
MPRINT(PLOTIT):   else if position = '>' then x = x - 0.5;
MPRINT(PLOTIT):   *------set line, text sizes------;
MPRINT(PLOTIT):   if nmiss(size) then do;
MPRINT(PLOTIT):   if function = 'LABEL' then size = 1;
MPRINT(PLOTIT):   else size = lsizes[1];
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   *------set font------;
MPRINT(PLOTIT):   if style = ' ' and not (comment =: 'list, text' or comment =: 'extra, text') then style = 'none';
MPRINT(PLOTIT):   *------if color is still not set, set it------;
MPRINT(PLOTIT):   if color = ' ' then color = 'black';
MPRINT(PLOTIT):   *------offset (jitter) coincident symbols but not ptr symbols------;
MPRINT(PLOTIT):   length lastpos $ 1;
MPRINT(PLOTIT):   retain oldx oldy 0 offsetn 1 lastpos '+';
MPRINT(PLOTIT):   if comment =: 'list, text, symbol' or comment =: 'extra, text, symbol' then do;
MPRINT(PLOTIT):   if abs(oldx - x) < 1e-8 and abs(oldy - y) < 1e-8 then do;
MPRINT(PLOTIT):   *------usually go center, right, left, but skip right------;
MPRINT(PLOTIT):   *------on second symbol if last label was right ------;
MPRINT(PLOTIT):   offsetn + 1 + (offsetn = 1 and lastpos = '>');
MPRINT(PLOTIT):   x = x + (mod(offsetn,3) - 1) * (0.25);
MPRINT(PLOTIT):   d = mod(floor((offsetn - 1) / 3) + 1, 3) - 1;
MPRINT(PLOTIT):   y = y + d * (0.25) / (2);
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   offsetn = 1;
MPRINT(PLOTIT):   oldx = x;
MPRINT(PLOTIT):   oldy = y;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   lastpos = position;
MPRINT(PLOTIT):   *------override colors for monochrome device------;
MPRINT(PLOTIT):   *------exclude observations in excluded color list------;
MPRINT(PLOTIT):   if index(excolors, trim(lowcase(color))) = 0;
MPRINT(PLOTIT):   *------add offsets to center plot ------;
MPRINT(PLOTIT):   *------adjust y so bottom line has coordinate 0.5------;
MPRINT(PLOTIT):   x = x + 27.0;
MPRINT(PLOTIT):   y = y + 1.1 + 0.5;
MPRINT(PLOTIT):   *------set ID variable for sort for functions------;
MPRINT(PLOTIT):   *------create rectangles for contour plots------;
MPRINT(PLOTIT):   if contour and contok then do;
MPRINT(PLOTIT):   text = ' ';
MPRINT(PLOTIT):   epsh = size * 0;
MPRINT(PLOTIT):   epsv = size * 0;
MPRINT(PLOTIT):   x1 = x - epsh / 2;
MPRINT(PLOTIT):   x2 = x1 + epsh;
MPRINT(PLOTIT):   epsh = epsh * 0.1;
MPRINT(PLOTIT):   y1 = y - epsv / 2;
MPRINT(PLOTIT):   y2 = y1 + epsv;
MPRINT(PLOTIT):   epsv = epsv * 0.1;
MPRINT(PLOTIT):   if abs(x1 - conoldx) < epsh and abs(y1 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if abs(x2 - conoldx) < epsh and abs(y1 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if abs(x2 - conoldx) < epsh and abs(y2 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if abs(x1 - conoldx) < epsh and abs(y2 - conoldy) < epsv then do;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   function = 'MOVE';
MPRINT(PLOTIT):   nobs + 1;
MPRINT(PLOTIT):   if (abs(0) < epsh and 0 > 0) or (abs(0) < epsv and 0 > 0) then do;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else do;
MPRINT(PLOTIT):   x = x2;
MPRINT(PLOTIT):   y = y2;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   x = x1;
MPRINT(PLOTIT):   y = y1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   function = 'BAR';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   conoldx = x;
MPRINT(PLOTIT):   conoldy = y;
MPRINT(PLOTIT):   *------final adjustments------;
MPRINT(PLOTIT):   if text = '*' and function = 'LABEL' then do;
MPRINT(PLOTIT):   style = ' ';
MPRINT(PLOTIT):   text = 'star';
MPRINT(PLOTIT):   function = 'SYMBOL';
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):  ;
MPRINT(PLOTIT):   ;
MPRINT(PLOTIT):   nobs + 1;
MPRINT(PLOTIT):   output;
MPRINT(PLOTIT):   call symput('nobs',compress(put(nobs,5.)));
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------delete intermediate data sets------;
MPRINT(PLOTIT):   proc datasets nolist;
MPRINT(PLOTIT):   delete tempdat1 tempdat3 tempdat4 tempdat5 tempdat6(memtype=view);
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *------post-processing for functions------;
MPRINT(PLOTIT):   *------post-processing for expand------;
MPRINT(PLOTIT):   *------make sure that the frame is never covered------;
MPRINT(PLOTIT):   data anno;
MPRINT(PLOTIT):   set anno anno(where=(comment =: 'frame, box'));
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   *===========set up for and produce the graphical scatter plot==========;
MPRINT(PLOTIT):   goptions nodisplay hpos=119 vpos=45 hsize=8.33in vsize=6.24in cback=white device=GIF;
MPRINT(PLOTIT):  ;
MPRINT(PLOTIT):   *------print final plot request------;
MPRINT(PLOTIT):   data _null_;
MPRINT(PLOTIT):   file log ps=200;
MPRINT(PLOTIT):   length string $ 500;
MPRINT(PLOTIT):   if 1 then do;
MPRINT(PLOTIT):   put / 'The following code will create the ' @@;
MPRINT(PLOTIT):   if not 1 then put '(empty) ' @@;
MPRINT(PLOTIT):   put 'printer plot ' 'on which ' 'the ' 'graphical ' 'plot is ' 'based:' /;
MPRINT(PLOTIT):   string = "options nonumber ls=65 ps=45;";
MPRINT(PLOTIT):   indent1 = 0;
MPRINT(PLOTIT):   indent2 = 8;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = symget('procopts');
MPRINT(PLOTIT):   indent2 = 10;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = 'plot ' || trim(symget('plotreq')) || ' /';
MPRINT(PLOTIT):   indent1 = 3;
MPRINT(PLOTIT):   indent2 = 8;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('plotopts')) || ' list=1';
MPRINT(PLOTIT):   indent1 = 8;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('pl')) || ';';
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('label')) || ';';
MPRINT(PLOTIT):   indent1 = 3;
MPRINT(PLOTIT):   indent2 = 9;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = trim(symget('adjust2')) || ';';
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   string = 'label ' || symget('vplotvar') || " = '#' " || symget('hplotvar') || " = '#';";
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   put +3 'run; quit;' /;
MPRINT(PLOTIT):   put 'The plot was created with the following goptions:' /;
MPRINT(PLOTIT):   string = 'goptions ' || symget('gopts') || ';';
MPRINT(PLOTIT):   indent1 = 0;
MPRINT(PLOTIT):   link wrap;
MPRINT(PLOTIT):   put / "The OUT=anno Annotate data set has 67 observations.";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if symget('method') = 'print' then put "The graphics stream file name is C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD2372_MIIKYMEDIA_\Prc2\plotit.ps.";
MPRINT(PLOTIT):   if 1 and upcase(getoption("STIMER")) eq "STIMER" and getoption('stimer') eq 'STIMER' then do;
MPRINT(PLOTIT):   time = datetime();
MPRINT(PLOTIT):   cum = put(time - 1923493396.986,6.1);
MPRINT(PLOTIT):   put 'The PLOTIT macro used ' cum "seconds to create OUT=anno.";
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   if _error_ then call symput('abort','1');
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   wrap: *------print a line, wrapped and indented------;
MPRINT(PLOTIT):   nlit = index(upcase(string), "'N");
MPRINT(PLOTIT):   if nlit = 0 then nlit = index(upcase(string), '"N');
MPRINT(PLOTIT):   string = left(string);
MPRINT(PLOTIT):   len = length(string);
MPRINT(PLOTIT):   if len < 2 or string = ' ' or string = ';' then return;
MPRINT(PLOTIT):   i = index(string,' '||' ');
MPRINT(PLOTIT):   do while(i < (len - 1) and not nlit);
MPRINT(PLOTIT):   string = substr(string,1,i - 1) || substr(string,i + 1);
MPRINT(PLOTIT):   len = length(string);
MPRINT(PLOTIT):   i = index(string,' '||' ');
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   i = index(string,' ;');
MPRINT(PLOTIT):   if i then string = substr(string,1,i - 1) || substr(string,i + 1);
MPRINT(PLOTIT):   len = 1;
MPRINT(PLOTIT):   end = 0;
MPRINT(PLOTIT):   indent = indent1 + 1;
MPRINT(PLOTIT):   do while(len > end);
MPRINT(PLOTIT):   string = left(substr(string,end + 1));
MPRINT(PLOTIT):   len = length(string);
MPRINT(PLOTIT):   nlit = index(upcase(string), "'N");
MPRINT(PLOTIT):   if nlit = 0 then nlit = index(upcase(string), '"N');
MPRINT(PLOTIT):   maxlen = 256 - indent;
MPRINT(PLOTIT):   if len > maxlen and not nlit then do;
MPRINT(PLOTIT):   end = maxlen;
MPRINT(PLOTIT):   do while(end > 0 and not (substr(string,end,1) in (' ' ',')));
MPRINT(PLOTIT):   end = end - 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else if len > maxlen then do;
MPRINT(PLOTIT):   end = maxlen;
MPRINT(PLOTIT):   if nlit then end = nlit + 2;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   else end = len;
MPRINT(PLOTIT):   str = substr(string,1,end);
MPRINT(PLOTIT):   put @indent str;
MPRINT(PLOTIT):   indent = indent2 + 1;
MPRINT(PLOTIT):   end;
MPRINT(PLOTIT):   return;
MPRINT(PLOTIT):   run;
 
The following code will create the printer plot on which the graphical plot is based:
 
options nonumber ls=65 ps=45;
proc plot nolegend formchar='|----|+|---' data=preproc vtoh=2;
   plot Dim2 * Dim1 $ _idvar_ = _symbol_ /
        haxis=by 0.1 vaxis=by 0.1 box list=1
        placement=((h=2 -2 : s=right left) (v=1 -1 * h=0 -1 to -5 by alt));
   label Dim2 = 'Dimension 2' Dim1 = 'Dimension 1';
   label Dim2 = '#' Dim1 = '#';
   run; quit;
 
The plot was created with the following goptions:
 
goptions nodisplay hpos=119 vpos=45 hsize=8.33in vsize=6.24in cback=white device=GIF;
 
The OUT=anno Annotate data set has 67 observations.
The PLOTIT macro used 0.5 seconds to create OUT=anno.
MPRINT(PLOTIT):   *------produce the plot------;
MPRINT(PLOTIT):   proc ganno annotate=anno gout=WORK.Clus2 name="DISTANCE";
MPRINT(PLOTIT):   run;
MPRINT(PLOTIT):   options LABEL;
Sistema SAS
 
MPRINT(PLOTIT):   *------restore options, quit------;
MPRINT(PLOTIT):   options NOTES missing=".";
MPRINT(EM_DIAGRAM):  ;
28568      goptions display;
MPRINT(EM_DIAGRAM):   goptions display;
28569      title;
MPRINT(EM_DIAGRAM):   title;
28570      filename gsasfile
28570    ! "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\GRAP
28570    ! H\Distance.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\GRAPH\Distance.
gif";
28571      goptions reset=all device=PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions reset=all device=PNG display gaccess= gsasfile gsfmode= replace
cback= white;
28572      proc greplay igout=WORK.Clus2 nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.Clus2 nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
28573      replay DISTANCE;
MPRINT(EM_DIAGRAM):   replay DISTANCE;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this
      session.
NOTE: 13416 bytes written to
      C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Clus2\GRAPH\Dist
      ance.gif.
28574      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
28575      goptions reset=all;
MPRINT(EM_DIAGRAM):   goptions reset=all;
28576      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
28577      proc datasets lib=EMWS3 nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS3 nolist;
28578      modify Clus2_DISTANCE;
MPRINT(EM_DIAGRAM):   modify Clus2_DISTANCE;
28579      rename _idvar_=_SEGMENT_;
MPRINT(EM_DIAGRAM):   rename _idvar_=_SEGMENT_;
NOTE: Renaming variable _idvar_ to _SEGMENT_.
MPRINT(EM_DIAGRAM):   run;
28580      run;
 
NOTE: MODIFY was successful for EMWS3.CLUS2_DISTANCE.DATA.
28581      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
Sistema SAS
 
 
 
28582      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28583      * Clus2: creando conjunto de datos para el informe Input de la media;
MPRINT(EM_DIAGRAM):   * Clus2: creando conjunto de datos para el informe Input de la media;
28584      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28585      data temp(drop=_type_ over_all);
MPRINT(EM_DIAGRAM):   data temp(drop=_type_ over_all);
28586      set EMWS3.Clus2_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus2_OUTSTAT;
28587      where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
MPRINT(EM_DIAGRAM):   where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
28588      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS3.CLUS2_OUTSTAT.
      WHERE _type_ in ('CLUS_MEAN', 'DMDB_MEAN');
NOTE: The data set WORK.TEMP has 11 observations and 242 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28589      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
28590      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
28591      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 11 observations and 242 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28592      proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
MPRINT(EM_DIAGRAM):   proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
28593      var ACCESS--YOU;
MPRINT(EM_DIAGRAM):   var ACCESS--YOU;
28594      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.STDTEMP has 11 observations and 242 variables.
NOTE: The data set WORK.STAT has 10 observations and 242 variables.
NOTE: PROCEDURE STDIZE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28595      proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
MPRINT(EM_DIAGRAM):   proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN
COL4=MAX));
28596      where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
Sistema SAS
 
MPRINT(EM_DIAGRAM):   where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
28597      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STAT.
      WHERE _type_ in ('LOCATION', 'P0', 'P100', 'SCALE');
NOTE: The data set WORK.TSTAT has 241 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
28598      data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
MPRINT(EM_DIAGRAM):   data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
28599      set tstat;
MPRINT(EM_DIAGRAM):   set tstat;
28600      if std ^in (0, .) then do;
MPRINT(EM_DIAGRAM):   if std ^in (0, .) then do;
28601      stdmin = abs((min-mean)/std);
MPRINT(EM_DIAGRAM):   stdmin = abs((min-mean)/std);
28602      stdmax = abs((max-mean)/std);
MPRINT(EM_DIAGRAM):   stdmax = abs((max-mean)/std);
28603      end;
MPRINT(EM_DIAGRAM):   end;
28604      if mean ^in(0, .) then cv = std/mean;
MPRINT(EM_DIAGRAM):   if mean ^in(0, .) then cv = std/mean;
28605      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 241 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28606      proc sort data=tstat;
MPRINT(EM_DIAGRAM):   proc sort data=tstat;
28607      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
28608      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 241 observations and 4 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28609      proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
MPRINT(EM_DIAGRAM):   proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL
COL1=MEAN));
28610      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
28611      run;
MPRINT(EM_DIAGRAM):   run;
 
Sistema SAS
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 11 observations read from the data set WORK.STDTEMP.
NOTE: The data set WORK.TSTDTEMP has 2651 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28612      proc sort data=tstdtemp;
MPRINT(EM_DIAGRAM):   proc sort data=tstdtemp;
28613      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
28614      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2651 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set WORK.TSTDTEMP has 2651 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28615      data tstdtemp;
MPRINT(EM_DIAGRAM):   data tstdtemp;
28616      merge tstdtemp tstat;
MPRINT(EM_DIAGRAM):   merge tstdtemp tstat;
28617      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
28618      STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
MPRINT(EM_DIAGRAM):   STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
28619      drop stdmin stdmax mean;
MPRINT(EM_DIAGRAM):   drop stdmin stdmax mean;
28620      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2651 observations read from the data set WORK.TSTDTEMP.
NOTE: There were 241 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTDTEMP has 2651 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28621      proc transpose data=EMWS3.Clus2_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME
28621    ! VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS3.Clus2_OUTVAR out=tempVar(drop=_LABEL_ rename=(
_NAME_=NAME VARIABLE=INPUT));
28622      var ACCESS--YOU;
MPRINT(EM_DIAGRAM):   var ACCESS--YOU;
28623      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
28624      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
28625      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set EMWS3.CLUS2_OUTVAR.
Sistema SAS
 
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 241 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28626      proc sort data=tempVar;
MPRINT(EM_DIAGRAM):   proc sort data=tempVar;
28627      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
28628      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 241 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28629      data EMWS3.Clus2_INPUTMEAN(rename=(NAME=VARIABLE));
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_INPUTMEAN(rename=(NAME=VARIABLE));
28630      Length _SEGMENT_CHAR_ $7;
MPRINT(EM_DIAGRAM):   Length _SEGMENT_CHAR_ $7;
28631      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))"
28631    ! _SEGMENT_CHAR_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentId_vlabel,    NOQUOTE))"
28631    ! NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))" INPUT =
28632         "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel,        NOQUOTE))" LABEL =
28632    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_label_vlabel,        NOQUOTE))" CV =
28632    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,           NOQUOTE))" STDMEAN =
28633         "%sysfunc(sasmsg(sashelp.dmine, rpt_normmean_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Nombre del segmento" _SEGMENT_CHAR_ = "Id de segmento"
NAME = "Variable" INPUT = "Input" LABEL = "Etiqueta" CV = "Coeficiente de variación" STDMEAN =
"Media normalizada";
28634      merge tempvar tstdtemp;
MPRINT(EM_DIAGRAM):   merge tempvar tstdtemp;
28635      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
28636      if LABEL='' then LABEL=NAME;
MPRINT(EM_DIAGRAM):   if LABEL='' then LABEL=NAME;
28637      _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
MPRINT(EM_DIAGRAM):   _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
28638      if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
28639      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.TEMPVAR.
NOTE: There were 2651 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set EMWS3.CLUS2_INPUTMEAN has 2651 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
28640      proc sort data=EMWS3.Clus2_INPUTMEAN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus2_INPUTMEAN;
Sistema SAS
 
28641      by descending cv;
MPRINT(EM_DIAGRAM):   by descending cv;
28642      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2651 observations read from the data set EMWS3.CLUS2_INPUTMEAN.
NOTE: The data set EMWS3.CLUS2_INPUTMEAN has 2651 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28643      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28644      * Clus2: determinando las variables importantes;
MPRINT(EM_DIAGRAM):   * Clus2: determinando las variables importantes;
28645      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
28646      %let _nobs = 0;
28647      data keepvars(rename=(NAME=INPUT));
MPRINT(EM_DIAGRAM):    data keepvars(rename=(NAME=INPUT));
28648      set EMWS3.Clus2_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus2_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
28649      if eof then call symput('_nobs', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_nobs', strip(put(_N_, best.)));
28650      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS3.CLUS2_OUTIMPORT.
      WHERE IMPORTANCE>0.5;
NOTE: The data set WORK.KEEPVARS has 12 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28651      proc transpose data=EMWS3.Clus2_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME
28651    ! VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS3.Clus2_OUTVAR out=tempVar(drop=_LABEL_ rename=(
_NAME_=NAME VARIABLE=INPUT));
28652      var ACCESS--YOU;
MPRINT(EM_DIAGRAM):   var ACCESS--YOU;
28653      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
28654      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
28655      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set EMWS3.CLUS2_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 241 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
Sistema SAS
 
 
28656      proc sort data=keepvars;
MPRINT(EM_DIAGRAM):   proc sort data=keepvars;
28657      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
28658      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.KEEPVARS has 12 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28659      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
28660      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
28661      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 241 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 241 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28662      data vars;
MPRINT(EM_DIAGRAM):   data vars;
28663      merge tempvar keepvars(in=b);
MPRINT(EM_DIAGRAM):   merge tempvar keepvars(in=b);
28664      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
28665      if b then output;
MPRINT(EM_DIAGRAM):   if b then output;
28666      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUT by input data sets. This might
         cause unexpected results.
NOTE: There were 241 observations read from the data set WORK.TEMPVAR.
NOTE: There were 12 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.VARS has 12 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28667      proc sort data=vars;
MPRINT(EM_DIAGRAM):   proc sort data=vars;
28668      by descending importance;
MPRINT(EM_DIAGRAM):   by descending importance;
28669      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.VARS.
Sistema SAS
 
NOTE: The data set WORK.VARS has 12 observations and 6 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28670      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
28671      set vars;
MPRINT(EM_DIAGRAM):   set vars;
28672      if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
28673      else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
MPRINT(EM_DIAGRAM):   else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
28674      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.VARS.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * mergeVarMeansandClusLabel;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28675      *------------------------------------------------------------*;
28676      * mergeVarMeansandClusLabel;
28677      *------------------------------------------------------------*;
28678      data temp(keep=_SEGMENT_ &CLUS_PROFVARS);
MPRINT(EM_DIAGRAM):   data temp(keep=_SEGMENT_ MED PITT DOCTOR MEDIC DISEAS TREATMENT CENTER
ARMENIAN ARMENIA TURKISH SERDAR ARGIC);
28679      length _SEGMENT_ &CLUS_PROFVARS 8;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ MED PITT DOCTOR MEDIC DISEAS TREATMENT CENTER ARMENIAN
ARMENIA TURKISH SERDAR ARGIC 8;
28680      set EMWS3.Clus2_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus2_OUTSTAT;
28681      where _type_ ='CLUS_MEAN';
MPRINT(EM_DIAGRAM):   where _type_ ='CLUS_MEAN';
28682      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS3.CLUS2_OUTSTAT.
      WHERE _type_='CLUS_MEAN';
NOTE: The data set WORK.TEMP has 10 observations and 13 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28683      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
28684      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
28685      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.TEMP.
Sistema SAS
 
NOTE: The data set WORK.TEMP has 10 observations and 13 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28686      data EMWS3.Clus2_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS3.Clus2_LABEL;
28687      merge EMWS3.Clus2_LABEL(keep=_SEGMENT_ LABEL) temp;
MPRINT(EM_DIAGRAM):   merge EMWS3.Clus2_LABEL(keep=_SEGMENT_ LABEL) temp;
28688      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
28689      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS3.CLUS2_LABEL.
NOTE: There were 10 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS3.CLUS2_LABEL has 10 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
