*------------------------------------------------------------*
Usuario:                Admin
Fecha:                11/12/20
Hora:                22H47
Sitio:                70161230
Plataforma:            X64_10HOME
Versión de mantenimiento: 9.04.01M6P111518
Versión de EM:          15.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "22H44" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de entrenamiento";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de entrenamiento
Fecha:                11/12/20
Hora:                22H44
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2RU5VC5
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMTRAIN.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2RU5VC5 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMLOG.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
Sistema SAS
 
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "22H44" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Sitio:                70161230";
MPRINT(EM_DIAGRAM):   put "Plataforma:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "Versión de mantenimiento: 9.04.01M6P111518";
MPRINT(EM_DIAGRAM):   put "Versión de EM:          15.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMTRAIN.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMSCORE.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMREPORT.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMOUTPUT.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
Sistema SAS
 
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "22H44" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de entrenamiento";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMTRAIN.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de puntuación";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMSCORE.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida del informe";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMREPORT.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
Sistema SAS
 
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMRUNSTATUS.xml'
 encoding="UTF-8" NOBOM;
52356      proc freq data=EMWS3.Prof_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS3.Prof_VariableSet noprint;
52357      table ROLE*LEVEL/out=WORK.ProfMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ProfMETA;
52358      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1208 observations read from the data set EMWS3.PROF_VARIABLESET.
NOTE: The data set WORK.PROFMETA has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
52359      proc print data=WORK.ProfMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ProfMETA label noobs;
52360      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
52361      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
52361    ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
52361    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Rol" LEVEL = "Nivel de medida" COUNT = "Número de ocurrencias";
52362      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
52363      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Resumen de variables";
MPRINT(EM_DIAGRAM):   run;
52364      run;
 
NOTE: There were 5 observations read from the data set WORK.PROFMETA.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52365      title10;
MPRINT(EM_DIAGRAM):   title10;
52366      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or
_ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'practica_AMUL';
Sistema SAS
 
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'ANÁLISIS CLUSTER';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS3.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53101      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
53102      * Prof: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Prof: Generation of macros and macro variables;
53103      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or
Sistema SAS
 
_ALL_;
53104      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
53105      %let EMEXCEPTIONSTRING=;
53106      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
53107      * TRAIN: Prof;
MPRINT(EM_DIAGRAM):   * TRAIN: Prof;
53108      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53109      %let EM_ACTION = TRAIN;
53110      %let syscc = 0;
53111      %macro main;
53112         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then
53112    ! %do;
53113             options MPRINT;
53114         %end;
53115
53116         filename temp catalog 'sashelp.emexpl.profile_macros.source';
53117         %include temp;
53118         filename temp;
53119
53120         /* Initialize property macro variables */
53121         %SetProperties;
53122
53123         %if %upcase(&EM_ACTION) = CREATE %then %do;
53124
53125             filename temp catalog 'sashelp.emexpl.profile_create.source';
53126             %include temp;
53127             filename temp;
53128             %create;
53129         %end;
53130         %else
53131         %if %upcase(&EM_ACTION) = TRAIN %then %do;
53132
53133             filename temp catalog 'sashelp.emexpl.profile_train.source';
53134             %include temp;
53135             filename temp;
53136             %train;
53137         %end;
53138      %mend main;
53139
53140      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
53141     +%macro SetProperties;
53142     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
53143     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
53144     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
53145     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
53146     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
53147     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
53148     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
53149     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
53150     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
53151     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
Sistema SAS
 
53152     +%mend SetProperties;
53153     +
53154     +
53155     +%macro makeVarMacros(level= );
53156     +
53157     +    %let numvars = 0;
53158     +    %let where   = '';
53159     +
53160     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
53161     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE
53161    !+in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
53162     +    %else
53163     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE
53163    !+='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
53164     +
53165     +    %if &level = INTERVAL %then %do;
53166     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
53167     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
53168     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
53169     +    %end;
53170     +    %else %do;
53171     +        %if &level = NOMINAL %then %do;
53172     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +
53172    !+&EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
53173     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
53174     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET +
53174    !+&EM_NUM_NOMINAL_TARGET);
53175     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and
53175    !+USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE
53175    !+in('Y', 'D'));
53176     +             %end;
53177     +             %else
53178     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and
53178    !+USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
53179     +
53180     +        %end;
53181     +        %else %do;
53182     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
53183     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
53184     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
53185     +        %end;
53186     +    %end;
53187     +
53188     +    %if &numvars>0 %then %do;
53189     +         %let numloop = %sysfunc(ceil(&numvars/10000));
53190     +         %let loopcount = 0;
53191     +
53192     +         %do %while((&numloop - &loopcount) > 0);
53193     +             %let first = %eval((&loopcount*10000) + 1);
53194     +             %let last  = %eval(&first + 10000);
53195     +             %let loopcount = %eval(&loopcount +1);
53196     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
53197     +             filename X catalog "&centry";
53198     +             data _null_;
53199     +                length _STRING_ $80;
53200     +                retain _STRING_ ;
53201     +                file X;
53202     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
Sistema SAS
 
53203     +
53204     +                where &where;
53205     +
53206     +                if _N_=1 then
53207     +                   put '%macro _PROFVAR;';
53208     +
53209     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
53210     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
53211     +                   if eof then do;
53212     +                      put _STRING_;
53213     +                      put '%mend _PROFVAR;';
53214     +                   end;
53215     +                end;
53216     +                else do;
53217     +                   put _STRING_;
53218     +                  _string_ = TRIM(NAME);
53219     +                   if eof then do;
53220     +                      put _string_;
53221     +                      put '%mend _PROFVAR;';
53222     +                   end;
53223     +                end;
53224     +             run;
53225     +             filename X;
53226     +         %end;
53227     +    %end;
53228     +
53229     +%mend makeVarMacros;
53230     +
53231     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_TRAIN.SOURCE.
53232     +%macro _looparbor(level=, target=, rules=);
53233     +    %local where;
53235     +    %if (&level eq or &target eq ) %then %goto doenda;
53236     +    %if &rules eq %then &rules = _TEMPRULE;
53238     +    %let lnumvars = 0;
53239     +    %let where   = '';
53241     +    %if &level = INTERVAL %then %do;
53242     +        %let lnumvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
53243     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
53244     +             %let lnumvars = %eval(&lnumvars + &EM_NUM_INTERVAL_TARGET);
53245     +    %end;
53246     +    %else %do;
53247     +        %if &level = NOMINAL %then %do;
Sistema SAS
 
53248     +            %let lnumvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +
53248    !+&EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
53249     +             %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
53250     +                 %let lnumvars = %eval(&lnumvars + &EM_NUM_BINARY_TARGET +
53250    !+&EM_NUM_NOMINAL_TARGET);
53251     +        %end;
53252     +        %else %do;
53253     +            %let lnumvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
53254     +            %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
53255     +                %let lnumvars = %eval(&lnumvars + &EM_NUM_ORDINAL_TARGET);
53256     +        %end;
53257     +    %end;
53259     +    %if &lnumvars>0 %then %do;
53260     +         %let numloop = %sysfunc(ceil(&lnumvars/10000));
53261     +         %let loopcount = 0;
53263     +         %do %while((&numloop - &loopcount) > 0);
53264     +             %let loopcount = %eval(&loopcount +1);
53265     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
53266     +             filename X catalog "&centry";
53267     +             %inc X;
53269     +             proc arbor data=&EM_NODEID._TMP
53271     +             %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
53272     +                 Criterion=GINI Leafsize=5 Mincatsize = 5
53273     +                 Maxbranch=5 Maxdepth=1
53274     +                 NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
53275     +             %end;
53276     +             %else %do;
53277     +                 Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
53278     +                 Maxbranch=5 Maxdepth=&EM_PROPERTY_MAXDEPTH
53279     +                 MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
53280     +             %end;
53282     +              MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
53284     +                input %_PROFVAR
53286     +                    / level = &level;
53287     +                target _SEG / level=binary;
53289     +                Performance Disk NodeSize=10000;
53290     +                Assess NoValidata measure=MISC;
53291     +                SUBTREE BEST;
53293     +                %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
53294     +                    save IMPORTANCE=_LOOPTEMPRULE;
53295     +                %end;
53296     +                %else %do;
53297     +                    save RULES=_LOOPTEMPRULE;
53298     +                %end;
53299     +             run;
53300     +             quit;
53302     +             %if %sysfunc(exist(_LOOPTEMPRULE)) %then %do;
53303     +                 proc append base=&RULES data=_LOOPTEMPRULE force;
53304     +                 run;
53305     +                 proc datasets lib=work nolist mt=(DATA VIEW);
53306     +                    delete _LOOPTEMPRULE;
53307     +                 run;
53308     +                 quit;
53309     +             %end;
53312     +             filename X;
53313     +         %end;
53314     +     %end;
53316     +   %doenda:
Sistema SAS
 
53318     +%mend _looparbor;
53320     +%macro _arbor(target=, rules=, fit=);
53321     +   %local _numnomvars _numordvars _numintvars;
53323     +   %if &target eq  %then %goto doendc;
53324     +   %if &rules eq %then &rules = _TEMPRULE;
53325     +   %if &fit   eq %then &fit   = _FIT;
53327     +   %let _numintvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
53328     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
53329     +       %let _numintvars = %eval(&_numintvars + &EM_NUM_INTERVAL_TARGET);
53332     +   %let _numnomvars =  %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +
53332    !+&EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
53333     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
53334     +       %let _numnomvars = %eval(&_numnomvars + &EM_NUM_BINARY_TARGET +
53334    !+&EM_NUM_NOMINAL_TARGET);
53336     +   %let _numordvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
53337     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
53338     +       %let _numordvars = %eval(&_numordvars + &EM_NUM_ORDINAL_TARGET);
53340     +   proc arbor data=&EM_NODEID._TMP
53342     +   %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
53343     +      Criterion=GINI Leafsize=5 Mincatsize = 5
53344     +      Maxbranch=5 Maxdepth=1
53345     +      NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
53346     +   %end;
53347     +   %else %do;
53348     +      Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
53349     +      Maxbranch=2 Maxdepth=&EM_PROPERTY_MAXDEPTH
53350     +      MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
53351     +   %end;
53353     +      MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
53355     +      %if &_numintvars %then %do;
53356     +          input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
53358     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
53359     +              %EM_INTERVAL_TARGET
53360     +          %end;
53362     +              / level = interval;
53363     +      %end;
53366     +      %if &_numnomvars %then %do;
53367     +          input %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED
53367    !+%EM_NOMINAL_REJECTED
53369     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
53370     +              %EM_BINARY_TARGET %EM_NOMINAL_TARGET
53371     +          %end;
53373     +              / level = nominal;
53374     +      %end;
53376     +      %if &_numordvars %then %do;
53377     +         input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED
53379     +         %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
53380     +              %EM_ORDINAL_TARGET
53381     +         %end;
53383     +             / level = ordinal;
53384     +      %end;
53386     +      target _SEG / level=binary;
53388     +      Performance Disk NodeSize=10000;
53389     +      Assess
53391     +       %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
53392     +          Validata=&EM_NODEID._VALIDTMP
53393     +      %end;
53394     +      %else %do;
Sistema SAS
 
53395     +          NoValidata
53396     +      %end;
53398     +      measure=MISC;
53399     +      SUBTREE BEST;
53401     +      %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
53402     +          SCORE data=&EM_NODEID._TMP  out=_NULL_ outfit=_FIT
53403     +                role=TRAIN;
53404     +          %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
53405     +          SCORE data=&EM_NODEID._VALIDTMP  out=_NULL_ outfit=_FIT2
53406     +                role=VALID;
53407     +          %end;
53409     +          save IMPORTANCE=_RULE;
53410     +      %end;
53411     +      %else %do;
53412     +          save RULES=_RULE;
53413     +      %end;
53415     +      ;
53416     +   run;
53417     +   quit;
53419     +   %if %sysfunc(exist(_RULE)) %then %do;
53420     +       proc append base=&RULES data=_RULE force;
53421     +       run;
53422     +       proc datasets lib=work nolist mt=(DATA VIEW);
53423     +          delete _RULE;
53424     +       run;
53425     +       quit;
53426     +   %end;
53428     +   %doendc:
53430     +%mend _arbor;
53432     +%macro tree_profile(SEGMENT=, _sizeDs=, _varsDs=, _fitDs=, _reportDs=);
53433     +   %put &EM_CODEBAR;
53434     +   %put * Filtering input variables ;
53435     +   %put * SEGMENT= &segment;
53436     +   %put &EM_CODEBAR;
53438     +  %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
53439     +  %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
53440     +  %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
53442     +  %let _SEGMENT = &SEGMENT;
53444     +  proc freq data=&EM_IMPORT_DATA noprint ;
53445     +    table &_segment / missing out=&_segment(keep=&_segment count percent) ;
53447     +    %if %EM_FREQ ne %then %do;
53448     +        weight %EM_FREQ;
53449     +        where %EM_FREQ>=0;
53450     +    %end;
53452     +  run ;
53453     +  proc sort data=&_segment;
53454     +     by descending count ;
53455     +  run ;
53457     +  %let dsid       = %sysfunc(open(&_segment));
53458     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
53459     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
53460     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
53462     +  %let dsid=%sysfunc(close(&dsid));
53464     +  %let SEGMENTS=;
53465     +  %let COUNTS=;
53466     +  %let OTHERWHERE=;
53467     +  %let numLevels=;
53468     +  data _segs;
Sistema SAS
 
53469     +     length SegmentVariable $32 SegmentValue $200;
53470     +     retain SegmentVariable "&_Segment";
53471     +     label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,
53471    !+  NOQUOTE))"
53472     +           SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,
53472    !+NOQUOTE))";
53473     +     drop &_segment cum othercount otherpct numLevels;
53474     +     retain cum othercount otherpct numLevels 0;
53475     +     format Count 8.;
53476     +     set &_segment end=eof;
53478     +     %if &_segformat ne %then %do;
53479     +         SegmentValue= left(put(&_segment, &_segformat));
53480     +     %end;
53481     +     %else %do;
53482     +        %if &_segtype = N %then %do;
53483     +            SegmentValue= left(put(&_segment, best12.));
53484     +        %end;
53485     +        %else %do;
53486     +            SegmentValue = &_segment;
53487     +        %end;
53488     +     %end;
53490     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
53491     +        call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue,
53491    !+'"','""'))) ;
53492     +        call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
53493     +        numLevels + 1;
53494     +        output;
53495     +     %end;
53496     +     %else %do;
53497     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq '
53497    !+' and eof) then do;
53498     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue,
53498    !+'"','""'))) ;
53499     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
53500     +            numLevels + 1;
53501     +            output;
53502     +         end;
53503     +         else do;
53504     +            %if &_segtype = C or &_segformat ne %then %do;
53505     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
53506     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
53507     +            %end;
53508     +            %else %do;
53509     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
53509    !+strip(SegmentValue));
53510     +            %end;
53511     +            othercount = othercount + count;
53512     +            otherpct   = otherpct + percent;
53513     +            if eof then do;
53514     +               SegmentValue = '_OTHER_';
53515     +               count   = othercount;
53516     +               percent = otherpct;
53517     +               numLevels + 1;
53518     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
53519     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count,
53519    !+best.))) ;
53520     +               output;
53521     +            end;
Sistema SAS
 
53522     +         end;
53523     +         cum = cum + percent;
53524     +     %end;
53525     +     if eof then
53526     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
53527     +  run ;
53529     +  title9 " " ;
53530     +  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_frequency_title,  NOQUOTE, &_Segment))";
53531     +  proc print data=_segs noobs label ;
53532     +  run ;
53533     +  title9;
53534     +  title10;
53536     +  proc append base=&_sizeDs data=_segs force;
53537     +  run;
53539     +  %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED);
53540     +  %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
53541     +      %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED + &EM_NUM_TARGET);
53543     +  /* Loop over segments */
53544     +  %do i=1 %to &numLevels;
53545     +     %if ^&numvars %then %do;
53546     +         %if %sysfunc(exist(&_reportDs)) %then %do;
53547     +             data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
53548     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
53548    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
53549     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
53549    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
53550     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine,
53550    !+rpt_variable_vlabel,  NOQUOTE))"
53551     +                     Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,
53551    !+ NOQUOTE))"
53552     +                     Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,
53552    !+  NOQUOTE))";
53553     +                length SegmentVariable $32 SegmentValue $200;
53554     +                retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
53555     +                set &_reportDs;
53556     +                Rank = _N_;
53557     +             run;
53558     +             proc append base=&_varsDs data=_TEMPRULE force;
53559     +             run;
53560     +         %end;
53561     +         %goto doskip;
53562     +     %end;
53564     +     %if &_segformat ne %then %do;
53565     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
53566     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
53567     +         %else
53568     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&i";
53569     +     %end;
53570     +     %else %do;
53571     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
53572     +                 %let where= &_segment in(&OTHERWHERE);
53573     +         %else %do;
53574     +             %if &_segtype eq N %then
53575     +                 %let where= &_segment = &&segments&i;
53576     +             %else
53577     +                 %let where= &_segment = "&&segments&i";
53578     +         %end;
53579     +     %end;
Sistema SAS
 
53581     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
53582     +        set &EM_IMPORT_DATA(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
53582    !+%EM_INTERVAL_TARGET
53583     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
53584     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED
53584    !+%EM_NOMINAL_REJECTED
53585     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
53586     +        if &where then
53587     +           _seg= 1 ;
53588     +        else
53589     +           _seg= 0 ;
53590     +     run ;
53592     +      %if (&EM_IMPORT_VALIDATE ne ) and (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or
53592    !+%sysfunc(exist(&EM_IMPORT_VALIDATE, VIEW))) %then %do;
53593     +          data &EM_NODEID._VALIDTMP / view=&EM_NODEID._VALIDTMP ;
53594     +             set &EM_IMPORT_VALIDATE(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
53594    !+%EM_INTERVAL_TARGET
53595     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
53596     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED
53596    !+%EM_NOMINAL_REJECTED
53597     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
53599     +             if &where then
53600     +                _seg= 1 ;
53601     +              else
53602     +                 _seg= 0 ;
53603     +          run ;
53604     +      %end;
53606     +     %if  (%eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED +
53606    !+&EM_NUM_INTERVAL_TARGET +
53607     +               &EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_BINARY_TARGET +
53608     +               &EM_NUM_ORDINAL_INPUT  + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_REJECTED
53608    !+  + &EM_NUM_NOMINAL_REJECTED +
53609     +               &EM_NUM_ORDINAL_TARGET +  &EM_NUM_NOMINAL_TARGET) < 10000) %then %do;
53610     +         %_arbor(target=_SEG, rules=_TEMPRULE, FIT=_FIT);
53611     +     %end;
53612     +     %else %do;
53613     +        %_looparbor(level=INTERVAL, target=_SEG, rules=_TEMPRULE);
53614     +        %_looparbor(level=NOMINAL,  target=_SEG, rules=_TEMPRULE);
53615     +        %_looparbor(level=ORDINAL,  target=_SEG, rules=_TEMPRULE);
53616     +     %end;
53618     +     /* Keeping the important variables */
53619     +     %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
53620     +         data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
53621     +            length Name $32;
53622     +            label Name = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
53622    !+NOQUOTE))";
53623     +            retain Name;
53625     +            set _temprule;
53627     +            where stat in('VARIABLE','WORTH');
53629     +            if stat = 'VARIABLE' then
53630     +               Name = character_value;
53631     +            else
53632     +               output;
53633     +         run;
53635     +         proc sort data=_TEMPRULE;
53636     +            by descending Worth;
53637     +         run;
53639     +         %if %sysfunc(exist(&_reportDs)) %then %do;
Sistema SAS
 
53640     +             data _TEMPRULE;
53641     +                set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT) &_reportDs;
53642     +             run;
53643     +             proc sort data= _TEMPRULE nodupkey;
53644     +                by variable;
53645     +             run;
53646     +             proc sort data=_TEMPRULE;
53647     +                by descending Worth;
53648     +             run;
53649     +         %end;
53650     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
53651     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
53651    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
53652     +                    SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
53652    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
53653     +                    Variable        = "%sysfunc(sasmsg(sashelp.dmine,
53653    !+rpt_variable_vlabel,  NOQUOTE))"
53654     +                    Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,
53654    !+NOQUOTE))"
53655     +                    Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,
53655    !+ NOQUOTE))";
53656     +            length SegmentVariable $32 SegmentValue $200;
53657     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
53658     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
53659     +               set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT);
53660     +            %end;
53661     +            %else %do;
53662     +                set _TEMPRULE;
53663     +            %end;
53664     +            Rank = _N_;
53665     +            if _N_=1 and worth ne . and (worth < &EM_PROPERTY_MINWORTH) then do;
53666     +               put "&EM_CODEBAR";
53667     +               put "* No input variable meet the minimum worth criterion of
53667    !+&EM_PROPERTY_MINWORTH.";
53668     +               put "* You may identify profile variables by lowering this threshold, ";
53669     +               put "* or by increasing the maximum depth of the decision tree used.";
53670     +               put "&EM_CODEBAR";
53671     +            end;
53672     +         run;
53673     +     %end;
53674     +     %else %do;
53675     +         %if %sysfunc(exist(&_reportDs)) %then %do;
53676     +             data _TEMPRULE;
53677     +                set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0)) &_reportDs;
53678     +             run;
53679     +             proc sort data= _TEMPRULE nodupkey;
53680     +                by variable;
53681     +             run;
53682     +             proc sort data=_TEMPRULE;
53683     +                by descending Importance;
53684     +             run;
53685     +         %end;
53686     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Importance);
53687     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
53687    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
53688     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
53688    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
53689     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
Sistema SAS
 
53689    !+  NOQUOTE))"
53690     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine,
53690    !+rpt_importance_vlabel,  NOQUOTE))"
53691     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,
53691    !+NOQUOTE))";
53692     +            length SegmentVariable $32 SegmentValue $200;
53693     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
53694     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
53695     +               set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0));
53696     +            %end;
53697     +            %else %do;
53698     +                set _TEMPRULE;
53699     +            %end;
53700     +            Rank = _N_;
53701     +         run;
53702     +     %end;
53704     +     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_title,  NOQUOTE, &_Segment,
53704    !+%nrbquote(&&segments&i), &&counts&i))";
53705     +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth2_title,  NOQUOTE))";
53707     +     %if &EM_PROPERTY_PRINTWORTH eq Y %then %do;
53708     +         %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
53709     +             proc print data=_TEMPRULE noobs label ;
53710     +                var Variable Worth Rank;
53711     +                where worth ne .;
53712     +             run ;
53713     +             data _TEMPRULE;
53714     +                set _TEMPRULE;
53715     +                where worth eq . or (worth >= &EM_PROPERTY_MINWORTH);
53716     +             run;
53717     +         %end;
53718     +         %else %do;
53719     +             proc print data=_TEMPRULE noobs label ;
53720     +                var Variable Importance Rank;
53721     +                where importance ne .;
53722     +             run ;
53723     +         %end;
53725     +     %end ;
53726     +     %else %do;
53727     +         %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
53728     +             data _TEMPRULE;
53729     +                set _TEMPRULE;
53730     +                where worth eq . or (worth >= &EM_PROPERTY_MINWORTH);
53731     +             run;
53732     +         %end;
53733     +     %end;
53735     +     title9;
53736     +     title10;
53738     +     proc append base=&_varsDs data=_TEMPRULE force;
53739     +     run;
53741     +     %if %sysfunc(exist(_FIT)) %then %do;
53742     +         data _FIT;
53743     +            length SegmentVariable $32 SegmentValue $200;
53744     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&i";
53746     +            %if %sysfunc(exist(_FIT2)) %then %do;
53747     +                merge _FIT(keep=_MISC_) _FIT2(keep=_VMISC_);
53748     +            %end;
53749     +            %else %do;
53750     +                set _FIT(keep=_MISC_);
Sistema SAS
 
53751     +            %end;
53753     +         run;
53754     +         proc append base=&_fitDs data=_FIT force;
53755     +         run;
53756     +     %end;
53758     +     %doskip:
53760     +     proc datasets lib=work nolist mt=(DATA VIEW);
53761     +        delete _SEGS &EM_NODEID._TMP &EM_NODEID._VALIDTMP _STAT
53763     +        %if %sysfunc(exist(_TEMPRULE)) %then %do;
53764     +            _TEMPRULE
53765     +        %end;
53766     +        %if %sysfunc(exist(_FIT))>0 %then %do;
53767     +            _FIT
53768     +        %end;
53769     +        %if %sysfunc(exist(_FIT2))>0 %then %do;
53770     +            _FIT2
53771     +        %end;
53772     +     ;
53773     +     run;
53774     +     quit;
53775     +  %end ;
53776     +%mend tree_profile;
53778     +/* This macro loops over segment variables and determines important variables */
53779     +%macro em_profile(_segmentvar= , _sizeDS=WORK._SEGMENTSIZE,
53780     +                  _varsDs=WORK._SELECTEDVARS, _fitDs=WORK._FITSTAT, _reportDs=);
53782     +    %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
53783     +    %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
53784     +    %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
53786     +    %if _segmentvar eq %then %do;
53787     +        %put &EM_CODEBAR;
53788     +        %put * No segment variable defined ;
53789     +        %put &EM_CODEBAR;
53790     +        %goto doendep;
53791     +    %end;
53793     +    %let sndx = 0;
53795     +    %let svar = &_segmentvar;
53796     +    %if &svar ne %then %do;
53797     +        %makeVarMacros(LEVEL=INTERVAL);
53798     +        %makeVarMacros(LEVEL=NOMINAL);
53799     +        %makeVarMacros(LEVEL=ORDINAL);
53800     +    %end;
53802     +    %do %while(&svar ne );
53803     +        %let sndx= %eval(&sndx+1);
53804     +        %let svar = %scan(&_segmentvar, &sndx,' ');
53805     +        %if &svar ne %then
53806     +            %tree_profile(segment=&svar, _sizeDS=&_sizeDs, _varsDs=&_varsDs,
53806    !+_fitDs=&_fitDs, _reportDs=&_reportDs);
53807     +    %end ;
53809     +    proc datasets lib=&EM_LIB nolist;
53810     +       delete &EM_NODEID._MACS(mt=catalog);
53811     +    run;
53813     +    %doendep:
53814     +%mend em_profile;
53816     +%macro segmentSummary(SEGMENT=, _VARSDS=, FormatFref=);
53817     +   %put &EM_CODEBAR;
53818     +   %put * Summarizing variables ;
53819     +   %put * SEGMENT= &segment;
53820     +   %put &EM_CODEBAR;
Sistema SAS
 
53822     +  %if (&_varsDs eq ) or ^%sysfunc(exist(&_VARSDS)) or ^%sysfunc(exist(&segment)) %then
53822    !+%goto doends;
53824     +  %let _SEGMENT = &SEGMENT;
53826     +  %let dsid       = %sysfunc(open(&_segment));
53827     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
53828     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
53829     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
53831     +  %let dsid=%sysfunc(close(&dsid));
53833     +  %let SEGMENTS=;
53834     +  %let COUNTS=;
53835     +  %let OTHERWHERE=;
53836     +  %let numLevels=;
53837     +  data _null_;
53838     +     retain cum othercount otherpct  numLevels 0;
53839     +     format Count 8.;
53840     +     set &_segment end=eof;
53842     +     %if &_segformat ne %then %do;
53843     +         SegmentValue= strip(put(&_segment, &_segformat));
53844     +     %end;
53845     +     %else %do;
53846     +        %if &_segtype = N %then %do;
53847     +            SegmentValue= strip(put(&_segment, best12.));
53848     +        %end;
53849     +        %else %do;
53850     +            SegmentValue = &_segment;
53851     +        %end;
53852     +     %end;
53854     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
53855     +         call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue,
53855    !+'"','""'))) ;
53856     +         call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
53857     +         numLevels + 1;
53858     +         output;
53859     +     %end;
53860     +     %else %do;
53861     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq '
53861    !+' and eof) then do;
53862     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue,
53862    !+'"','""'))) ;
53863     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
53864     +            numLevels + 1;
53865     +            output;
53866     +         end;
53867     +         else do;
53868     +            %if &_segtype = C or &_segformat ne %then %do;
53869     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
53870     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
53871     +            %end;
53872     +            %else %do;
53873     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
53873    !+strip(SegmentValue));
53874     +            %end;
53875     +            othercount = othercount + count;
53876     +            otherpct   = otherpct + percent;
53877     +            if eof then do;
53878     +               SegmentValue = '_OTHER_';
53879     +               count   = othercount;
53880     +               percent = otherpct;
Sistema SAS
 
53881     +               numLevels + 1;
53882     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
53883     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count,
53883    !+best.))) ;
53884     +               output;
53885     +            end;
53886     +         end;
53887     +         cum = cum + percent;
53888     +     %end;
53889     +     if eof then
53890     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
53891     +  run ;
53893     +  /* Loop over segments */
53894     +  %do S = 1 %to &numLevels;
53895     +     %if &_segformat ne %then %do;
53896     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
53897     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
53898     +         %else
53899     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&s";
53900     +     %end;
53901     +     %else %do;
53902     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
53903     +                 %let where= &_segment in(&OTHERWHERE);
53904     +         %else %do;
53905     +             %if &_segtype eq N %then
53906     +                 %let where= &_segment = &&segments&s;
53907     +             %else
53908     +                 %let where= &_segment = "&&segments&s";
53909     +         %end;
53910     +     %end;
53912     +     %let SEGVARS=;
53913     +     %let SEGCLASS=;
53914     +     data _tempStat;
53915     +        set &_varsDs;
53916     +        where  SegmentVariable="&_segment" and SegmentValue="&&segments&s";
53917     +        if Type eq 'I' then
53918     +           call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
53919     +        else
53920     +           call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
53921     +     run ;
53923     +     %let _nobs = 0;
53924     +     %let dsid = %sysfunc(open(_tempStat));
53925     +     %if &dsid %then %do;
53926     +         %let _nobs = %sysfunc(attrn(&dsid, NLOBS));
53927     +         %let dsid = %sysfunc(close(&dsid));
53928     +     %end;
53929     +     %if &_nobs<1 %then %goto doskips;
53931     +     proc sort data=_tempStat;
53932     +        by Variable;
53933     +     run;
53935     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
53936     +        set &EM_IMPORT_DATA;
53938     +        where &where;
53940     +        %if (&FormatFref ne ) and (&segvars ne ) %then %do;
53941     +            %inc &FormatFref;
53942     +        %end;
53943     +     run;
53945     +     /* Profile Segment */
Sistema SAS
 
53946     +     %if &segclass ne %then %do;
53947     +         %class_profile(DATA=&EM_NODEID._TMP, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT,
53947    !+ FREQ=%EM_FREQ);
53948     +         data _CLASS;
53949     +            length SegmentVariable $32 SegmentValue $200;
53950     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
53951     +            label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
53951    !+  NOQUOTE))"
53952     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,
53952    !+NOQUOTE))"
53953     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,
53953    !+NOQUOTE))"
53954     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
53954    !+NOQUOTE))";
53955     +            set _CLASS;
53956     +         run;
53957     +         proc append base=&EM_USER_CLASSDIST data=_CLASS force;
53958     +         run;
53959     +         data _tempStat;
53960     +            merge _tempStat _STAT;
53961     +            by VARIABLE;
53962     +         run;
53963     +     %end;
53964     +     %if &segvars ne %then %do;
53965     +         %var_profile(DATA=&EM_NODEID._TMP, OUTPUT=_INTERVAL, VARS=&SEGVARS,
53966     +                           STAT=_STAT, BIN=N, FREQ=%EM_FREQ, NUMBARS=
53966    !+&EM_PROPERTY_NUMHISTBARS);
53967     +         data _INTERVAL;
53968     +             length SegmentVariable $32 SegmentValue $200;
53969     +             retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
53970     +             label Variable        = "%sysfunc(sasmsg(sashelp.dmine,
53970    !+rpt_variable_vlabel,  NOQUOTE))"
53971     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,
53971    !+NOQUOTE))"
53972     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,
53972    !+NOQUOTE))"
53973     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
53973    !+NOQUOTE))";
53974     +             set _INTERVAL;
53975     +         run;
53977     +         proc append base=&EM_USER_INTDIST data=_INTERVAL force;
53978     +         run;
53980     +         proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
53981     +            by VARIABLE;
53982     +         run;
53983     +         data _tempStat;
53984     +            merge _tempStat _STAT;
53985     +            by VARIABLE;
53986     +         run;
53988     +     %end;
53990     +     proc sort data=_tempStat;
53991     +        by Rank;
53992     +     run;
53993     +     proc append base=&EM_USER_STATS data=_tempStat force;
53994     +     run;
53996     +     %doskips:
53998     +     proc datasets lib=work nolist mt=(DATA VIEW);
53999     +        delete _segment &EM_NODEID._TMP _interval _class
Sistema SAS
 
54001     +        %if %sysfunc(exist(_tempStat))>0 %then %do;
54002     +            _tempStat
54003     +        %end;
54004     +     ;
54005     +     run;
54006     +     quit;
54009     +  %end ;
54010     +%mend segmentSummary;
54012     +%macro train;
54014     +   /* Retrieve data set name */
54015     +   %EM_GETNAME(KEY=SIZE,       TYPE=DATA);
54016     +   %EM_GETNAME(KEY=FIT,        TYPE=DATA);
54017     +   %EM_GETNAME(KEY=STATS,      TYPE=DATA);
54018     +   %EM_GETNAME(KEY=WORTH,      TYPE=DATA);
54019     +   %EM_GETNAME(KEY=IMPORTANCE, TYPE=DATA);
54020     +   %EM_GETNAME(KEY=CLASSDIST,  TYPE=DATA);
54021     +   %EM_GETNAME(KEY=INTDIST,    TYPE=DATA);
54022     +   %EM_GETNAME(KEY=SELVARS,    TYPE=DATA);
54024     +   /* Delete previous data sets */
54025     +   proc datasets lib=&EM_LIB nolist;
54026     +      delete &EM_NODEID._SIZE  &EM_NODEID._STATS &EM_NODEID._FIT &EM_NODEID._WORTH
54027     +             &EM_NODEID._IMPORTANCE &EM_NODEID._SELVARS
54028     +             &EM_NODEID._CLASSDIST  &EM_NODEID._INTDIST &EM_NODEID._MACS(mt=catalog);
54029     +   run;
54031     +   %if (%sysfunc(exist(&EM_IMPORT_DATA))<1 and %sysfunc(exist(&EM_IMPORT_DATA, VIEW))<1)
54032     +       or (&EM_IMPORT_DATA eq ) %then %do;
54033     +       %let  EMEXCEPTIONSTRING = exception.server.emtool.PROFNEEDTRAINDATASET;
54034     +       %goto doendpt;
54035     +   %end;
54037     +    proc sort data=&EM_DATA_VARIABLESET;
54038     +       by Name;
54039     +    run;
54041     +    %let _segmentvar = %EM_SEGMENT %EM_TREATMENT;
54043     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq SEGMENT) %then
54044     +        %let _segmentvar= &_segmentvar %EM_BINARY_TARGET %EM_NOMINAL_TARGET
54044    !+%EM_ORDINAL_TARGET;
54046     +    /* Add report variables */
54047     +    %let REPORT_VARS = ;
54048     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq REPORT) %then %do;
54049     +        %let REPORT_VARS = %EM_TARGET;
54050     +    %end;
54051     +    %if &EM_PROPERTY_USEREPORTVARS eq Y %then %do;
54052     +        %let REPORT_VARS = &REPORT_VARS %EM_REPORT_VARS;
54053     +    %end;
54055     +    %if &REPORT_VARS ne %then %do;
54056     +        data _tempreport;
54057     +           length Variable $32;
54059     +        %let rndx= 0 ;
54060     +        %let rvar  = &REPORT_VARS;
54061     +        %do %while( &rndx < &EM_PROPERTY_MAXNUMREPORT and &rvar ne  ) ;
54062     +            %let rndx= %eval(&rndx+1);
54063     +            %let rvar = %scan(&REPORT_VARS, &rndx, ' ') ;
54064     +            %if &rvar ne %then %do;
54065     +                Variable="&rvar"; output;
54066     +            %end ;
54067     +        %end;
54069     +        run;
54070     +    %end;
Sistema SAS
 
54072     +    %em_profile(_segmentvar=&_segmentvar, _sizeDs=&EM_USER_SIZE,
54073     +                _varsDs=&EM_USER_SELVARS, _fitDs=&EM_USER_FIT, _reportDs=_tempReport);
54075     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) and (&REPORT_VARS eq ) %then %goto doendpt;
54077     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) %then %do;
54078     +        data &EM_USER_SELVARS;
54079     +           set _tempreport;
54080     +        run;
54081     +    %end;
54083     +    proc sort data=&EM_USER_SELVARS;
54084     +       by Variable;
54085     +    run;
54086     +    data &EM_USER_SELVARS;
54087     +       length Type $1;
54088     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
54089     +       merge &EM_USER_SELVARS(in=a) &EM_DATA_VARIABLESET(keep=NAME LEVEL LABEL
54089    !+rename=(NAME=Variable));
54090     +       by Variable;
54091     +       if LABEL eq '' then LABEL=VARIABLE;
54092     +       if a then do;
54093     +          if LEVEL = 'INTERVAL' then Type = 'I';
54094     +          else Type = 'C';
54095     +           output;
54096     +       end;
54097     +       drop LEVEL;
54098     +    run;
54100     +    proc sort data=&EM_USER_SELVARS out=_SummaryVars nodupkey;
54101     +       by Variable;
54102     +    run;
54103     +    %if &EM_PROPERTY_MAXDEPTH > 1 %then %let selStat = Importance;
54104     +    %else
54105     +        %let selStat = Worth;
54107     +   data &EM_USER_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank
54107    !+&selStat);
54108     +       length Type $1;
54109     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
54110     +       set _SummaryVars;
54111     +       SegmentVariable= "_OVERALL_"; SegmentValue= "&EM_IMPORT_DATA"  ;
54112     +       rank = .; &selStat=.;
54113     +       if Label eq '' then Label=Variable;
54114     +   run;
54116     +    /* Profile Entire Data */
54117     +   %put &EM_CODEBAR;
54118     +   %put * Profile Entire Data ;
54119     +   %put &EM_CODEBAR;
54121     +    %let segvars=;
54122     +    %let segclass=;
54123     +    data _null_;
54124     +       set  &EM_USER_STATS;
54125     +       if Type = 'I' then
54126     +          call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
54127     +       else
54128     +          call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
54129     +    run ;
54131     +    %if &segclass ne %then %do;
54132     +        %class_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT,
54132    !+FREQ=%EM_FREQ);
54133     +        data _CLASS;
54134     +           length SegmentVariable $32 SegmentValue $200;
Sistema SAS
 
54135     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
54136     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
54136    !+NOQUOTE))"
54137     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,
54137    !+NOQUOTE))"
54138     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,
54138    !+NOQUOTE))"
54139     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
54139    !+NOQUOTE))";
54140     +           set _CLASS;
54141     +        run;
54142     +        proc append base=&EM_USER_CLASSDIST data=_CLASS force;
54143     +        run;
54145     +        proc sort data=_STAT;
54146     +           by VARIABLE;
54147     +        run;
54148     +        data &EM_USER_STATS;
54149     +            merge  &EM_USER_STATS _STAT;
54150     +            by VARIABLE;
54151     +        run;
54152     +    %end;
54153     +    %if &segvars ne %then %do;
54154     +        /* Computing Min and Max for Interval Variables */
54155     +        %var_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_INTERVAL, VARS=&SEGVARS,
54156     +                          STAT=_STAT, BINDATA=DATA_STAT, FREQ=%EM_FREQ, BIN=Y, NUMBARS=
54156    !+&EM_PROPERTY_NUMHISTBARS);
54157     +        data _INTERVAL;
54158     +           length SegmentVariable $32 SegmentValue $200;
54159     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
54160     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
54160    !+NOQUOTE))"
54161     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,
54161    !+NOQUOTE))"
54162     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,
54162    !+NOQUOTE))"
54163     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
54163    !+NOQUOTE))";
54164     +           set _INTERVAL;
54165     +        run;
54167     +        proc append base=&EM_USER_INTDIST data=_INTERVAL force;
54168     +        run;
54170     +        proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS)
54170    !+OUT=_STAT;
54171     +           by VARIABLE;
54172     +        run;
54173     +        data &EM_USER_STATS;
54174     +            merge  &EM_USER_STATS _STAT;
54175     +            by VARIABLE;
54176     +        run;
54177     +    %end;
54179     +    filename X catalog "&EM_LIB..&EM_NODEID._INTERVAL.FORMAT.source";
54181     +    %if %sysfunc(exist(&EM_LIB..&EM_NODEID._INTERVAL, 'CATALOG')) %then %do;
54182     +        proc datasets lib=&EM_LIB nolist;
54183     +           delete &EM_NODEID._INTERVAL(mt=catalog);
54184     +        run;
54185     +    %end;
54187     +    %if %sysfunc(exist(DATA_STAT)) %then %do;
54188     +        data _null_;
Sistema SAS
 
54189     +           file X;
54191     +           %let dsid    =%sysfunc(open(DATA_STAT));
54192     +           %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
54193     +           %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
54194     +           %let obs = %sysfunc(fetch(&dsid));
54196     +           put 'format' ;
54198     +           %let _count = 0;
54199     +           %let _VARS=;
54200     +           %do %while(&obs=0);
54202     +               %let _count = %eval(&_count +1);
54203     +               %let _name = %sysfunc(getvarc(&dsid, &namenum));
54204     +               %let _VARS = &_VARS &_name;
54205     +               %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
54206     +               %do;
54207     +                  put "&_name &_fmtname..";
54208     +               %end;
54209     +               %let obs = %sysfunc(fetch(&dsid));
54210     +           %end;
54211     +           %let dsid=%sysfunc(close(&dsid));
54212     +           put ';';
54213     +        run;
54214     +    %end;
54216     +    /* Profile Segments */
54217     +    %if _segmentvar eq %then %goto doendpt;
54218     +    %let sndx = 0;
54220     +    %let svar = &_segmentvar;
54221     +    %do %while(&svar ne );
54222     +        %let sndx= %eval(&sndx+1);
54223     +        %let svar = %scan(&_segmentvar, &sndx,' ');
54224     +        %if &svar ne %then
54225     +            %segmentSummary(segment=&svar, _varsDs=&EM_USER_SELVARS, FormatFref=X);
54226     +    %end ;
54228     +    filename X;
54230     +    %doendpt:
54233     +    /* Set reports for the node */
54234     +    %let _keys= SIZE STATS CLASSDIST INTDIST;
54236     +    %if %sysfunc(exist( &EM_USER_CLASSDIST)) or  %sysfunc(exist(&EM_USER_INTDIST)) %then
54236    !+ %do;
54237     +        %if %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
54238     +            data &EM_USER_INTDIST;
54239     +               set &EM_USER_INTDIST;
54240     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
54240    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
54241     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
54241    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
54242     +                     Color           = "%sysfunc(sasmsg(sashelp.dmine, rpt_color_vlabel,
54242    !+  NOQUOTE))";
54243     +               if SegmentVariable = '_OVERALL_' then Color = 1;
54244     +               else Color = 0;
54245     +            run;
54246     +        %end;
54247     +        %if %sysfunc(exist(&EM_USER_CLASSDIST)) %then %do;
54248     +            data &EM_USER_CLASSDIST;
54249     +               set &EM_USER_CLASSDIST;
54250     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
54250    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
54251     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
54251    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
Sistema SAS
 
54252     +                     Groupindex      = "%sysfunc(sasmsg(sashelp.dmine,
54252    !+rpt_groupIndex_vlabel,  NOQUOTE))";
54253     +               if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
54254     +               else GroupIndex = 1;
54255     +            run;
54256     +        %end;
54258     +        %let svar = &_segmentvar;
54259     +        %let sndx = 0;
54260     +        %do %while(&svar ne );
54261     +            %let sndx= %eval(&sndx+1);
54262     +            %let svar = %scan(&_segmentvar, &sndx,' ');
54263     +            %if &svar ne %then %do;
54264     +                %let autodisplay = N;
54265     +                %if &sndx = 1 %then
54266     +                    %let autodisplay = Y;
54267     +                %EM_REPORT(KEY=&_keys, VIEWTYPE=PROFILEVIEW, DESCRIPTION=Profileview,
54267    !+SEGMENTVALUE=&svar,
54268     +                      STATS=STATS, SIZE=SIZE, CLASSDIST=CLASSDIST, INTDIST=INTDIST,
54268    !+AUTODISPLAY=&autodisplay, BLOCK=Plot,
54269     +                      LOCALIZE=Y, COLOR=COLOR);
54270     +            %end;
54271     +        %end ;
54272     +    %end;
54274     +    %if %sysfunc(exist( &EM_USER_STATS)) %then %do;
54275     +        %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
54276     +            data &EM_USER_WORTH;
54277     +               set &EM_USER_STATS;
54278     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
54278    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
54279     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
54279    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
54280     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine,
54280    !+rpt_variable_vlabel,  NOQUOTE))"
54281     +                     Rank   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,
54281    !+NOQUOTE))"
54282     +                     Worth  = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,
54282    !+NOQUOTE))";
54283     +               where WORTH ne .;
54284     +            run;
54285     +            %EM_REPORT(KEY=WORTH,     VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE,
54285    !+FREQ=WORTH,
54286     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=WORTH,
54286    !+DESCRIPTION=profworth, BLOCK=Plot,
54287     +                  LOCALIZE=Y, NCOLS=1);
54288     +        %end;
54289     +        %else %do;
54290     +            data &EM_USER_IMPORTANCE;
54291     +               set &EM_USER_STATS;
54292     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
54292    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
54293     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
54293    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
54294     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
54294    !+  NOQUOTE))"
54295     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine,
54295    !+rpt_importance_vlabel,  NOQUOTE))"
54296     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,
54296    !+NOQUOTE))";
Sistema SAS
 
54297     +               where IMPORTANCE ne .;
54298     +            run;
54299     +            %EM_REPORT(KEY=IMPORTANCE, VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE,
54299    !+FREQ=IMPORTANCE,
54300     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=IMPORTANCE,
54300    !+DESCRIPTION=profimportance, BLOCK=Plot,
54301     +                  LOCALIZE=Y, NCOLS=1);
54302     +       %end;
54303     +    %end;
54305     +    %if %sysfunc(exist( &EM_USER_SIZE)) %then %do;
54306     +        %if %sysfunc(exist( &EM_USER_FIT)) %then %do;
54307     +            data &EM_USER_SIZE;
54308     +               merge &EM_USER_SIZE &EM_USER_FIT;
54309     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
54309    !+NOQUOTE))"
54310     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,
54310    !+NOQUOTE))";
54311     +               format PERCENT 5.2;
54312     +               format COUNT 12.;
54313     +            run;
54314     +        %end;
54315     +        %else %do;
54316     +            data &EM_USER_SIZE;
54317     +               set &EM_USER_SIZE;
54318     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
54318    !+NOQUOTE))"
54319     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,
54319    !+NOQUOTE))";
54320     +               format PERCENT 5.2;
54321     +               format COUNT 12.;
54322     +            run;
54323     +        %end;
54325     +        %EM_REPORT(KEY=SIZE, VIEWTYPE=PIE, DESCRIPTION=segmentmanysize, X=SEGMENTVALUE,
54325    !+Y=COUNT, TIPTEXT=PERCENT,
54326     +                   REPORTID=SEGMENTVARIABLE, IDVALUE=SIZE, BLOCK=Plot, AUTODISPLAY=Y,
54326    !+LOCALIZE=Y);
54328     +    %end;
54330     +    %EM_REPORT(KEY=SIZE,      VIEWTYPE=DATA, DESCRIPTION=size,
54330    !+BLOCK=Stats);
54331     +    %EM_REPORT(KEY=STATS,     VIEWTYPE=DATA, DESCRIPTION=profilevars,
54331    !+BLOCK=Stats);
54332     +    %EM_REPORT(KEY=CLASSDIST, VIEWTYPE=DATA, DESCRIPTION=clusbarplot,
54332    !+BLOCK=Stats);
54333     +    %EM_REPORT(KEY=INTDIST,   VIEWTYPE=DATA, DESCRIPTION=clushistplot,
54333    !+BLOCK=Stats);
54335     +    proc datasets lib=&EM_LIB nolist;
54336     +       delete &EM_NODEID._SELVARS _SUMMARYVARS DATA_STAT &EM_NODEID._MACS(mt=catalog)
54336    !+&EM_NODEID._INTERVAL(mt=catalog);
54337     +    run;
54339     +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
Sistema SAS
 
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS3 nolist;
MPRINT(TRAIN):   delete Prof_SIZE Prof_STATS Prof_FIT Prof_WORTH Prof_IMPORTANCE Prof_SELVARS
Prof_CLASSDIST Prof_INTDIST Prof_MACS(mt=catalog);
MPRINT(TRAIN):   run;
 
NOTE: The file EMWS3.PROF_SIZE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF_STATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF_FIT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF_WORTH (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF_IMPORTANCE (memtype=DATA) was not found, but appears on a DELETE
      statement.
NOTE: The file EMWS3.PROF_SELVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF_CLASSDIST (memtype=DATA) was not found, but appears on a DELETE
      statement.
NOTE: The file EMWS3.PROF_INTDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):   proc sort data=EMWS3.Prof_VariableSet;
MPRINT(TRAIN):   by Name;
MPRINT(TRAIN):   run;
 
NOTE: There were 1208 observations read from the data set EMWS3.PROF_VARIABLESET.
NOTE: The data set EMWS3.PROF_VARIABLESET has 1208 observations and 21 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAKEVARMACROS):   filename X catalog "EMWS3.Prof_MACS.INTERVAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS3.Prof_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL="INTERVAL" and USE='Y') or (ROLE
='INPUT' and LEVEL="INTERVAL" and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
Sistema SAS
 
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;
 
NOTE: The file X is:
      Catalog Name=EMWS3.PROF_MACS.INTERVAL_1.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=4,
      Creado=vie, 11 de dic de 2020 22:45:01,
      Última modificación=vie, 11 de dic de 2020 22:45:01,
      Nombre
      archivo=C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\prof_mac
      s.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=             9KB,
      Tamaño de archivo (bytes)=9216
 
NOTE: 104 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 79.
NOTE: There were 1204 observations read from the data set EMWS3.PROF_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (LEVEL='INTERVAL') and (USE='Y')) or ((ROLE='INPUT') and
      (LEVEL='INTERVAL') and USE in ('D', 'Y'));
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
MPRINT(EM_PROFILE):  ;
MPRINT(EM_PROFILE):  ;
*------------------------------------------------------------*
* Filtering input variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
MPRINT(TREE_PROFILE):   proc freq data=EMWS3.Clus_TRAIN noprint ;
MPRINT(TREE_PROFILE):   table _SEGMENT_ / missing out=_SEGMENT_(keep=_SEGMENT_ count percent) ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.33 seconds
      cpu time            4.32 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: The data set WORK._SEGMENT_ has 10 observations and 3 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           4.35 seconds
      cpu time            4.34 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_SEGMENT_;
MPRINT(TREE_PROFILE):   by descending count ;
MPRINT(TREE_PROFILE):   run ;
Sistema SAS
 
 
NOTE: There were 10 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGMENT_ has 10 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _segs;
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_";
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento";
MPRINT(TREE_PROFILE):   drop _SEGMENT_ cum othercount otherpct numLevels;
MPRINT(TREE_PROFILE):   retain cum othercount otherpct numLevels 0;
MPRINT(TREE_PROFILE):   format Count 8.;
MPRINT(TREE_PROFILE):   set _SEGMENT_ end=eof;
MPRINT(TREE_PROFILE):   SegmentValue= left(put(_SEGMENT_, best12.));
MPRINT(TREE_PROFILE):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue,
'"','""'))) ;
MPRINT(TREE_PROFILE):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(TREE_PROFILE):   numLevels + 1;
MPRINT(TREE_PROFILE):   output;
MPRINT(TREE_PROFILE):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGS has 10 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 " " ;
MPRINT(TREE_PROFILE):   title10 "Frecuencias: _SEGMENT_";
MPRINT(TREE_PROFILE):   proc print data=_segs noobs label ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._SEGS.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SIZE data=_segs force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._SEGS a EMWS3.PROF_SIZE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 10 observations read from the data set WORK._SEGS.
NOTE: The data set EMWS3.PROF_SIZE has 10 observations and 4 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
Sistema SAS
 
 
MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM
ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW
ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
Sistema SAS
 
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 9 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5
Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM
ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC
ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
Sistema SAS
 
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
Sistema SAS
 
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1462370 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 722503680 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
NOTE: Passed training data 2 times.
NOTE: Training used 87630760 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 160 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.29 seconds
      cpu time            5.28 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           5.29 seconds
      cpu time            5.28 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 160 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 160 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
Sistema SAS
 
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "9";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
Sistema SAS
 
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 9 Número: 1047";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE a EMWS3.PROF_SELVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set EMWS3.PROF_SELVARS has 20 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
Sistema SAS
 
NOTE: Deleting WORK._SEGS (memtype=DATA).
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM
ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW
ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
Sistema SAS
 
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 3 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5
Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM
ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC
ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
Sistema SAS
 
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
Sistema SAS
 
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1462370 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 722503680 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
NOTE: Passed training data 2 times.
NOTE: Training used 87630760 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 155 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.19 seconds
      cpu time            5.20 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           5.19 seconds
      cpu time            5.20 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
Sistema SAS
 
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 155 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 155 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
Sistema SAS
 
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 3 Número: 691";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE a EMWS3.PROF_SELVARS.
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF_SELVARS has 40 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
Sistema SAS
 
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM
ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW
ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
Sistema SAS
 
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 5 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
Sistema SAS
 
      cpu time            0.11 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5
Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM
ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC
ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
Sistema SAS
 
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1462370 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 722503680 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
NOTE: Passed training data 2 times.
NOTE: Training used 87630760 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 159 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.03 seconds
      cpu time            5.03 seconds
Sistema SAS
 
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           5.04 seconds
      cpu time            5.03 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 159 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 159 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
Sistema SAS
 
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "5";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 5 Número: 408";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SELVARS data=_TEMPRULE force;
Sistema SAS
 
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE a EMWS3.PROF_SELVARS.
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF_SELVARS has 60 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM
ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW
ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
Sistema SAS
 
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 1 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
Sistema SAS
 
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5
Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM
ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC
ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
Sistema SAS
 
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1462370 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 722503680 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
NOTE: Passed training data 2 times.
NOTE: Training used 87630760 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 161 observations and 6 variables.
MPRINT(_ARBOR):   ;
Sistema SAS
 
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.43 seconds
      cpu time            5.43 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           5.43 seconds
      cpu time            5.43 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 161 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 161 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
Sistema SAS
 
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 1 Número: 400";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
Sistema SAS
 
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE a EMWS3.PROF_SELVARS.
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF_SELVARS has 80 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM
ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW
ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
Sistema SAS
 
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
Sistema SAS
 
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 2 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5
Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM
ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC
ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
Sistema SAS
 
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1462370 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 722503680 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
Sistema SAS
 
NOTE: Passed training data 2 times.
NOTE: Training used 87630760 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 159 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.12 seconds
      cpu time            5.14 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           5.13 seconds
      cpu time            5.14 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 159 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 159 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
Sistema SAS
 
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 2 Número: 236";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
Sistema SAS
 
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 2 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE a EMWS3.PROF_SELVARS.
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
NOTE: 2 observations added.
NOTE: The data set EMWS3.PROF_SELVARS has 82 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM
ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW
ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
Sistema SAS
 
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
Sistema SAS
 
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 8 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5
Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM
ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC
ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
Sistema SAS
 
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
Sistema SAS
 
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1462370 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 722503680 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
NOTE: Passed training data 2 times.
NOTE: Training used 87630760 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 161 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.03 seconds
      cpu time            5.03 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           5.04 seconds
      cpu time            5.03 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 161 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 161 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
Sistema SAS
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "8";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 8 Número: 80";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
Sistema SAS
 
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 10.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE a EMWS3.PROF_SELVARS.
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF_SELVARS has 102 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM
Sistema SAS
 
ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW
ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
Sistema SAS
 
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 10 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5
Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM
ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC
ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
Sistema SAS
 
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
Sistema SAS
 
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1462370 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 722503680 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
NOTE: Passed training data 2 times.
NOTE: Training used 87630760 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 156 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.15 seconds
      cpu time            5.14 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           5.16 seconds
      cpu time            5.14 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 156 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 156 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
Sistema SAS
 
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "10";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
Sistema SAS
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 10 Número: 70";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 3 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE a EMWS3.PROF_SELVARS.
NOTE: There were 3 observations read from the data set WORK._TEMPRULE.
NOTE: 3 observations added.
NOTE: The data set EMWS3.PROF_SELVARS has 105 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
Sistema SAS
 
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM
ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW
ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
Sistema SAS
 
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 6 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.12 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5
Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM
ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC
ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
Sistema SAS
 
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
Sistema SAS
 
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1462370 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 722503680 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
NOTE: Passed training data 2 times.
NOTE: Training used 87630760 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 158 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.07 seconds
      cpu time            5.09 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           5.07 seconds
      cpu time            5.09 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
Sistema SAS
 
NOTE: There were 158 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 158 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "6";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
Sistema SAS
 
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 6 Número: 32";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 12.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE a EMWS3.PROF_SELVARS.
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 10 observations added.
NOTE: The data set EMWS3.PROF_SELVARS has 115 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
Sistema SAS
 
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM
ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW
ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
Sistema SAS
 
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 7 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5
Sistema SAS
 
Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM
ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC
ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
Sistema SAS
 
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1462370 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 722503680 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
NOTE: Passed training data 2 times.
NOTE: Training used 87630760 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 149 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.29 seconds
      cpu time            5.26 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
Sistema SAS
 
      real time           5.30 seconds
      cpu time            5.26 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 149 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 149 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
Sistema SAS
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "7";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 7 Número: 22";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 13.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 1 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE a EMWS3.PROF_SELVARS.
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
Sistema SAS
 
NOTE: 1 observations added.
NOTE: The data set EMWS3.PROF_SELVARS has 116 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM
ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW
ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
Sistema SAS
 
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 4 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
Sistema SAS
 
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5
Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM
ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC
ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW ANGEL ANIM ANNOUNC ANSWER
ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA
AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM
ATARI ATHEN ATHENA ATTACH ATTACK ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI
BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT
BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA
CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER
CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL CHARACT CHARG CHASTITI CHEAP CHECK CHEER
CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN
CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD
COLLEG COLLIN COLOR COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON
COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER
CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT CONTINU
CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER
COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER
DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN
DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN
DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT
DIRECTORI DISCHARG DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT
DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI
EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL ENERGI ENGIN ENGLAND
ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT
EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS
EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT
FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT
FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI
FRIEND FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA
GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND
GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD HARDWAR HARRI HARVARD HATE
HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM
HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR
HOUS HOWARD HUMAN HUNTSVIL ICON IDEA IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS
IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT
INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM
JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD
KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB LABEL LABORATORI LACK LAND LANGUAG LARG
LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS
LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG
LONGER LOOK LOOP LOST LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG
MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN
MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD METHODOLOG MICHAEL
MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON
MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER
Sistema SAS
 
MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU
NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC
NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM
OMRAN OPEN OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT
OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH
PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE PHOTOGRAPHI PHYSIC PHYSICIAN
PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG
POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT
POWER PRACTIC PREFER PRESENT PRESID PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT
PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT
PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM
RACIST RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV
RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN
REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH RESERV RESIST RESISTOR
RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK
RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT
SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH
SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI
SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE
SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH
SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK SPOT STAI STAND STANDARD START
STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP
STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT
SUPPLI SUPPORT SUPPOS SURGERI SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM
TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM
TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK THOMA
THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO
TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE
TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN UNDERSTAND UNIT UNIV UNIVERS UNIX
UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW
VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST
WATCH WATER WAVE WAYN WED WEEK WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW
WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG
XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1462370 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 722503680 bytes.
NOTE: Will not search for split on variable SUBSCRIV.
NOTE: Too few acceptable cases.
NOTE: Passed training data 2 times.
NOTE: Training used 87630760 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 4 nodes and 3 leaves.
NOTE: Using subtree with 4 nodes and 3 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 4 nodes and 3 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 127 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
Sistema SAS
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           5.11 seconds
      cpu time            5.10 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           5.11 seconds
      cpu time            5.12 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 127 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 127 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
Sistema SAS
 
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de
segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
*------------------------------------------------------------*
* No input variable meet the minimum worth criterion of 0.01
* You may identify profile variables by lowering this threshold,
* or by increasing the maximum depth of the decision tree used.
*------------------------------------------------------------*
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 4 Número: 14";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 14.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
Sistema SAS
 
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 0 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE a EMWS3.PROF_SELVARS.
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
NOTE: 0 observations added.
NOTE: The data set EMWS3.PROF_SELVARS has 116 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_PROFILE):   proc datasets lib=EMWS3 nolist;
MPRINT(EM_PROFILE):   delete Prof_MACS(mt=catalog);
MPRINT(EM_PROFILE):   run;
 
NOTE: Deleting EMWS3.PROF_MACS (memtype=CATALOG).
MPRINT(TRAIN):  ;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):   proc sort data=EMWS3.Prof_SELVARS;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;
 
NOTE: There were 116 observations read from the data set EMWS3.PROF_SELVARS.
NOTE: The data set EMWS3.PROF_SELVARS has 116 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
Sistema SAS
 
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   data EMWS3.Prof_SELVARS;
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Tipo";
MPRINT(TRAIN):   merge EMWS3.Prof_SELVARS(in=a) EMWS3.Prof_VariableSet(keep=NAME LEVEL LABEL
rename=(NAME=Variable));
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   if LABEL eq '' then LABEL=VARIABLE;
MPRINT(TRAIN):   if a then do;
MPRINT(TRAIN):   if LEVEL = 'INTERVAL' then Type = 'I';
MPRINT(TRAIN):   else Type = 'C';
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   end;
MPRINT(TRAIN):   drop LEVEL;
MPRINT(TRAIN):   run;
 
WARNING: Multiple lengths were specified for the BY variable Variable by input data sets. This
         might cause unexpected results.
NOTE: There were 116 observations read from the data set EMWS3.PROF_SELVARS.
NOTE: There were 1208 observations read from the data set EMWS3.PROF_VARIABLESET.
NOTE: The data set EMWS3.PROF_SELVARS has 116 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):   proc sort data=EMWS3.Prof_SELVARS out=_SummaryVars nodupkey;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;
 
NOTE: There were 116 observations read from the data set EMWS3.PROF_SELVARS.
NOTE: 13 observations with duplicate key values were deleted.
NOTE: The data set WORK._SUMMARYVARS has 103 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TRAIN):   data EMWS3.Prof_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank
Worth);
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Tipo";
MPRINT(TRAIN):   set _SummaryVars;
MPRINT(TRAIN):   SegmentVariable= "_OVERALL_";
MPRINT(TRAIN):   SegmentValue= "EMWS3.Clus_TRAIN" ;
MPRINT(TRAIN):   rank = .;
MPRINT(TRAIN):   Worth=.;
MPRINT(TRAIN):   if Label eq '' then Label=Variable;
MPRINT(TRAIN):   run;
 
NOTE: There were 103 observations read from the data set WORK._SUMMARYVARS.
NOTE: The data set EMWS3.PROF_STATS has 103 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
Sistema SAS
 
 
*------------------------------------------------------------*
* Profile Entire Data
*------------------------------------------------------------*
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS3.Prof_STATS;
MPRINT(TRAIN):   if Type = 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(TRAIN):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(TRAIN):   run ;
 
NOTE: There were 103 observations read from the data set EMWS3.PROF_STATS.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* Prof: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=4,
      Creado=vie, 11 de dic de 2020 22:45:59,
      Última modificación=vie, 11 de dic de 2020 22:45:59,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=             5KB,
      Tamaño de archivo (bytes)=5120
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
54343     +%macro _vars;
54344     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
NOTE: The quoted string currently being processed has become more than 262 characters long.  You
      might have unbalanced quotation marks.
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS3.Clus_TRAIN(obs=1000000)
varout=_STAT(rename=(NAME=VARIABLE));
Sistema SAS
 
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ANDI APPLIC ARAB ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BEYER BUILD BUSH
CANDIDA CARTER CHASTITI CHIP CIRCUIT CIVILIAN CLIENT CLINIC CLOSE COMP COUNTRI DESIGN DEVIC DIET
DISEAS DISPLAI DOCTOR EAT EFFECT ELECTR ELECTRON EMPLOY ESCAP EXTERMIN FOOD FORC GEB GENOCID GEORG
GORDON GOVERN INTELLECT ISRA ISRAEL JAKE JEW JEWISH JIMMI KILL LAND LEBANON LIVNI LONGER MED MEDIC
MEDICIN MOTIF MOUNTAIN MSG OCCUP OCCUPI PALESTINIAN PASS PATIENT PEAC PHYSICIAN POLICI POWER
PRESID RADIO REDUND REPLAC ROAD RUN SCI SENSIT SERA SERDAR SERV SERVER SHAME SIGNAL SINGL SKEPTIC
SOVIET SUPERSTIT SURREND SYMPTOM SYNDROM TERRITORI TERROR TREATMENT TURK TURKISH URBANA VOLTAG WAI
WIDGET WINDOW XLIB ZUMA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 3000   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.10 seconds
      cpu time            4.09 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: The data set WORK._STAT has 103 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.11 seconds
      cpu time            4.12 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 103 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 103 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
Sistema SAS
 
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS3.Clus_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=9;
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ANDI APPLIC ARAB ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BEYER BUILD BUSH
CANDIDA CARTER CHASTITI CHIP CIRCUIT CIVILIAN CLIENT CLINIC CLOSE COMP COUNTRI DESIGN DEVIC DIET
DISEAS DISPLAI DOCTOR EAT EFFECT ELECTR ELECTRON EMPLOY ESCAP EXTERMIN FOOD FORC GEB GENOCID GEORG
GORDON GOVERN INTELLECT ISRA ISRAEL JAKE JEW JEWISH JIMMI KILL LAND LEBANON LIVNI LONGER MED MEDIC
MEDICIN MOTIF MOUNTAIN MSG OCCUP OCCUPI PALESTINIAN PASS PATIENT PEAC PHYSICIAN POLICI POWER
PRESID RADIO REDUND REPLAC ROAD RUN SCI SENSIT SERA SERDAR SERV SERVER SHAME SIGNAL SINGL SKEPTIC
SOVIET SUPERSTIT SURREND SYMPTOM SYNDROM TERRITORI TERROR TREATMENT TURK TURKISH URBANA VOLTAG WAI
WIDGET WINDOW XLIB ZUMA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 3000   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.22 seconds
      cpu time            4.21 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: The data set WORK._CLASSOUT has 927 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.23 seconds
      cpu time            4.21 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<9));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 927 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 927 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 927 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
Sistema SAS
 
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_
RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 927 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 103 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1,
best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT9 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 103 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 11 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS3.Clus_TRAIN(keep
MPRINT(VAR_PROFILE):  = ANDI APPLIC ARAB ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BEYER BUILD BUSH
CANDIDA CARTER CHASTITI CHIP CIRCUIT CIVILIAN CLIENT CLINIC CLOSE COMP COUNTRI DESIGN DEVIC DIET
DISEAS DISPLAI DOCTOR EAT EFFECT ELECTR ELECTRON EMPLOY ESCAP EXTERMIN FOOD FORC GEB GENOCID GEORG
Sistema SAS
 
GORDON GOVERN INTELLECT ISRA ISRAEL JAKE JEW JEWISH JIMMI KILL LAND LEBANON LIVNI LONGER MED MEDIC
MEDICIN MOTIF MOUNTAIN MSG OCCUP OCCUPI PALESTINIAN PASS PATIENT PEAC PHYSICIAN POLICI POWER
PRESID RADIO REDUND REPLAC ROAD RUN SCI SENSIT SERA SERDAR SERV SERVER SHAME SIGNAL SINGL SKEPTIC
SOVIET SUPERSTIT SURREND SYMPTOM SYNDROM TERRITORI TERROR TREATMENT TURK TURKISH URBANA VOLTAG WAI
WIDGET WINDOW XLIB ZUMA obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50
75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ANDI APPLIC ARAB ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BEYER BUILD BUSH
CANDIDA CARTER CHASTITI CHIP CIRCUIT CIVILIAN CLIENT CLINIC CLOSE COMP COUNTRI DESIGN DEVIC DIET
DISEAS DISPLAI DOCTOR EAT EFFECT ELECTR ELECTRON EMPLOY ESCAP EXTERMIN FOOD FORC GEB GENOCID GEORG
GORDON GOVERN INTELLECT ISRA ISRAEL JAKE JEW JEWISH JIMMI KILL LAND LEBANON LIVNI LONGER MED MEDIC
MEDICIN MOTIF MOUNTAIN MSG OCCUP OCCUPI PALESTINIAN PASS PATIENT PEAC PHYSICIAN POLICI POWER
PRESID RADIO REDUND REPLAC ROAD RUN SCI SENSIT SERA SERDAR SERV SERVER SHAME SIGNAL SINGL SKEPTIC
SOVIET SUPERSTIT SURREND SYMPTOM SYNDROM TERRITORI TERROR TREATMENT TURK TURKISH URBANA VOLTAG WAI
WIDGET WINDOW XLIB ZUMA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK._EMVARDIST.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.25 seconds
      cpu time            4.25 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 104 variables.
NOTE: PROCEDURE STDIZE ha utilizado (Tiempo de proceso total):
      real time           4.26 seconds
      cpu time            4.26 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=DATA_STAT(rename=(_NAME_=VARIABLE
Sistema SAS
 
COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK.DATA_STAT has 103 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=DATA_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 103 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 103 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   set DATA_STAT;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{20};
MPRINT(VAR_PROFILE):   array _bounds{20};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/8;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/8;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
Sistema SAS
 
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 103 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 103 observations and 52 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   merge DATA_STAT _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
Sistema SAS
 
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This
         might cause unexpected results.
NOTE: There were 103 observations read from the data set WORK.DATA_STAT.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK.DATA_STAT has 103 observations and 54 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set DATA_STAT end=eof;
MPRINT(VAR_PROFILE):   array _bounds{18};
MPRINT(VAR_PROFILE):   array _midpoint{18};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 18-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_UB - _LB)>1e-10 then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=4,
      Creado=vie, 11 de dic de 2020 22:46:12,
      Última modificación=vie, 11 de dic de 2020 22:46:12,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\em.sas7bcat,
Sistema SAS
 
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=             5KB,
      Tamaño de archivo (bytes)=5120
 
NOTE: 1085 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 103 observations read from the data set WORK.DATA_STAT.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
54345     +proc format;
MPRINT(VAR_PROFILE):   proc format;
54346     +value F1_
54347     +LOW -0 ="0 "
54348     +0 -0.1208113644 ="0.1208113644 "
54349     +0.1208113644 -0.2416227289 ="0.2416227289 "
54350     +0.2416227289 -0.3624340933 ="0.3624340933 "
54351     +0.3624340933 -0.4832454577 ="0.4832454577 "
54352     +0.4832454577 -HIGH="0.6040568222 "
54353     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -0 ="0 " 0 -0.1208113644 ="0.1208113644 " 0.1208113644
-0.2416227289 ="0.2416227289 " 0.2416227289 -0.3624340933 ="0.3624340933 " 0.3624340933
-0.4832454577 ="0.4832454577 " 0.4832454577 -HIGH="0.6040568222 " ;
NOTE: Format F1_ has been output.
54354     +value F2_
54355     +LOW -0.0039957025 ="0.0019978512 "
54356     +0.0039957025 -0.0079914049 ="0.0059935537 "
54357     +0.0079914049 -0.0119871074 ="0.0099892561 "
54358     +0.0119871074 -0.0159828098 ="0.0139849586 "
54359     +0.0159828098 -0.0199785123 ="0.0179806611 "
54360     +0.0199785123 -0.0239742147 ="0.0219763635 "
54361     +0.0239742147 -0.0279699172 ="0.025972066 "
54362     +0.0279699172 -0.0319656197 ="0.0299677684 "
54363     +0.0319656197 -0.0757564826 ="0.0737586313 "
54364     +0.0757564826 -0.1195473455 ="0.1175494943 "
54365     +0.1195473455 -0.1633382084 ="0.1613403572 "
54366     +0.1633382084 -0.2071290713 ="0.2051312201 "
54367     +0.2071290713 -HIGH="0.248922083 "
54368     +;
MPRINT(VAR_PROFILE):   value F2_ LOW -0.0039957025 ="0.0019978512 " 0.0039957025 -0.0079914049
="0.0059935537 " 0.0079914049 -0.0119871074 ="0.0099892561 " 0.0119871074 -0.0159828098
="0.0139849586 " 0.0159828098 -0.0199785123 ="0.0179806611 " 0.0199785123 -0.0239742147
="0.0219763635 " 0.0239742147 -0.0279699172 ="0.025972066 " 0.0279699172 -0.0319656197
="0.0299677684 " 0.0319656197 -0.0757564826 ="0.0737586313 " 0.0757564826 -0.1195473455
="0.1175494943 " 0.1195473455 -0.1633382084 ="0.1613403572 " 0.1633382084 -0.2071290713
="0.2051312201 " 0.2071290713 -HIGH="0.248922083 " ;
NOTE: Format F2_ has been output.
54369     +value F3_
54370     +LOW -0.0034318485 ="0.0017159243 "
54371     +0.0034318485 -0.006863697 ="0.0051477728 "
54372     +0.006863697 -0.0102955455 ="0.0085796213 "
54373     +0.0102955455 -0.013727394 ="0.0120114698 "
54374     +0.013727394 -0.0171592425 ="0.0154433183 "
Sistema SAS
 
54375     +0.0171592425 -0.020591091 ="0.0188751668 "
54376     +0.020591091 -0.0240229396 ="0.0223070153 "
54377     +0.0240229396 -0.0274547881 ="0.0257388638 "
54378     +0.0274547881 -0.0661706926 ="0.0644547683 "
54379     +0.0661706926 -0.1048865971 ="0.1031706729 "
54380     +0.1048865971 -0.1436025016 ="0.1418865774 "
54381     +0.1436025016 -0.1823184062 ="0.1806024819 "
54382     +0.1823184062 -0.2210343107 ="0.2193183864 "
54383     +;
MPRINT(VAR_PROFILE):   value F3_ LOW -0.0034318485 ="0.0017159243 " 0.0034318485 -0.006863697
="0.0051477728 " 0.006863697 -0.0102955455 ="0.0085796213 " 0.0102955455 -0.013727394
="0.0120114698 " 0.013727394 -0.0171592425 ="0.0154433183 " 0.0171592425 -0.020591091
="0.0188751668 " 0.020591091 -0.0240229396 ="0.0223070153 " 0.0240229396 -0.0274547881
="0.0257388638 " 0.0274547881 -0.0661706926 ="0.0644547683 " 0.0661706926 -0.1048865971
="0.1031706729 " 0.1048865971 -0.1436025016 ="0.1418865774 " 0.1436025016 -0.1823184062
="0.1806024819 " 0.1823184062 -0.2210343107 ="0.2193183864 " ;
NOTE: Format F3_ has been output.
54384     +value F4_
54385     +LOW -0 ="0 "
54386     +0 -0.065000386 ="0.065000386 "
54387     +0.065000386 -0.130000772 ="0.130000772 "
54388     +0.130000772 -0.195001158 ="0.195001158 "
54389     +0.195001158 -0.260001544 ="0.260001544 "
54390     +0.260001544 -HIGH="0.3250019299 "
54391     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -0 ="0 " 0 -0.065000386 ="0.065000386 " 0.065000386
-0.130000772 ="0.130000772 " 0.130000772 -0.195001158 ="0.195001158 " 0.195001158 -0.260001544
="0.260001544 " 0.260001544 -HIGH="0.3250019299 " ;
NOTE: Format F4_ has been output.
54392     +value F5_
54393     +LOW -0 ="0 "
54394     +0 -0.1160142256 ="0.1160142256 "
54395     +0.1160142256 -0.2320284511 ="0.2320284511 "
54396     +0.2320284511 -0.3480426767 ="0.3480426767 "
54397     +0.3480426767 -0.4640569023 ="0.4640569023 "
54398     +0.4640569023 -HIGH="0.5800711279 "
54399     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -0 ="0 " 0 -0.1160142256 ="0.1160142256 " 0.1160142256
-0.2320284511 ="0.2320284511 " 0.2320284511 -0.3480426767 ="0.3480426767 " 0.3480426767
-0.4640569023 ="0.4640569023 " 0.4640569023 -HIGH="0.5800711279 " ;
NOTE: Format F5_ has been output.
54400     +value F6_
54401     +LOW -0 ="0 "
54402     +0 -0.0471809055 ="0.0471809055 "
54403     +0.0471809055 -0.0943618111 ="0.0943618111 "
54404     +0.0943618111 -0.1415427166 ="0.1415427166 "
54405     +0.1415427166 -0.1887236222 ="0.1887236222 "
54406     +0.1887236222 -HIGH="0.2359045277 "
54407     +;
MPRINT(VAR_PROFILE):   value F6_ LOW -0 ="0 " 0 -0.0471809055 ="0.0471809055 " 0.0471809055
-0.0943618111 ="0.0943618111 " 0.0943618111 -0.1415427166 ="0.1415427166 " 0.1415427166
-0.1887236222 ="0.1887236222 " 0.1887236222 -HIGH="0.2359045277 " ;
NOTE: Format F6_ has been output.
54408     +value F7_
54409     +LOW -0.0009387754 ="0.0004693877 "
54410     +0.0009387754 -0.0018775507 ="0.001408163 "
54411     +0.0018775507 -0.0028163261 ="0.0023469384 "
54412     +0.0028163261 -0.0037551014 ="0.0032857137 "
Sistema SAS
 
54413     +0.0037551014 -0.0046938768 ="0.0042244891 "
54414     +0.0046938768 -0.0056326521 ="0.0051632644 "
54415     +0.0056326521 -0.0065714275 ="0.0061020398 "
54416     +0.0065714275 -0.0075102028 ="0.0070408151 "
54417     +0.0075102028 -0.0392357075 ="0.0387663198 "
54418     +0.0392357075 -0.0709612122 ="0.0704918246 "
54419     +0.0709612122 -0.1026867169 ="0.1022173293 "
54420     +0.1026867169 -0.1344122217 ="0.133942834 "
54421     +0.1344122217 -HIGH="0.1656683387 "
54422     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -0.0009387754 ="0.0004693877 " 0.0009387754 -0.0018775507
="0.001408163 " 0.0018775507 -0.0028163261 ="0.0023469384 " 0.0028163261 -0.0037551014
="0.0032857137 " 0.0037551014 -0.0046938768 ="0.0042244891 " 0.0046938768 -0.0056326521
="0.0051632644 " 0.0056326521 -0.0065714275 ="0.0061020398 " 0.0065714275 -0.0075102028
="0.0070408151 " 0.0075102028 -0.0392357075 ="0.0387663198 " 0.0392357075 -0.0709612122
="0.0704918246 " 0.0709612122 -0.1026867169 ="0.1022173293 " 0.1026867169 -0.1344122217
="0.133942834 " 0.1344122217 -HIGH="0.1656683387 " ;
NOTE: Format F7_ has been output.
54423     +value F8_
54424     +LOW -0 ="0 "
54425     +0 -0.0719208024 ="0.0719208024 "
54426     +0.0719208024 -0.1438416049 ="0.1438416049 "
54427     +0.1438416049 -0.2157624073 ="0.2157624073 "
54428     +0.2157624073 -0.2876832098 ="0.2876832098 "
54429     +0.2876832098 -HIGH="0.3596040122 "
54430     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -0 ="0 " 0 -0.0719208024 ="0.0719208024 " 0.0719208024
-0.1438416049 ="0.1438416049 " 0.1438416049 -0.2157624073 ="0.2157624073 " 0.2157624073
-0.2876832098 ="0.2876832098 " 0.2876832098 -HIGH="0.3596040122 " ;
NOTE: Format F8_ has been output.
54431     +value F9_
54432     +LOW -0.0015320254 ="0.0007660127 "
54433     +0.0015320254 -0.0030640507 ="0.002298038 "
54434     +0.0030640507 -0.0045960761 ="0.0038300634 "
54435     +0.0045960761 -0.0061281014 ="0.0053620887 "
54436     +0.0061281014 -0.0076601268 ="0.0068941141 "
54437     +0.0076601268 -0.0091921521 ="0.0084261394 "
54438     +0.0091921521 -0.0107241775 ="0.0099581648 "
54439     +0.0107241775 -0.0122562028 ="0.0114901901 "
54440     +0.0122562028 -0.0644165379 ="0.0636505252 "
54441     +0.0644165379 -0.1165768729 ="0.1158108603 "
54442     +0.1165768729 -0.168737208 ="0.1679711953 "
54443     +0.168737208 -0.2208975431 ="0.2201315304 "
54444     +0.2208975431 -HIGH="0.2722918655 "
54445     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -0.0015320254 ="0.0007660127 " 0.0015320254 -0.0030640507
="0.002298038 " 0.0030640507 -0.0045960761 ="0.0038300634 " 0.0045960761 -0.0061281014
="0.0053620887 " 0.0061281014 -0.0076601268 ="0.0068941141 " 0.0076601268 -0.0091921521
="0.0084261394 " 0.0091921521 -0.0107241775 ="0.0099581648 " 0.0107241775 -0.0122562028
="0.0114901901 " 0.0122562028 -0.0644165379 ="0.0636505252 " 0.0644165379 -0.1165768729
="0.1158108603 " 0.1165768729 -0.168737208 ="0.1679711953 " 0.168737208 -0.2208975431
="0.2201315304 " 0.2208975431 -HIGH="0.2722918655 " ;
NOTE: Format F9_ has been output.
54446     +value F10_
54447     +LOW -0 ="0 "
54448     +0 -0.0626312054 ="0.0626312054 "
54449     +0.0626312054 -0.1252624109 ="0.1252624109 "
54450     +0.1252624109 -0.1878936163 ="0.1878936163 "
Sistema SAS
 
54451     +0.1878936163 -0.2505248217 ="0.2505248217 "
54452     +0.2505248217 -HIGH="0.3131560271 "
54453     +;
MPRINT(VAR_PROFILE):   value F10_ LOW -0 ="0 " 0 -0.0626312054 ="0.0626312054 " 0.0626312054
-0.1252624109 ="0.1252624109 " 0.1252624109 -0.1878936163 ="0.1878936163 " 0.1878936163
-0.2505248217 ="0.2505248217 " 0.2505248217 -HIGH="0.3131560271 " ;
NOTE: Format F10_ has been output.
54454     +value F11_
54455     +LOW -0.0022771848 ="0.0011385924 "
54456     +0.0022771848 -0.0045543696 ="0.0034157772 "
54457     +0.0045543696 -0.0068315544 ="0.005692962 "
54458     +0.0068315544 -0.0091087392 ="0.0079701468 "
54459     +0.0091087392 -0.011385924 ="0.0102473316 "
54460     +0.011385924 -0.0136631087 ="0.0125245164 "
54461     +0.0136631087 -0.0159402935 ="0.0148017011 "
54462     +0.0159402935 -0.0182174783 ="0.0170788859 "
54463     +0.0182174783 -0.0590544741 ="0.0579158817 "
54464     +0.0590544741 -0.0998914699 ="0.0987528775 "
54465     +0.0998914699 -0.1407284657 ="0.1395898733 "
54466     +0.1407284657 -0.1815654615 ="0.1804268691 "
54467     +0.1815654615 -HIGH="0.2212638649 "
54468     +;
MPRINT(VAR_PROFILE):   value F11_ LOW -0.0022771848 ="0.0011385924 " 0.0022771848 -0.0045543696
="0.0034157772 " 0.0045543696 -0.0068315544 ="0.005692962 " 0.0068315544 -0.0091087392
="0.0079701468 " 0.0091087392 -0.011385924 ="0.0102473316 " 0.011385924 -0.0136631087
="0.0125245164 " 0.0136631087 -0.0159402935 ="0.0148017011 " 0.0159402935 -0.0182174783
="0.0170788859 " 0.0182174783 -0.0590544741 ="0.0579158817 " 0.0590544741 -0.0998914699
="0.0987528775 " 0.0998914699 -0.1407284657 ="0.1395898733 " 0.1407284657 -0.1815654615
="0.1804268691 " 0.1815654615 -HIGH="0.2212638649 " ;
NOTE: Format F11_ has been output.
54469     +value F12_
54470     +LOW -0 ="0 "
54471     +0 -0.0314949582 ="0.0314949582 "
54472     +0.0314949582 -0.0629899163 ="0.0629899163 "
54473     +0.0629899163 -0.0944848745 ="0.0944848745 "
54474     +0.0944848745 -0.1259798327 ="0.1259798327 "
54475     +0.1259798327 -HIGH="0.1574747909 "
54476     +;
MPRINT(VAR_PROFILE):   value F12_ LOW -0 ="0 " 0 -0.0314949582 ="0.0314949582 " 0.0314949582
-0.0629899163 ="0.0629899163 " 0.0629899163 -0.0944848745 ="0.0944848745 " 0.0944848745
-0.1259798327 ="0.1259798327 " 0.1259798327 -HIGH="0.1574747909 " ;
NOTE: Format F12_ has been output.
54477     +value F13_
54478     +LOW -0 ="0 "
54479     +0 -0.0524963135 ="0.0524963135 "
54480     +0.0524963135 -0.1049926269 ="0.1049926269 "
54481     +0.1049926269 -0.1574889404 ="0.1574889404 "
54482     +0.1574889404 -0.2099852539 ="0.2099852539 "
54483     +0.2099852539 -HIGH="0.2624815674 "
54484     +;
MPRINT(VAR_PROFILE):   value F13_ LOW -0 ="0 " 0 -0.0524963135 ="0.0524963135 " 0.0524963135
-0.1049926269 ="0.1049926269 " 0.1049926269 -0.1574889404 ="0.1574889404 " 0.1574889404
-0.2099852539 ="0.2099852539 " 0.2099852539 -HIGH="0.2624815674 " ;
NOTE: Format F13_ has been output.
54485     +value F14_
54486     +LOW -0 ="0 "
54487     +0 -0.0442335097 ="0.0442335097 "
54488     +0.0442335097 -0.0884670195 ="0.0884670195 "
Sistema SAS
 
54489     +0.0884670195 -0.1327005292 ="0.1327005292 "
54490     +0.1327005292 -0.176934039 ="0.176934039 "
54491     +0.176934039 -HIGH="0.2211675487 "
54492     +;
MPRINT(VAR_PROFILE):   value F14_ LOW -0 ="0 " 0 -0.0442335097 ="0.0442335097 " 0.0442335097
-0.0884670195 ="0.0884670195 " 0.0884670195 -0.1327005292 ="0.1327005292 " 0.1327005292
-0.176934039 ="0.176934039 " 0.176934039 -HIGH="0.2211675487 " ;
NOTE: Format F14_ has been output.
54493     +value F15_
54494     +LOW -0 ="0 "
54495     +0 -0.0225744901 ="0.0225744901 "
54496     +0.0225744901 -0.0451489802 ="0.0451489802 "
54497     +0.0451489802 -0.0677234702 ="0.0677234702 "
54498     +0.0677234702 -0.0902979603 ="0.0902979603 "
54499     +0.0902979603 -HIGH="0.1128724504 "
54500     +;
MPRINT(VAR_PROFILE):   value F15_ LOW -0 ="0 " 0 -0.0225744901 ="0.0225744901 " 0.0225744901
-0.0451489802 ="0.0451489802 " 0.0451489802 -0.0677234702 ="0.0677234702 " 0.0677234702
-0.0902979603 ="0.0902979603 " 0.0902979603 -HIGH="0.1128724504 " ;
NOTE: Format F15_ has been output.
54501     +value F16_
54502     +LOW -0 ="0 "
54503     +0 -0.0589278606 ="0.0589278606 "
54504     +0.0589278606 -0.1178557212 ="0.1178557212 "
54505     +0.1178557212 -0.1767835818 ="0.1767835818 "
54506     +0.1767835818 -0.2357114424 ="0.2357114424 "
54507     +0.2357114424 -HIGH="0.294639303 "
54508     +;
MPRINT(VAR_PROFILE):   value F16_ LOW -0 ="0 " 0 -0.0589278606 ="0.0589278606 " 0.0589278606
-0.1178557212 ="0.1178557212 " 0.1178557212 -0.1767835818 ="0.1767835818 " 0.1767835818
-0.2357114424 ="0.2357114424 " 0.2357114424 -HIGH="0.294639303 " ;
NOTE: Format F16_ has been output.
54509     +value F17_
54510     +LOW -0 ="0 "
54511     +0 -0.0505948877 ="0.0505948877 "
54512     +0.0505948877 -0.1011897754 ="0.1011897754 "
54513     +0.1011897754 -0.1517846631 ="0.1517846631 "
54514     +0.1517846631 -0.2023795508 ="0.2023795508 "
54515     +0.2023795508 -HIGH="0.2529744385 "
54516     +;
MPRINT(VAR_PROFILE):   value F17_ LOW -0 ="0 " 0 -0.0505948877 ="0.0505948877 " 0.0505948877
-0.1011897754 ="0.1011897754 " 0.1011897754 -0.1517846631 ="0.1517846631 " 0.1517846631
-0.2023795508 ="0.2023795508 " 0.2023795508 -HIGH="0.2529744385 " ;
NOTE: Format F17_ has been output.
54517     +value F18_
54518     +LOW -0 ="0 "
54519     +0 -0.0522727968 ="0.0522727968 "
54520     +0.0522727968 -0.1045455935 ="0.1045455935 "
54521     +0.1045455935 -0.1568183903 ="0.1568183903 "
54522     +0.1568183903 -0.209091187 ="0.209091187 "
54523     +0.209091187 -HIGH="0.2613639838 "
54524     +;
MPRINT(VAR_PROFILE):   value F18_ LOW -0 ="0 " 0 -0.0522727968 ="0.0522727968 " 0.0522727968
-0.1045455935 ="0.1045455935 " 0.1045455935 -0.1568183903 ="0.1568183903 " 0.1568183903
-0.209091187 ="0.209091187 " 0.209091187 -HIGH="0.2613639838 " ;
NOTE: Format F18_ has been output.
54525     +value F19_
54526     +LOW -0 ="0 "
Sistema SAS
 
54527     +0 -0.0560258611 ="0.0560258611 "
54528     +0.0560258611 -0.1120517221 ="0.1120517221 "
54529     +0.1120517221 -0.1680775832 ="0.1680775832 "
54530     +0.1680775832 -0.2241034442 ="0.2241034442 "
54531     +0.2241034442 -HIGH="0.2801293053 "
54532     +;
MPRINT(VAR_PROFILE):   value F19_ LOW -0 ="0 " 0 -0.0560258611 ="0.0560258611 " 0.0560258611
-0.1120517221 ="0.1120517221 " 0.1120517221 -0.1680775832 ="0.1680775832 " 0.1680775832
-0.2241034442 ="0.2241034442 " 0.2241034442 -HIGH="0.2801293053 " ;
NOTE: Format F19_ has been output.
54533     +value F20_
54534     +LOW -0 ="0 "
54535     +0 -0.0522677996 ="0.0522677996 "
54536     +0.0522677996 -0.1045355993 ="0.1045355993 "
54537     +0.1045355993 -0.1568033989 ="0.1568033989 "
54538     +0.1568033989 -0.2090711986 ="0.2090711986 "
54539     +0.2090711986 -HIGH="0.2613389982 "
54540     +;
MPRINT(VAR_PROFILE):   value F20_ LOW -0 ="0 " 0 -0.0522677996 ="0.0522677996 " 0.0522677996
-0.1045355993 ="0.1045355993 " 0.1045355993 -0.1568033989 ="0.1568033989 " 0.1568033989
-0.2090711986 ="0.2090711986 " 0.2090711986 -HIGH="0.2613389982 " ;
NOTE: Format F20_ has been output.
54541     +value F21_
54542     +LOW -0.0009656637 ="0.0004828319 "
54543     +0.0009656637 -0.0019313275 ="0.0014484956 "
54544     +0.0019313275 -0.0028969912 ="0.0024141593 "
54545     +0.0028969912 -0.0038626549 ="0.0033798231 "
54546     +0.0038626549 -0.0048283187 ="0.0043454868 "
54547     +0.0048283187 -0.0057939824 ="0.0053111506 "
54548     +0.0057939824 -0.0067596462 ="0.0062768143 "
54549     +0.0067596462 -0.0077253099 ="0.007242478 "
54550     +0.0077253099 -0.0348265322 ="0.0343437003 "
54551     +0.0348265322 -0.0619277544 ="0.0614449226 "
54552     +0.0619277544 -0.0890289767 ="0.0885461448 "
54553     +0.0890289767 -0.116130199 ="0.1156473671 "
54554     +0.116130199 -HIGH="0.1427485894 "
54555     +;
MPRINT(VAR_PROFILE):   value F21_ LOW -0.0009656637 ="0.0004828319 " 0.0009656637 -0.0019313275
="0.0014484956 " 0.0019313275 -0.0028969912 ="0.0024141593 " 0.0028969912 -0.0038626549
="0.0033798231 " 0.0038626549 -0.0048283187 ="0.0043454868 " 0.0048283187 -0.0057939824
="0.0053111506 " 0.0057939824 -0.0067596462 ="0.0062768143 " 0.0067596462 -0.0077253099
="0.007242478 " 0.0077253099 -0.0348265322 ="0.0343437003 " 0.0348265322 -0.0619277544
="0.0614449226 " 0.0619277544 -0.0890289767 ="0.0885461448 " 0.0890289767 -0.116130199
="0.1156473671 " 0.116130199 -HIGH="0.1427485894 " ;
NOTE: Format F21_ has been output.
54556     +value F22_
54557     +LOW -0.0057539499 ="0.0028769749 "
54558     +0.0057539499 -0.0115078998 ="0.0086309248 "
54559     +0.0115078998 -0.0172618497 ="0.0143848747 "
54560     +0.0172618497 -0.0230157996 ="0.0201388246 "
54561     +0.0230157996 -0.0287697495 ="0.0258927745 "
54562     +0.0287697495 -0.0345236993 ="0.0316467244 "
54563     +0.0345236993 -0.0402776492 ="0.0374006743 "
54564     +0.0402776492 -0.0460315991 ="0.0431546242 "
54565     +0.0460315991 -0.0828568784 ="0.0799799035 "
54566     +0.0828568784 -0.1196821577 ="0.1168051828 "
54567     +0.1196821577 -0.156507437 ="0.1536304621 "
54568     +0.156507437 -0.1933327163 ="0.1904557414 "
Sistema SAS
 
54569     +0.1933327163 -HIGH="0.2272810207 "
54570     +;
MPRINT(VAR_PROFILE):   value F22_ LOW -0.0057539499 ="0.0028769749 " 0.0057539499 -0.0115078998
="0.0086309248 " 0.0115078998 -0.0172618497 ="0.0143848747 " 0.0172618497 -0.0230157996
="0.0201388246 " 0.0230157996 -0.0287697495 ="0.0258927745 " 0.0287697495 -0.0345236993
="0.0316467244 " 0.0345236993 -0.0402776492 ="0.0374006743 " 0.0402776492 -0.0460315991
="0.0431546242 " 0.0460315991 -0.0828568784 ="0.0799799035 " 0.0828568784 -0.1196821577
="0.1168051828 " 0.1196821577 -0.156507437 ="0.1536304621 " 0.156507437 -0.1933327163
="0.1904557414 " 0.1933327163 -HIGH="0.2272810207 " ;
NOTE: Format F22_ has been output.
54571     +value F23_
54572     +LOW -0.0005022074 ="0.0002511037 "
54573     +0.0005022074 -0.0010044149 ="0.0007533112 "
54574     +0.0010044149 -0.0015066223 ="0.0012555186 "
54575     +0.0015066223 -0.0020088298 ="0.001757726 "
54576     +0.0020088298 -0.0025110372 ="0.0022599335 "
54577     +0.0025110372 -0.0030132446 ="0.0027621409 "
54578     +0.0030132446 -0.0035154521 ="0.0032643484 "
54579     +0.0035154521 -0.0040176595 ="0.0037665558 "
54580     +0.0040176595 -0.0523738241 ="0.0521227204 "
54581     +0.0523738241 -0.1007299887 ="0.100478885 "
54582     +0.1007299887 -0.1490861533 ="0.1488350496 "
54583     +0.1490861533 -0.1974423179 ="0.1971912142 "
54584     +0.1974423179 -HIGH="0.2455473788 "
54585     +;
MPRINT(VAR_PROFILE):   value F23_ LOW -0.0005022074 ="0.0002511037 " 0.0005022074 -0.0010044149
="0.0007533112 " 0.0010044149 -0.0015066223 ="0.0012555186 " 0.0015066223 -0.0020088298
="0.001757726 " 0.0020088298 -0.0025110372 ="0.0022599335 " 0.0025110372 -0.0030132446
="0.0027621409 " 0.0030132446 -0.0035154521 ="0.0032643484 " 0.0035154521 -0.0040176595
="0.0037665558 " 0.0040176595 -0.0523738241 ="0.0521227204 " 0.0523738241 -0.1007299887
="0.100478885 " 0.1007299887 -0.1490861533 ="0.1488350496 " 0.1490861533 -0.1974423179
="0.1971912142 " 0.1974423179 -HIGH="0.2455473788 " ;
NOTE: Format F23_ has been output.
54586     +value F24_
54587     +LOW -0.0008705799 ="0.0004352899 "
54588     +0.0008705799 -0.0017411597 ="0.0013058698 "
54589     +0.0017411597 -0.0026117396 ="0.0021764497 "
54590     +0.0026117396 -0.0034823194 ="0.0030470295 "
54591     +0.0034823194 -0.0043528993 ="0.0039176094 "
54592     +0.0043528993 -0.0052234792 ="0.0047881892 "
54593     +0.0052234792 -0.006094059 ="0.0056587691 "
54594     +0.006094059 -0.0069646389 ="0.006529349 "
54595     +0.0069646389 -0.0734969392 ="0.0730616492 "
54596     +0.0734969392 -0.1400292394 ="0.1395939495 "
54597     +0.1400292394 -0.2065615397 ="0.2061262498 "
54598     +0.2065615397 -0.2730938399 ="0.27265855 "
54599     +0.2730938399 -HIGH="0.3391908503 "
54600     +;
MPRINT(VAR_PROFILE):   value F24_ LOW -0.0008705799 ="0.0004352899 " 0.0008705799 -0.0017411597
="0.0013058698 " 0.0017411597 -0.0026117396 ="0.0021764497 " 0.0026117396 -0.0034823194
="0.0030470295 " 0.0034823194 -0.0043528993 ="0.0039176094 " 0.0043528993 -0.0052234792
="0.0047881892 " 0.0052234792 -0.006094059 ="0.0056587691 " 0.006094059 -0.0069646389
="0.006529349 " 0.0069646389 -0.0734969392 ="0.0730616492 " 0.0734969392 -0.1400292394
="0.1395939495 " 0.1400292394 -0.2065615397 ="0.2061262498 " 0.2065615397 -0.2730938399
="0.27265855 " 0.2730938399 -HIGH="0.3391908503 " ;
NOTE: Format F24_ has been output.
54601     +value F25_
54602     +LOW -0 ="0 "
Sistema SAS
 
54603     +0 -0.0428076936 ="0.0428076936 "
54604     +0.0428076936 -0.0856153873 ="0.0856153873 "
54605     +0.0856153873 -0.1284230809 ="0.1284230809 "
54606     +0.1284230809 -0.1712307745 ="0.1712307745 "
54607     +0.1712307745 -HIGH="0.2140384681 "
54608     +;
MPRINT(VAR_PROFILE):   value F25_ LOW -0 ="0 " 0 -0.0428076936 ="0.0428076936 " 0.0428076936
-0.0856153873 ="0.0856153873 " 0.0856153873 -0.1284230809 ="0.1284230809 " 0.1284230809
-0.1712307745 ="0.1712307745 " 0.1712307745 -HIGH="0.2140384681 " ;
NOTE: Format F25_ has been output.
54609     +value F26_
54610     +LOW -0 ="0 "
54611     +0 -0.0692240062 ="0.0692240062 "
54612     +0.0692240062 -0.1384480123 ="0.1384480123 "
54613     +0.1384480123 -0.2076720185 ="0.2076720185 "
54614     +0.2076720185 -0.2768960246 ="0.2768960246 "
54615     +0.2768960246 -HIGH="0.3461200308 "
54616     +;
MPRINT(VAR_PROFILE):   value F26_ LOW -0 ="0 " 0 -0.0692240062 ="0.0692240062 " 0.0692240062
-0.1384480123 ="0.1384480123 " 0.1384480123 -0.2076720185 ="0.2076720185 " 0.2076720185
-0.2768960246 ="0.2768960246 " 0.2768960246 -HIGH="0.3461200308 " ;
NOTE: Format F26_ has been output.
54617     +value F27_
54618     +LOW -0 ="0 "
54619     +0 -0.0600802709 ="0.0600802709 "
54620     +0.0600802709 -0.1201605418 ="0.1201605418 "
54621     +0.1201605418 -0.1802408126 ="0.1802408126 "
54622     +0.1802408126 -0.2403210835 ="0.2403210835 "
54623     +0.2403210835 -HIGH="0.3004013544 "
54624     +;
MPRINT(VAR_PROFILE):   value F27_ LOW -0 ="0 " 0 -0.0600802709 ="0.0600802709 " 0.0600802709
-0.1201605418 ="0.1201605418 " 0.1201605418 -0.1802408126 ="0.1802408126 " 0.1802408126
-0.2403210835 ="0.2403210835 " 0.2403210835 -HIGH="0.3004013544 " ;
NOTE: Format F27_ has been output.
54625     +value F28_
54626     +LOW -0.0031482546 ="0.0015741273 "
54627     +0.0031482546 -0.0062965093 ="0.004722382 "
54628     +0.0062965093 -0.0094447639 ="0.0078706366 "
54629     +0.0094447639 -0.0125930185 ="0.0110188912 "
54630     +0.0125930185 -0.0157412732 ="0.0141671459 "
54631     +0.0157412732 -0.0188895278 ="0.0173154005 "
54632     +0.0188895278 -0.0220377824 ="0.0204636551 "
54633     +0.0220377824 -0.0251860371 ="0.0236119098 "
54634     +0.0251860371 -0.0729537247 ="0.0713795973 "
54635     +0.0729537247 -0.1207214123 ="0.1191472849 "
54636     +0.1207214123 -0.1684890998 ="0.1669149725 "
54637     +0.1684890998 -0.2162567874 ="0.2146826601 "
54638     +0.2162567874 -HIGH="0.2624503477 "
54639     +;
MPRINT(VAR_PROFILE):   value F28_ LOW -0.0031482546 ="0.0015741273 " 0.0031482546 -0.0062965093
="0.004722382 " 0.0062965093 -0.0094447639 ="0.0078706366 " 0.0094447639 -0.0125930185
="0.0110188912 " 0.0125930185 -0.0157412732 ="0.0141671459 " 0.0157412732 -0.0188895278
="0.0173154005 " 0.0188895278 -0.0220377824 ="0.0204636551 " 0.0220377824 -0.0251860371
="0.0236119098 " 0.0251860371 -0.0729537247 ="0.0713795973 " 0.0729537247 -0.1207214123
="0.1191472849 " 0.1207214123 -0.1684890998 ="0.1669149725 " 0.1684890998 -0.2162567874
="0.2146826601 " 0.2162567874 -HIGH="0.2624503477 " ;
NOTE: Format F28_ has been output.
54640     +value F29_
Sistema SAS
 
54641     +LOW -0.0011933884 ="0.0005966942 "
54642     +0.0011933884 -0.0023867768 ="0.0017900826 "
54643     +0.0023867768 -0.0035801652 ="0.002983471 "
54644     +0.0035801652 -0.0047735536 ="0.0041768594 "
54645     +0.0047735536 -0.005966942 ="0.0053702478 "
54646     +0.005966942 -0.0071603303 ="0.0065636361 "
54647     +0.0071603303 -0.0083537187 ="0.0077570245 "
54648     +0.0083537187 -0.0095471071 ="0.0089504129 "
54649     +0.0095471071 -0.0683020059 ="0.0677053117 "
54650     +0.0683020059 -0.1270569047 ="0.1264602106 "
54651     +0.1270569047 -0.1858118036 ="0.1852151094 "
54652     +0.1858118036 -0.2445667024 ="0.2439700082 "
54653     +0.2445667024 -HIGH="0.302724907 "
54654     +;
MPRINT(VAR_PROFILE):   value F29_ LOW -0.0011933884 ="0.0005966942 " 0.0011933884 -0.0023867768
="0.0017900826 " 0.0023867768 -0.0035801652 ="0.002983471 " 0.0035801652 -0.0047735536
="0.0041768594 " 0.0047735536 -0.005966942 ="0.0053702478 " 0.005966942 -0.0071603303
="0.0065636361 " 0.0071603303 -0.0083537187 ="0.0077570245 " 0.0083537187 -0.0095471071
="0.0089504129 " 0.0095471071 -0.0683020059 ="0.0677053117 " 0.0683020059 -0.1270569047
="0.1264602106 " 0.1270569047 -0.1858118036 ="0.1852151094 " 0.1858118036 -0.2445667024
="0.2439700082 " 0.2445667024 -HIGH="0.302724907 " ;
NOTE: Format F29_ has been output.
54655     +value F30_
54656     +LOW -0 ="0 "
54657     +0 -0.0311639496 ="0.0311639496 "
54658     +0.0311639496 -0.0623278993 ="0.0623278993 "
54659     +0.0623278993 -0.0934918489 ="0.0934918489 "
54660     +0.0934918489 -0.1246557985 ="0.1246557985 "
54661     +0.1246557985 -HIGH="0.1558197481 "
54662     +;
MPRINT(VAR_PROFILE):   value F30_ LOW -0 ="0 " 0 -0.0311639496 ="0.0311639496 " 0.0311639496
-0.0623278993 ="0.0623278993 " 0.0623278993 -0.0934918489 ="0.0934918489 " 0.0934918489
-0.1246557985 ="0.1246557985 " 0.1246557985 -HIGH="0.1558197481 " ;
NOTE: Format F30_ has been output.
54663     +value F31_
54664     +LOW -0.0027716464 ="0.0013858232 "
54665     +0.0027716464 -0.0055432927 ="0.0041574696 "
54666     +0.0055432927 -0.0083149391 ="0.0069291159 "
54667     +0.0083149391 -0.0110865855 ="0.0097007623 "
54668     +0.0110865855 -0.0138582319 ="0.0124724087 "
54669     +0.0138582319 -0.0166298782 ="0.015244055 "
54670     +0.0166298782 -0.0194015246 ="0.0180157014 "
54671     +0.0194015246 -0.022173171 ="0.0207873478 "
54672     +0.022173171 -0.0947745567 ="0.0933887335 "
54673     +0.0947745567 -0.1673759425 ="0.1659901193 "
54674     +0.1673759425 -0.2399773282 ="0.2385915051 "
54675     +0.2399773282 -0.312578714 ="0.3111928908 "
54676     +0.312578714 -HIGH="0.3837942766 "
54677     +;
MPRINT(VAR_PROFILE):   value F31_ LOW -0.0027716464 ="0.0013858232 " 0.0027716464 -0.0055432927
="0.0041574696 " 0.0055432927 -0.0083149391 ="0.0069291159 " 0.0083149391 -0.0110865855
="0.0097007623 " 0.0110865855 -0.0138582319 ="0.0124724087 " 0.0138582319 -0.0166298782
="0.015244055 " 0.0166298782 -0.0194015246 ="0.0180157014 " 0.0194015246 -0.022173171
="0.0207873478 " 0.022173171 -0.0947745567 ="0.0933887335 " 0.0947745567 -0.1673759425
="0.1659901193 " 0.1673759425 -0.2399773282 ="0.2385915051 " 0.2399773282 -0.312578714
="0.3111928908 " 0.312578714 -HIGH="0.3837942766 " ;
NOTE: Format F31_ has been output.
54678     +value F32_
Sistema SAS
 
54679     +LOW -0 ="0 "
54680     +0 -0.0449853164 ="0.0449853164 "
54681     +0.0449853164 -0.0899706328 ="0.0899706328 "
54682     +0.0899706328 -0.1349559492 ="0.1349559492 "
54683     +0.1349559492 -0.1799412656 ="0.1799412656 "
54684     +0.1799412656 -HIGH="0.224926582 "
54685     +;
MPRINT(VAR_PROFILE):   value F32_ LOW -0 ="0 " 0 -0.0449853164 ="0.0449853164 " 0.0449853164
-0.0899706328 ="0.0899706328 " 0.0899706328 -0.1349559492 ="0.1349559492 " 0.1349559492
-0.1799412656 ="0.1799412656 " 0.1799412656 -HIGH="0.224926582 " ;
NOTE: Format F32_ has been output.
54686     +value F33_
54687     +LOW -0.0061906102 ="0.0030953051 "
54688     +0.0061906102 -0.0123812203 ="0.0092859153 "
54689     +0.0123812203 -0.0185718305 ="0.0154765254 "
54690     +0.0185718305 -0.0247624407 ="0.0216671356 "
54691     +0.0247624407 -0.0309530508 ="0.0278577458 "
54692     +0.0309530508 -0.037143661 ="0.0340483559 "
54693     +0.037143661 -0.0433342712 ="0.0402389661 "
54694     +0.0433342712 -0.0495248813 ="0.0464295763 "
54695     +0.0495248813 -0.1386696677 ="0.1355743627 "
54696     +0.1386696677 -0.2278144541 ="0.2247191491 "
54697     +0.2278144541 -0.3169592406 ="0.3138639355 "
54698     +0.3169592406 -0.406104027 ="0.4030087219 "
54699     +0.406104027 -0.4952488134 ="0.4921535083 "
54700     +;
MPRINT(VAR_PROFILE):   value F33_ LOW -0.0061906102 ="0.0030953051 " 0.0061906102 -0.0123812203
="0.0092859153 " 0.0123812203 -0.0185718305 ="0.0154765254 " 0.0185718305 -0.0247624407
="0.0216671356 " 0.0247624407 -0.0309530508 ="0.0278577458 " 0.0309530508 -0.037143661
="0.0340483559 " 0.037143661 -0.0433342712 ="0.0402389661 " 0.0433342712 -0.0495248813
="0.0464295763 " 0.0495248813 -0.1386696677 ="0.1355743627 " 0.1386696677 -0.2278144541
="0.2247191491 " 0.2278144541 -0.3169592406 ="0.3138639355 " 0.3169592406 -0.406104027
="0.4030087219 " 0.406104027 -0.4952488134 ="0.4921535083 " ;
NOTE: Format F33_ has been output.
54701     +value F34_
54702     +LOW -0 ="0 "
54703     +0 -0.0228416739 ="0.0228416739 "
54704     +0.0228416739 -0.0456833477 ="0.0456833477 "
54705     +0.0456833477 -0.0685250216 ="0.0685250216 "
54706     +0.0685250216 -0.0913666955 ="0.0913666955 "
54707     +0.0913666955 -HIGH="0.1142083693 "
54708     +;
MPRINT(VAR_PROFILE):   value F34_ LOW -0 ="0 " 0 -0.0228416739 ="0.0228416739 " 0.0228416739
-0.0456833477 ="0.0456833477 " 0.0456833477 -0.0685250216 ="0.0685250216 " 0.0685250216
-0.0913666955 ="0.0913666955 " 0.0913666955 -HIGH="0.1142083693 " ;
NOTE: Format F34_ has been output.
54709     +value F35_
54710     +LOW -0.0003067379 ="0.0001533689 "
54711     +0.0003067379 -0.0006134757 ="0.0004601068 "
54712     +0.0006134757 -0.0009202136 ="0.0007668447 "
54713     +0.0009202136 -0.0012269515 ="0.0010735825 "
54714     +0.0012269515 -0.0015336893 ="0.0013803204 "
54715     +0.0015336893 -0.0018404272 ="0.0016870583 "
54716     +0.0018404272 -0.0021471651 ="0.0019937961 "
54717     +0.0021471651 -0.0024539029 ="0.002300534 "
54718     +0.0024539029 -0.0337782827 ="0.0336249138 "
54719     +0.0337782827 -0.0651026624 ="0.0649492935 "
54720     +0.0651026624 -0.0964270422 ="0.0962736733 "
Sistema SAS
 
54721     +0.0964270422 -0.127751422 ="0.127598053 "
54722     +0.127751422 -HIGH="0.1589224328 "
54723     +;
MPRINT(VAR_PROFILE):   value F35_ LOW -0.0003067379 ="0.0001533689 " 0.0003067379 -0.0006134757
="0.0004601068 " 0.0006134757 -0.0009202136 ="0.0007668447 " 0.0009202136 -0.0012269515
="0.0010735825 " 0.0012269515 -0.0015336893 ="0.0013803204 " 0.0015336893 -0.0018404272
="0.0016870583 " 0.0018404272 -0.0021471651 ="0.0019937961 " 0.0021471651 -0.0024539029
="0.002300534 " 0.0024539029 -0.0337782827 ="0.0336249138 " 0.0337782827 -0.0651026624
="0.0649492935 " 0.0651026624 -0.0964270422 ="0.0962736733 " 0.0964270422 -0.127751422
="0.127598053 " 0.127751422 -HIGH="0.1589224328 " ;
NOTE: Format F35_ has been output.
54724     +value F36_
54725     +LOW -0 ="0 "
54726     +0 -0.0164470175 ="0.0164470175 "
54727     +0.0164470175 -0.0328940349 ="0.0328940349 "
54728     +0.0328940349 -0.0493410524 ="0.0493410524 "
54729     +0.0493410524 -0.0657880698 ="0.0657880698 "
54730     +0.0657880698 -HIGH="0.0822350873 "
54731     +;
MPRINT(VAR_PROFILE):   value F36_ LOW -0 ="0 " 0 -0.0164470175 ="0.0164470175 " 0.0164470175
-0.0328940349 ="0.0328940349 " 0.0328940349 -0.0493410524 ="0.0493410524 " 0.0493410524
-0.0657880698 ="0.0657880698 " 0.0657880698 -HIGH="0.0822350873 " ;
NOTE: Format F36_ has been output.
54732     +value F37_
54733     +LOW -0.0004289557 ="0.0002144778 "
54734     +0.0004289557 -0.0008579113 ="0.0006434335 "
54735     +0.0008579113 -0.001286867 ="0.0010723892 "
54736     +0.001286867 -0.0017158227 ="0.0015013448 "
54737     +0.0017158227 -0.0021447783 ="0.0019303005 "
54738     +0.0021447783 -0.002573734 ="0.0023592562 "
54739     +0.002573734 -0.0030026897 ="0.0027882118 "
54740     +0.0030026897 -0.0034316454 ="0.0032171675 "
54741     +0.0034316454 -0.0695058473 ="0.0692913695 "
54742     +0.0695058473 -0.1355800493 ="0.1353655714 "
54743     +0.1355800493 -0.2016542512 ="0.2014397734 "
54744     +0.2016542512 -0.2677284532 ="0.2675139754 "
54745     +0.2677284532 -HIGH="0.3335881773 "
54746     +;
MPRINT(VAR_PROFILE):   value F37_ LOW -0.0004289557 ="0.0002144778 " 0.0004289557 -0.0008579113
="0.0006434335 " 0.0008579113 -0.001286867 ="0.0010723892 " 0.001286867 -0.0017158227
="0.0015013448 " 0.0017158227 -0.0021447783 ="0.0019303005 " 0.0021447783 -0.002573734
="0.0023592562 " 0.002573734 -0.0030026897 ="0.0027882118 " 0.0030026897 -0.0034316454
="0.0032171675 " 0.0034316454 -0.0695058473 ="0.0692913695 " 0.0695058473 -0.1355800493
="0.1353655714 " 0.1355800493 -0.2016542512 ="0.2014397734 " 0.2016542512 -0.2677284532
="0.2675139754 " 0.2677284532 -HIGH="0.3335881773 " ;
NOTE: Format F37_ has been output.
54747     +value F38_
54748     +LOW -0.0013151947 ="0.0006575973 "
54749     +0.0013151947 -0.0026303893 ="0.001972792 "
54750     +0.0026303893 -0.003945584 ="0.0032879866 "
54751     +0.003945584 -0.0052607786 ="0.0046031813 "
54752     +0.0052607786 -0.0065759733 ="0.0059183759 "
54753     +0.0065759733 -0.0078911679 ="0.0072335706 "
54754     +0.0078911679 -0.0092063626 ="0.0085487652 "
54755     +0.0092063626 -0.0105215572 ="0.0098639599 "
54756     +0.0105215572 -0.027282141 ="0.0266245437 "
54757     +0.027282141 -0.0440427248 ="0.0433851275 "
54758     +0.0440427248 -0.0608033087 ="0.0601457113 "
Sistema SAS
 
54759     +0.0608033087 -0.0775638925 ="0.0769062951 "
54760     +0.0775638925 -0.0943244763 ="0.0936668789 "
54761     +;
MPRINT(VAR_PROFILE):   value F38_ LOW -0.0013151947 ="0.0006575973 " 0.0013151947 -0.0026303893
="0.001972792 " 0.0026303893 -0.003945584 ="0.0032879866 " 0.003945584 -0.0052607786
="0.0046031813 " 0.0052607786 -0.0065759733 ="0.0059183759 " 0.0065759733 -0.0078911679
="0.0072335706 " 0.0078911679 -0.0092063626 ="0.0085487652 " 0.0092063626 -0.0105215572
="0.0098639599 " 0.0105215572 -0.027282141 ="0.0266245437 " 0.027282141 -0.0440427248
="0.0433851275 " 0.0440427248 -0.0608033087 ="0.0601457113 " 0.0608033087 -0.0775638925
="0.0769062951 " 0.0775638925 -0.0943244763 ="0.0936668789 " ;
NOTE: Format F38_ has been output.
54762     +value F39_
54763     +LOW -0 ="0 "
54764     +0 -0.0422674344 ="0.0422674344 "
54765     +0.0422674344 -0.0845348689 ="0.0845348689 "
54766     +0.0845348689 -0.1268023033 ="0.1268023033 "
54767     +0.1268023033 -0.1690697377 ="0.1690697377 "
54768     +0.1690697377 -HIGH="0.2113371721 "
54769     +;
MPRINT(VAR_PROFILE):   value F39_ LOW -0 ="0 " 0 -0.0422674344 ="0.0422674344 " 0.0422674344
-0.0845348689 ="0.0845348689 " 0.0845348689 -0.1268023033 ="0.1268023033 " 0.1268023033
-0.1690697377 ="0.1690697377 " 0.1690697377 -HIGH="0.2113371721 " ;
NOTE: Format F39_ has been output.
54770     +value F40_
54771     +LOW -0 ="0 "
54772     +0 -0.0378587728 ="0.0378587728 "
54773     +0.0378587728 -0.0757175457 ="0.0757175457 "
54774     +0.0757175457 -0.1135763185 ="0.1135763185 "
54775     +0.1135763185 -0.1514350914 ="0.1514350914 "
54776     +0.1514350914 -HIGH="0.1892938642 "
54777     +;
MPRINT(VAR_PROFILE):   value F40_ LOW -0 ="0 " 0 -0.0378587728 ="0.0378587728 " 0.0378587728
-0.0757175457 ="0.0757175457 " 0.0757175457 -0.1135763185 ="0.1135763185 " 0.1135763185
-0.1514350914 ="0.1514350914 " 0.1514350914 -HIGH="0.1892938642 " ;
NOTE: Format F40_ has been output.
54778     +value F41_
54779     +LOW -0 ="0 "
54780     +0 -0.0384785865 ="0.0384785865 "
54781     +0.0384785865 -0.076957173 ="0.076957173 "
54782     +0.076957173 -0.1154357595 ="0.1154357595 "
54783     +0.1154357595 -0.153914346 ="0.153914346 "
54784     +0.153914346 -HIGH="0.1923929325 "
54785     +;
MPRINT(VAR_PROFILE):   value F41_ LOW -0 ="0 " 0 -0.0384785865 ="0.0384785865 " 0.0384785865
-0.076957173 ="0.076957173 " 0.076957173 -0.1154357595 ="0.1154357595 " 0.1154357595 -0.153914346
="0.153914346 " 0.153914346 -HIGH="0.1923929325 " ;
NOTE: Format F41_ has been output.
54786     +value F42_
54787     +LOW -0 ="0 "
54788     +0 -0.0575980056 ="0.0575980056 "
54789     +0.0575980056 -0.1151960113 ="0.1151960113 "
54790     +0.1151960113 -0.1727940169 ="0.1727940169 "
54791     +0.1727940169 -0.2303920226 ="0.2303920226 "
54792     +0.2303920226 -HIGH="0.2879900282 "
54793     +;
MPRINT(VAR_PROFILE):   value F42_ LOW -0 ="0 " 0 -0.0575980056 ="0.0575980056 " 0.0575980056
-0.1151960113 ="0.1151960113 " 0.1151960113 -0.1727940169 ="0.1727940169 " 0.1727940169
-0.2303920226 ="0.2303920226 " 0.2303920226 -HIGH="0.2879900282 " ;
Sistema SAS
 
NOTE: Format F42_ has been output.
54794     +value F43_
54795     +LOW -0.0018855556 ="0.0009427778 "
54796     +0.0018855556 -0.0037711111 ="0.0028283334 "
54797     +0.0037711111 -0.0056566667 ="0.0047138889 "
54798     +0.0056566667 -0.0075422223 ="0.0065994445 "
54799     +0.0075422223 -0.0094277778 ="0.0084850001 "
54800     +0.0094277778 -0.0113133334 ="0.0103705556 "
54801     +0.0113133334 -0.013198889 ="0.0122561112 "
54802     +0.013198889 -0.0150844445 ="0.0141416668 "
54803     +0.0150844445 -0.040755445 ="0.0398126672 "
54804     +0.040755445 -0.0664264455 ="0.0654836677 "
54805     +0.0664264455 -0.0920974459 ="0.0911546681 "
54806     +0.0920974459 -0.1177684464 ="0.1168256686 "
54807     +0.1177684464 -HIGH="0.142496669 "
54808     +;
MPRINT(VAR_PROFILE):   value F43_ LOW -0.0018855556 ="0.0009427778 " 0.0018855556 -0.0037711111
="0.0028283334 " 0.0037711111 -0.0056566667 ="0.0047138889 " 0.0056566667 -0.0075422223
="0.0065994445 " 0.0075422223 -0.0094277778 ="0.0084850001 " 0.0094277778 -0.0113133334
="0.0103705556 " 0.0113133334 -0.013198889 ="0.0122561112 " 0.013198889 -0.0150844445
="0.0141416668 " 0.0150844445 -0.040755445 ="0.0398126672 " 0.040755445 -0.0664264455
="0.0654836677 " 0.0664264455 -0.0920974459 ="0.0911546681 " 0.0920974459 -0.1177684464
="0.1168256686 " 0.1177684464 -HIGH="0.142496669 " ;
NOTE: Format F43_ has been output.
54809     +value F44_
54810     +LOW -0 ="0 "
54811     +0 -0.0223471923 ="0.0223471923 "
54812     +0.0223471923 -0.0446943846 ="0.0446943846 "
54813     +0.0446943846 -0.0670415769 ="0.0670415769 "
54814     +0.0670415769 -0.0893887692 ="0.0893887692 "
54815     +0.0893887692 -HIGH="0.1117359615 "
54816     +;
MPRINT(VAR_PROFILE):   value F44_ LOW -0 ="0 " 0 -0.0223471923 ="0.0223471923 " 0.0223471923
-0.0446943846 ="0.0446943846 " 0.0446943846 -0.0670415769 ="0.0670415769 " 0.0670415769
-0.0893887692 ="0.0893887692 " 0.0893887692 -HIGH="0.1117359615 " ;
NOTE: Format F44_ has been output.
54817     +value F45_
54818     +LOW -0.005412828 ="0.002706414 "
54819     +0.005412828 -0.0108256559 ="0.0081192419 "
54820     +0.0108256559 -0.0162384839 ="0.0135320699 "
54821     +0.0162384839 -0.0216513118 ="0.0189448978 "
54822     +0.0216513118 -0.0270641398 ="0.0243577258 "
54823     +0.0270641398 -0.0324769677 ="0.0297705537 "
54824     +0.0324769677 -0.0378897957 ="0.0351833817 "
54825     +0.0378897957 -0.0433026236 ="0.0405962096 "
54826     +0.0433026236 -0.1028125761 ="0.1001061621 "
54827     +0.1028125761 -0.1623225286 ="0.1596161146 "
54828     +0.1623225286 -0.221832481 ="0.2191260671 "
54829     +0.221832481 -0.2813424335 ="0.2786360195 "
54830     +0.2813424335 -HIGH="0.338145972 "
54831     +;
MPRINT(VAR_PROFILE):   value F45_ LOW -0.005412828 ="0.002706414 " 0.005412828 -0.0108256559
="0.0081192419 " 0.0108256559 -0.0162384839 ="0.0135320699 " 0.0162384839 -0.0216513118
="0.0189448978 " 0.0216513118 -0.0270641398 ="0.0243577258 " 0.0270641398 -0.0324769677
="0.0297705537 " 0.0324769677 -0.0378897957 ="0.0351833817 " 0.0378897957 -0.0433026236
="0.0405962096 " 0.0433026236 -0.1028125761 ="0.1001061621 " 0.1028125761 -0.1623225286
="0.1596161146 " 0.1623225286 -0.221832481 ="0.2191260671 " 0.221832481 -0.2813424335
="0.2786360195 " 0.2813424335 -HIGH="0.338145972 " ;
Sistema SAS
 
NOTE: Format F45_ has been output.
54832     +value F46_
54833     +LOW -0.006628513 ="0.0033142565 "
54834     +0.006628513 -0.0132570259 ="0.0099427695 "
54835     +0.0132570259 -0.0198855389 ="0.0165712824 "
54836     +0.0198855389 -0.0265140519 ="0.0231997954 "
54837     +0.0265140519 -0.0331425648 ="0.0298283084 "
54838     +0.0331425648 -0.0397710778 ="0.0364568213 "
54839     +0.0397710778 -0.0463995908 ="0.0430853343 "
54840     +0.0463995908 -0.0530281038 ="0.0497138473 "
54841     +0.0530281038 -0.1012831474 ="0.0979688909 "
54842     +0.1012831474 -0.149538191 ="0.1462239345 "
54843     +0.149538191 -0.1977932346 ="0.1944789781 "
54844     +0.1977932346 -0.2460482782 ="0.2427340217 "
54845     +0.2460482782 -HIGH="0.2909890653 "
54846     +;
MPRINT(VAR_PROFILE):   value F46_ LOW -0.006628513 ="0.0033142565 " 0.006628513 -0.0132570259
="0.0099427695 " 0.0132570259 -0.0198855389 ="0.0165712824 " 0.0198855389 -0.0265140519
="0.0231997954 " 0.0265140519 -0.0331425648 ="0.0298283084 " 0.0331425648 -0.0397710778
="0.0364568213 " 0.0397710778 -0.0463995908 ="0.0430853343 " 0.0463995908 -0.0530281038
="0.0497138473 " 0.0530281038 -0.1012831474 ="0.0979688909 " 0.1012831474 -0.149538191
="0.1462239345 " 0.149538191 -0.1977932346 ="0.1944789781 " 0.1977932346 -0.2460482782
="0.2427340217 " 0.2460482782 -HIGH="0.2909890653 " ;
NOTE: Format F46_ has been output.
54847     +value F47_
54848     +LOW -0 ="0 "
54849     +0 -0.0654498755 ="0.0654498755 "
54850     +0.0654498755 -0.1308997509 ="0.1308997509 "
54851     +0.1308997509 -0.1963496264 ="0.1963496264 "
54852     +0.1963496264 -0.2617995019 ="0.2617995019 "
54853     +0.2617995019 -HIGH="0.3272493774 "
54854     +;
MPRINT(VAR_PROFILE):   value F47_ LOW -0 ="0 " 0 -0.0654498755 ="0.0654498755 " 0.0654498755
-0.1308997509 ="0.1308997509 " 0.1308997509 -0.1963496264 ="0.1963496264 " 0.1963496264
-0.2617995019 ="0.2617995019 " 0.2617995019 -HIGH="0.3272493774 " ;
NOTE: Format F47_ has been output.
54855     +value F48_
54856     +LOW -0.0031751767 ="0.0015875883 "
54857     +0.0031751767 -0.0063503533 ="0.004762765 "
54858     +0.0063503533 -0.00952553 ="0.0079379416 "
54859     +0.00952553 -0.0127007066 ="0.0111131183 "
54860     +0.0127007066 -0.0158758833 ="0.014288295 "
54861     +0.0158758833 -0.01905106 ="0.0174634716 "
54862     +0.01905106 -0.0222262366 ="0.0206386483 "
54863     +0.0222262366 -0.0254014133 ="0.0238138249 "
54864     +0.0254014133 -0.0839158816 ="0.0823282933 "
54865     +0.0839158816 -0.14243035 ="0.1408427617 "
54866     +0.14243035 -0.2009448184 ="0.1993572301 "
54867     +0.2009448184 -0.2594592868 ="0.2578716985 "
54868     +0.2594592868 -HIGH="0.3163861668 "
54869     +;
MPRINT(VAR_PROFILE):   value F48_ LOW -0.0031751767 ="0.0015875883 " 0.0031751767 -0.0063503533
="0.004762765 " 0.0063503533 -0.00952553 ="0.0079379416 " 0.00952553 -0.0127007066 ="0.0111131183
" 0.0127007066 -0.0158758833 ="0.014288295 " 0.0158758833 -0.01905106 ="0.0174634716 " 0.01905106
-0.0222262366 ="0.0206386483 " 0.0222262366 -0.0254014133 ="0.0238138249 " 0.0254014133
-0.0839158816 ="0.0823282933 " 0.0839158816 -0.14243035 ="0.1408427617 " 0.14243035 -0.2009448184
="0.1993572301 " 0.2009448184 -0.2594592868 ="0.2578716985 " 0.2594592868 -HIGH="0.3163861668 " ;
NOTE: Format F48_ has been output.
Sistema SAS
 
54870     +value F49_
54871     +LOW -0.0013547365 ="0.0006773683 "
54872     +0.0013547365 -0.0027094731 ="0.0020321048 "
54873     +0.0027094731 -0.0040642096 ="0.0033868413 "
54874     +0.0040642096 -0.0054189461 ="0.0047415779 "
54875     +0.0054189461 -0.0067736827 ="0.0060963144 "
54876     +0.0067736827 -0.0081284192 ="0.0074510509 "
54877     +0.0081284192 -0.0094831557 ="0.0088057875 "
54878     +0.0094831557 -0.0108378923 ="0.010160524 "
54879     +0.0108378923 -0.0424417153 ="0.0417643471 "
54880     +0.0424417153 -0.0740455384 ="0.0733681702 "
54881     +0.0740455384 -0.1056493615 ="0.1049719932 "
54882     +0.1056493615 -0.1372531846 ="0.1365758163 "
54883     +0.1372531846 -HIGH="0.1681796394 "
54884     +;
MPRINT(VAR_PROFILE):   value F49_ LOW -0.0013547365 ="0.0006773683 " 0.0013547365 -0.0027094731
="0.0020321048 " 0.0027094731 -0.0040642096 ="0.0033868413 " 0.0040642096 -0.0054189461
="0.0047415779 " 0.0054189461 -0.0067736827 ="0.0060963144 " 0.0067736827 -0.0081284192
="0.0074510509 " 0.0081284192 -0.0094831557 ="0.0088057875 " 0.0094831557 -0.0108378923
="0.010160524 " 0.0108378923 -0.0424417153 ="0.0417643471 " 0.0424417153 -0.0740455384
="0.0733681702 " 0.0740455384 -0.1056493615 ="0.1049719932 " 0.1056493615 -0.1372531846
="0.1365758163 " 0.1372531846 -HIGH="0.1681796394 " ;
NOTE: Format F49_ has been output.
54885     +value F50_
54886     +LOW -0 ="0 "
54887     +0 -0.0225823036 ="0.0225823036 "
54888     +0.0225823036 -0.0451646073 ="0.0451646073 "
54889     +0.0451646073 -0.0677469109 ="0.0677469109 "
54890     +0.0677469109 -0.0903292145 ="0.0903292145 "
54891     +0.0903292145 -HIGH="0.1129115181 "
54892     +;
MPRINT(VAR_PROFILE):   value F50_ LOW -0 ="0 " 0 -0.0225823036 ="0.0225823036 " 0.0225823036
-0.0451646073 ="0.0451646073 " 0.0451646073 -0.0677469109 ="0.0677469109 " 0.0677469109
-0.0903292145 ="0.0903292145 " 0.0903292145 -HIGH="0.1129115181 " ;
NOTE: Format F50_ has been output.
54893     +value F51_
54894     +LOW -0.0026745226 ="0.0013372613 "
54895     +0.0026745226 -0.0053490452 ="0.0040117839 "
54896     +0.0053490452 -0.0080235677 ="0.0066863065 "
54897     +0.0080235677 -0.0106980903 ="0.009360829 "
54898     +0.0106980903 -0.0133726129 ="0.0120353516 "
54899     +0.0133726129 -0.0160471355 ="0.0147098742 "
54900     +0.0160471355 -0.0187216581 ="0.0173843968 "
54901     +0.0187216581 -0.0213961807 ="0.0200589194 "
54902     +0.0213961807 -0.0661851042 ="0.0648478429 "
54903     +0.0661851042 -0.1109740277 ="0.1096367664 "
54904     +0.1109740277 -0.1557629512 ="0.1544256899 "
54905     +0.1557629512 -0.2005518747 ="0.1992146135 "
54906     +0.2005518747 -HIGH="0.244003537 "
54907     +;
MPRINT(VAR_PROFILE):   value F51_ LOW -0.0026745226 ="0.0013372613 " 0.0026745226 -0.0053490452
="0.0040117839 " 0.0053490452 -0.0080235677 ="0.0066863065 " 0.0080235677 -0.0106980903
="0.009360829 " 0.0106980903 -0.0133726129 ="0.0120353516 " 0.0133726129 -0.0160471355
="0.0147098742 " 0.0160471355 -0.0187216581 ="0.0173843968 " 0.0187216581 -0.0213961807
="0.0200589194 " 0.0213961807 -0.0661851042 ="0.0648478429 " 0.0661851042 -0.1109740277
="0.1096367664 " 0.1109740277 -0.1557629512 ="0.1544256899 " 0.1557629512 -0.2005518747
="0.1992146135 " 0.2005518747 -HIGH="0.244003537 " ;
NOTE: Format F51_ has been output.
Sistema SAS
 
54908     +value F52_
54909     +LOW -0.0004943933 ="0.0002471966 "
54910     +0.0004943933 -0.0009887866 ="0.0007415899 "
54911     +0.0009887866 -0.0014831799 ="0.0012359832 "
54912     +0.0014831799 -0.0019775732 ="0.0017303765 "
54913     +0.0019775732 -0.0024719665 ="0.0022247698 "
54914     +0.0024719665 -0.0029663598 ="0.0027191631 "
54915     +0.0029663598 -0.003460753 ="0.0032135564 "
54916     +0.003460753 -0.0039551463 ="0.0037079497 "
54917     +0.0039551463 -0.0704503464 ="0.0702031498 "
54918     +0.0704503464 -0.1369455465 ="0.1366983499 "
54919     +0.1369455465 -0.2034407466 ="0.20319355 "
54920     +0.2034407466 -0.2699359467 ="0.2696887501 "
54921     +0.2699359467 -HIGH="0.3361839502 "
54922     +;
MPRINT(VAR_PROFILE):   value F52_ LOW -0.0004943933 ="0.0002471966 " 0.0004943933 -0.0009887866
="0.0007415899 " 0.0009887866 -0.0014831799 ="0.0012359832 " 0.0014831799 -0.0019775732
="0.0017303765 " 0.0019775732 -0.0024719665 ="0.0022247698 " 0.0024719665 -0.0029663598
="0.0027191631 " 0.0029663598 -0.003460753 ="0.0032135564 " 0.003460753 -0.0039551463
="0.0037079497 " 0.0039551463 -0.0704503464 ="0.0702031498 " 0.0704503464 -0.1369455465
="0.1366983499 " 0.1369455465 -0.2034407466 ="0.20319355 " 0.2034407466 -0.2699359467
="0.2696887501 " 0.2699359467 -HIGH="0.3361839502 " ;
NOTE: Format F52_ has been output.
54923     +value F53_
54924     +LOW -0 ="0 "
54925     +0 -0.0334148566 ="0.0334148566 "
54926     +0.0334148566 -0.0668297132 ="0.0668297132 "
54927     +0.0668297132 -0.1002445698 ="0.1002445698 "
54928     +0.1002445698 -0.1336594264 ="0.1336594264 "
54929     +0.1336594264 -HIGH="0.1670742831 "
54930     +;
MPRINT(VAR_PROFILE):   value F53_ LOW -0 ="0 " 0 -0.0334148566 ="0.0334148566 " 0.0334148566
-0.0668297132 ="0.0668297132 " 0.0668297132 -0.1002445698 ="0.1002445698 " 0.1002445698
-0.1336594264 ="0.1336594264 " 0.1336594264 -HIGH="0.1670742831 " ;
NOTE: Format F53_ has been output.
54931     +value F54_
54932     +LOW -0 ="0 "
54933     +0 -0.066073653 ="0.066073653 "
54934     +0.066073653 -0.132147306 ="0.132147306 "
54935     +0.132147306 -0.198220959 ="0.198220959 "
54936     +0.198220959 -0.264294612 ="0.264294612 "
54937     +0.264294612 -HIGH="0.330368265 "
54938     +;
MPRINT(VAR_PROFILE):   value F54_ LOW -0 ="0 " 0 -0.066073653 ="0.066073653 " 0.066073653
-0.132147306 ="0.132147306 " 0.132147306 -0.198220959 ="0.198220959 " 0.198220959 -0.264294612
="0.264294612 " 0.264294612 -HIGH="0.330368265 " ;
NOTE: Format F54_ has been output.
54939     +value F55_
54940     +LOW -0.0004908367 ="0.0002454184 "
54941     +0.0004908367 -0.0009816734 ="0.0007362551 "
54942     +0.0009816734 -0.0014725101 ="0.0012270918 "
54943     +0.0014725101 -0.0019633468 ="0.0017179285 "
54944     +0.0019633468 -0.0024541835 ="0.0022087652 "
54945     +0.0024541835 -0.0029450202 ="0.0026996019 "
54946     +0.0029450202 -0.0034358569 ="0.0031904386 "
54947     +0.0034358569 -0.0039266936 ="0.0036812753 "
54948     +0.0039266936 -0.0285180077 ="0.0282725894 "
54949     +0.0285180077 -0.0531093218 ="0.0528639035 "
Sistema SAS
 
54950     +0.0531093218 -0.0777006359 ="0.0774552175 "
54951     +0.0777006359 -0.10229195 ="0.1020465316 "
54952     +0.10229195 -HIGH="0.1266378457 "
54953     +;
MPRINT(VAR_PROFILE):   value F55_ LOW -0.0004908367 ="0.0002454184 " 0.0004908367 -0.0009816734
="0.0007362551 " 0.0009816734 -0.0014725101 ="0.0012270918 " 0.0014725101 -0.0019633468
="0.0017179285 " 0.0019633468 -0.0024541835 ="0.0022087652 " 0.0024541835 -0.0029450202
="0.0026996019 " 0.0029450202 -0.0034358569 ="0.0031904386 " 0.0034358569 -0.0039266936
="0.0036812753 " 0.0039266936 -0.0285180077 ="0.0282725894 " 0.0285180077 -0.0531093218
="0.0528639035 " 0.0531093218 -0.0777006359 ="0.0774552175 " 0.0777006359 -0.10229195
="0.1020465316 " 0.10229195 -HIGH="0.1266378457 " ;
NOTE: Format F55_ has been output.
54954     +value F56_
54955     +LOW -0.0042265072 ="0.0021132536 "
54956     +0.0042265072 -0.0084530144 ="0.0063397608 "
54957     +0.0084530144 -0.0126795216 ="0.010566268 "
54958     +0.0126795216 -0.0169060288 ="0.0147927752 "
54959     +0.0169060288 -0.021132536 ="0.0190192824 "
54960     +0.021132536 -0.0253590432 ="0.0232457896 "
54961     +0.0253590432 -0.0295855504 ="0.0274722968 "
54962     +0.0295855504 -0.0338120576 ="0.031698804 "
54963     +0.0338120576 -0.0483772516 ="0.046263998 "
54964     +0.0483772516 -0.0629424457 ="0.0608291921 "
54965     +0.0629424457 -0.0775076397 ="0.0753943861 "
54966     +0.0775076397 -0.0920728337 ="0.0899595801 "
54967     +0.0920728337 -HIGH="0.1045247742 "
54968     +;
MPRINT(VAR_PROFILE):   value F56_ LOW -0.0042265072 ="0.0021132536 " 0.0042265072 -0.0084530144
="0.0063397608 " 0.0084530144 -0.0126795216 ="0.010566268 " 0.0126795216 -0.0169060288
="0.0147927752 " 0.0169060288 -0.021132536 ="0.0190192824 " 0.021132536 -0.0253590432
="0.0232457896 " 0.0253590432 -0.0295855504 ="0.0274722968 " 0.0295855504 -0.0338120576
="0.031698804 " 0.0338120576 -0.0483772516 ="0.046263998 " 0.0483772516 -0.0629424457
="0.0608291921 " 0.0629424457 -0.0775076397 ="0.0753943861 " 0.0775076397 -0.0920728337
="0.0899595801 " 0.0920728337 -HIGH="0.1045247742 " ;
NOTE: Format F56_ has been output.
54969     +value F57_
54970     +LOW -0.0027367124 ="0.0013683562 "
54971     +0.0027367124 -0.0054734247 ="0.0041050686 "
54972     +0.0054734247 -0.0082101371 ="0.0068417809 "
54973     +0.0082101371 -0.0109468495 ="0.0095784933 "
54974     +0.0109468495 -0.0136835619 ="0.0123152057 "
54975     +0.0136835619 -0.0164202742 ="0.0150519181 "
54976     +0.0164202742 -0.0191569866 ="0.0177886304 "
54977     +0.0191569866 -0.021893699 ="0.0205253428 "
54978     +0.021893699 -0.0538781021 ="0.0525097459 "
54979     +0.0538781021 -0.0858625053 ="0.0844941491 "
54980     +0.0858625053 -0.1178469084 ="0.1164785522 "
54981     +0.1178469084 -0.1498313115 ="0.1484629553 "
54982     +0.1498313115 -HIGH="0.1804473585 "
54983     +;
MPRINT(VAR_PROFILE):   value F57_ LOW -0.0027367124 ="0.0013683562 " 0.0027367124 -0.0054734247
="0.0041050686 " 0.0054734247 -0.0082101371 ="0.0068417809 " 0.0082101371 -0.0109468495
="0.0095784933 " 0.0109468495 -0.0136835619 ="0.0123152057 " 0.0136835619 -0.0164202742
="0.0150519181 " 0.0164202742 -0.0191569866 ="0.0177886304 " 0.0191569866 -0.021893699
="0.0205253428 " 0.021893699 -0.0538781021 ="0.0525097459 " 0.0538781021 -0.0858625053
="0.0844941491 " 0.0858625053 -0.1178469084 ="0.1164785522 " 0.1178469084 -0.1498313115
="0.1484629553 " 0.1498313115 -HIGH="0.1804473585 " ;
NOTE: Format F57_ has been output.
Sistema SAS
 
54984     +value F58_
54985     +LOW -0.0001597901 ="0.000079895 "
54986     +0.0001597901 -0.0003195801 ="0.0002396851 "
54987     +0.0003195801 -0.0004793702 ="0.0003994752 "
54988     +0.0004793702 -0.0006391603 ="0.0005592652 "
54989     +0.0006391603 -0.0007989503 ="0.0007190553 "
54990     +0.0007989503 -0.0009587404 ="0.0008788454 "
54991     +0.0009587404 -0.0011185305 ="0.0010386354 "
54992     +0.0011185305 -0.0012783205 ="0.0011984255 "
54993     +0.0012783205 -0.0551304682 ="0.0550505731 "
54994     +0.0551304682 -0.1089826158 ="0.1089027208 "
54995     +0.1089826158 -0.1628347635 ="0.1627548684 "
54996     +0.1628347635 -0.2166869111 ="0.2166070161 "
54997     +0.2166869111 -HIGH="0.2704591637 "
54998     +;
MPRINT(VAR_PROFILE):   value F58_ LOW -0.0001597901 ="0.000079895 " 0.0001597901 -0.0003195801
="0.0002396851 " 0.0003195801 -0.0004793702 ="0.0003994752 " 0.0004793702 -0.0006391603
="0.0005592652 " 0.0006391603 -0.0007989503 ="0.0007190553 " 0.0007989503 -0.0009587404
="0.0008788454 " 0.0009587404 -0.0011185305 ="0.0010386354 " 0.0011185305 -0.0012783205
="0.0011984255 " 0.0012783205 -0.0551304682 ="0.0550505731 " 0.0551304682 -0.1089826158
="0.1089027208 " 0.1089826158 -0.1628347635 ="0.1627548684 " 0.1628347635 -0.2166869111
="0.2166070161 " 0.2166869111 -HIGH="0.2704591637 " ;
NOTE: Format F58_ has been output.
54999     +value F59_
55000     +LOW -0 ="0 "
55001     +0 -0.1124649729 ="0.1124649729 "
55002     +0.1124649729 -0.2249299458 ="0.2249299458 "
55003     +0.2249299458 -0.3373949187 ="0.3373949187 "
55004     +0.3373949187 -0.4498598916 ="0.4498598916 "
55005     +0.4498598916 -HIGH="0.5623248645 "
55006     +;
MPRINT(VAR_PROFILE):   value F59_ LOW -0 ="0 " 0 -0.1124649729 ="0.1124649729 " 0.1124649729
-0.2249299458 ="0.2249299458 " 0.2249299458 -0.3373949187 ="0.3373949187 " 0.3373949187
-0.4498598916 ="0.4498598916 " 0.4498598916 -HIGH="0.5623248645 " ;
NOTE: Format F59_ has been output.
55007     +value F60_
55008     +LOW -0 ="0 "
55009     +0 -0.0252229211 ="0.0252229211 "
55010     +0.0252229211 -0.0504458423 ="0.0504458423 "
55011     +0.0504458423 -0.0756687634 ="0.0756687634 "
55012     +0.0756687634 -0.1008916846 ="0.1008916846 "
55013     +0.1008916846 -HIGH="0.1261146057 "
55014     +;
MPRINT(VAR_PROFILE):   value F60_ LOW -0 ="0 " 0 -0.0252229211 ="0.0252229211 " 0.0252229211
-0.0504458423 ="0.0504458423 " 0.0504458423 -0.0756687634 ="0.0756687634 " 0.0756687634
-0.1008916846 ="0.1008916846 " 0.1008916846 -HIGH="0.1261146057 " ;
NOTE: Format F60_ has been output.
55015     +value F61_
55016     +LOW -0 ="0 "
55017     +0 -0.0429344063 ="0.0429344063 "
55018     +0.0429344063 -0.0858688126 ="0.0858688126 "
55019     +0.0858688126 -0.1288032189 ="0.1288032189 "
55020     +0.1288032189 -0.1717376252 ="0.1717376252 "
55021     +0.1717376252 -HIGH="0.2146720315 "
55022     +;
MPRINT(VAR_PROFILE):   value F61_ LOW -0 ="0 " 0 -0.0429344063 ="0.0429344063 " 0.0429344063
-0.0858688126 ="0.0858688126 " 0.0858688126 -0.1288032189 ="0.1288032189 " 0.1288032189
-0.1717376252 ="0.1717376252 " 0.1717376252 -HIGH="0.2146720315 " ;
Sistema SAS
 
NOTE: Format F61_ has been output.
55023     +value F62_
55024     +LOW -0 ="0 "
55025     +0 -0.0335806768 ="0.0335806768 "
55026     +0.0335806768 -0.0671613537 ="0.0671613537 "
55027     +0.0671613537 -0.1007420305 ="0.1007420305 "
55028     +0.1007420305 -0.1343227074 ="0.1343227074 "
55029     +0.1343227074 -HIGH="0.1679033842 "
55030     +;
MPRINT(VAR_PROFILE):   value F62_ LOW -0 ="0 " 0 -0.0335806768 ="0.0335806768 " 0.0335806768
-0.0671613537 ="0.0671613537 " 0.0671613537 -0.1007420305 ="0.1007420305 " 0.1007420305
-0.1343227074 ="0.1343227074 " 0.1343227074 -HIGH="0.1679033842 " ;
NOTE: Format F62_ has been output.
55031     +value F63_
55032     +LOW -0 ="0 "
55033     +0 -0.0248407557 ="0.0248407557 "
55034     +0.0248407557 -0.0496815113 ="0.0496815113 "
55035     +0.0496815113 -0.074522267 ="0.074522267 "
55036     +0.074522267 -0.0993630227 ="0.0993630227 "
55037     +0.0993630227 -HIGH="0.1242037784 "
55038     +;
MPRINT(VAR_PROFILE):   value F63_ LOW -0 ="0 " 0 -0.0248407557 ="0.0248407557 " 0.0248407557
-0.0496815113 ="0.0496815113 " 0.0496815113 -0.074522267 ="0.074522267 " 0.074522267 -0.0993630227
="0.0993630227 " 0.0993630227 -HIGH="0.1242037784 " ;
NOTE: Format F63_ has been output.
55039     +value F64_
55040     +LOW -0 ="0 "
55041     +0 -0.0600439973 ="0.0600439973 "
55042     +0.0600439973 -0.1200879946 ="0.1200879946 "
55043     +0.1200879946 -0.1801319919 ="0.1801319919 "
55044     +0.1801319919 -0.2401759892 ="0.2401759892 "
55045     +0.2401759892 -HIGH="0.3002199865 "
55046     +;
MPRINT(VAR_PROFILE):   value F64_ LOW -0 ="0 " 0 -0.0600439973 ="0.0600439973 " 0.0600439973
-0.1200879946 ="0.1200879946 " 0.1200879946 -0.1801319919 ="0.1801319919 " 0.1801319919
-0.2401759892 ="0.2401759892 " 0.2401759892 -HIGH="0.3002199865 " ;
NOTE: Format F64_ has been output.
55047     +value F65_
55048     +LOW -0.0008248958 ="0.0004124479 "
55049     +0.0008248958 -0.0016497916 ="0.0012373437 "
55050     +0.0016497916 -0.0024746874 ="0.0020622395 "
55051     +0.0024746874 -0.0032995832 ="0.0028871353 "
55052     +0.0032995832 -0.004124479 ="0.0037120311 "
55053     +0.004124479 -0.0049493748 ="0.0045369269 "
55054     +0.0049493748 -0.0057742706 ="0.0053618227 "
55055     +0.0057742706 -0.0065991665 ="0.0061867186 "
55056     +0.0065991665 -0.0518031967 ="0.0513907488 "
55057     +0.0518031967 -0.0970072269 ="0.096594779 "
55058     +0.0970072269 -0.1422112571 ="0.1417988092 "
55059     +0.1422112571 -0.1874152873 ="0.1870028394 "
55060     +0.1874152873 -HIGH="0.2322068696 "
55061     +;
MPRINT(VAR_PROFILE):   value F65_ LOW -0.0008248958 ="0.0004124479 " 0.0008248958 -0.0016497916
="0.0012373437 " 0.0016497916 -0.0024746874 ="0.0020622395 " 0.0024746874 -0.0032995832
="0.0028871353 " 0.0032995832 -0.004124479 ="0.0037120311 " 0.004124479 -0.0049493748
="0.0045369269 " 0.0049493748 -0.0057742706 ="0.0053618227 " 0.0057742706 -0.0065991665
="0.0061867186 " 0.0065991665 -0.0518031967 ="0.0513907488 " 0.0518031967 -0.0970072269
="0.096594779 " 0.0970072269 -0.1422112571 ="0.1417988092 " 0.1422112571 -0.1874152873
Sistema SAS
 
="0.1870028394 " 0.1874152873 -HIGH="0.2322068696 " ;
NOTE: Format F65_ has been output.
55062     +value F66_
55063     +LOW -0 ="0 "
55064     +0 -0.0372021233 ="0.0372021233 "
55065     +0.0372021233 -0.0744042466 ="0.0744042466 "
55066     +0.0744042466 -0.1116063699 ="0.1116063699 "
55067     +0.1116063699 -0.1488084932 ="0.1488084932 "
55068     +0.1488084932 -HIGH="0.1860106165 "
55069     +;
MPRINT(VAR_PROFILE):   value F66_ LOW -0 ="0 " 0 -0.0372021233 ="0.0372021233 " 0.0372021233
-0.0744042466 ="0.0744042466 " 0.0744042466 -0.1116063699 ="0.1116063699 " 0.1116063699
-0.1488084932 ="0.1488084932 " 0.1488084932 -HIGH="0.1860106165 " ;
NOTE: Format F66_ has been output.
55070     +value F67_
55071     +LOW -0 ="0 "
55072     +0 -0.0312589384 ="0.0312589384 "
55073     +0.0312589384 -0.0625178769 ="0.0625178769 "
55074     +0.0625178769 -0.0937768153 ="0.0937768153 "
55075     +0.0937768153 -0.1250357538 ="0.1250357538 "
55076     +0.1250357538 -HIGH="0.1562946922 "
55077     +;
MPRINT(VAR_PROFILE):   value F67_ LOW -0 ="0 " 0 -0.0312589384 ="0.0312589384 " 0.0312589384
-0.0625178769 ="0.0625178769 " 0.0625178769 -0.0937768153 ="0.0937768153 " 0.0937768153
-0.1250357538 ="0.1250357538 " 0.1250357538 -HIGH="0.1562946922 " ;
NOTE: Format F67_ has been output.
55078     +value F68_
55079     +LOW -0 ="0 "
55080     +0 -0.0542502029 ="0.0542502029 "
55081     +0.0542502029 -0.1085004058 ="0.1085004058 "
55082     +0.1085004058 -0.1627506087 ="0.1627506087 "
55083     +0.1627506087 -0.2170008116 ="0.2170008116 "
55084     +0.2170008116 -HIGH="0.2712510144 "
55085     +;
MPRINT(VAR_PROFILE):   value F68_ LOW -0 ="0 " 0 -0.0542502029 ="0.0542502029 " 0.0542502029
-0.1085004058 ="0.1085004058 " 0.1085004058 -0.1627506087 ="0.1627506087 " 0.1627506087
-0.2170008116 ="0.2170008116 " 0.2170008116 -HIGH="0.2712510144 " ;
NOTE: Format F68_ has been output.
55086     +value F69_
55087     +LOW -0.0013889983 ="0.0006944992 "
55088     +0.0013889983 -0.0027779966 ="0.0020834975 "
55089     +0.0027779966 -0.004166995 ="0.0034724958 "
55090     +0.004166995 -0.0055559933 ="0.0048614941 "
55091     +0.0055559933 -0.0069449916 ="0.0062504924 "
55092     +0.0069449916 -0.0083339899 ="0.0076394908 "
55093     +0.0083339899 -0.0097229882 ="0.0090284891 "
55094     +0.0097229882 -0.0111119866 ="0.0104174874 "
55095     +0.0111119866 -0.0326580067 ="0.0319635076 "
55096     +0.0326580067 -0.0542040269 ="0.0535095277 "
55097     +0.0542040269 -0.075750047 ="0.0750555479 "
55098     +0.075750047 -0.0972960672 ="0.096601568 "
55099     +0.0972960672 -0.1188420874 ="0.1181475882 "
55100     +;
MPRINT(VAR_PROFILE):   value F69_ LOW -0.0013889983 ="0.0006944992 " 0.0013889983 -0.0027779966
="0.0020834975 " 0.0027779966 -0.004166995 ="0.0034724958 " 0.004166995 -0.0055559933
="0.0048614941 " 0.0055559933 -0.0069449916 ="0.0062504924 " 0.0069449916 -0.0083339899
="0.0076394908 " 0.0083339899 -0.0097229882 ="0.0090284891 " 0.0097229882 -0.0111119866
="0.0104174874 " 0.0111119866 -0.0326580067 ="0.0319635076 " 0.0326580067 -0.0542040269
Sistema SAS
 
="0.0535095277 " 0.0542040269 -0.075750047 ="0.0750555479 " 0.075750047 -0.0972960672
="0.096601568 " 0.0972960672 -0.1188420874 ="0.1181475882 " ;
NOTE: Format F69_ has been output.
55101     +value F70_
55102     +LOW -0.0030215117 ="0.0015107559 "
55103     +0.0030215117 -0.0060430234 ="0.0045322676 "
55104     +0.0060430234 -0.0090645352 ="0.0075537793 "
55105     +0.0090645352 -0.0120860469 ="0.010575291 "
55106     +0.0120860469 -0.0151075586 ="0.0135968028 "
55107     +0.0151075586 -0.0181290703 ="0.0166183145 "
55108     +0.0181290703 -0.0211505821 ="0.0196398262 "
55109     +0.0211505821 -0.0241720938 ="0.0226613379 "
55110     +0.0241720938 -0.0856459989 ="0.084135243 "
55111     +0.0856459989 -0.147119904 ="0.1456091481 "
55112     +0.147119904 -0.2085938091 ="0.2070830532 "
55113     +0.2085938091 -0.2700677142 ="0.2685569583 "
55114     +0.2700677142 -HIGH="0.3300308634 "
55115     +;
MPRINT(VAR_PROFILE):   value F70_ LOW -0.0030215117 ="0.0015107559 " 0.0030215117 -0.0060430234
="0.0045322676 " 0.0060430234 -0.0090645352 ="0.0075537793 " 0.0090645352 -0.0120860469
="0.010575291 " 0.0120860469 -0.0151075586 ="0.0135968028 " 0.0151075586 -0.0181290703
="0.0166183145 " 0.0181290703 -0.0211505821 ="0.0196398262 " 0.0211505821 -0.0241720938
="0.0226613379 " 0.0241720938 -0.0856459989 ="0.084135243 " 0.0856459989 -0.147119904
="0.1456091481 " 0.147119904 -0.2085938091 ="0.2070830532 " 0.2085938091 -0.2700677142
="0.2685569583 " 0.2700677142 -HIGH="0.3300308634 " ;
NOTE: Format F70_ has been output.
55116     +value F71_
55117     +LOW -0 ="0 "
55118     +0 -0.0281782896 ="0.0281782896 "
55119     +0.0281782896 -0.0563565792 ="0.0563565792 "
55120     +0.0563565792 -0.0845348689 ="0.0845348689 "
55121     +0.0845348689 -0.1127131585 ="0.1127131585 "
55122     +0.1127131585 -HIGH="0.1408914481 "
55123     +;
MPRINT(VAR_PROFILE):   value F71_ LOW -0 ="0 " 0 -0.0281782896 ="0.0281782896 " 0.0281782896
-0.0563565792 ="0.0563565792 " 0.0563565792 -0.0845348689 ="0.0845348689 " 0.0845348689
-0.1127131585 ="0.1127131585 " 0.1127131585 -HIGH="0.1408914481 " ;
NOTE: Format F71_ has been output.
55124     +value F72_
55125     +LOW -0 ="0 "
55126     +0 -0.0610108102 ="0.0610108102 "
55127     +0.0610108102 -0.1220216204 ="0.1220216204 "
55128     +0.1220216204 -0.1830324306 ="0.1830324306 "
55129     +0.1830324306 -0.2440432408 ="0.2440432408 "
55130     +0.2440432408 -HIGH="0.305054051 "
55131     +;
MPRINT(VAR_PROFILE):   value F72_ LOW -0 ="0 " 0 -0.0610108102 ="0.0610108102 " 0.0610108102
-0.1220216204 ="0.1220216204 " 0.1220216204 -0.1830324306 ="0.1830324306 " 0.1830324306
-0.2440432408 ="0.2440432408 " 0.2440432408 -HIGH="0.305054051 " ;
NOTE: Format F72_ has been output.
55132     +value F73_
55133     +LOW -0 ="0 "
55134     +0 -0.0229468511 ="0.0229468511 "
55135     +0.0229468511 -0.0458937022 ="0.0458937022 "
55136     +0.0458937022 -0.0688405533 ="0.0688405533 "
55137     +0.0688405533 -0.0917874044 ="0.0917874044 "
55138     +0.0917874044 -HIGH="0.1147342555 "
55139     +;
Sistema SAS
 
MPRINT(VAR_PROFILE):   value F73_ LOW -0 ="0 " 0 -0.0229468511 ="0.0229468511 " 0.0229468511
-0.0458937022 ="0.0458937022 " 0.0458937022 -0.0688405533 ="0.0688405533 " 0.0688405533
-0.0917874044 ="0.0917874044 " 0.0917874044 -HIGH="0.1147342555 " ;
NOTE: Format F73_ has been output.
55140     +value F74_
55141     +LOW -0 ="0 "
55142     +0 -0.0432559151 ="0.0432559151 "
55143     +0.0432559151 -0.0865118302 ="0.0865118302 "
55144     +0.0865118302 -0.1297677453 ="0.1297677453 "
55145     +0.1297677453 -0.1730236604 ="0.1730236604 "
55146     +0.1730236604 -HIGH="0.2162795755 "
55147     +;
MPRINT(VAR_PROFILE):   value F74_ LOW -0 ="0 " 0 -0.0432559151 ="0.0432559151 " 0.0432559151
-0.0865118302 ="0.0865118302 " 0.0865118302 -0.1297677453 ="0.1297677453 " 0.1297677453
-0.1730236604 ="0.1730236604 " 0.1730236604 -HIGH="0.2162795755 " ;
NOTE: Format F74_ has been output.
55148     +value F75_
55149     +LOW -0 ="0 "
55150     +0 -0.0245178012 ="0.0245178012 "
55151     +0.0245178012 -0.0490356023 ="0.0490356023 "
55152     +0.0490356023 -0.0735534035 ="0.0735534035 "
55153     +0.0735534035 -0.0980712046 ="0.0980712046 "
55154     +0.0980712046 -HIGH="0.1225890058 "
55155     +;
MPRINT(VAR_PROFILE):   value F75_ LOW -0 ="0 " 0 -0.0245178012 ="0.0245178012 " 0.0245178012
-0.0490356023 ="0.0490356023 " 0.0490356023 -0.0735534035 ="0.0735534035 " 0.0735534035
-0.0980712046 ="0.0980712046 " 0.0980712046 -HIGH="0.1225890058 " ;
NOTE: Format F75_ has been output.
55156     +value F76_
55157     +LOW -0.0038521144 ="0.0019260572 "
55158     +0.0038521144 -0.0077042289 ="0.0057781717 "
55159     +0.0077042289 -0.0115563433 ="0.0096302861 "
55160     +0.0115563433 -0.0154084578 ="0.0134824005 "
55161     +0.0154084578 -0.0192605722 ="0.017334515 "
55162     +0.0192605722 -0.0231126867 ="0.0211866294 "
55163     +0.0231126867 -0.0269648011 ="0.0250387439 "
55164     +0.0269648011 -0.0308169155 ="0.0288908583 "
55165     +0.0308169155 -0.0575473928 ="0.0556213356 "
55166     +0.0575473928 -0.0842778701 ="0.0823518129 "
55167     +0.0842778701 -0.1110083474 ="0.1090822902 "
55168     +0.1110083474 -0.1377388248 ="0.1358127675 "
55169     +0.1377388248 -HIGH="0.1625432448 "
55170     +;
MPRINT(VAR_PROFILE):   value F76_ LOW -0.0038521144 ="0.0019260572 " 0.0038521144 -0.0077042289
="0.0057781717 " 0.0077042289 -0.0115563433 ="0.0096302861 " 0.0115563433 -0.0154084578
="0.0134824005 " 0.0154084578 -0.0192605722 ="0.017334515 " 0.0192605722 -0.0231126867
="0.0211866294 " 0.0231126867 -0.0269648011 ="0.0250387439 " 0.0269648011 -0.0308169155
="0.0288908583 " 0.0308169155 -0.0575473928 ="0.0556213356 " 0.0575473928 -0.0842778701
="0.0823518129 " 0.0842778701 -0.1110083474 ="0.1090822902 " 0.1110083474 -0.1377388248
="0.1358127675 " 0.1377388248 -HIGH="0.1625432448 " ;
NOTE: Format F76_ has been output.
55171     +value F77_
55172     +LOW -0.0034666464 ="0.0017333232 "
55173     +0.0034666464 -0.0069332928 ="0.0051999696 "
55174     +0.0069332928 -0.0103999391 ="0.008666616 "
55175     +0.0103999391 -0.0138665855 ="0.0121332623 "
55176     +0.0138665855 -0.0173332319 ="0.0155999087 "
55177     +0.0173332319 -0.0207998783 ="0.0190665551 "
Sistema SAS
 
55178     +0.0207998783 -0.0242665247 ="0.0225332015 "
55179     +0.0242665247 -0.0277331711 ="0.0259998479 "
55180     +0.0277331711 -0.0739551228 ="0.0722217996 "
55181     +0.0739551228 -0.1201770746 ="0.1184437514 "
55182     +0.1201770746 -0.1663990263 ="0.1646657031 "
55183     +0.1663990263 -0.2126209781 ="0.2108876549 "
55184     +0.2126209781 -HIGH="0.2571096066 "
55185     +;
MPRINT(VAR_PROFILE):   value F77_ LOW -0.0034666464 ="0.0017333232 " 0.0034666464 -0.0069332928
="0.0051999696 " 0.0069332928 -0.0103999391 ="0.008666616 " 0.0103999391 -0.0138665855
="0.0121332623 " 0.0138665855 -0.0173332319 ="0.0155999087 " 0.0173332319 -0.0207998783
="0.0190665551 " 0.0207998783 -0.0242665247 ="0.0225332015 " 0.0242665247 -0.0277331711
="0.0259998479 " 0.0277331711 -0.0739551228 ="0.0722217996 " 0.0739551228 -0.1201770746
="0.1184437514 " 0.1201770746 -0.1663990263 ="0.1646657031 " 0.1663990263 -0.2126209781
="0.2108876549 " 0.2126209781 -HIGH="0.2571096066 " ;
NOTE: Format F77_ has been output.
55186     +value F78_
55187     +LOW -0 ="0 "
55188     +0 -0.0524807341 ="0.0524807341 "
55189     +0.0524807341 -0.1049614682 ="0.1049614682 "
55190     +0.1049614682 -0.1574422023 ="0.1574422023 "
55191     +0.1574422023 -0.2099229365 ="0.2099229365 "
55192     +0.2099229365 -HIGH="0.2624036706 "
55193     +;
MPRINT(VAR_PROFILE):   value F78_ LOW -0 ="0 " 0 -0.0524807341 ="0.0524807341 " 0.0524807341
-0.1049614682 ="0.1049614682 " 0.1049614682 -0.1574422023 ="0.1574422023 " 0.1574422023
-0.2099229365 ="0.2099229365 " 0.2099229365 -HIGH="0.2624036706 " ;
NOTE: Format F78_ has been output.
55194     +value F79_
55195     +LOW -0 ="0 "
55196     +0 -0.0177593476 ="0.0177593476 "
55197     +0.0177593476 -0.0355186952 ="0.0355186952 "
55198     +0.0355186952 -0.0532780429 ="0.0532780429 "
55199     +0.0532780429 -0.0710373905 ="0.0710373905 "
55200     +0.0710373905 -HIGH="0.0887967381 "
55201     +;
MPRINT(VAR_PROFILE):   value F79_ LOW -0 ="0 " 0 -0.0177593476 ="0.0177593476 " 0.0177593476
-0.0355186952 ="0.0355186952 " 0.0355186952 -0.0532780429 ="0.0532780429 " 0.0532780429
-0.0710373905 ="0.0710373905 " 0.0710373905 -HIGH="0.0887967381 " ;
NOTE: Format F79_ has been output.
55202     +value F80_
55203     +LOW -0 ="0 "
55204     +0 -0.0952439638 ="0.0952439638 "
55205     +0.0952439638 -0.1904879276 ="0.1904879276 "
55206     +0.1904879276 -0.2857318914 ="0.2857318914 "
55207     +0.2857318914 -0.3809758552 ="0.3809758552 "
55208     +0.3809758552 -HIGH="0.476219819 "
55209     +;
MPRINT(VAR_PROFILE):   value F80_ LOW -0 ="0 " 0 -0.0952439638 ="0.0952439638 " 0.0952439638
-0.1904879276 ="0.1904879276 " 0.1904879276 -0.2857318914 ="0.2857318914 " 0.2857318914
-0.3809758552 ="0.3809758552 " 0.3809758552 -HIGH="0.476219819 " ;
NOTE: Format F80_ has been output.
55210     +value F81_
55211     +LOW -0.0004486222 ="0.0002243111 "
55212     +0.0004486222 -0.0008972445 ="0.0006729334 "
55213     +0.0008972445 -0.0013458667 ="0.0011215556 "
55214     +0.0013458667 -0.001794489 ="0.0015701778 "
55215     +0.001794489 -0.0022431112 ="0.0020188001 "
Sistema SAS
 
55216     +0.0022431112 -0.0026917334 ="0.0024674223 "
55217     +0.0026917334 -0.0031403557 ="0.0029160446 "
55218     +0.0031403557 -0.0035889779 ="0.0033646668 "
55219     +0.0035889779 -0.0154293291 ="0.015205018 "
55220     +0.0154293291 -0.0272696803 ="0.0270453692 "
55221     +0.0272696803 -0.0391100314 ="0.0388857203 "
55222     +0.0391100314 -0.0509503826 ="0.0507260715 "
55223     +0.0509503826 -HIGH="0.0625664227 "
55224     +;
MPRINT(VAR_PROFILE):   value F81_ LOW -0.0004486222 ="0.0002243111 " 0.0004486222 -0.0008972445
="0.0006729334 " 0.0008972445 -0.0013458667 ="0.0011215556 " 0.0013458667 -0.001794489
="0.0015701778 " 0.001794489 -0.0022431112 ="0.0020188001 " 0.0022431112 -0.0026917334
="0.0024674223 " 0.0026917334 -0.0031403557 ="0.0029160446 " 0.0031403557 -0.0035889779
="0.0033646668 " 0.0035889779 -0.0154293291 ="0.015205018 " 0.0154293291 -0.0272696803
="0.0270453692 " 0.0272696803 -0.0391100314 ="0.0388857203 " 0.0391100314 -0.0509503826
="0.0507260715 " 0.0509503826 -HIGH="0.0625664227 " ;
NOTE: Format F81_ has been output.
55225     +value F82_
55226     +LOW -0.0027134791 ="0.0013567396 "
55227     +0.0027134791 -0.0054269583 ="0.0040702187 "
55228     +0.0054269583 -0.0081404374 ="0.0067836978 "
55229     +0.0081404374 -0.0108539165 ="0.0094971769 "
55230     +0.0108539165 -0.0135673956 ="0.0122106561 "
55231     +0.0135673956 -0.0162808748 ="0.0149241352 "
55232     +0.0162808748 -0.0189943539 ="0.0176376143 "
55233     +0.0189943539 -0.021707833 ="0.0203510935 "
55234     +0.021707833 -0.0950360629 ="0.0936793233 "
55235     +0.0950360629 -0.1683642927 ="0.1670075531 "
55236     +0.1683642927 -0.2416925226 ="0.240335783 "
55237     +0.2416925226 -0.3150207524 ="0.3136640128 "
55238     +0.3150207524 -HIGH="0.3869922427 "
55239     +;
MPRINT(VAR_PROFILE):   value F82_ LOW -0.0027134791 ="0.0013567396 " 0.0027134791 -0.0054269583
="0.0040702187 " 0.0054269583 -0.0081404374 ="0.0067836978 " 0.0081404374 -0.0108539165
="0.0094971769 " 0.0108539165 -0.0135673956 ="0.0122106561 " 0.0135673956 -0.0162808748
="0.0149241352 " 0.0162808748 -0.0189943539 ="0.0176376143 " 0.0189943539 -0.021707833
="0.0203510935 " 0.021707833 -0.0950360629 ="0.0936793233 " 0.0950360629 -0.1683642927
="0.1670075531 " 0.1683642927 -0.2416925226 ="0.240335783 " 0.2416925226 -0.3150207524
="0.3136640128 " 0.3150207524 -HIGH="0.3869922427 " ;
NOTE: Format F82_ has been output.
55240     +value F83_
55241     +LOW -0 ="0 "
55242     +0 -0.0212574836 ="0.0212574836 "
55243     +0.0212574836 -0.0425149673 ="0.0425149673 "
55244     +0.0425149673 -0.0637724509 ="0.0637724509 "
55245     +0.0637724509 -0.0850299345 ="0.0850299345 "
55246     +0.0850299345 -HIGH="0.1062874182 "
55247     +;
MPRINT(VAR_PROFILE):   value F83_ LOW -0 ="0 " 0 -0.0212574836 ="0.0212574836 " 0.0212574836
-0.0425149673 ="0.0425149673 " 0.0425149673 -0.0637724509 ="0.0637724509 " 0.0637724509
-0.0850299345 ="0.0850299345 " 0.0850299345 -HIGH="0.1062874182 " ;
NOTE: Format F83_ has been output.
55248     +value F84_
55249     +LOW -0 ="0 "
55250     +0 -0.0591601274 ="0.0591601274 "
55251     +0.0591601274 -0.1183202547 ="0.1183202547 "
55252     +0.1183202547 -0.1774803821 ="0.1774803821 "
55253     +0.1774803821 -0.2366405095 ="0.2366405095 "
Sistema SAS
 
55254     +0.2366405095 -HIGH="0.2958006368 "
55255     +;
MPRINT(VAR_PROFILE):   value F84_ LOW -0 ="0 " 0 -0.0591601274 ="0.0591601274 " 0.0591601274
-0.1183202547 ="0.1183202547 " 0.1183202547 -0.1774803821 ="0.1774803821 " 0.1774803821
-0.2366405095 ="0.2366405095 " 0.2366405095 -HIGH="0.2958006368 " ;
NOTE: Format F84_ has been output.
55256     +value F85_
55257     +LOW -0.0006565188 ="0.0003282594 "
55258     +0.0006565188 -0.0013130377 ="0.0009847782 "
55259     +0.0013130377 -0.0019695565 ="0.0016412971 "
55260     +0.0019695565 -0.0026260753 ="0.0022978159 "
55261     +0.0026260753 -0.0032825942 ="0.0029543347 "
55262     +0.0032825942 -0.003939113 ="0.0036108536 "
55263     +0.003939113 -0.0045956318 ="0.0042673724 "
55264     +0.0045956318 -0.0052521506 ="0.0049238912 "
55265     +0.0052521506 -0.0196762931 ="0.0193480337 "
55266     +0.0196762931 -0.0341004355 ="0.0337721761 "
55267     +0.0341004355 -0.048524578 ="0.0481963186 "
55268     +0.048524578 -0.0629487204 ="0.062620461 "
55269     +0.0629487204 -HIGH="0.0770446035 "
55270     +;
MPRINT(VAR_PROFILE):   value F85_ LOW -0.0006565188 ="0.0003282594 " 0.0006565188 -0.0013130377
="0.0009847782 " 0.0013130377 -0.0019695565 ="0.0016412971 " 0.0019695565 -0.0026260753
="0.0022978159 " 0.0026260753 -0.0032825942 ="0.0029543347 " 0.0032825942 -0.003939113
="0.0036108536 " 0.003939113 -0.0045956318 ="0.0042673724 " 0.0045956318 -0.0052521506
="0.0049238912 " 0.0052521506 -0.0196762931 ="0.0193480337 " 0.0196762931 -0.0341004355
="0.0337721761 " 0.0341004355 -0.048524578 ="0.0481963186 " 0.048524578 -0.0629487204
="0.062620461 " 0.0629487204 -HIGH="0.0770446035 " ;
NOTE: Format F85_ has been output.
55271     +value F86_
55272     +LOW -0 ="0 "
55273     +0 -0.0291627182 ="0.0291627182 "
55274     +0.0291627182 -0.0583254364 ="0.0583254364 "
55275     +0.0583254364 -0.0874881546 ="0.0874881546 "
55276     +0.0874881546 -0.1166508728 ="0.1166508728 "
55277     +0.1166508728 -HIGH="0.145813591 "
55278     +;
MPRINT(VAR_PROFILE):   value F86_ LOW -0 ="0 " 0 -0.0291627182 ="0.0291627182 " 0.0291627182
-0.0583254364 ="0.0583254364 " 0.0583254364 -0.0874881546 ="0.0874881546 " 0.0874881546
-0.1166508728 ="0.1166508728 " 0.1166508728 -HIGH="0.145813591 " ;
NOTE: Format F86_ has been output.
55279     +value F87_
55280     +LOW -0 ="0 "
55281     +0 -0.0308970822 ="0.0308970822 "
55282     +0.0308970822 -0.0617941644 ="0.0617941644 "
55283     +0.0617941644 -0.0926912467 ="0.0926912467 "
55284     +0.0926912467 -0.1235883289 ="0.1235883289 "
55285     +0.1235883289 -HIGH="0.1544854111 "
55286     +;
MPRINT(VAR_PROFILE):   value F87_ LOW -0 ="0 " 0 -0.0308970822 ="0.0308970822 " 0.0308970822
-0.0617941644 ="0.0617941644 " 0.0617941644 -0.0926912467 ="0.0926912467 " 0.0926912467
-0.1235883289 ="0.1235883289 " 0.1235883289 -HIGH="0.1544854111 " ;
NOTE: Format F87_ has been output.
55287     +value F88_
55288     +LOW -0 ="0 "
55289     +0 -0.0354135791 ="0.0354135791 "
55290     +0.0354135791 -0.0708271582 ="0.0708271582 "
55291     +0.0708271582 -0.1062407374 ="0.1062407374 "
Sistema SAS
 
55292     +0.1062407374 -0.1416543165 ="0.1416543165 "
55293     +0.1416543165 -0.1770678956 ="0.1770678956 "
55294     +;
MPRINT(VAR_PROFILE):   value F88_ LOW -0 ="0 " 0 -0.0354135791 ="0.0354135791 " 0.0354135791
-0.0708271582 ="0.0708271582 " 0.0708271582 -0.1062407374 ="0.1062407374 " 0.1062407374
-0.1416543165 ="0.1416543165 " 0.1416543165 -0.1770678956 ="0.1770678956 " ;
NOTE: Format F88_ has been output.
55295     +value F89_
55296     +LOW -0 ="0 "
55297     +0 -0.0221278716 ="0.0221278716 "
55298     +0.0221278716 -0.0442557431 ="0.0442557431 "
55299     +0.0442557431 -0.0663836147 ="0.0663836147 "
55300     +0.0663836147 -0.0885114862 ="0.0885114862 "
55301     +0.0885114862 -HIGH="0.1106393578 "
55302     +;
MPRINT(VAR_PROFILE):   value F89_ LOW -0 ="0 " 0 -0.0221278716 ="0.0221278716 " 0.0221278716
-0.0442557431 ="0.0442557431 " 0.0442557431 -0.0663836147 ="0.0663836147 " 0.0663836147
-0.0885114862 ="0.0885114862 " 0.0885114862 -HIGH="0.1106393578 " ;
NOTE: Format F89_ has been output.
55303     +value F90_
55304     +LOW -0 ="0 "
55305     +0 -0.0267864862 ="0.0267864862 "
55306     +0.0267864862 -0.0535729723 ="0.0535729723 "
55307     +0.0535729723 -0.0803594585 ="0.0803594585 "
55308     +0.0803594585 -0.1071459447 ="0.1071459447 "
55309     +0.1071459447 -HIGH="0.1339324309 "
55310     +;
MPRINT(VAR_PROFILE):   value F90_ LOW -0 ="0 " 0 -0.0267864862 ="0.0267864862 " 0.0267864862
-0.0535729723 ="0.0535729723 " 0.0535729723 -0.0803594585 ="0.0803594585 " 0.0803594585
-0.1071459447 ="0.1071459447 " 0.1071459447 -HIGH="0.1339324309 " ;
NOTE: Format F90_ has been output.
55311     +value F91_
55312     +LOW -0 ="0 "
55313     +0 -0.0618926404 ="0.0618926404 "
55314     +0.0618926404 -0.1237852808 ="0.1237852808 "
55315     +0.1237852808 -0.1856779212 ="0.1856779212 "
55316     +0.1856779212 -0.2475705617 ="0.2475705617 "
55317     +0.2475705617 -HIGH="0.3094632021 "
55318     +;
MPRINT(VAR_PROFILE):   value F91_ LOW -0 ="0 " 0 -0.0618926404 ="0.0618926404 " 0.0618926404
-0.1237852808 ="0.1237852808 " 0.1237852808 -0.1856779212 ="0.1856779212 " 0.1856779212
-0.2475705617 ="0.2475705617 " 0.2475705617 -HIGH="0.3094632021 " ;
NOTE: Format F91_ has been output.
55319     +value F92_
55320     +LOW -0 ="0 "
55321     +0 -0.0310054032 ="0.0310054032 "
55322     +0.0310054032 -0.0620108064 ="0.0620108064 "
55323     +0.0620108064 -0.0930162097 ="0.0930162097 "
55324     +0.0930162097 -0.1240216129 ="0.1240216129 "
55325     +0.1240216129 -HIGH="0.1550270161 "
55326     +;
MPRINT(VAR_PROFILE):   value F92_ LOW -0 ="0 " 0 -0.0310054032 ="0.0310054032 " 0.0310054032
-0.0620108064 ="0.0620108064 " 0.0620108064 -0.0930162097 ="0.0930162097 " 0.0930162097
-0.1240216129 ="0.1240216129 " 0.1240216129 -HIGH="0.1550270161 " ;
NOTE: Format F92_ has been output.
55327     +value F93_
55328     +LOW -0 ="0 "
55329     +0 -0.0963325308 ="0.0963325308 "
Sistema SAS
 
55330     +0.0963325308 -0.1926650617 ="0.1926650617 "
55331     +0.1926650617 -0.2889975925 ="0.2889975925 "
55332     +0.2889975925 -0.3853301234 ="0.3853301234 "
55333     +0.3853301234 -HIGH="0.4816626542 "
55334     +;
MPRINT(VAR_PROFILE):   value F93_ LOW -0 ="0 " 0 -0.0963325308 ="0.0963325308 " 0.0963325308
-0.1926650617 ="0.1926650617 " 0.1926650617 -0.2889975925 ="0.2889975925 " 0.2889975925
-0.3853301234 ="0.3853301234 " 0.3853301234 -HIGH="0.4816626542 " ;
NOTE: Format F93_ has been output.
55335     +value F94_
55336     +LOW -0 ="0 "
55337     +0 -0.0467162195 ="0.0467162195 "
55338     +0.0467162195 -0.093432439 ="0.093432439 "
55339     +0.093432439 -0.1401486585 ="0.1401486585 "
55340     +0.1401486585 -0.186864878 ="0.186864878 "
55341     +0.186864878 -HIGH="0.2335810975 "
55342     +;
MPRINT(VAR_PROFILE):   value F94_ LOW -0 ="0 " 0 -0.0467162195 ="0.0467162195 " 0.0467162195
-0.093432439 ="0.093432439 " 0.093432439 -0.1401486585 ="0.1401486585 " 0.1401486585 -0.186864878
="0.186864878 " 0.186864878 -HIGH="0.2335810975 " ;
NOTE: Format F94_ has been output.
55343     +value F95_
55344     +LOW -0 ="0 "
55345     +0 -0.0272538056 ="0.0272538056 "
55346     +0.0272538056 -0.0545076112 ="0.0545076112 "
55347     +0.0545076112 -0.0817614168 ="0.0817614168 "
55348     +0.0817614168 -0.1090152224 ="0.1090152224 "
55349     +0.1090152224 -HIGH="0.136269028 "
55350     +;
MPRINT(VAR_PROFILE):   value F95_ LOW -0 ="0 " 0 -0.0272538056 ="0.0272538056 " 0.0272538056
-0.0545076112 ="0.0545076112 " 0.0545076112 -0.0817614168 ="0.0817614168 " 0.0817614168
-0.1090152224 ="0.1090152224 " 0.1090152224 -HIGH="0.136269028 " ;
NOTE: Format F95_ has been output.
55351     +value F96_
55352     +LOW -0.0010351004 ="0.0005175502 "
55353     +0.0010351004 -0.0020702008 ="0.0015526506 "
55354     +0.0020702008 -0.0031053011 ="0.002587751 "
55355     +0.0031053011 -0.0041404015 ="0.0036228513 "
55356     +0.0041404015 -0.0051755019 ="0.0046579517 "
55357     +0.0051755019 -0.0062106023 ="0.0056930521 "
55358     +0.0062106023 -0.0072457027 ="0.0067281525 "
55359     +0.0072457027 -0.0082808031 ="0.0077632529 "
55360     +0.0082808031 -0.0799044863 ="0.0793869361 "
55361     +0.0799044863 -0.1515281695 ="0.1510106193 "
55362     +0.1515281695 -0.2231518527 ="0.2226343025 "
55363     +0.2231518527 -0.2947755359 ="0.2942579857 "
55364     +0.2947755359 -HIGH="0.3658816689 "
55365     +;
MPRINT(VAR_PROFILE):   value F96_ LOW -0.0010351004 ="0.0005175502 " 0.0010351004 -0.0020702008
="0.0015526506 " 0.0020702008 -0.0031053011 ="0.002587751 " 0.0031053011 -0.0041404015
="0.0036228513 " 0.0041404015 -0.0051755019 ="0.0046579517 " 0.0051755019 -0.0062106023
="0.0056930521 " 0.0062106023 -0.0072457027 ="0.0067281525 " 0.0072457027 -0.0082808031
="0.0077632529 " 0.0082808031 -0.0799044863 ="0.0793869361 " 0.0799044863 -0.1515281695
="0.1510106193 " 0.1515281695 -0.2231518527 ="0.2226343025 " 0.2231518527 -0.2947755359
="0.2942579857 " 0.2947755359 -HIGH="0.3658816689 " ;
NOTE: Format F96_ has been output.
55366     +value F97_
55367     +LOW -0 ="0 "
Sistema SAS
 
55368     +0 -0.0566022327 ="0.0566022327 "
55369     +0.0566022327 -0.1132044654 ="0.1132044654 "
55370     +0.1132044654 -0.1698066981 ="0.1698066981 "
55371     +0.1698066981 -0.2264089308 ="0.2264089308 "
55372     +0.2264089308 -HIGH="0.2830111635 "
55373     +;
MPRINT(VAR_PROFILE):   value F97_ LOW -0 ="0 " 0 -0.0566022327 ="0.0566022327 " 0.0566022327
-0.1132044654 ="0.1132044654 " 0.1132044654 -0.1698066981 ="0.1698066981 " 0.1698066981
-0.2264089308 ="0.2264089308 " 0.2264089308 -HIGH="0.2830111635 " ;
NOTE: Format F97_ has been output.
55374     +value F98_
55375     +LOW -0 ="0 "
55376     +0 -0.0708219297 ="0.0708219297 "
55377     +0.0708219297 -0.1416438593 ="0.1416438593 "
55378     +0.1416438593 -0.212465789 ="0.212465789 "
55379     +0.212465789 -0.2832877187 ="0.2832877187 "
55380     +0.2832877187 -HIGH="0.3541096483 "
55381     +;
MPRINT(VAR_PROFILE):   value F98_ LOW -0 ="0 " 0 -0.0708219297 ="0.0708219297 " 0.0708219297
-0.1416438593 ="0.1416438593 " 0.1416438593 -0.212465789 ="0.212465789 " 0.212465789 -0.2832877187
="0.2832877187 " 0.2832877187 -HIGH="0.3541096483 " ;
NOTE: Format F98_ has been output.
55382     +value F99_
55383     +LOW -0 ="0 "
55384     +0 -0.0232520073 ="0.0232520073 "
55385     +0.0232520073 -0.0465040146 ="0.0465040146 "
55386     +0.0465040146 -0.0697560218 ="0.0697560218 "
55387     +0.0697560218 -0.0930080291 ="0.0930080291 "
55388     +0.0930080291 -HIGH="0.1162600364 "
55389     +;
MPRINT(VAR_PROFILE):   value F99_ LOW -0 ="0 " 0 -0.0232520073 ="0.0232520073 " 0.0232520073
-0.0465040146 ="0.0465040146 " 0.0465040146 -0.0697560218 ="0.0697560218 " 0.0697560218
-0.0930080291 ="0.0930080291 " 0.0930080291 -HIGH="0.1162600364 " ;
NOTE: Format F99_ has been output.
55390     +value F100_
55391     +LOW -0 ="0 "
55392     +0 -0.122921598 ="0.122921598 "
55393     +0.122921598 -0.2458431959 ="0.2458431959 "
55394     +0.2458431959 -0.3687647939 ="0.3687647939 "
55395     +0.3687647939 -0.4916863919 ="0.4916863919 "
55396     +0.4916863919 -HIGH="0.6146079899 "
55397     +;
MPRINT(VAR_PROFILE):   value F100_ LOW -0 ="0 " 0 -0.122921598 ="0.122921598 " 0.122921598
-0.2458431959 ="0.2458431959 " 0.2458431959 -0.3687647939 ="0.3687647939 " 0.3687647939
-0.4916863919 ="0.4916863919 " 0.4916863919 -HIGH="0.6146079899 " ;
NOTE: Format F100_ has been output.
55398     +value F101_
55399     +LOW -0.0092859153 ="0.0046429576 "
55400     +0.0092859153 -0.0185718305 ="0.0139288729 "
55401     +0.0185718305 -0.0278577458 ="0.0232147881 "
55402     +0.0278577458 -0.037143661 ="0.0325007034 "
55403     +0.037143661 -0.0464295763 ="0.0417866186 "
55404     +0.0464295763 -0.0557154915 ="0.0510725339 "
55405     +0.0557154915 -0.0650014068 ="0.0603584491 "
55406     +0.0650014068 -0.074287322 ="0.0696443644 "
55407     +0.074287322 -0.130487296 ="0.1258443384 "
55408     +0.130487296 -0.1866872701 ="0.1820443125 "
55409     +0.1866872701 -0.2428872441 ="0.2382442865 "
Sistema SAS
 
55410     +0.2428872441 -0.2990872182 ="0.2944442605 "
55411     +0.2990872182 -HIGH="0.3506442346 "
55412     +;
MPRINT(VAR_PROFILE):   value F101_ LOW -0.0092859153 ="0.0046429576 " 0.0092859153 -0.0185718305
="0.0139288729 " 0.0185718305 -0.0278577458 ="0.0232147881 " 0.0278577458 -0.037143661
="0.0325007034 " 0.037143661 -0.0464295763 ="0.0417866186 " 0.0464295763 -0.0557154915
="0.0510725339 " 0.0557154915 -0.0650014068 ="0.0603584491 " 0.0650014068 -0.074287322
="0.0696443644 " 0.074287322 -0.130487296 ="0.1258443384 " 0.130487296 -0.1866872701
="0.1820443125 " 0.1866872701 -0.2428872441 ="0.2382442865 " 0.2428872441 -0.2990872182
="0.2944442605 " 0.2990872182 -HIGH="0.3506442346 " ;
NOTE: Format F101_ has been output.
55413     +value F102_
55414     +LOW -0 ="0 "
55415     +0 -0.1002445698 ="0.1002445698 "
55416     +0.1002445698 -0.2004891397 ="0.2004891397 "
55417     +0.2004891397 -0.3007337095 ="0.3007337095 "
55418     +0.3007337095 -0.4009782793 ="0.4009782793 "
55419     +0.4009782793 -HIGH="0.5012228492 "
55420     +;
MPRINT(VAR_PROFILE):   value F102_ LOW -0 ="0 " 0 -0.1002445698 ="0.1002445698 " 0.1002445698
-0.2004891397 ="0.2004891397 " 0.2004891397 -0.3007337095 ="0.3007337095 " 0.3007337095
-0.4009782793 ="0.4009782793 " 0.4009782793 -HIGH="0.5012228492 " ;
NOTE: Format F102_ has been output.
55421     +value F103_
55422     +LOW -0 ="0 "
55423     +0 -0.0196022988 ="0.0196022988 "
55424     +0.0196022988 -0.0392045976 ="0.0392045976 "
55425     +0.0392045976 -0.0588068964 ="0.0588068964 "
55426     +0.0588068964 -0.0784091951 ="0.0784091951 "
55427     +0.0784091951 -HIGH="0.0980114939 "
55428     +;
MPRINT(VAR_PROFILE):   value F103_ LOW -0 ="0 " 0 -0.0196022988 ="0.0196022988 " 0.0196022988
-0.0392045976 ="0.0392045976 " 0.0392045976 -0.0588068964 ="0.0588068964 " 0.0588068964
-0.0784091951 ="0.0784091951 " 0.0784091951 -HIGH="0.0980114939 " ;
NOTE: Format F103_ has been output.
MPRINT(VAR_PROFILE):   run;
55429     +run;
 
NOTE: PROCEDURE FORMAT ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS3.Clus_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format ANDI F1_. APPLIC F2_. ARAB F3_. ARGIC F4_. ARMENIA F5_. ARMENIAN
F6_. ATTACK F7_. AUDIO F8_. BANK F9_. BEYER F10_. BUILD F11_. BUSH F12_. CANDIDA F13_. CARTER
F14_. CHASTITI F15_. CHIP F16_. CIRCUIT F17_. CIVILIAN F18_. CLIENT F19_. CLINIC F20_. CLOSE F21_.
COMP F22_. COUNTRI F23_. DESIGN F24_. DEVIC F25_. DIET F26_. DISEAS F27_. DISPLAI F28_. DOCTOR
F29_. EAT F30_. EFFECT F31_. ELECTR F32_. ELECTRON F33_. EMPLOY F34_. ESCAP F35_. EXTERMIN F36_.
FOOD F37_. FORC F38_. GEB F39_. GENOCID F40_. GEORG F41_. GORDON F42_. GOVERN F43_. INTELLECT
F44_. ISRA F45_. ISRAEL F46_. JAKE F47_. JEW F48_. JEWISH F49_. JIMMI F50_. KILL F51_. LAND F52_.
LEBANON F53_. LIVNI F54_. LONGER F55_. MED F56_. MEDIC F57_. MEDICIN F58_. MOTIF F59_. MOUNTAIN
F60_. MSG F61_. OCCUP F62_. OCCUPI F63_. PALESTINIAN F64_. PASS F65_. PATIENT F66_. PEAC F67_.
PHYSICIAN F68_. POLICI F69_. POWER F70_. PRESID F71_. RADIO F72_. REDUND F73_. REPLAC F74_. ROAD
Sistema SAS
 
F75_. RUN F76_. SCI F77_. SENSIT F78_. SERA F79_. SERDAR F80_. SERV F81_. SERVER F82_. SHAME F83_.
SIGNAL F84_. SINGL F85_. SKEPTIC F86_. SOVIET F87_. SUPERSTIT F88_. SURREND F89_. SYMPTOM F90_.
SYNDROM F91_. TERRITORI F92_. TERROR F93_. TREATMENT F94_. TURK F95_. TURKISH F96_. URBANA F97_.
VOLTAG F98_. WAI F99_. WIDGET F100_. WINDOW F101_. XLIB F102_. ZUMA F103_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ANDI APPLIC ARAB ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BEYER BUILD BUSH
CANDIDA CARTER CHASTITI CHIP CIRCUIT CIVILIAN CLIENT CLINIC CLOSE COMP COUNTRI DESIGN DEVIC DIET
DISEAS DISPLAI DOCTOR EAT EFFECT ELECTR ELECTRON EMPLOY ESCAP EXTERMIN FOOD FORC GEB GENOCID GEORG
GORDON GOVERN INTELLECT ISRA ISRAEL JAKE JEW JEWISH JIMMI KILL LAND LEBANON LIVNI LONGER MED MEDIC
MEDICIN MOTIF MOUNTAIN MSG OCCUP OCCUPI PALESTINIAN PASS PATIENT PEAC PHYSICIAN POLICI POWER
PRESID RADIO REDUND REPLAC ROAD RUN SCI SENSIT SERA SERDAR SERV SERVER SHAME SIGNAL SINGL SKEPTIC
SOVIET SUPERSTIT SURREND SYMPTOM SYNDROM TERRITORI TERROR TREATMENT TURK TURKISH URBANA VOLTAG WAI
WIDGET WINDOW XLIB ZUMA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 3000   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK._BINNEDDATA.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.59 seconds
      cpu time            4.59 seconds
 
NOTE: There were 3000 observations read from the data set EMWS3.CLUS_TRAIN.
NOTE: There were 3000 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 840 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.60 seconds
      cpu time            4.61 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 840 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 840 observations and 4 variables.
Sistema SAS
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data _INTERVAL;
MPRINT(TRAIN):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TRAIN):   retain SegmentVariable "_OVERALL_" SegmentValue "EMWS3.Clus_TRAIN";
MPRINT(TRAIN):   label variable = "Variable" value = "Valor" count = "Número de ocurrencias"
percent = "Porcentaje";
MPRINT(TRAIN):   set _INTERVAL;
MPRINT(TRAIN):   run;
 
NOTE: There were 840 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 840 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   proc append base=EMWS3.Prof_INTDIST data=_INTERVAL force;
MPRINT(TRAIN):   run;
 
NOTE: Appending WORK._INTERVAL a EMWS3.PROF_INTDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 840 observations read from the data set WORK._INTERVAL.
NOTE: The data set EMWS3.PROF_INTDIST has 840 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS)
OUT=_STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 103 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 103 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
Sistema SAS
 
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   data EMWS3.Prof_STATS;
MPRINT(TRAIN):   merge EMWS3.Prof_STATS _STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;
 
NOTE: There were 103 observations read from the data set EMWS3.PROF_STATS.
NOTE: There were 103 observations read from the data set WORK._STAT.
NOTE: The data set EMWS3.PROF_STATS has 103 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):   filename X catalog "EMWS3.Prof_INTERVAL.FORMAT.source";
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   file X;
MPRINT(TRAIN):   put 'format' ;
MPRINT(TRAIN):   put "ANDI F1_.";
MPRINT(TRAIN):   put "APPLIC F2_.";
MPRINT(TRAIN):   put "ARAB F3_.";
MPRINT(TRAIN):   put "ARGIC F4_.";
MPRINT(TRAIN):   put "ARMENIA F5_.";
MPRINT(TRAIN):   put "ARMENIAN F6_.";
MPRINT(TRAIN):   put "ATTACK F7_.";
MPRINT(TRAIN):   put "AUDIO F8_.";
MPRINT(TRAIN):   put "BANK F9_.";
MPRINT(TRAIN):   put "BEYER F10_.";
MPRINT(TRAIN):   put "BUILD F11_.";
MPRINT(TRAIN):   put "BUSH F12_.";
MPRINT(TRAIN):   put "CANDIDA F13_.";
MPRINT(TRAIN):   put "CARTER F14_.";
MPRINT(TRAIN):   put "CHASTITI F15_.";
MPRINT(TRAIN):   put "CHIP F16_.";
MPRINT(TRAIN):   put "CIRCUIT F17_.";
MPRINT(TRAIN):   put "CIVILIAN F18_.";
MPRINT(TRAIN):   put "CLIENT F19_.";
MPRINT(TRAIN):   put "CLINIC F20_.";
MPRINT(TRAIN):   put "CLOSE F21_.";
MPRINT(TRAIN):   put "COMP F22_.";
MPRINT(TRAIN):   put "COUNTRI F23_.";
MPRINT(TRAIN):   put "DESIGN F24_.";
MPRINT(TRAIN):   put "DEVIC F25_.";
MPRINT(TRAIN):   put "DIET F26_.";
MPRINT(TRAIN):   put "DISEAS F27_.";
MPRINT(TRAIN):   put "DISPLAI F28_.";
MPRINT(TRAIN):   put "DOCTOR F29_.";
MPRINT(TRAIN):   put "EAT F30_.";
MPRINT(TRAIN):   put "EFFECT F31_.";
MPRINT(TRAIN):   put "ELECTR F32_.";
MPRINT(TRAIN):   put "ELECTRON F33_.";
MPRINT(TRAIN):   put "EMPLOY F34_.";
MPRINT(TRAIN):   put "ESCAP F35_.";
MPRINT(TRAIN):   put "EXTERMIN F36_.";
MPRINT(TRAIN):   put "FOOD F37_.";
MPRINT(TRAIN):   put "FORC F38_.";
Sistema SAS
 
MPRINT(TRAIN):   put "GEB F39_.";
MPRINT(TRAIN):   put "GENOCID F40_.";
MPRINT(TRAIN):   put "GEORG F41_.";
MPRINT(TRAIN):   put "GORDON F42_.";
MPRINT(TRAIN):   put "GOVERN F43_.";
MPRINT(TRAIN):   put "INTELLECT F44_.";
MPRINT(TRAIN):   put "ISRA F45_.";
MPRINT(TRAIN):   put "ISRAEL F46_.";
MPRINT(TRAIN):   put "JAKE F47_.";
MPRINT(TRAIN):   put "JEW F48_.";
MPRINT(TRAIN):   put "JEWISH F49_.";
MPRINT(TRAIN):   put "JIMMI F50_.";
MPRINT(TRAIN):   put "KILL F51_.";
MPRINT(TRAIN):   put "LAND F52_.";
MPRINT(TRAIN):   put "LEBANON F53_.";
MPRINT(TRAIN):   put "LIVNI F54_.";
MPRINT(TRAIN):   put "LONGER F55_.";
MPRINT(TRAIN):   put "MED F56_.";
MPRINT(TRAIN):   put "MEDIC F57_.";
MPRINT(TRAIN):   put "MEDICIN F58_.";
MPRINT(TRAIN):   put "MOTIF F59_.";
MPRINT(TRAIN):   put "MOUNTAIN F60_.";
MPRINT(TRAIN):   put "MSG F61_.";
MPRINT(TRAIN):   put "OCCUP F62_.";
MPRINT(TRAIN):   put "OCCUPI F63_.";
MPRINT(TRAIN):   put "PALESTINIAN F64_.";
MPRINT(TRAIN):   put "PASS F65_.";
MPRINT(TRAIN):   put "PATIENT F66_.";
MPRINT(TRAIN):   put "PEAC F67_.";
MPRINT(TRAIN):   put "PHYSICIAN F68_.";
MPRINT(TRAIN):   put "POLICI F69_.";
MPRINT(TRAIN):   put "POWER F70_.";
MPRINT(TRAIN):   put "PRESID F71_.";
MPRINT(TRAIN):   put "RADIO F72_.";
MPRINT(TRAIN):   put "REDUND F73_.";
MPRINT(TRAIN):   put "REPLAC F74_.";
MPRINT(TRAIN):   put "ROAD F75_.";
MPRINT(TRAIN):   put "RUN F76_.";
MPRINT(TRAIN):   put "SCI F77_.";
MPRINT(TRAIN):   put "SENSIT F78_.";
MPRINT(TRAIN):   put "SERA F79_.";
MPRINT(TRAIN):   put "SERDAR F80_.";
MPRINT(TRAIN):   put "SERV F81_.";
MPRINT(TRAIN):   put "SERVER F82_.";
MPRINT(TRAIN):   put "SHAME F83_.";
MPRINT(TRAIN):   put "SIGNAL F84_.";
MPRINT(TRAIN):   put "SINGL F85_.";
MPRINT(TRAIN):   put "SKEPTIC F86_.";
MPRINT(TRAIN):   put "SOVIET F87_.";
MPRINT(TRAIN):   put "SUPERSTIT F88_.";
MPRINT(TRAIN):   put "SURREND F89_.";
MPRINT(TRAIN):   put "SYMPTOM F90_.";
MPRINT(TRAIN):   put "SYNDROM F91_.";
MPRINT(TRAIN):   put "TERRITORI F92_.";
MPRINT(TRAIN):   put "TERROR F93_.";
MPRINT(TRAIN):   put "TREATMENT F94_.";
MPRINT(TRAIN):   put "TURK F95_.";
MPRINT(TRAIN):   put "TURKISH F96_.";
Sistema SAS
 
MPRINT(TRAIN):   put "URBANA F97_.";
MPRINT(TRAIN):   put "VOLTAG F98_.";
MPRINT(TRAIN):   put "WAI F99_.";
MPRINT(TRAIN):   put "WIDGET F100_.";
MPRINT(TRAIN):   put "WINDOW F101_.";
MPRINT(TRAIN):   put "XLIB F102_.";
MPRINT(TRAIN):   put "ZUMA F103_.";
MPRINT(TRAIN):   put ';';
MPRINT(TRAIN):   run;
 
NOTE: The file X is:
      Catalog Name=EMWS3.PROF_INTERVAL.FORMAT.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=4,
      Creado=vie, 11 de dic de 2020 22:46:16,
      Última modificación=vie, 11 de dic de 2020 22:46:16,
      Nombre
      archivo=C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\prof_int
      erval.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=             9KB,
      Tamaño de archivo (bytes)=9216
 
NOTE: 105 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 17.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Summarizing variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
MPRINT(SEGMENTSUMMARY):   data _null_;
MPRINT(SEGMENTSUMMARY):   retain cum othercount otherpct numLevels 0;
MPRINT(SEGMENTSUMMARY):   format Count 8.;
MPRINT(SEGMENTSUMMARY):   set _SEGMENT_ end=eof;
MPRINT(SEGMENTSUMMARY):   SegmentValue= strip(put(_SEGMENT_, best12.));
MPRINT(SEGMENTSUMMARY):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)),
strip(tranwrd(SegmentValue, '"','""'))) ;
MPRINT(SEGMENTSUMMARY):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(SEGMENTSUMMARY):   numLevels + 1;
MPRINT(SEGMENTSUMMARY):   output;
MPRINT(SEGMENTSUMMARY):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 10 observations read from the data set WORK._SEGMENT_.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="9";
Sistema SAS
 
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 20 observations read from the data set EMWS3.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='9');
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 9;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF_INTERVAL.FORMAT.SOURCE.
55430     +format
55431     +ANDI F1_.
55432     +APPLIC F2_.
55433     +ARAB F3_.
55434     +ARGIC F4_.
55435     +ARMENIA F5_.
55436     +ARMENIAN F6_.
55437     +ATTACK F7_.
55438     +AUDIO F8_.
55439     +BANK F9_.
55440     +BEYER F10_.
55441     +BUILD F11_.
55442     +BUSH F12_.
55443     +CANDIDA F13_.
55444     +CARTER F14_.
55445     +CHASTITI F15_.
55446     +CHIP F16_.
55447     +CIRCUIT F17_.
55448     +CIVILIAN F18_.
55449     +CLIENT F19_.
55450     +CLINIC F20_.
55451     +CLOSE F21_.
55452     +COMP F22_.
55453     +COUNTRI F23_.
55454     +DESIGN F24_.
55455     +DEVIC F25_.
55456     +DIET F26_.
55457     +DISEAS F27_.
55458     +DISPLAI F28_.
Sistema SAS
 
55459     +DOCTOR F29_.
55460     +EAT F30_.
55461     +EFFECT F31_.
55462     +ELECTR F32_.
55463     +ELECTRON F33_.
55464     +EMPLOY F34_.
55465     +ESCAP F35_.
55466     +EXTERMIN F36_.
55467     +FOOD F37_.
55468     +FORC F38_.
55469     +GEB F39_.
55470     +GENOCID F40_.
55471     +GEORG F41_.
55472     +GORDON F42_.
55473     +GOVERN F43_.
55474     +INTELLECT F44_.
55475     +ISRA F45_.
55476     +ISRAEL F46_.
55477     +JAKE F47_.
55478     +JEW F48_.
55479     +JEWISH F49_.
55480     +JIMMI F50_.
55481     +KILL F51_.
55482     +LAND F52_.
55483     +LEBANON F53_.
55484     +LIVNI F54_.
55485     +LONGER F55_.
55486     +MED F56_.
55487     +MEDIC F57_.
55488     +MEDICIN F58_.
55489     +MOTIF F59_.
55490     +MOUNTAIN F60_.
55491     +MSG F61_.
55492     +OCCUP F62_.
55493     +OCCUPI F63_.
55494     +PALESTINIAN F64_.
55495     +PASS F65_.
55496     +PATIENT F66_.
55497     +PEAC F67_.
55498     +PHYSICIAN F68_.
55499     +POLICI F69_.
55500     +POWER F70_.
55501     +PRESID F71_.
55502     +RADIO F72_.
55503     +REDUND F73_.
55504     +REPLAC F74_.
55505     +ROAD F75_.
55506     +RUN F76_.
55507     +SCI F77_.
55508     +SENSIT F78_.
55509     +SERA F79_.
55510     +SERDAR F80_.
55511     +SERV F81_.
55512     +SERVER F82_.
55513     +SHAME F83_.
55514     +SIGNAL F84_.
55515     +SINGL F85_.
55516     +SKEPTIC F86_.
Sistema SAS
 
55517     +SOVIET F87_.
55518     +SUPERSTIT F88_.
55519     +SURREND F89_.
55520     +SYMPTOM F90_.
55521     +SYNDROM F91_.
55522     +TERRITORI F92_.
55523     +TERROR F93_.
55524     +TREATMENT F94_.
55525     +TURK F95_.
55526     +TURKISH F96_.
55527     +URBANA F97_.
55528     +VOLTAG F98_.
55529     +WAI F99_.
55530     +WIDGET F100_.
55531     +WINDOW F101_.
55532     +XLIB F102_.
55533     +ZUMA F103_.
55534     +;
MPRINT(SEGMENTSUMMARY):   format ANDI F1_. APPLIC F2_. ARAB F3_. ARGIC F4_. ARMENIA F5_. ARMENIAN
F6_. ATTACK F7_. AUDIO F8_. BANK F9_. BEYER F10_. BUILD F11_. BUSH F12_. CANDIDA F13_. CARTER
F14_. CHASTITI F15_. CHIP F16_. CIRCUIT F17_. CIVILIAN F18_. CLIENT F19_. CLINIC F20_. CLOSE F21_.
COMP F22_. COUNTRI F23_. DESIGN F24_. DEVIC F25_. DIET F26_. DISEAS F27_. DISPLAI F28_. DOCTOR
F29_. EAT F30_. EFFECT F31_. ELECTR F32_. ELECTRON F33_. EMPLOY F34_. ESCAP F35_. EXTERMIN F36_.
FOOD F37_. FORC F38_. GEB F39_. GENOCID F40_. GEORG F41_. GORDON F42_. GOVERN F43_. INTELLECT
F44_. ISRA F45_. ISRAEL F46_. JAKE F47_. JEW F48_. JEWISH F49_. JIMMI F50_. KILL F51_. LAND F52_.
LEBANON F53_. LIVNI F54_. LONGER F55_. MED F56_. MEDIC F57_. MEDICIN F58_. MOTIF F59_. MOUNTAIN
F60_. MSG F61_. OCCUP F62_. OCCUPI F63_. PALESTINIAN F64_. PASS F65_. PATIENT F66_. PEAC F67_.
PHYSICIAN F68_. POLICI F69_. POWER F70_. PRESID F71_. RADIO F72_. REDUND F73_. REPLAC F74_. ROAD
F75_. RUN F76_. SCI F77_. SENSIT F78_. SERA F79_. SERDAR F80_. SERV F81_. SERVER F82_. SHAME F83_.
SIGNAL F84_. SINGL F85_. SKEPTIC F86_. SOVIET F87_. SUPERSTIT F88_. SURREND F89_. SYMPTOM F90_.
SYNDROM F91_. TERRITORI F92_. TERROR F93_. TREATMENT F94_. TURK F95_. TURKISH F96_. URBANA F97_.
VOLTAG F98_. WAI F99_. WIDGET F100_. WINDOW F101_. XLIB F102_. ZUMA F103_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
*------------------------------------------------------------*
* Prof: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
Sistema SAS
 
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=vie, 11 de dic de 2020 22:45:59,
      Última modificación=vie, 11 de dic de 2020 22:45:59,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            17KB,
      Tamaño de archivo (bytes)=17408
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
55535     +%macro _vars;
55536     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ARAB AUDIO BUILD CHIP CIRCUIT COMP DESIGN DEVIC ELECTR ELECTRON ISRA ISRAEL
JEW MED POWER RADIO SCI SIGNAL VOLTAG WINDOW;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 1047   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.50 seconds
      cpu time            4.49 seconds
 
NOTE: There were 1047 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=9;
NOTE: There were 1047 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.51 seconds
      cpu time            4.51 seconds
 
 
Sistema SAS
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ARAB AUDIO BUILD CHIP CIRCUIT COMP DESIGN DEVIC ELECTR ELECTRON ISRA ISRAEL
JEW MED POWER RADIO SCI SIGNAL VOLTAG WINDOW;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 1047   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.27 seconds
      cpu time            4.28 seconds
 
NOTE: There were 1047 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=9;
NOTE: There were 1047 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 145 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.28 seconds
      cpu time            4.28 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
Sistema SAS
 
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 145 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 145 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "9";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de
ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 145 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 145 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL a EMWS3.PROF_INTDIST.
NOTE: There were 145 observations read from the data set WORK._INTERVAL.
NOTE: 145 observations added.
NOTE: The data set EMWS3.PROF_INTDIST has 985 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS
Sistema SAS
 
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF_STATS.
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF_STATS has 123 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
Sistema SAS
 
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="3";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 20 observations read from the data set EMWS3.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='3');
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 3;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF_INTERVAL.FORMAT.SOURCE.
55537     +format
55538     +ANDI F1_.
55539     +APPLIC F2_.
55540     +ARAB F3_.
55541     +ARGIC F4_.
55542     +ARMENIA F5_.
55543     +ARMENIAN F6_.
55544     +ATTACK F7_.
55545     +AUDIO F8_.
55546     +BANK F9_.
55547     +BEYER F10_.
55548     +BUILD F11_.
55549     +BUSH F12_.
55550     +CANDIDA F13_.
55551     +CARTER F14_.
55552     +CHASTITI F15_.
55553     +CHIP F16_.
55554     +CIRCUIT F17_.
55555     +CIVILIAN F18_.
Sistema SAS
 
55556     +CLIENT F19_.
55557     +CLINIC F20_.
55558     +CLOSE F21_.
55559     +COMP F22_.
55560     +COUNTRI F23_.
55561     +DESIGN F24_.
55562     +DEVIC F25_.
55563     +DIET F26_.
55564     +DISEAS F27_.
55565     +DISPLAI F28_.
55566     +DOCTOR F29_.
55567     +EAT F30_.
55568     +EFFECT F31_.
55569     +ELECTR F32_.
55570     +ELECTRON F33_.
55571     +EMPLOY F34_.
55572     +ESCAP F35_.
55573     +EXTERMIN F36_.
55574     +FOOD F37_.
55575     +FORC F38_.
55576     +GEB F39_.
55577     +GENOCID F40_.
55578     +GEORG F41_.
55579     +GORDON F42_.
55580     +GOVERN F43_.
55581     +INTELLECT F44_.
55582     +ISRA F45_.
55583     +ISRAEL F46_.
55584     +JAKE F47_.
55585     +JEW F48_.
55586     +JEWISH F49_.
55587     +JIMMI F50_.
55588     +KILL F51_.
55589     +LAND F52_.
55590     +LEBANON F53_.
55591     +LIVNI F54_.
55592     +LONGER F55_.
55593     +MED F56_.
55594     +MEDIC F57_.
55595     +MEDICIN F58_.
55596     +MOTIF F59_.
55597     +MOUNTAIN F60_.
55598     +MSG F61_.
55599     +OCCUP F62_.
55600     +OCCUPI F63_.
55601     +PALESTINIAN F64_.
55602     +PASS F65_.
55603     +PATIENT F66_.
55604     +PEAC F67_.
55605     +PHYSICIAN F68_.
55606     +POLICI F69_.
55607     +POWER F70_.
55608     +PRESID F71_.
55609     +RADIO F72_.
55610     +REDUND F73_.
55611     +REPLAC F74_.
55612     +ROAD F75_.
55613     +RUN F76_.
Sistema SAS
 
55614     +SCI F77_.
55615     +SENSIT F78_.
55616     +SERA F79_.
55617     +SERDAR F80_.
55618     +SERV F81_.
55619     +SERVER F82_.
55620     +SHAME F83_.
55621     +SIGNAL F84_.
55622     +SINGL F85_.
55623     +SKEPTIC F86_.
55624     +SOVIET F87_.
55625     +SUPERSTIT F88_.
55626     +SURREND F89_.
55627     +SYMPTOM F90_.
55628     +SYNDROM F91_.
55629     +TERRITORI F92_.
55630     +TERROR F93_.
55631     +TREATMENT F94_.
55632     +TURK F95_.
55633     +TURKISH F96_.
55634     +URBANA F97_.
55635     +VOLTAG F98_.
55636     +WAI F99_.
55637     +WIDGET F100_.
55638     +WINDOW F101_.
55639     +XLIB F102_.
55640     +ZUMA F103_.
55641     +;
MPRINT(SEGMENTSUMMARY):   format ANDI F1_. APPLIC F2_. ARAB F3_. ARGIC F4_. ARMENIA F5_. ARMENIAN
F6_. ATTACK F7_. AUDIO F8_. BANK F9_. BEYER F10_. BUILD F11_. BUSH F12_. CANDIDA F13_. CARTER
F14_. CHASTITI F15_. CHIP F16_. CIRCUIT F17_. CIVILIAN F18_. CLIENT F19_. CLINIC F20_. CLOSE F21_.
COMP F22_. COUNTRI F23_. DESIGN F24_. DEVIC F25_. DIET F26_. DISEAS F27_. DISPLAI F28_. DOCTOR
F29_. EAT F30_. EFFECT F31_. ELECTR F32_. ELECTRON F33_. EMPLOY F34_. ESCAP F35_. EXTERMIN F36_.
FOOD F37_. FORC F38_. GEB F39_. GENOCID F40_. GEORG F41_. GORDON F42_. GOVERN F43_. INTELLECT
F44_. ISRA F45_. ISRAEL F46_. JAKE F47_. JEW F48_. JEWISH F49_. JIMMI F50_. KILL F51_. LAND F52_.
LEBANON F53_. LIVNI F54_. LONGER F55_. MED F56_. MEDIC F57_. MEDICIN F58_. MOTIF F59_. MOUNTAIN
F60_. MSG F61_. OCCUP F62_. OCCUPI F63_. PALESTINIAN F64_. PASS F65_. PATIENT F66_. PEAC F67_.
PHYSICIAN F68_. POLICI F69_. POWER F70_. PRESID F71_. RADIO F72_. REDUND F73_. REPLAC F74_. ROAD
F75_. RUN F76_. SCI F77_. SENSIT F78_. SERA F79_. SERDAR F80_. SERV F81_. SERVER F82_. SHAME F83_.
SIGNAL F84_. SINGL F85_. SKEPTIC F86_. SOVIET F87_. SUPERSTIT F88_. SURREND F89_. SYMPTOM F90_.
SYNDROM F91_. TERRITORI F92_. TERROR F93_. TREATMENT F94_. TURK F95_. TURKISH F96_. URBANA F97_.
VOLTAG F98_. WAI F99_. WIDGET F100_. WINDOW F101_. XLIB F102_. ZUMA F103_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
*------------------------------------------------------------*
* Prof: calculando estadísticos de sumarización
Sistema SAS
 
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=vie, 11 de dic de 2020 22:45:59,
      Última modificación=vie, 11 de dic de 2020 22:46:17,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
55642     +%macro _vars;
55643     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   APPLIC BANK CHASTITI CLIENT COMP DISPLAI ELECTRON GEB GORDON INTELLECT
MOTIF RUN SCI SERVER SHAME SKEPTIC SURREND WIDGET WINDOW XLIB;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 691   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.52 seconds
      cpu time            4.51 seconds
Sistema SAS
 
 
NOTE: There were 691 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 691 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.53 seconds
      cpu time            4.51 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   APPLIC BANK CHASTITI CLIENT COMP DISPLAI ELECTRON GEB GORDON INTELLECT
MOTIF RUN SCI SERVER SHAME SKEPTIC SURREND WIDGET WINDOW XLIB;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 691   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.44 seconds
      cpu time            4.46 seconds
 
NOTE: There were 691 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 691 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 151 observations and 9 variables.
Sistema SAS
 
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.45 seconds
      cpu time            4.46 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 151 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 151 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de
ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 151 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 151 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
Sistema SAS
 
NOTE: Appending WORK._INTERVAL a EMWS3.PROF_INTDIST.
NOTE: There were 151 observations read from the data set WORK._INTERVAL.
NOTE: 151 observations added.
NOTE: The data set EMWS3.PROF_INTDIST has 1136 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF_STATS.
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF_STATS has 143 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
Sistema SAS
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="5";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 20 observations read from the data set EMWS3.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='5');
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 5;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF_INTERVAL.FORMAT.SOURCE.
55644     +format
55645     +ANDI F1_.
55646     +APPLIC F2_.
55647     +ARAB F3_.
55648     +ARGIC F4_.
55649     +ARMENIA F5_.
55650     +ARMENIAN F6_.
55651     +ATTACK F7_.
55652     +AUDIO F8_.
Sistema SAS
 
55653     +BANK F9_.
55654     +BEYER F10_.
55655     +BUILD F11_.
55656     +BUSH F12_.
55657     +CANDIDA F13_.
55658     +CARTER F14_.
55659     +CHASTITI F15_.
55660     +CHIP F16_.
55661     +CIRCUIT F17_.
55662     +CIVILIAN F18_.
55663     +CLIENT F19_.
55664     +CLINIC F20_.
55665     +CLOSE F21_.
55666     +COMP F22_.
55667     +COUNTRI F23_.
55668     +DESIGN F24_.
55669     +DEVIC F25_.
55670     +DIET F26_.
55671     +DISEAS F27_.
55672     +DISPLAI F28_.
55673     +DOCTOR F29_.
55674     +EAT F30_.
55675     +EFFECT F31_.
55676     +ELECTR F32_.
55677     +ELECTRON F33_.
55678     +EMPLOY F34_.
55679     +ESCAP F35_.
55680     +EXTERMIN F36_.
55681     +FOOD F37_.
55682     +FORC F38_.
55683     +GEB F39_.
55684     +GENOCID F40_.
55685     +GEORG F41_.
55686     +GORDON F42_.
55687     +GOVERN F43_.
55688     +INTELLECT F44_.
55689     +ISRA F45_.
55690     +ISRAEL F46_.
55691     +JAKE F47_.
55692     +JEW F48_.
55693     +JEWISH F49_.
55694     +JIMMI F50_.
55695     +KILL F51_.
55696     +LAND F52_.
55697     +LEBANON F53_.
55698     +LIVNI F54_.
55699     +LONGER F55_.
55700     +MED F56_.
55701     +MEDIC F57_.
55702     +MEDICIN F58_.
55703     +MOTIF F59_.
55704     +MOUNTAIN F60_.
55705     +MSG F61_.
55706     +OCCUP F62_.
55707     +OCCUPI F63_.
55708     +PALESTINIAN F64_.
55709     +PASS F65_.
55710     +PATIENT F66_.
Sistema SAS
 
55711     +PEAC F67_.
55712     +PHYSICIAN F68_.
55713     +POLICI F69_.
55714     +POWER F70_.
55715     +PRESID F71_.
55716     +RADIO F72_.
55717     +REDUND F73_.
55718     +REPLAC F74_.
55719     +ROAD F75_.
55720     +RUN F76_.
55721     +SCI F77_.
55722     +SENSIT F78_.
55723     +SERA F79_.
55724     +SERDAR F80_.
55725     +SERV F81_.
55726     +SERVER F82_.
55727     +SHAME F83_.
55728     +SIGNAL F84_.
55729     +SINGL F85_.
55730     +SKEPTIC F86_.
55731     +SOVIET F87_.
55732     +SUPERSTIT F88_.
55733     +SURREND F89_.
55734     +SYMPTOM F90_.
55735     +SYNDROM F91_.
55736     +TERRITORI F92_.
55737     +TERROR F93_.
55738     +TREATMENT F94_.
55739     +TURK F95_.
55740     +TURKISH F96_.
55741     +URBANA F97_.
55742     +VOLTAG F98_.
55743     +WAI F99_.
55744     +WIDGET F100_.
55745     +WINDOW F101_.
55746     +XLIB F102_.
55747     +ZUMA F103_.
55748     +;
MPRINT(SEGMENTSUMMARY):   format ANDI F1_. APPLIC F2_. ARAB F3_. ARGIC F4_. ARMENIA F5_. ARMENIAN
F6_. ATTACK F7_. AUDIO F8_. BANK F9_. BEYER F10_. BUILD F11_. BUSH F12_. CANDIDA F13_. CARTER
F14_. CHASTITI F15_. CHIP F16_. CIRCUIT F17_. CIVILIAN F18_. CLIENT F19_. CLINIC F20_. CLOSE F21_.
COMP F22_. COUNTRI F23_. DESIGN F24_. DEVIC F25_. DIET F26_. DISEAS F27_. DISPLAI F28_. DOCTOR
F29_. EAT F30_. EFFECT F31_. ELECTR F32_. ELECTRON F33_. EMPLOY F34_. ESCAP F35_. EXTERMIN F36_.
FOOD F37_. FORC F38_. GEB F39_. GENOCID F40_. GEORG F41_. GORDON F42_. GOVERN F43_. INTELLECT
F44_. ISRA F45_. ISRAEL F46_. JAKE F47_. JEW F48_. JEWISH F49_. JIMMI F50_. KILL F51_. LAND F52_.
LEBANON F53_. LIVNI F54_. LONGER F55_. MED F56_. MEDIC F57_. MEDICIN F58_. MOTIF F59_. MOUNTAIN
F60_. MSG F61_. OCCUP F62_. OCCUPI F63_. PALESTINIAN F64_. PASS F65_. PATIENT F66_. PEAC F67_.
PHYSICIAN F68_. POLICI F69_. POWER F70_. PRESID F71_. RADIO F72_. REDUND F73_. REPLAC F74_. ROAD
F75_. RUN F76_. SCI F77_. SENSIT F78_. SERA F79_. SERDAR F80_. SERV F81_. SERVER F82_. SHAME F83_.
SIGNAL F84_. SINGL F85_. SKEPTIC F86_. SOVIET F87_. SUPERSTIT F88_. SURREND F89_. SYMPTOM F90_.
SYNDROM F91_. TERRITORI F92_. TERROR F93_. TREATMENT F94_. TURK F95_. TURKISH F96_. URBANA F97_.
VOLTAG F98_. WAI F99_. WIDGET F100_. WINDOW F101_. XLIB F102_. ZUMA F103_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
Sistema SAS
 
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
*------------------------------------------------------------*
* Prof: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=vie, 11 de dic de 2020 22:45:59,
      Última modificación=vie, 11 de dic de 2020 22:46:26,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
55749     +%macro _vars;
55750     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
Sistema SAS
 
MPRINT(VAR_PROFILE):   CANDIDA CLINIC DIET DISEAS DOCTOR EAT EFFECT FOOD MED MEDIC MEDICIN MSG
PATIENT PHYSICIAN SCI SENSIT SUPERSTIT SYMPTOM SYNDROM TREATMENT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 408   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.45 seconds
      cpu time            4.43 seconds
 
NOTE: There were 408 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=5;
NOTE: There were 408 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.46 seconds
      cpu time            4.43 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   CANDIDA CLINIC DIET DISEAS DOCTOR EAT EFFECT FOOD MED MEDIC MEDICIN MSG
PATIENT PHYSICIAN SCI SENSIT SUPERSTIT SYMPTOM SYNDROM TREATMENT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 408   Memory used = 511K.
Sistema SAS
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.71 seconds
      cpu time            4.70 seconds
 
NOTE: There were 408 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=5;
NOTE: There were 408 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 138 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.72 seconds
      cpu time            4.70 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 138 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 138 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "5";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de
ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
Sistema SAS
 
NOTE: There were 138 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 138 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL a EMWS3.PROF_INTDIST.
NOTE: There were 138 observations read from the data set WORK._INTERVAL.
NOTE: 138 observations added.
NOTE: The data set EMWS3.PROF_INTDIST has 1274 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
Sistema SAS
 
 
NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF_STATS.
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF_STATS has 163 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="1";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 20 observations read from the data set EMWS3.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='1');
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 1;
Sistema SAS
 
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF_INTERVAL.FORMAT.SOURCE.
55751     +format
55752     +ANDI F1_.
55753     +APPLIC F2_.
55754     +ARAB F3_.
55755     +ARGIC F4_.
55756     +ARMENIA F5_.
55757     +ARMENIAN F6_.
55758     +ATTACK F7_.
55759     +AUDIO F8_.
55760     +BANK F9_.
55761     +BEYER F10_.
55762     +BUILD F11_.
55763     +BUSH F12_.
55764     +CANDIDA F13_.
55765     +CARTER F14_.
55766     +CHASTITI F15_.
55767     +CHIP F16_.
55768     +CIRCUIT F17_.
55769     +CIVILIAN F18_.
55770     +CLIENT F19_.
55771     +CLINIC F20_.
55772     +CLOSE F21_.
55773     +COMP F22_.
55774     +COUNTRI F23_.
55775     +DESIGN F24_.
55776     +DEVIC F25_.
55777     +DIET F26_.
55778     +DISEAS F27_.
55779     +DISPLAI F28_.
55780     +DOCTOR F29_.
55781     +EAT F30_.
55782     +EFFECT F31_.
55783     +ELECTR F32_.
55784     +ELECTRON F33_.
55785     +EMPLOY F34_.
55786     +ESCAP F35_.
55787     +EXTERMIN F36_.
55788     +FOOD F37_.
55789     +FORC F38_.
55790     +GEB F39_.
55791     +GENOCID F40_.
55792     +GEORG F41_.
55793     +GORDON F42_.
55794     +GOVERN F43_.
55795     +INTELLECT F44_.
55796     +ISRA F45_.
55797     +ISRAEL F46_.
55798     +JAKE F47_.
55799     +JEW F48_.
55800     +JEWISH F49_.
55801     +JIMMI F50_.
55802     +KILL F51_.
55803     +LAND F52_.
55804     +LEBANON F53_.
55805     +LIVNI F54_.
55806     +LONGER F55_.
55807     +MED F56_.
Sistema SAS
 
55808     +MEDIC F57_.
55809     +MEDICIN F58_.
55810     +MOTIF F59_.
55811     +MOUNTAIN F60_.
55812     +MSG F61_.
55813     +OCCUP F62_.
55814     +OCCUPI F63_.
55815     +PALESTINIAN F64_.
55816     +PASS F65_.
55817     +PATIENT F66_.
55818     +PEAC F67_.
55819     +PHYSICIAN F68_.
55820     +POLICI F69_.
55821     +POWER F70_.
55822     +PRESID F71_.
55823     +RADIO F72_.
55824     +REDUND F73_.
55825     +REPLAC F74_.
55826     +ROAD F75_.
55827     +RUN F76_.
55828     +SCI F77_.
55829     +SENSIT F78_.
55830     +SERA F79_.
55831     +SERDAR F80_.
55832     +SERV F81_.
55833     +SERVER F82_.
55834     +SHAME F83_.
55835     +SIGNAL F84_.
55836     +SINGL F85_.
55837     +SKEPTIC F86_.
55838     +SOVIET F87_.
55839     +SUPERSTIT F88_.
55840     +SURREND F89_.
55841     +SYMPTOM F90_.
55842     +SYNDROM F91_.
55843     +TERRITORI F92_.
55844     +TERROR F93_.
55845     +TREATMENT F94_.
55846     +TURK F95_.
55847     +TURKISH F96_.
55848     +URBANA F97_.
55849     +VOLTAG F98_.
55850     +WAI F99_.
55851     +WIDGET F100_.
55852     +WINDOW F101_.
55853     +XLIB F102_.
55854     +ZUMA F103_.
55855     +;
MPRINT(SEGMENTSUMMARY):   format ANDI F1_. APPLIC F2_. ARAB F3_. ARGIC F4_. ARMENIA F5_. ARMENIAN
F6_. ATTACK F7_. AUDIO F8_. BANK F9_. BEYER F10_. BUILD F11_. BUSH F12_. CANDIDA F13_. CARTER
F14_. CHASTITI F15_. CHIP F16_. CIRCUIT F17_. CIVILIAN F18_. CLIENT F19_. CLINIC F20_. CLOSE F21_.
COMP F22_. COUNTRI F23_. DESIGN F24_. DEVIC F25_. DIET F26_. DISEAS F27_. DISPLAI F28_. DOCTOR
F29_. EAT F30_. EFFECT F31_. ELECTR F32_. ELECTRON F33_. EMPLOY F34_. ESCAP F35_. EXTERMIN F36_.
FOOD F37_. FORC F38_. GEB F39_. GENOCID F40_. GEORG F41_. GORDON F42_. GOVERN F43_. INTELLECT
F44_. ISRA F45_. ISRAEL F46_. JAKE F47_. JEW F48_. JEWISH F49_. JIMMI F50_. KILL F51_. LAND F52_.
LEBANON F53_. LIVNI F54_. LONGER F55_. MED F56_. MEDIC F57_. MEDICIN F58_. MOTIF F59_. MOUNTAIN
F60_. MSG F61_. OCCUP F62_. OCCUPI F63_. PALESTINIAN F64_. PASS F65_. PATIENT F66_. PEAC F67_.
PHYSICIAN F68_. POLICI F69_. POWER F70_. PRESID F71_. RADIO F72_. REDUND F73_. REPLAC F74_. ROAD
Sistema SAS
 
F75_. RUN F76_. SCI F77_. SENSIT F78_. SERA F79_. SERDAR F80_. SERV F81_. SERVER F82_. SHAME F83_.
SIGNAL F84_. SINGL F85_. SKEPTIC F86_. SOVIET F87_. SUPERSTIT F88_. SURREND F89_. SYMPTOM F90_.
SYNDROM F91_. TERRITORI F92_. TERROR F93_. TREATMENT F94_. TURK F95_. TURKISH F96_. URBANA F97_.
VOLTAG F98_. WAI F99_. WIDGET F100_. WINDOW F101_. XLIB F102_. ZUMA F103_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
 
*------------------------------------------------------------*
* Prof: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=vie, 11 de dic de 2020 22:45:59,
      Última modificación=vie, 11 de dic de 2020 22:46:35,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
55856     +%macro _vars;
55857     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
Sistema SAS
 
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ARAB ATTACK CIVILIAN COUNTRI FORC GOVERN ISRA ISRAEL JEW JEWISH KILL LAND
LEBANON OCCUP OCCUPI PALESTINIAN PEAC POLICI SCI TERRITORI;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 400   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.21 seconds
      cpu time            4.21 seconds
 
NOTE: There were 400 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 400 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.22 seconds
      cpu time            4.21 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
Sistema SAS
 
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ARAB ATTACK CIVILIAN COUNTRI FORC GOVERN ISRA ISRAEL JEW JEWISH KILL LAND
LEBANON OCCUP OCCUPI PALESTINIAN PEAC POLICI SCI TERRITORI;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 400   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.19 seconds
      cpu time            4.18 seconds
 
NOTE: There were 400 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 400 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 185 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.20 seconds
      cpu time            4.20 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 185 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 185 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
Sistema SAS
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de
ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 185 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 185 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL a EMWS3.PROF_INTDIST.
NOTE: There were 185 observations read from the data set WORK._INTERVAL.
NOTE: 185 observations added.
NOTE: The data set EMWS3.PROF_INTDIST has 1459 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
Sistema SAS
 
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF_STATS.
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF_STATS has 183 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="2";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 2 observations read from the data set EMWS3.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='2');
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
Sistema SAS
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 2;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF_INTERVAL.FORMAT.SOURCE.
55858     +format
55859     +ANDI F1_.
55860     +APPLIC F2_.
55861     +ARAB F3_.
55862     +ARGIC F4_.
55863     +ARMENIA F5_.
55864     +ARMENIAN F6_.
55865     +ATTACK F7_.
55866     +AUDIO F8_.
55867     +BANK F9_.
55868     +BEYER F10_.
55869     +BUILD F11_.
55870     +BUSH F12_.
55871     +CANDIDA F13_.
55872     +CARTER F14_.
55873     +CHASTITI F15_.
55874     +CHIP F16_.
55875     +CIRCUIT F17_.
55876     +CIVILIAN F18_.
55877     +CLIENT F19_.
55878     +CLINIC F20_.
55879     +CLOSE F21_.
55880     +COMP F22_.
55881     +COUNTRI F23_.
55882     +DESIGN F24_.
55883     +DEVIC F25_.
55884     +DIET F26_.
55885     +DISEAS F27_.
55886     +DISPLAI F28_.
55887     +DOCTOR F29_.
55888     +EAT F30_.
55889     +EFFECT F31_.
55890     +ELECTR F32_.
55891     +ELECTRON F33_.
55892     +EMPLOY F34_.
55893     +ESCAP F35_.
55894     +EXTERMIN F36_.
55895     +FOOD F37_.
55896     +FORC F38_.
55897     +GEB F39_.
55898     +GENOCID F40_.
55899     +GEORG F41_.
55900     +GORDON F42_.
55901     +GOVERN F43_.
55902     +INTELLECT F44_.
55903     +ISRA F45_.
55904     +ISRAEL F46_.
Sistema SAS
 
55905     +JAKE F47_.
55906     +JEW F48_.
55907     +JEWISH F49_.
55908     +JIMMI F50_.
55909     +KILL F51_.
55910     +LAND F52_.
55911     +LEBANON F53_.
55912     +LIVNI F54_.
55913     +LONGER F55_.
55914     +MED F56_.
55915     +MEDIC F57_.
55916     +MEDICIN F58_.
55917     +MOTIF F59_.
55918     +MOUNTAIN F60_.
55919     +MSG F61_.
55920     +OCCUP F62_.
55921     +OCCUPI F63_.
55922     +PALESTINIAN F64_.
55923     +PASS F65_.
55924     +PATIENT F66_.
55925     +PEAC F67_.
55926     +PHYSICIAN F68_.
55927     +POLICI F69_.
55928     +POWER F70_.
55929     +PRESID F71_.
55930     +RADIO F72_.
55931     +REDUND F73_.
55932     +REPLAC F74_.
55933     +ROAD F75_.
55934     +RUN F76_.
55935     +SCI F77_.
55936     +SENSIT F78_.
55937     +SERA F79_.
55938     +SERDAR F80_.
55939     +SERV F81_.
55940     +SERVER F82_.
55941     +SHAME F83_.
55942     +SIGNAL F84_.
55943     +SINGL F85_.
55944     +SKEPTIC F86_.
55945     +SOVIET F87_.
55946     +SUPERSTIT F88_.
55947     +SURREND F89_.
55948     +SYMPTOM F90_.
55949     +SYNDROM F91_.
55950     +TERRITORI F92_.
55951     +TERROR F93_.
55952     +TREATMENT F94_.
55953     +TURK F95_.
55954     +TURKISH F96_.
55955     +URBANA F97_.
55956     +VOLTAG F98_.
55957     +WAI F99_.
55958     +WIDGET F100_.
55959     +WINDOW F101_.
55960     +XLIB F102_.
55961     +ZUMA F103_.
55962     +;
Sistema SAS
 
MPRINT(SEGMENTSUMMARY):   format ANDI F1_. APPLIC F2_. ARAB F3_. ARGIC F4_. ARMENIA F5_. ARMENIAN
F6_. ATTACK F7_. AUDIO F8_. BANK F9_. BEYER F10_. BUILD F11_. BUSH F12_. CANDIDA F13_. CARTER
F14_. CHASTITI F15_. CHIP F16_. CIRCUIT F17_. CIVILIAN F18_. CLIENT F19_. CLINIC F20_. CLOSE F21_.
COMP F22_. COUNTRI F23_. DESIGN F24_. DEVIC F25_. DIET F26_. DISEAS F27_. DISPLAI F28_. DOCTOR
F29_. EAT F30_. EFFECT F31_. ELECTR F32_. ELECTRON F33_. EMPLOY F34_. ESCAP F35_. EXTERMIN F36_.
FOOD F37_. FORC F38_. GEB F39_. GENOCID F40_. GEORG F41_. GORDON F42_. GOVERN F43_. INTELLECT
F44_. ISRA F45_. ISRAEL F46_. JAKE F47_. JEW F48_. JEWISH F49_. JIMMI F50_. KILL F51_. LAND F52_.
LEBANON F53_. LIVNI F54_. LONGER F55_. MED F56_. MEDIC F57_. MEDICIN F58_. MOTIF F59_. MOUNTAIN
F60_. MSG F61_. OCCUP F62_. OCCUPI F63_. PALESTINIAN F64_. PASS F65_. PATIENT F66_. PEAC F67_.
PHYSICIAN F68_. POLICI F69_. POWER F70_. PRESID F71_. RADIO F72_. REDUND F73_. REPLAC F74_. ROAD
F75_. RUN F76_. SCI F77_. SENSIT F78_. SERA F79_. SERDAR F80_. SERV F81_. SERVER F82_. SHAME F83_.
SIGNAL F84_. SINGL F85_. SKEPTIC F86_. SOVIET F87_. SUPERSTIT F88_. SURREND F89_. SYMPTOM F90_.
SYNDROM F91_. TERRITORI F92_. TERROR F93_. TREATMENT F94_. TURK F95_. TURKISH F96_. URBANA F97_.
VOLTAG F98_. WAI F99_. WIDGET F100_. WINDOW F101_. XLIB F102_. ZUMA F103_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
*------------------------------------------------------------*
* Prof: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=vie, 11 de dic de 2020 22:45:59,
      Última modificación=vie, 11 de dic de 2020 22:46:44,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
Sistema SAS
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
55963     +%macro _vars;
55964     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   MED SCI;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 236   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.47 seconds
      cpu time            4.46 seconds
 
NOTE: There were 236 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 236 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.48 seconds
      cpu time            4.49 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
Sistema SAS
 
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   MED SCI;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 236   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.39 seconds
      cpu time            4.39 seconds
 
NOTE: There were 236 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 236 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 17 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.40 seconds
      cpu time            4.40 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 17 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
Sistema SAS
 
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de
ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 17 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 17 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL a EMWS3.PROF_INTDIST.
NOTE: There were 17 observations read from the data set WORK._INTERVAL.
NOTE: 17 observations added.
NOTE: The data set EMWS3.PROF_INTDIST has 1476 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 14 variables.
Sistema SAS
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF_STATS.
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: 2 observations added.
NOTE: The data set EMWS3.PROF_STATS has 185 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="8";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 20 observations read from the data set EMWS3.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='8');
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
Sistema SAS
 
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 8;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF_INTERVAL.FORMAT.SOURCE.
55965     +format
55966     +ANDI F1_.
55967     +APPLIC F2_.
55968     +ARAB F3_.
55969     +ARGIC F4_.
55970     +ARMENIA F5_.
55971     +ARMENIAN F6_.
55972     +ATTACK F7_.
55973     +AUDIO F8_.
55974     +BANK F9_.
55975     +BEYER F10_.
55976     +BUILD F11_.
55977     +BUSH F12_.
55978     +CANDIDA F13_.
55979     +CARTER F14_.
55980     +CHASTITI F15_.
55981     +CHIP F16_.
55982     +CIRCUIT F17_.
55983     +CIVILIAN F18_.
55984     +CLIENT F19_.
55985     +CLINIC F20_.
55986     +CLOSE F21_.
55987     +COMP F22_.
55988     +COUNTRI F23_.
55989     +DESIGN F24_.
55990     +DEVIC F25_.
55991     +DIET F26_.
55992     +DISEAS F27_.
55993     +DISPLAI F28_.
55994     +DOCTOR F29_.
55995     +EAT F30_.
55996     +EFFECT F31_.
55997     +ELECTR F32_.
55998     +ELECTRON F33_.
55999     +EMPLOY F34_.
56000     +ESCAP F35_.
56001     +EXTERMIN F36_.
56002     +FOOD F37_.
56003     +FORC F38_.
Sistema SAS
 
56004     +GEB F39_.
56005     +GENOCID F40_.
56006     +GEORG F41_.
56007     +GORDON F42_.
56008     +GOVERN F43_.
56009     +INTELLECT F44_.
56010     +ISRA F45_.
56011     +ISRAEL F46_.
56012     +JAKE F47_.
56013     +JEW F48_.
56014     +JEWISH F49_.
56015     +JIMMI F50_.
56016     +KILL F51_.
56017     +LAND F52_.
56018     +LEBANON F53_.
56019     +LIVNI F54_.
56020     +LONGER F55_.
56021     +MED F56_.
56022     +MEDIC F57_.
56023     +MEDICIN F58_.
56024     +MOTIF F59_.
56025     +MOUNTAIN F60_.
56026     +MSG F61_.
56027     +OCCUP F62_.
56028     +OCCUPI F63_.
56029     +PALESTINIAN F64_.
56030     +PASS F65_.
56031     +PATIENT F66_.
56032     +PEAC F67_.
56033     +PHYSICIAN F68_.
56034     +POLICI F69_.
56035     +POWER F70_.
56036     +PRESID F71_.
56037     +RADIO F72_.
56038     +REDUND F73_.
56039     +REPLAC F74_.
56040     +ROAD F75_.
56041     +RUN F76_.
56042     +SCI F77_.
56043     +SENSIT F78_.
56044     +SERA F79_.
56045     +SERDAR F80_.
56046     +SERV F81_.
56047     +SERVER F82_.
56048     +SHAME F83_.
56049     +SIGNAL F84_.
56050     +SINGL F85_.
56051     +SKEPTIC F86_.
56052     +SOVIET F87_.
56053     +SUPERSTIT F88_.
56054     +SURREND F89_.
56055     +SYMPTOM F90_.
56056     +SYNDROM F91_.
56057     +TERRITORI F92_.
56058     +TERROR F93_.
56059     +TREATMENT F94_.
56060     +TURK F95_.
56061     +TURKISH F96_.
Sistema SAS
 
56062     +URBANA F97_.
56063     +VOLTAG F98_.
56064     +WAI F99_.
56065     +WIDGET F100_.
56066     +WINDOW F101_.
56067     +XLIB F102_.
56068     +ZUMA F103_.
56069     +;
MPRINT(SEGMENTSUMMARY):   format ANDI F1_. APPLIC F2_. ARAB F3_. ARGIC F4_. ARMENIA F5_. ARMENIAN
F6_. ATTACK F7_. AUDIO F8_. BANK F9_. BEYER F10_. BUILD F11_. BUSH F12_. CANDIDA F13_. CARTER
F14_. CHASTITI F15_. CHIP F16_. CIRCUIT F17_. CIVILIAN F18_. CLIENT F19_. CLINIC F20_. CLOSE F21_.
COMP F22_. COUNTRI F23_. DESIGN F24_. DEVIC F25_. DIET F26_. DISEAS F27_. DISPLAI F28_. DOCTOR
F29_. EAT F30_. EFFECT F31_. ELECTR F32_. ELECTRON F33_. EMPLOY F34_. ESCAP F35_. EXTERMIN F36_.
FOOD F37_. FORC F38_. GEB F39_. GENOCID F40_. GEORG F41_. GORDON F42_. GOVERN F43_. INTELLECT
F44_. ISRA F45_. ISRAEL F46_. JAKE F47_. JEW F48_. JEWISH F49_. JIMMI F50_. KILL F51_. LAND F52_.
LEBANON F53_. LIVNI F54_. LONGER F55_. MED F56_. MEDIC F57_. MEDICIN F58_. MOTIF F59_. MOUNTAIN
F60_. MSG F61_. OCCUP F62_. OCCUPI F63_. PALESTINIAN F64_. PASS F65_. PATIENT F66_. PEAC F67_.
PHYSICIAN F68_. POLICI F69_. POWER F70_. PRESID F71_. RADIO F72_. REDUND F73_. REPLAC F74_. ROAD
F75_. RUN F76_. SCI F77_. SENSIT F78_. SERA F79_. SERDAR F80_. SERV F81_. SERVER F82_. SHAME F83_.
SIGNAL F84_. SINGL F85_. SKEPTIC F86_. SOVIET F87_. SUPERSTIT F88_. SURREND F89_. SYMPTOM F90_.
SYNDROM F91_. TERRITORI F92_. TERROR F93_. TREATMENT F94_. TURK F95_. TURKISH F96_. URBANA F97_.
VOLTAG F98_. WAI F99_. WIDGET F100_. WINDOW F101_. XLIB F102_. ZUMA F103_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
*------------------------------------------------------------*
* Prof: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=vie, 11 de dic de 2020 22:45:59,
      Última modificación=vie, 11 de dic de 2020 22:46:53,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504
Sistema SAS
 
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
56070     +%macro _vars;
56071     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ARGIC ARMENIA ARMENIAN CLOSE ESCAP EXTERMIN GENOCID LONGER MOUNTAIN PASS
ROAD SERA SERDAR SERV SINGL SOVIET TURK TURKISH WAI ZUMA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 80   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.36 seconds
      cpu time            4.37 seconds
 
NOTE: There were 80 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=8;
NOTE: There were 80 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.37 seconds
      cpu time            4.37 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
Sistema SAS
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ARGIC ARMENIA ARMENIAN CLOSE ESCAP EXTERMIN GENOCID LONGER MOUNTAIN PASS
ROAD SERA SERDAR SERV SINGL SOVIET TURK TURKISH WAI ZUMA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 80   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.50 seconds
      cpu time            4.51 seconds
 
NOTE: There were 80 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=8;
NOTE: There were 80 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 113 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.51 seconds
      cpu time            4.51 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 113 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 113 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
Sistema SAS
 
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "8";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de
ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 113 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 113 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL a EMWS3.PROF_INTDIST.
NOTE: There were 113 observations read from the data set WORK._INTERVAL.
NOTE: 113 observations added.
NOTE: The data set EMWS3.PROF_INTDIST has 1589 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
Sistema SAS
 
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF_STATS.
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF_STATS has 205 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="10";
Sistema SAS
 
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 3 observations read from the data set EMWS3.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='10');
NOTE: The data set WORK._TEMPSTAT has 3 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 3 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 10;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF_INTERVAL.FORMAT.SOURCE.
56072     +format
56073     +ANDI F1_.
56074     +APPLIC F2_.
56075     +ARAB F3_.
56076     +ARGIC F4_.
56077     +ARMENIA F5_.
56078     +ARMENIAN F6_.
56079     +ATTACK F7_.
56080     +AUDIO F8_.
56081     +BANK F9_.
56082     +BEYER F10_.
56083     +BUILD F11_.
56084     +BUSH F12_.
56085     +CANDIDA F13_.
56086     +CARTER F14_.
56087     +CHASTITI F15_.
56088     +CHIP F16_.
56089     +CIRCUIT F17_.
56090     +CIVILIAN F18_.
56091     +CLIENT F19_.
56092     +CLINIC F20_.
56093     +CLOSE F21_.
56094     +COMP F22_.
56095     +COUNTRI F23_.
56096     +DESIGN F24_.
56097     +DEVIC F25_.
56098     +DIET F26_.
56099     +DISEAS F27_.
56100     +DISPLAI F28_.
Sistema SAS
 
56101     +DOCTOR F29_.
56102     +EAT F30_.
56103     +EFFECT F31_.
56104     +ELECTR F32_.
56105     +ELECTRON F33_.
56106     +EMPLOY F34_.
56107     +ESCAP F35_.
56108     +EXTERMIN F36_.
56109     +FOOD F37_.
56110     +FORC F38_.
56111     +GEB F39_.
56112     +GENOCID F40_.
56113     +GEORG F41_.
56114     +GORDON F42_.
56115     +GOVERN F43_.
56116     +INTELLECT F44_.
56117     +ISRA F45_.
56118     +ISRAEL F46_.
56119     +JAKE F47_.
56120     +JEW F48_.
56121     +JEWISH F49_.
56122     +JIMMI F50_.
56123     +KILL F51_.
56124     +LAND F52_.
56125     +LEBANON F53_.
56126     +LIVNI F54_.
56127     +LONGER F55_.
56128     +MED F56_.
56129     +MEDIC F57_.
56130     +MEDICIN F58_.
56131     +MOTIF F59_.
56132     +MOUNTAIN F60_.
56133     +MSG F61_.
56134     +OCCUP F62_.
56135     +OCCUPI F63_.
56136     +PALESTINIAN F64_.
56137     +PASS F65_.
56138     +PATIENT F66_.
56139     +PEAC F67_.
56140     +PHYSICIAN F68_.
56141     +POLICI F69_.
56142     +POWER F70_.
56143     +PRESID F71_.
56144     +RADIO F72_.
56145     +REDUND F73_.
56146     +REPLAC F74_.
56147     +ROAD F75_.
56148     +RUN F76_.
56149     +SCI F77_.
56150     +SENSIT F78_.
56151     +SERA F79_.
56152     +SERDAR F80_.
56153     +SERV F81_.
56154     +SERVER F82_.
56155     +SHAME F83_.
56156     +SIGNAL F84_.
56157     +SINGL F85_.
56158     +SKEPTIC F86_.
Sistema SAS
 
56159     +SOVIET F87_.
56160     +SUPERSTIT F88_.
56161     +SURREND F89_.
56162     +SYMPTOM F90_.
56163     +SYNDROM F91_.
56164     +TERRITORI F92_.
56165     +TERROR F93_.
56166     +TREATMENT F94_.
56167     +TURK F95_.
56168     +TURKISH F96_.
56169     +URBANA F97_.
56170     +VOLTAG F98_.
56171     +WAI F99_.
56172     +WIDGET F100_.
56173     +WINDOW F101_.
56174     +XLIB F102_.
56175     +ZUMA F103_.
56176     +;
MPRINT(SEGMENTSUMMARY):   format ANDI F1_. APPLIC F2_. ARAB F3_. ARGIC F4_. ARMENIA F5_. ARMENIAN
F6_. ATTACK F7_. AUDIO F8_. BANK F9_. BEYER F10_. BUILD F11_. BUSH F12_. CANDIDA F13_. CARTER
F14_. CHASTITI F15_. CHIP F16_. CIRCUIT F17_. CIVILIAN F18_. CLIENT F19_. CLINIC F20_. CLOSE F21_.
COMP F22_. COUNTRI F23_. DESIGN F24_. DEVIC F25_. DIET F26_. DISEAS F27_. DISPLAI F28_. DOCTOR
F29_. EAT F30_. EFFECT F31_. ELECTR F32_. ELECTRON F33_. EMPLOY F34_. ESCAP F35_. EXTERMIN F36_.
FOOD F37_. FORC F38_. GEB F39_. GENOCID F40_. GEORG F41_. GORDON F42_. GOVERN F43_. INTELLECT
F44_. ISRA F45_. ISRAEL F46_. JAKE F47_. JEW F48_. JEWISH F49_. JIMMI F50_. KILL F51_. LAND F52_.
LEBANON F53_. LIVNI F54_. LONGER F55_. MED F56_. MEDIC F57_. MEDICIN F58_. MOTIF F59_. MOUNTAIN
F60_. MSG F61_. OCCUP F62_. OCCUPI F63_. PALESTINIAN F64_. PASS F65_. PATIENT F66_. PEAC F67_.
PHYSICIAN F68_. POLICI F69_. POWER F70_. PRESID F71_. RADIO F72_. REDUND F73_. REPLAC F74_. ROAD
F75_. RUN F76_. SCI F77_. SENSIT F78_. SERA F79_. SERDAR F80_. SERV F81_. SERVER F82_. SHAME F83_.
SIGNAL F84_. SINGL F85_. SKEPTIC F86_. SOVIET F87_. SUPERSTIT F88_. SURREND F89_. SYMPTOM F90_.
SYNDROM F91_. TERRITORI F92_. TERROR F93_. TREATMENT F94_. TURK F95_. TURKISH F96_. URBANA F97_.
VOLTAG F98_. WAI F99_. WIDGET F100_. WINDOW F101_. XLIB F102_. ZUMA F103_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
*------------------------------------------------------------*
* Prof: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
Sistema SAS
 
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=vie, 11 de dic de 2020 22:45:59,
      Última modificación=vie, 11 de dic de 2020 22:47:02,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
56177     +%macro _vars;
56178     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ANDI BEYER TERROR;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 70   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.34 seconds
      cpu time            4.35 seconds
 
NOTE: There were 70 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=10;
NOTE: There were 70 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 3 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.36 seconds
      cpu time            4.35 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
Sistema SAS
 
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 3 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ANDI BEYER TERROR;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 70   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.39 seconds
      cpu time            4.39 seconds
 
NOTE: There were 70 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=10;
NOTE: There were 70 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 15 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.40 seconds
      cpu time            4.40 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
Sistema SAS
 
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 15 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "10";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de
ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 15 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 15 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL a EMWS3.PROF_INTDIST.
NOTE: There were 15 observations read from the data set WORK._INTERVAL.
NOTE: 15 observations added.
NOTE: The data set EMWS3.PROF_INTDIST has 1604 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
Sistema SAS
 
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 3 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 3 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 3 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF_STATS.
NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: 3 observations added.
NOTE: The data set EMWS3.PROF_STATS has 208 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
Sistema SAS
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="6";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 10 observations read from the data set EMWS3.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='6');
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 6;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF_INTERVAL.FORMAT.SOURCE.
56179     +format
56180     +ANDI F1_.
56181     +APPLIC F2_.
56182     +ARAB F3_.
56183     +ARGIC F4_.
56184     +ARMENIA F5_.
56185     +ARMENIAN F6_.
56186     +ATTACK F7_.
56187     +AUDIO F8_.
56188     +BANK F9_.
56189     +BEYER F10_.
56190     +BUILD F11_.
56191     +BUSH F12_.
56192     +CANDIDA F13_.
56193     +CARTER F14_.
56194     +CHASTITI F15_.
56195     +CHIP F16_.
56196     +CIRCUIT F17_.
56197     +CIVILIAN F18_.
56198     +CLIENT F19_.
56199     +CLINIC F20_.
Sistema SAS
 
56200     +CLOSE F21_.
56201     +COMP F22_.
56202     +COUNTRI F23_.
56203     +DESIGN F24_.
56204     +DEVIC F25_.
56205     +DIET F26_.
56206     +DISEAS F27_.
56207     +DISPLAI F28_.
56208     +DOCTOR F29_.
56209     +EAT F30_.
56210     +EFFECT F31_.
56211     +ELECTR F32_.
56212     +ELECTRON F33_.
56213     +EMPLOY F34_.
56214     +ESCAP F35_.
56215     +EXTERMIN F36_.
56216     +FOOD F37_.
56217     +FORC F38_.
56218     +GEB F39_.
56219     +GENOCID F40_.
56220     +GEORG F41_.
56221     +GORDON F42_.
56222     +GOVERN F43_.
56223     +INTELLECT F44_.
56224     +ISRA F45_.
56225     +ISRAEL F46_.
56226     +JAKE F47_.
56227     +JEW F48_.
56228     +JEWISH F49_.
56229     +JIMMI F50_.
56230     +KILL F51_.
56231     +LAND F52_.
56232     +LEBANON F53_.
56233     +LIVNI F54_.
56234     +LONGER F55_.
56235     +MED F56_.
56236     +MEDIC F57_.
56237     +MEDICIN F58_.
56238     +MOTIF F59_.
56239     +MOUNTAIN F60_.
56240     +MSG F61_.
56241     +OCCUP F62_.
56242     +OCCUPI F63_.
56243     +PALESTINIAN F64_.
56244     +PASS F65_.
56245     +PATIENT F66_.
56246     +PEAC F67_.
56247     +PHYSICIAN F68_.
56248     +POLICI F69_.
56249     +POWER F70_.
56250     +PRESID F71_.
56251     +RADIO F72_.
56252     +REDUND F73_.
56253     +REPLAC F74_.
56254     +ROAD F75_.
56255     +RUN F76_.
56256     +SCI F77_.
56257     +SENSIT F78_.
Sistema SAS
 
56258     +SERA F79_.
56259     +SERDAR F80_.
56260     +SERV F81_.
56261     +SERVER F82_.
56262     +SHAME F83_.
56263     +SIGNAL F84_.
56264     +SINGL F85_.
56265     +SKEPTIC F86_.
56266     +SOVIET F87_.
56267     +SUPERSTIT F88_.
56268     +SURREND F89_.
56269     +SYMPTOM F90_.
56270     +SYNDROM F91_.
56271     +TERRITORI F92_.
56272     +TERROR F93_.
56273     +TREATMENT F94_.
56274     +TURK F95_.
56275     +TURKISH F96_.
56276     +URBANA F97_.
56277     +VOLTAG F98_.
56278     +WAI F99_.
56279     +WIDGET F100_.
56280     +WINDOW F101_.
56281     +XLIB F102_.
56282     +ZUMA F103_.
56283     +;
MPRINT(SEGMENTSUMMARY):   format ANDI F1_. APPLIC F2_. ARAB F3_. ARGIC F4_. ARMENIA F5_. ARMENIAN
F6_. ATTACK F7_. AUDIO F8_. BANK F9_. BEYER F10_. BUILD F11_. BUSH F12_. CANDIDA F13_. CARTER
F14_. CHASTITI F15_. CHIP F16_. CIRCUIT F17_. CIVILIAN F18_. CLIENT F19_. CLINIC F20_. CLOSE F21_.
COMP F22_. COUNTRI F23_. DESIGN F24_. DEVIC F25_. DIET F26_. DISEAS F27_. DISPLAI F28_. DOCTOR
F29_. EAT F30_. EFFECT F31_. ELECTR F32_. ELECTRON F33_. EMPLOY F34_. ESCAP F35_. EXTERMIN F36_.
FOOD F37_. FORC F38_. GEB F39_. GENOCID F40_. GEORG F41_. GORDON F42_. GOVERN F43_. INTELLECT
F44_. ISRA F45_. ISRAEL F46_. JAKE F47_. JEW F48_. JEWISH F49_. JIMMI F50_. KILL F51_. LAND F52_.
LEBANON F53_. LIVNI F54_. LONGER F55_. MED F56_. MEDIC F57_. MEDICIN F58_. MOTIF F59_. MOUNTAIN
F60_. MSG F61_. OCCUP F62_. OCCUPI F63_. PALESTINIAN F64_. PASS F65_. PATIENT F66_. PEAC F67_.
PHYSICIAN F68_. POLICI F69_. POWER F70_. PRESID F71_. RADIO F72_. REDUND F73_. REPLAC F74_. ROAD
F75_. RUN F76_. SCI F77_. SENSIT F78_. SERA F79_. SERDAR F80_. SERV F81_. SERVER F82_. SHAME F83_.
SIGNAL F84_. SINGL F85_. SKEPTIC F86_. SOVIET F87_. SUPERSTIT F88_. SURREND F89_. SYMPTOM F90_.
SYNDROM F91_. TERRITORI F92_. TERROR F93_. TREATMENT F94_. TURK F95_. TURKISH F96_. URBANA F97_.
VOLTAG F98_. WAI F99_. WIDGET F100_. WINDOW F101_. XLIB F102_. ZUMA F103_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
*------------------------------------------------------------*
* Prof: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
Sistema SAS
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=vie, 11 de dic de 2020 22:45:59,
      Última modificación=vie, 11 de dic de 2020 22:47:11,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
56284     +%macro _vars;
56285     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   BUSH CARTER EMPLOY GEORG JAKE JIMMI LIVNI PRESID REDUND REPLAC;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 32   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.48 seconds
      cpu time            4.48 seconds
 
NOTE: There were 32 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=6;
Sistema SAS
 
NOTE: There were 32 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 10 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.49 seconds
      cpu time            4.50 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 10 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   BUSH CARTER EMPLOY GEORG JAKE JIMMI LIVNI PRESID REDUND REPLAC;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 32   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.09 seconds
      cpu time            4.09 seconds
 
NOTE: There were 32 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=6;
NOTE: There were 32 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 40 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.11 seconds
      cpu time            4.09 seconds
 
Sistema SAS
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 40 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "6";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de
ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 40 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 40 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL a EMWS3.PROF_INTDIST.
NOTE: There were 40 observations read from the data set WORK._INTERVAL.
NOTE: 40 observations added.
NOTE: The data set EMWS3.PROF_INTDIST has 1644 observations and 6 variables.
Sistema SAS
 
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 10 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 10 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 10 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF_STATS.
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: 10 observations added.
NOTE: The data set EMWS3.PROF_STATS has 218 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
Sistema SAS
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="7";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 1 observations read from the data set EMWS3.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='7');
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 7;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF_INTERVAL.FORMAT.SOURCE.
56286     +format
56287     +ANDI F1_.
56288     +APPLIC F2_.
56289     +ARAB F3_.
56290     +ARGIC F4_.
56291     +ARMENIA F5_.
56292     +ARMENIAN F6_.
56293     +ATTACK F7_.
56294     +AUDIO F8_.
56295     +BANK F9_.
56296     +BEYER F10_.
56297     +BUILD F11_.
56298     +BUSH F12_.
Sistema SAS
 
56299     +CANDIDA F13_.
56300     +CARTER F14_.
56301     +CHASTITI F15_.
56302     +CHIP F16_.
56303     +CIRCUIT F17_.
56304     +CIVILIAN F18_.
56305     +CLIENT F19_.
56306     +CLINIC F20_.
56307     +CLOSE F21_.
56308     +COMP F22_.
56309     +COUNTRI F23_.
56310     +DESIGN F24_.
56311     +DEVIC F25_.
56312     +DIET F26_.
56313     +DISEAS F27_.
56314     +DISPLAI F28_.
56315     +DOCTOR F29_.
56316     +EAT F30_.
56317     +EFFECT F31_.
56318     +ELECTR F32_.
56319     +ELECTRON F33_.
56320     +EMPLOY F34_.
56321     +ESCAP F35_.
56322     +EXTERMIN F36_.
56323     +FOOD F37_.
56324     +FORC F38_.
56325     +GEB F39_.
56326     +GENOCID F40_.
56327     +GEORG F41_.
56328     +GORDON F42_.
56329     +GOVERN F43_.
56330     +INTELLECT F44_.
56331     +ISRA F45_.
56332     +ISRAEL F46_.
56333     +JAKE F47_.
56334     +JEW F48_.
56335     +JEWISH F49_.
56336     +JIMMI F50_.
56337     +KILL F51_.
56338     +LAND F52_.
56339     +LEBANON F53_.
56340     +LIVNI F54_.
56341     +LONGER F55_.
56342     +MED F56_.
56343     +MEDIC F57_.
56344     +MEDICIN F58_.
56345     +MOTIF F59_.
56346     +MOUNTAIN F60_.
56347     +MSG F61_.
56348     +OCCUP F62_.
56349     +OCCUPI F63_.
56350     +PALESTINIAN F64_.
56351     +PASS F65_.
56352     +PATIENT F66_.
56353     +PEAC F67_.
56354     +PHYSICIAN F68_.
56355     +POLICI F69_.
56356     +POWER F70_.
Sistema SAS
 
56357     +PRESID F71_.
56358     +RADIO F72_.
56359     +REDUND F73_.
56360     +REPLAC F74_.
56361     +ROAD F75_.
56362     +RUN F76_.
56363     +SCI F77_.
56364     +SENSIT F78_.
56365     +SERA F79_.
56366     +SERDAR F80_.
56367     +SERV F81_.
56368     +SERVER F82_.
56369     +SHAME F83_.
56370     +SIGNAL F84_.
56371     +SINGL F85_.
56372     +SKEPTIC F86_.
56373     +SOVIET F87_.
56374     +SUPERSTIT F88_.
56375     +SURREND F89_.
56376     +SYMPTOM F90_.
56377     +SYNDROM F91_.
56378     +TERRITORI F92_.
56379     +TERROR F93_.
56380     +TREATMENT F94_.
56381     +TURK F95_.
56382     +TURKISH F96_.
56383     +URBANA F97_.
56384     +VOLTAG F98_.
56385     +WAI F99_.
56386     +WIDGET F100_.
56387     +WINDOW F101_.
56388     +XLIB F102_.
56389     +ZUMA F103_.
56390     +;
MPRINT(SEGMENTSUMMARY):   format ANDI F1_. APPLIC F2_. ARAB F3_. ARGIC F4_. ARMENIA F5_. ARMENIAN
F6_. ATTACK F7_. AUDIO F8_. BANK F9_. BEYER F10_. BUILD F11_. BUSH F12_. CANDIDA F13_. CARTER
F14_. CHASTITI F15_. CHIP F16_. CIRCUIT F17_. CIVILIAN F18_. CLIENT F19_. CLINIC F20_. CLOSE F21_.
COMP F22_. COUNTRI F23_. DESIGN F24_. DEVIC F25_. DIET F26_. DISEAS F27_. DISPLAI F28_. DOCTOR
F29_. EAT F30_. EFFECT F31_. ELECTR F32_. ELECTRON F33_. EMPLOY F34_. ESCAP F35_. EXTERMIN F36_.
FOOD F37_. FORC F38_. GEB F39_. GENOCID F40_. GEORG F41_. GORDON F42_. GOVERN F43_. INTELLECT
F44_. ISRA F45_. ISRAEL F46_. JAKE F47_. JEW F48_. JEWISH F49_. JIMMI F50_. KILL F51_. LAND F52_.
LEBANON F53_. LIVNI F54_. LONGER F55_. MED F56_. MEDIC F57_. MEDICIN F58_. MOTIF F59_. MOUNTAIN
F60_. MSG F61_. OCCUP F62_. OCCUPI F63_. PALESTINIAN F64_. PASS F65_. PATIENT F66_. PEAC F67_.
PHYSICIAN F68_. POLICI F69_. POWER F70_. PRESID F71_. RADIO F72_. REDUND F73_. REPLAC F74_. ROAD
F75_. RUN F76_. SCI F77_. SENSIT F78_. SERA F79_. SERDAR F80_. SERV F81_. SERVER F82_. SHAME F83_.
SIGNAL F84_. SINGL F85_. SKEPTIC F86_. SOVIET F87_. SUPERSTIT F88_. SURREND F89_. SYMPTOM F90_.
SYNDROM F91_. TERRITORI F92_. TERROR F93_. TREATMENT F94_. TURK F95_. TURKISH F96_. URBANA F97_.
VOLTAG F98_. WAI F99_. WIDGET F100_. WINDOW F101_. XLIB F102_. ZUMA F103_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
Sistema SAS
 
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
*------------------------------------------------------------*
* Prof: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=vie, 11 de dic de 2020 22:45:59,
      Última modificación=vie, 11 de dic de 2020 22:47:21,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary
      Files\_TD17292_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
56391     +%macro _vars;
56392     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   URBANA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 22   Memory used = 511K.
Sistema SAS
 
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.22 seconds
      cpu time            4.21 seconds
 
NOTE: There were 22 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=7;
NOTE: There were 22 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.23 seconds
      cpu time            4.21 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   URBANA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 22   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS.
NOTE: There were 3000 observations read from the data set EMWS3.IDS_DATA.
NOTE: Vista WORK.PROF_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           4.09 seconds
      cpu time            4.10 seconds
 
Sistema SAS
 
NOTE: There were 22 observations read from the data set EMWS3.CLUS_TRAIN.
      WHERE _SEGMENT_=7;
NOTE: There were 22 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 6 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           4.11 seconds
      cpu time            4.10 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 6 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "7";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de
ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 6 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 6 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
Sistema SAS
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL a EMWS3.PROF_INTDIST.
NOTE: There were 6 observations read from the data set WORK._INTERVAL.
NOTE: 6 observations added.
NOTE: The data set EMWS3.PROF_INTDIST has 1650 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF_STATS.
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: 1 observations added.
NOTE: The data set EMWS3.PROF_STATS has 219 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
Sistema SAS
 
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="4";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !!
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 0 observations read from the data set EMWS3.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='4');
NOTE: The data set WORK._TEMPSTAT has 0 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK.PROF_TMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   filename X;
Sistema SAS
 
NOTE: Fileref X has been deassigned.
MPRINT(TRAIN):   data EMWS3.Prof_INTDIST;
MPRINT(TRAIN):   set EMWS3.Prof_INTDIST;
MPRINT(TRAIN):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento"
Color = "Color";
MPRINT(TRAIN):   if SegmentVariable = '_OVERALL_' then Color = 1;
MPRINT(TRAIN):   else Color = 0;
MPRINT(TRAIN):   run;
 
NOTE: There were 1650 observations read from the data set EMWS3.PROF_INTDIST.
NOTE: The data set EMWS3.PROF_INTDIST has 1650 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE STATS CLASSDIST INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PROFILEVIEW";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
Sistema SAS
 
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
Sistema SAS
 
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "Profileview";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "COLOR";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
Sistema SAS
 
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
Sistema SAS
 
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
Sistema SAS
 
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "_SEGMENT_";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
Sistema SAS
 
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
Sistema SAS
 
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
Sistema SAS
 
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
Sistema SAS
 
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.26311409439105;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS3.Prof_WORTH;
MPRINT(TRAIN):   set EMWS3.Prof_STATS;
MPRINT(TRAIN):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento"
Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TRAIN):   where WORTH ne .;
MPRINT(TRAIN):   run;
 
NOTE: There were 116 observations read from the data set EMWS3.PROF_STATS.
      WHERE WORTH not = .;
NOTE: The data set EMWS3.PROF_WORTH has 116 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "LATTICE";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "1";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "BAR";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profworth";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "VARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.48122855158579;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS3.Prof_SIZE;
MPRINT(TRAIN):   set EMWS3.Prof_SIZE;
MPRINT(TRAIN):   label percent = "Porcentaje" count = "Número de ocurrencias";
MPRINT(TRAIN):   format PERCENT 5.2;
MPRINT(TRAIN):   format COUNT 12.;
MPRINT(TRAIN):   run;
 
NOTE: There were 10 observations read from the data set EMWS3.PROF_SIZE.
NOTE: The data set EMWS3.PROF_SIZE has 10 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PIE";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "segmentmanysize";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "COUNT";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "PERCENT";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.83956969009692;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
Sistema SAS
 
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "size";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10480907471143;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profilevars";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.56373238822619;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 661 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clusbarplot";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.52384036896929;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 661 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 793 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
Sistema SAS
 
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clushistplot";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
Sistema SAS
 
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
Sistema SAS
 
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.15707319190589;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 793 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 925 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS3 nolist;
MPRINT(TRAIN):   delete Prof_SELVARS _SUMMARYVARS DATA_STAT Prof_MACS(mt=catalog)
Prof_INTERVAL(mt=catalog);
MPRINT(TRAIN):   run;
 
NOTE: The file EMWS3._SUMMARYVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.DATA_STAT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
NOTE: Deleting EMWS3.PROF_SELVARS (memtype=DATA).
NOTE: Deleting EMWS3.PROF_INTERVAL (memtype=CATALOG).
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
56393      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56394      * End TRAIN: Prof;
MPRINT(EM_DIAGRAM):   * End TRAIN: Prof;
56395      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56396      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56397      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
56398      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56399      ;
MPRINT(EM_DIAGRAM):   ;
56400      ;
MPRINT(EM_DIAGRAM):   ;
56401      ;
MPRINT(EM_DIAGRAM):   ;
56402      ;
MPRINT(EM_DIAGRAM):   ;
Sistema SAS
 
56403      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ;
56404      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
56405      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   quit;
56406      *------------------------------------------------------------*;
56407      /*; *"; *'; */
56408      ;
56409      run;
56410      quit;
56411      /* Reset EM Options */
56412      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
56413      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
56414      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
56415      filename _temp catalog 'sashelp.emwip.em_sasgraph.source';
MPRINT(EM_DIAGRAM):    filename _temp catalog 'sashelp.emwip.em_sasgraph.source';
56416      %include _temp;
NOTE: %INCLUDE (level 1) file _TEMP is file SASHELP.EMWIP.EM_SASGRAPH.SOURCE.
56417     +filename _fdsep catalog 'sashelp.emwip.em_dsep.source';
MPRINT(EM_DIAGRAM):   filename _fdsep catalog 'sashelp.emwip.em_dsep.source';
56418     +%include _fdsep;
NOTE: %INCLUDE (level 2) file _FDSEP is file SASHELP.EMWIP.EM_DSEP.SOURCE.
56419     +%macro em_dsep;
56420     +  %global emdsep;
56421     +   %if %substr(&sysscp, 1, 3)= WIN %then
56422     +       %let emdsep=\;
56423     +   %else
56424     +       %if %substr(&sysscp, 1, 3)= DNT %then
56425     +           %let emdsep=\;
56426     +   %else
56427     +       %let emdsep=/;
56428     +%mend em_dsep;
56429     +%em_dsep;
MPRINT(EM_DIAGRAM):  ;
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
56430     +filename _fdsep;
MPRINT(EM_DIAGRAM):   filename _fdsep;
NOTE: Fileref _FDSEP has been deassigned.
MPRINT(EM_DIAGRAM):  ;
56431     +%em_dsep;
56432     +%macro em_sasgraph(device=JPEG, folder=);
56433     +    %if %sysfunc(exist(work.gseg)) %then %do;
56434     +        proc delete data=work.gseg;
56435     +        run;
56436     +    %end;
56437     +    proc catalog c=work.gseg;
56438     +       contents out=work.gseg;
56439     +    run;
56440     +    data work.gseg;
56441     +       set work.gseg;
56442     +       if desc = '' then desc = name;
56443     +    run;
56444     +    proc sort data=work.gseg;
56445     +       by desc;
56446     +    run;
56447     +    %let _wipGraphPath=%superq(folder);
56448     +    %if (%superq(_wipGraphPath) eq ) %then %do;
56449     +        data _null_;
56450     +           path = pathname('WORK');
56451     +           rc = dcreate('EM_SASGRAPH',strip(path));
56452     +           call symput('_wipGraphPath', strip(path)!!strip(symget('emdsep'))!!'EM_SASGRAPH');
56453     +        run;
56454     +    %end;
56455     +    filename _dref "&_wipGraphpath";
56456     +    %let did=%sysfunc(dopen(_dref));
56457     +    %let memcount=%sysfunc(dnum(&did));
56458     +    %if &memcount %then %do;
56459     +        %do i=1 %to &memcount;
56460     +            %let filename=&_wipGraphPath&emdsep%sysfunc(dread(&did, &i));
56461     +            %if "&filename" ne "" %then %do; %put >>>> &filename;
56462     +                %let prefix = %sysfunc(reverse(%lowcase(%scan(%nrbquote(%sysfunc(reverse(&filename))), 1, .))));
56463     +                %if (&prefix = jpg) or (&prefix eq gif) %then %do;
56464     +                    filename _fref "&filename";
56465     +                    %let rc = %sysfunc(fdelete(_fref));
56466     +                    filename _fref;
56467     +                %end;
56468     +            %end;
56469     +        %end;
56470     +    %end;
56471     +    %let rc=%sysfunc(dclose(&did));
56472     +    filename _dref;
56473     +    data work.gseg;
56474     +       keep libname memname name desc type date crdate moddate;
56475     +       array token(8) $ ('/' '\' ':' '"' '<' '>' '|' '*');
56476     +       length string $2000 device ftype $8;
56477     +       length filename $200;
56478     +       retain index 0;
56479     +       set work.gseg;
56480     +       by desc;
56481     +       filename = desc;
56482     +       if first.desc then do;
56483     +          filename = desc;
56484     +          index = 1;
56485     +       end;
56486     +       else do;
56487     +          filename = strip(desc)!!' ('!!strip(put(index, best.))!!')';
56488     +       end;
56489     +       do i=1 to 8;
56490     +          filename = tranwrd(filename, strip(token(i)), '_');
56491     +       end;
56492     +       desc = filename;
56493     +       index+1;
56494     +       device = upcase("&device");
56495     +       select(device);
56496     +          when('JPEG') ftype='jpg';
56497     +          when('PNG')  do;
56498     +             ftype='png';
56499     +             device="PNG";
56500     +          end;
56501     +          when('GIF') do;
56502     +             ftype='png';
56503     +             device="PNG";
56504     +          end;
56505     +          otherwise do;
56506     +               ftype='jpg';
56507     +               device="JPEG";
56508     +          end;
56509     +       end;
56510     +       string = "&_wipGraphPath&emdsep"!!strip(filename)!!'.'!!ftype;
56511     +       call execute('filename  gsasfile "'!!strip(string)!!'";');
56512     +       call execute('goptions reset=all device='!!strip(device)!!' display');
56513     +       call execute('         gaccess= gsasfile');
56514     +       call execute('         gsfmode= replace cback=white;');
56515     +       call execute('proc greplay igout=work.gseg nofs;');
56516     +       call execute(    'replay '!!strip(name)!!';');
56517     +       call execute('quit;');
56518     +       call execute('filename gsasfile;');
56519     +       call execute('goptions reset=all device=PNG NODISPLAY;');
56520     +    run;
56521     +%mend em_sasgraph;
NOTE: %INCLUDE (level 1) ending.
56526      filename _temp;
MPRINT(EM_DIAGRAM):   filename _temp;
NOTE: Fileref _TEMP has been deassigned.
56527      %em_sasgraph(device=PNG, folder=%nrbquote(C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\GRAPH));
MPRINT(EM_SASGRAPH):   proc catalog c=work.gseg;
MPRINT(EM_SASGRAPH):   contents out=work.gseg;
MPRINT(EM_SASGRAPH):   run;
 
NOTE: The data set WORK.GSEG has 0 observations and 8 variables.
 
NOTE: PROCEDURE CATALOG ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_SASGRAPH):   data work.gseg;
MPRINT(EM_SASGRAPH):   set work.gseg;
MPRINT(EM_SASGRAPH):   if desc = '' then desc = name;
MPRINT(EM_SASGRAPH):   run;
 
NOTE: There were 0 observations read from the data set WORK.GSEG.
NOTE: The data set WORK.GSEG has 0 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_SASGRAPH):   proc sort data=work.gseg;
MPRINT(EM_SASGRAPH):   by desc;
MPRINT(EM_SASGRAPH):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.GSEG has 0 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_SASGRAPH):   filename _dref "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\GRAPH";
MPRINT(EM_SASGRAPH):   filename _dref;
NOTE: Fileref _DREF has been deassigned.
MPRINT(EM_SASGRAPH):   data work.gseg;
MPRINT(EM_SASGRAPH):   keep libname memname name desc type date crdate moddate;
MPRINT(EM_SASGRAPH):   array token(8) $ ('/' '\' ':' '"' '<' '>' '|' '*');
MPRINT(EM_SASGRAPH):   length string $2000 device ftype $8;
MPRINT(EM_SASGRAPH):   length filename $200;
MPRINT(EM_SASGRAPH):   retain index 0;
MPRINT(EM_SASGRAPH):   set work.gseg;
MPRINT(EM_SASGRAPH):   by desc;
MPRINT(EM_SASGRAPH):   filename = desc;
MPRINT(EM_SASGRAPH):   if first.desc then do;
MPRINT(EM_SASGRAPH):   filename = desc;
MPRINT(EM_SASGRAPH):   index = 1;
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   else do;
MPRINT(EM_SASGRAPH):   filename = strip(desc)!!' ('!!strip(put(index, best.))!!')';
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   do i=1 to 8;
MPRINT(EM_SASGRAPH):   filename = tranwrd(filename, strip(token(i)), '_');
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   desc = filename;
MPRINT(EM_SASGRAPH):   index+1;
MPRINT(EM_SASGRAPH):   device = upcase("PNG");
MPRINT(EM_SASGRAPH):   select(device);
MPRINT(EM_SASGRAPH):   when('JPEG') ftype='jpg';
MPRINT(EM_SASGRAPH):   when('PNG') do;
MPRINT(EM_SASGRAPH):   ftype='png';
MPRINT(EM_SASGRAPH):   device="PNG";
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   when('GIF') do;
MPRINT(EM_SASGRAPH):   ftype='png';
MPRINT(EM_SASGRAPH):   device="PNG";
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   otherwise do;
MPRINT(EM_SASGRAPH):   ftype='jpg';
MPRINT(EM_SASGRAPH):   device="JPEG";
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   string = "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\GRAPH\"!!strip(filename)!!'.'!!ftype;
MPRINT(EM_SASGRAPH):   call execute('filename  gsasfile "'!!strip(string)!!'";');
MPRINT(EM_SASGRAPH):   call execute('goptions reset=all device='!!strip(device)!!' display');
MPRINT(EM_SASGRAPH):   call execute('         gaccess= gsasfile');
MPRINT(EM_SASGRAPH):   call execute('         gsfmode= replace cback=white;');
MPRINT(EM_SASGRAPH):   call execute('proc greplay igout=work.gseg nofs;');
MPRINT(EM_SASGRAPH):   call execute( 'replay '!!strip(name)!!';');
MPRINT(EM_SASGRAPH):   call execute('quit;');
MPRINT(EM_SASGRAPH):   call execute('filename gsasfile;');
MPRINT(EM_SASGRAPH):   call execute('goptions reset=all device=PNG NODISPLAY;');
MPRINT(EM_SASGRAPH):   run;
 
NOTE: There were 0 observations read from the data set WORK.GSEG.
NOTE: The data set WORK.GSEG has 0 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
56528      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
56529      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
56530      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 925 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 925 observations and 4 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
56531      proc freq data=EMWS3.Prof_WORTH noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS3.Prof_WORTH noprint order=data;
56532      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
56533      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 116 observations read from the data set EMWS3.PROF_WORTH.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
56534      proc freq data=EMWS3.Prof_SIZE noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS3.Prof_SIZE noprint order=data;
56535      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
56536      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS3.PROF_SIZE.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "22H47" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de puntuación";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de puntuación
Fecha:                11/12/20
Hora:                22H47
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1NJJGUX "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1NJJGUX new;
MPRINT(EM_DIAGRAM):   run;
56638      %let EMEXCEPTIONSTRING=;
56639      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
56640      * SCORE: Prof;
MPRINT(EM_DIAGRAM):   * SCORE: Prof;
56641      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56642      %let EM_ACTION = SCORE;
56643      %let syscc = 0;
56644      %macro main;
56645         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
56646             options MPRINT;
56647         %end;
56648
56649         filename temp catalog 'sashelp.emexpl.profile_macros.source';
56650         %include temp;
56651         filename temp;
56652
56653         /* Initialize property macro variables */
56654         %SetProperties;
56655
56656         %if %upcase(&EM_ACTION) = CREATE %then %do;
56657
56658             filename temp catalog 'sashelp.emexpl.profile_create.source';
56659             %include temp;
56660             filename temp;
56661             %create;
56662         %end;
56663         %else
56664         %if %upcase(&EM_ACTION) = TRAIN %then %do;
56665
56666             filename temp catalog 'sashelp.emexpl.profile_train.source';
56667             %include temp;
56668             filename temp;
56669             %train;
56670         %end;
56671      %mend main;
56672
56673      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
56674     +%macro SetProperties;
56675     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
56676     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
56677     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
56678     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
56679     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
56680     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
56681     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
56682     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
56683     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
56684     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
56685     +%mend SetProperties;
56686     +
56687     +
56688     +%macro makeVarMacros(level= );
56689     +
56690     +    %let numvars = 0;
56691     +    %let where   = '';
56692     +
56693     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
56694     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
56695     +    %else
56696     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
56697     +
56698     +    %if &level = INTERVAL %then %do;
56699     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
56700     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
56701     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
56702     +    %end;
56703     +    %else %do;
56704     +        %if &level = NOMINAL %then %do;
56705     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
56706     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
56707     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
56708     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
56709     +             %end;
56710     +             %else
56711     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
56712     +
56713     +        %end;
56714     +        %else %do;
56715     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
56716     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
56717     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
56718     +        %end;
56719     +    %end;
56720     +
56721     +    %if &numvars>0 %then %do;
56722     +         %let numloop = %sysfunc(ceil(&numvars/10000));
56723     +         %let loopcount = 0;
56724     +
56725     +         %do %while((&numloop - &loopcount) > 0);
56726     +             %let first = %eval((&loopcount*10000) + 1);
56727     +             %let last  = %eval(&first + 10000);
56728     +             %let loopcount = %eval(&loopcount +1);
56729     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
56730     +             filename X catalog "&centry";
56731     +             data _null_;
56732     +                length _STRING_ $80;
56733     +                retain _STRING_ ;
56734     +                file X;
56735     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
56736     +
56737     +                where &where;
56738     +
56739     +                if _N_=1 then
56740     +                   put '%macro _PROFVAR;';
56741     +
56742     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
56743     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
56744     +                   if eof then do;
56745     +                      put _STRING_;
56746     +                      put '%mend _PROFVAR;';
56747     +                   end;
56748     +                end;
56749     +                else do;
56750     +                   put _STRING_;
56751     +                  _string_ = TRIM(NAME);
56752     +                   if eof then do;
56753     +                      put _string_;
56754     +                      put '%mend _PROFVAR;';
56755     +                   end;
56756     +                end;
56757     +             run;
56758     +             filename X;
56759     +         %end;
56760     +    %end;
56761     +
56762     +%mend makeVarMacros;
56763     +
56764     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Prof;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56765      *------------------------------------------------------------*;
56766      * End SCORE: Prof;
56767      *------------------------------------------------------------*;
 
56768      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
56769      * Prof: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * Prof: Scoring DATA data;
56770      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
56771      data EMWS3.Prof_TRAIN
56772      / view=EMWS3.Prof_TRAIN
56773      ;
MPRINT(EM_DIAGRAM):   data EMWS3.Prof_TRAIN / view=EMWS3.Prof_TRAIN ;
56774      set EMWS3.Clus_TRAIN
56775      ;
MPRINT(EM_DIAGRAM):   set EMWS3.Clus_TRAIN ;
56776      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS3.PROF_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
56777      quit;
 
56779      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
56780      * Prof: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Prof: Computing metadata for TRAIN data;
56781      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: Vista EMWS3.PROF_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS3.Prof_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS3.Prof_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS3.Prof_TRAIN out=WORK.M0Q4P9OB noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0Q4P9OB;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0Q4P9OB(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0Q4P9OB;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0Q4P9OB;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0R4BQTH NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R4BQTH;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R4BQTH;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_YYI0Z(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R4BQTH;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R4BQTH;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R4BQTH;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R4BQTH;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R4BQTH;
MPRINT(EMADVISECOLUMNS):   label NAME = "Nombre de la variable" TYPE = "Tipo" ROLE = "Rol" LEVEL= "Nivel de medida" ORDER= "Orden" CREATOR= "Creador" FORMATTYPE= "Tipo de formato" FAMILY= "Familia" DISTRIBUTION= "Distribución" PRICE= "Precio" LOWERLIMIT=
"Límite inferior" UPPERLIMIT= "Límite superior" REPORT= "Informe" COMMENT= "Comentario" INDEX= "Índice" INDEXTYPE= "TipoÍndice" LABEL= "Etiqueta" LENGTH= "Longitud";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS3.Clus_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Clus_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS3.Prof_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Prof";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: Vista EMWS3.PROF_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "22H47" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log del informe";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log del informe
Fecha:                11/12/20
Hora:                22H47
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2XW6G_Z "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2XW6G_Z new;
MPRINT(EM_DIAGRAM):   run;
57142      %let EMEXCEPTIONSTRING=;
57143      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
57144      * REPORT: Prof;
MPRINT(EM_DIAGRAM):   * REPORT: Prof;
57145      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57146      %let EM_ACTION = REPORT;
57147      %let syscc = 0;
57148      %macro main;
57149         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
57150             options MPRINT;
57151         %end;
57152
57153         filename temp catalog 'sashelp.emexpl.profile_macros.source';
57154         %include temp;
57155         filename temp;
57156
57157         /* Initialize property macro variables */
57158         %SetProperties;
57159
57160         %if %upcase(&EM_ACTION) = CREATE %then %do;
57161
57162             filename temp catalog 'sashelp.emexpl.profile_create.source';
57163             %include temp;
57164             filename temp;
57165             %create;
57166         %end;
57167         %else
57168         %if %upcase(&EM_ACTION) = TRAIN %then %do;
57169
57170             filename temp catalog 'sashelp.emexpl.profile_train.source';
57171             %include temp;
57172             filename temp;
57173             %train;
57174         %end;
57175      %mend main;
57176
57177      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
57178     +%macro SetProperties;
57179     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
57180     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
57181     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
57182     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
57183     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
57184     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
57185     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
57186     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
57187     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
57188     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
57189     +%mend SetProperties;
57190     +
57191     +
57192     +%macro makeVarMacros(level= );
57193     +
57194     +    %let numvars = 0;
57195     +    %let where   = '';
57196     +
57197     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
57198     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
57199     +    %else
57200     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
57201     +
57202     +    %if &level = INTERVAL %then %do;
57203     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
57204     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
57205     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
57206     +    %end;
57207     +    %else %do;
57208     +        %if &level = NOMINAL %then %do;
57209     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
57210     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
57211     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
57212     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
57213     +             %end;
57214     +             %else
57215     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
57216     +
57217     +        %end;
57218     +        %else %do;
57219     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
57220     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
57221     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
57222     +        %end;
57223     +    %end;
57224     +
57225     +    %if &numvars>0 %then %do;
57226     +         %let numloop = %sysfunc(ceil(&numvars/10000));
57227     +         %let loopcount = 0;
57228     +
57229     +         %do %while((&numloop - &loopcount) > 0);
57230     +             %let first = %eval((&loopcount*10000) + 1);
57231     +             %let last  = %eval(&first + 10000);
57232     +             %let loopcount = %eval(&loopcount +1);
57233     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
57234     +             filename X catalog "&centry";
57235     +             data _null_;
57236     +                length _STRING_ $80;
57237     +                retain _STRING_ ;
57238     +                file X;
57239     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
57240     +
57241     +                where &where;
57242     +
57243     +                if _N_=1 then
57244     +                   put '%macro _PROFVAR;';
57245     +
57246     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
57247     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
57248     +                   if eof then do;
57249     +                      put _STRING_;
57250     +                      put '%mend _PROFVAR;';
57251     +                   end;
57252     +                end;
57253     +                else do;
57254     +                   put _STRING_;
57255     +                  _string_ = TRIM(NAME);
57256     +                   if eof then do;
57257     +                      put _string_;
57258     +                      put '%mend _PROFVAR;';
57259     +                   end;
57260     +                end;
57261     +             run;
57262     +             filename X;
57263     +         %end;
57264     +    %end;
57265     +
57266     +%mend makeVarMacros;
57267     +
57268     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End REPORT: Prof;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
57269      *------------------------------------------------------------*;
57270      * End REPORT: Prof;
57271      *------------------------------------------------------------*;
 
57272      /* Reset EM Options */
57273      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):    options formchar="|----|+|---+=|-/\<>*";
57274      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
57275      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
