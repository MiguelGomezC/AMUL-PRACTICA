MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15H43" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de entrenamiento";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de entrenamiento
Fecha:                13/12/20
Hora:                15H43
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O25NYTW7 "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O25NYTW7 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15H43" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Sitio:                70161230";
MPRINT(EM_DIAGRAM):   put "Plataforma:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "Versión de mantenimiento: 9.04.01M6P111518";
MPRINT(EM_DIAGRAM):   put "Versión de EM:          15.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15H43" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de entrenamiento";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de puntuación";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida del informe";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\Prof2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22473      proc freq data=EMWS3.Prof2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS3.Prof2_VariableSet noprint;
22474      table ROLE*LEVEL/out=WORK.Prof2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Prof2META;
22475      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 245 observations read from the data set EMWS3.PROF2_VARIABLESET.
NOTE: The data set WORK.PROF2META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

22476      proc print data=WORK.Prof2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Prof2META label noobs;
22477      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22478      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Rol" LEVEL = "Nivel de medida" COUNT = "Número de ocurrencias";
22479      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22480      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Resumen de variables";
MPRINT(EM_DIAGRAM):   run;
22481      run;

NOTE: There were 5 observations read from the data set WORK.PROF2META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22482      title10;
MPRINT(EM_DIAGRAM):   title10;
22483      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'practica_AMUL';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'ANÁLISIS CLUSTER';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS3.Ids2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22891      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22892      * Prof2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Prof2: Generation of macros and macro variables;
22893      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
22894      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

22895      %let EMEXCEPTIONSTRING=;
22896      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22897      * TRAIN: Prof2;
MPRINT(EM_DIAGRAM):   * TRAIN: Prof2;
22898      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22899      %let EM_ACTION = TRAIN;
22900      %let syscc = 0;
22901      %macro main;
22902         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
22903             options MPRINT;
22904         %end;
22905      
22906         filename temp catalog 'sashelp.emexpl.profile_macros.source';
22907         %include temp;
22908         filename temp;
22909      
22910         /* Initialize property macro variables */
22911         %SetProperties;
22912      
22913         %if %upcase(&EM_ACTION) = CREATE %then %do;
22914      
22915             filename temp catalog 'sashelp.emexpl.profile_create.source';
22916             %include temp;
22917             filename temp;
22918             %create;
22919         %end;
22920         %else
22921         %if %upcase(&EM_ACTION) = TRAIN %then %do;
22922      
22923             filename temp catalog 'sashelp.emexpl.profile_train.source';
22924             %include temp;
22925             filename temp;
22926             %train;
22927         %end;
22928      %mend main;
22929      
22930      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
22931     +%macro SetProperties;
22932     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
22933     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
22934     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
22935     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
22936     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
22937     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
22938     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
22939     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
22940     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
22941     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
22942     +%mend SetProperties;
22943     +
22944     +
22945     +%macro makeVarMacros(level= );
22946     +
22947     +    %let numvars = 0;
22948     +    %let where   = '';
22949     +
22950     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
22951     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
22952     +    %else
22953     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
22954     +
22955     +    %if &level = INTERVAL %then %do;
22956     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
22957     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
22958     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
22959     +    %end;
22960     +    %else %do;
22961     +        %if &level = NOMINAL %then %do;
22962     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
22963     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
22964     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
22965     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
22966     +             %end;
22967     +             %else
22968     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
22969     +
22970     +        %end;
22971     +        %else %do;
22972     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
22973     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
22974     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
22975     +        %end;
22976     +    %end;
22977     +
22978     +    %if &numvars>0 %then %do;
22979     +         %let numloop = %sysfunc(ceil(&numvars/10000));
22980     +         %let loopcount = 0;
22981     +
22982     +         %do %while((&numloop - &loopcount) > 0);
22983     +             %let first = %eval((&loopcount*10000) + 1);
22984     +             %let last  = %eval(&first + 10000);
22985     +             %let loopcount = %eval(&loopcount +1);
22986     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
22987     +             filename X catalog "&centry";
22988     +             data _null_;
22989     +                length _STRING_ $80;
22990     +                retain _STRING_ ;
22991     +                file X;
22992     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
22993     +
22994     +                where &where;
22995     +
22996     +                if _N_=1 then
22997     +                   put '%macro _PROFVAR;';
22998     +
22999     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
23000     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
23001     +                   if eof then do;
23002     +                      put _STRING_;
23003     +                      put '%mend _PROFVAR;';
23004     +                   end;
23005     +                end;
23006     +                else do;
23007     +                   put _STRING_;
23008     +                  _string_ = TRIM(NAME);
23009     +                   if eof then do;
23010     +                      put _string_;
23011     +                      put '%mend _PROFVAR;';
23012     +                   end;
23013     +                end;
23014     +             run;
23015     +             filename X;
23016     +         %end;
23017     +    %end;
23018     +
23019     +%mend makeVarMacros;
23020     +
23021     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_TRAIN.SOURCE.
23022     +%macro _looparbor(level=, target=, rules=);
23023     +    %local where;
23025     +    %if (&level eq or &target eq ) %then %goto doenda;
23026     +    %if &rules eq %then &rules = _TEMPRULE;
23028     +    %let lnumvars = 0;
23029     +    %let where   = '';
23031     +    %if &level = INTERVAL %then %do;
23032     +        %let lnumvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
23033     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23034     +             %let lnumvars = %eval(&lnumvars + &EM_NUM_INTERVAL_TARGET);
23035     +    %end;
23036     +    %else %do;
23037     +        %if &level = NOMINAL %then %do;
23038     +            %let lnumvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
23039     +             %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23040     +                 %let lnumvars = %eval(&lnumvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
23041     +        %end;
23042     +        %else %do;
23043     +            %let lnumvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
23044     +            %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23045     +                %let lnumvars = %eval(&lnumvars + &EM_NUM_ORDINAL_TARGET);
23046     +        %end;
23047     +    %end;
23049     +    %if &lnumvars>0 %then %do;
23050     +         %let numloop = %sysfunc(ceil(&lnumvars/10000));
23051     +         %let loopcount = 0;
23053     +         %do %while((&numloop - &loopcount) > 0);
23054     +             %let loopcount = %eval(&loopcount +1);
23055     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
23056     +             filename X catalog "&centry";
23057     +             %inc X;
23059     +             proc arbor data=&EM_NODEID._TMP
23061     +             %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
23062     +                 Criterion=GINI Leafsize=5 Mincatsize = 5
23063     +                 Maxbranch=5 Maxdepth=1
23064     +                 NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
23065     +             %end;
23066     +             %else %do;
23067     +                 Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
23068     +                 Maxbranch=5 Maxdepth=&EM_PROPERTY_MAXDEPTH
23069     +                 MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
23070     +             %end;
23072     +              MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
23074     +                input %_PROFVAR
23076     +                    / level = &level;
23077     +                target _SEG / level=binary;
23079     +                Performance Disk NodeSize=10000;
23080     +                Assess NoValidata measure=MISC;
23081     +                SUBTREE BEST;
23083     +                %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
23084     +                    save IMPORTANCE=_LOOPTEMPRULE;
23085     +                %end;
23086     +                %else %do;
23087     +                    save RULES=_LOOPTEMPRULE;
23088     +                %end;
23089     +             run;
23090     +             quit;
23092     +             %if %sysfunc(exist(_LOOPTEMPRULE)) %then %do;
23093     +                 proc append base=&RULES data=_LOOPTEMPRULE force;
23094     +                 run;
23095     +                 proc datasets lib=work nolist mt=(DATA VIEW);
23096     +                    delete _LOOPTEMPRULE;
23097     +                 run;
23098     +                 quit;
23099     +             %end;
23102     +             filename X;
23103     +         %end;
23104     +     %end;
23106     +   %doenda:
23108     +%mend _looparbor;
23110     +%macro _arbor(target=, rules=, fit=);
23111     +   %local _numnomvars _numordvars _numintvars;
23113     +   %if &target eq  %then %goto doendc;
23114     +   %if &rules eq %then &rules = _TEMPRULE;
23115     +   %if &fit   eq %then &fit   = _FIT;
23117     +   %let _numintvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
23118     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23119     +       %let _numintvars = %eval(&_numintvars + &EM_NUM_INTERVAL_TARGET);
23122     +   %let _numnomvars =  %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
23123     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23124     +       %let _numnomvars = %eval(&_numnomvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
23126     +   %let _numordvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
23127     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23128     +       %let _numordvars = %eval(&_numordvars + &EM_NUM_ORDINAL_TARGET);
23130     +   proc arbor data=&EM_NODEID._TMP
23132     +   %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
23133     +      Criterion=GINI Leafsize=5 Mincatsize = 5
23134     +      Maxbranch=5 Maxdepth=1
23135     +      NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
23136     +   %end;
23137     +   %else %do;
23138     +      Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
23139     +      Maxbranch=2 Maxdepth=&EM_PROPERTY_MAXDEPTH
23140     +      MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
23141     +   %end;
23143     +      MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
23145     +      %if &_numintvars %then %do;
23146     +          input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
23148     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
23149     +              %EM_INTERVAL_TARGET
23150     +          %end;
23152     +              / level = interval;
23153     +      %end;
23156     +      %if &_numnomvars %then %do;
23157     +          input %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED
23159     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
23160     +              %EM_BINARY_TARGET %EM_NOMINAL_TARGET
23161     +          %end;
23163     +              / level = nominal;
23164     +      %end;
23166     +      %if &_numordvars %then %do;
23167     +         input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED
23169     +         %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
23170     +              %EM_ORDINAL_TARGET
23171     +         %end;
23173     +             / level = ordinal;
23174     +      %end;
23176     +      target _SEG / level=binary;
23178     +      Performance Disk NodeSize=10000;
23179     +      Assess
23181     +       %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
23182     +          Validata=&EM_NODEID._VALIDTMP
23183     +      %end;
23184     +      %else %do;
23185     +          NoValidata
23186     +      %end;
23188     +      measure=MISC;
23189     +      SUBTREE BEST;
23191     +      %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
23192     +          SCORE data=&EM_NODEID._TMP  out=_NULL_ outfit=_FIT
23193     +                role=TRAIN;
23194     +          %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
23195     +          SCORE data=&EM_NODEID._VALIDTMP  out=_NULL_ outfit=_FIT2
23196     +                role=VALID;
23197     +          %end;
23199     +          save IMPORTANCE=_RULE;
23200     +      %end;
23201     +      %else %do;
23202     +          save RULES=_RULE;
23203     +      %end;
23205     +      ;
23206     +   run;
23207     +   quit;
23209     +   %if %sysfunc(exist(_RULE)) %then %do;
23210     +       proc append base=&RULES data=_RULE force;
23211     +       run;
23212     +       proc datasets lib=work nolist mt=(DATA VIEW);
23213     +          delete _RULE;
23214     +       run;
23215     +       quit;
23216     +   %end;
23218     +   %doendc:
23220     +%mend _arbor;
23222     +%macro tree_profile(SEGMENT=, _sizeDs=, _varsDs=, _fitDs=, _reportDs=);
23223     +   %put &EM_CODEBAR;
23224     +   %put * Filtering input variables ;
23225     +   %put * SEGMENT= &segment;
23226     +   %put &EM_CODEBAR;
23228     +  %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
23229     +  %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
23230     +  %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
23232     +  %let _SEGMENT = &SEGMENT;
23234     +  proc freq data=&EM_IMPORT_DATA noprint ;
23235     +    table &_segment / missing out=&_segment(keep=&_segment count percent) ;
23237     +    %if %EM_FREQ ne %then %do;
23238     +        weight %EM_FREQ;
23239     +        where %EM_FREQ>=0;
23240     +    %end;
23242     +  run ;
23243     +  proc sort data=&_segment;
23244     +     by descending count ;
23245     +  run ;
23247     +  %let dsid       = %sysfunc(open(&_segment));
23248     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
23249     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
23250     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
23252     +  %let dsid=%sysfunc(close(&dsid));
23254     +  %let SEGMENTS=;
23255     +  %let COUNTS=;
23256     +  %let OTHERWHERE=;
23257     +  %let numLevels=;
23258     +  data _segs;
23259     +     length SegmentVariable $32 SegmentValue $200;
23260     +     retain SegmentVariable "&_Segment";
23261     +     label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
23262     +           SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))";
23263     +     drop &_segment cum othercount otherpct numLevels;
23264     +     retain cum othercount otherpct numLevels 0;
23265     +     format Count 8.;
23266     +     set &_segment end=eof;
23268     +     %if &_segformat ne %then %do;
23269     +         SegmentValue= left(put(&_segment, &_segformat));
23270     +     %end;
23271     +     %else %do;
23272     +        %if &_segtype = N %then %do;
23273     +            SegmentValue= left(put(&_segment, best12.));
23274     +        %end;
23275     +        %else %do;
23276     +            SegmentValue = &_segment;
23277     +        %end;
23278     +     %end;
23280     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
23281     +        call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
23282     +        call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
23283     +        numLevels + 1;
23284     +        output;
23285     +     %end;
23286     +     %else %do;
23287     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
23288     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
23289     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
23290     +            numLevels + 1;
23291     +            output;
23292     +         end;
23293     +         else do;
23294     +            %if &_segtype = C or &_segformat ne %then %do;
23295     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
23296     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
23297     +            %end;
23298     +            %else %do;
23299     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
23300     +            %end;
23301     +            othercount = othercount + count;
23302     +            otherpct   = otherpct + percent;
23303     +            if eof then do;
23304     +               SegmentValue = '_OTHER_';
23305     +               count   = othercount;
23306     +               percent = otherpct;
23307     +               numLevels + 1;
23308     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
23309     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
23310     +               output;
23311     +            end;
23312     +         end;
23313     +         cum = cum + percent;
23314     +     %end;
23315     +     if eof then
23316     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
23317     +  run ;
23319     +  title9 " " ;
23320     +  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_frequency_title,  NOQUOTE, &_Segment))";
23321     +  proc print data=_segs noobs label ;
23322     +  run ;
23323     +  title9;
23324     +  title10;
23326     +  proc append base=&_sizeDs data=_segs force;
23327     +  run;
23329     +  %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED);
23330     +  %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23331     +      %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED + &EM_NUM_TARGET);
23333     +  /* Loop over segments */
23334     +  %do i=1 %to &numLevels;
23335     +     %if ^&numvars %then %do;
23336     +         %if %sysfunc(exist(&_reportDs)) %then %do;
23337     +             data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
23338     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
23339     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
23340     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
23341     +                     Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
23342     +                     Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
23343     +                length SegmentVariable $32 SegmentValue $200;
23344     +                retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
23345     +                set &_reportDs;
23346     +                Rank = _N_;
23347     +             run;
23348     +             proc append base=&_varsDs data=_TEMPRULE force;
23349     +             run;
23350     +         %end;
23351     +         %goto doskip;
23352     +     %end;
23354     +     %if &_segformat ne %then %do;
23355     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
23356     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
23357     +         %else
23358     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&i";
23359     +     %end;
23360     +     %else %do;
23361     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
23362     +                 %let where= &_segment in(&OTHERWHERE);
23363     +         %else %do;
23364     +             %if &_segtype eq N %then
23365     +                 %let where= &_segment = &&segments&i;
23366     +             %else
23367     +                 %let where= &_segment = "&&segments&i";
23368     +         %end;
23369     +     %end;
23371     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
23372     +        set &EM_IMPORT_DATA(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
23373     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
23374     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
23375     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
23376     +        if &where then
23377     +           _seg= 1 ;
23378     +        else
23379     +           _seg= 0 ;
23380     +     run ;
23382     +      %if (&EM_IMPORT_VALIDATE ne ) and (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE, VIEW))) %then %do;
23383     +          data &EM_NODEID._VALIDTMP / view=&EM_NODEID._VALIDTMP ;
23384     +             set &EM_IMPORT_VALIDATE(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
23385     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
23386     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
23387     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
23389     +             if &where then
23390     +                _seg= 1 ;
23391     +              else
23392     +                 _seg= 0 ;
23393     +          run ;
23394     +      %end;
23396     +     %if  (%eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED + &EM_NUM_INTERVAL_TARGET +
23397     +               &EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_BINARY_TARGET +
23398     +               &EM_NUM_ORDINAL_INPUT  + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_REJECTED  + &EM_NUM_NOMINAL_REJECTED +
23399     +               &EM_NUM_ORDINAL_TARGET +  &EM_NUM_NOMINAL_TARGET) < 10000) %then %do;
23400     +         %_arbor(target=_SEG, rules=_TEMPRULE, FIT=_FIT);
23401     +     %end;
23402     +     %else %do;
23403     +        %_looparbor(level=INTERVAL, target=_SEG, rules=_TEMPRULE);
23404     +        %_looparbor(level=NOMINAL,  target=_SEG, rules=_TEMPRULE);
23405     +        %_looparbor(level=ORDINAL,  target=_SEG, rules=_TEMPRULE);
23406     +     %end;
23408     +     /* Keeping the important variables */
23409     +     %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
23410     +         data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
23411     +            length Name $32;
23412     +            label Name = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))";
23413     +            retain Name;
23415     +            set _temprule;
23417     +            where stat in('VARIABLE','WORTH');
23419     +            if stat = 'VARIABLE' then
23420     +               Name = character_value;
23421     +            else
23422     +               output;
23423     +         run;
23425     +         proc sort data=_TEMPRULE;
23426     +            by descending Worth;
23427     +         run;
23429     +         %if %sysfunc(exist(&_reportDs)) %then %do;
23430     +             data _TEMPRULE;
23431     +                set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT) &_reportDs;
23432     +             run;
23433     +             proc sort data= _TEMPRULE nodupkey;
23434     +                by variable;
23435     +             run;
23436     +             proc sort data=_TEMPRULE;
23437     +                by descending Worth;
23438     +             run;
23439     +         %end;
23440     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
23441     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
23442     +                    SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
23443     +                    Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
23444     +                    Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
23445     +                    Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
23446     +            length SegmentVariable $32 SegmentValue $200;
23447     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
23448     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
23449     +               set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT);
23450     +            %end;
23451     +            %else %do;
23452     +                set _TEMPRULE;
23453     +            %end;
23454     +            Rank = _N_;
23455     +            if _N_=1 and worth ne . and (worth < &EM_PROPERTY_MINWORTH) then do;
23456     +               put "&EM_CODEBAR";
23457     +               put "* No input variable meet the minimum worth criterion of &EM_PROPERTY_MINWORTH.";
23458     +               put "* You may identify profile variables by lowering this threshold, ";
23459     +               put "* or by increasing the maximum depth of the decision tree used.";
23460     +               put "&EM_CODEBAR";
23461     +            end;
23462     +         run;
23463     +     %end;
23464     +     %else %do;
23465     +         %if %sysfunc(exist(&_reportDs)) %then %do;
23466     +             data _TEMPRULE;
23467     +                set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0)) &_reportDs;
23468     +             run;
23469     +             proc sort data= _TEMPRULE nodupkey;
23470     +                by variable;
23471     +             run;
23472     +             proc sort data=_TEMPRULE;
23473     +                by descending Importance;
23474     +             run;
23475     +         %end;
23476     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Importance);
23477     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
23478     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
23479     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
23480     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
23481     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
23482     +            length SegmentVariable $32 SegmentValue $200;
23483     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
23484     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
23485     +               set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0));
23486     +            %end;
23487     +            %else %do;
23488     +                set _TEMPRULE;
23489     +            %end;
23490     +            Rank = _N_;
23491     +         run;
23492     +     %end;
23494     +     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_title,  NOQUOTE, &_Segment, %nrbquote(&&segments&i), &&counts&i))";
23495     +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth2_title,  NOQUOTE))";
23497     +     %if &EM_PROPERTY_PRINTWORTH eq Y %then %do;
23498     +         %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
23499     +             proc print data=_TEMPRULE noobs label ;
23500     +                var Variable Worth Rank;
23501     +                where worth ne .;
23502     +             run ;
23503     +             data _TEMPRULE;
23504     +                set _TEMPRULE;
23505     +                where worth eq . or (worth >= &EM_PROPERTY_MINWORTH);
23506     +             run;
23507     +         %end;
23508     +         %else %do;
23509     +             proc print data=_TEMPRULE noobs label ;
23510     +                var Variable Importance Rank;
23511     +                where importance ne .;
23512     +             run ;
23513     +         %end;
23515     +     %end ;
23516     +     %else %do;
23517     +         %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
23518     +             data _TEMPRULE;
23519     +                set _TEMPRULE;
23520     +                where worth eq . or (worth >= &EM_PROPERTY_MINWORTH);
23521     +             run;
23522     +         %end;
23523     +     %end;
23525     +     title9;
23526     +     title10;
23528     +     proc append base=&_varsDs data=_TEMPRULE force;
23529     +     run;
23531     +     %if %sysfunc(exist(_FIT)) %then %do;
23532     +         data _FIT;
23533     +            length SegmentVariable $32 SegmentValue $200;
23534     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&i";
23536     +            %if %sysfunc(exist(_FIT2)) %then %do;
23537     +                merge _FIT(keep=_MISC_) _FIT2(keep=_VMISC_);
23538     +            %end;
23539     +            %else %do;
23540     +                set _FIT(keep=_MISC_);
23541     +            %end;
23543     +         run;
23544     +         proc append base=&_fitDs data=_FIT force;
23545     +         run;
23546     +     %end;
23548     +     %doskip:
23550     +     proc datasets lib=work nolist mt=(DATA VIEW);
23551     +        delete _SEGS &EM_NODEID._TMP &EM_NODEID._VALIDTMP _STAT
23553     +        %if %sysfunc(exist(_TEMPRULE)) %then %do;
23554     +            _TEMPRULE
23555     +        %end;
23556     +        %if %sysfunc(exist(_FIT))>0 %then %do;
23557     +            _FIT
23558     +        %end;
23559     +        %if %sysfunc(exist(_FIT2))>0 %then %do;
23560     +            _FIT2
23561     +        %end;
23562     +     ;
23563     +     run;
23564     +     quit;
23565     +  %end ;
23566     +%mend tree_profile;
23568     +/* This macro loops over segment variables and determines important variables */
23569     +%macro em_profile(_segmentvar= , _sizeDS=WORK._SEGMENTSIZE,
23570     +                  _varsDs=WORK._SELECTEDVARS, _fitDs=WORK._FITSTAT, _reportDs=);
23572     +    %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
23573     +    %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
23574     +    %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
23576     +    %if _segmentvar eq %then %do;
23577     +        %put &EM_CODEBAR;
23578     +        %put * No segment variable defined ;
23579     +        %put &EM_CODEBAR;
23580     +        %goto doendep;
23581     +    %end;
23583     +    %let sndx = 0;
23585     +    %let svar = &_segmentvar;
23586     +    %if &svar ne %then %do;
23587     +        %makeVarMacros(LEVEL=INTERVAL);
23588     +        %makeVarMacros(LEVEL=NOMINAL);
23589     +        %makeVarMacros(LEVEL=ORDINAL);
23590     +    %end;
23592     +    %do %while(&svar ne );
23593     +        %let sndx= %eval(&sndx+1);
23594     +        %let svar = %scan(&_segmentvar, &sndx,' ');
23595     +        %if &svar ne %then
23596     +            %tree_profile(segment=&svar, _sizeDS=&_sizeDs, _varsDs=&_varsDs, _fitDs=&_fitDs, _reportDs=&_reportDs);
23597     +    %end ;
23599     +    proc datasets lib=&EM_LIB nolist;
23600     +       delete &EM_NODEID._MACS(mt=catalog);
23601     +    run;
23603     +    %doendep:
23604     +%mend em_profile;
23606     +%macro segmentSummary(SEGMENT=, _VARSDS=, FormatFref=);
23607     +   %put &EM_CODEBAR;
23608     +   %put * Summarizing variables ;
23609     +   %put * SEGMENT= &segment;
23610     +   %put &EM_CODEBAR;
23612     +  %if (&_varsDs eq ) or ^%sysfunc(exist(&_VARSDS)) or ^%sysfunc(exist(&segment)) %then %goto doends;
23614     +  %let _SEGMENT = &SEGMENT;
23616     +  %let dsid       = %sysfunc(open(&_segment));
23617     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
23618     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
23619     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
23621     +  %let dsid=%sysfunc(close(&dsid));
23623     +  %let SEGMENTS=;
23624     +  %let COUNTS=;
23625     +  %let OTHERWHERE=;
23626     +  %let numLevels=;
23627     +  data _null_;
23628     +     retain cum othercount otherpct  numLevels 0;
23629     +     format Count 8.;
23630     +     set &_segment end=eof;
23632     +     %if &_segformat ne %then %do;
23633     +         SegmentValue= strip(put(&_segment, &_segformat));
23634     +     %end;
23635     +     %else %do;
23636     +        %if &_segtype = N %then %do;
23637     +            SegmentValue= strip(put(&_segment, best12.));
23638     +        %end;
23639     +        %else %do;
23640     +            SegmentValue = &_segment;
23641     +        %end;
23642     +     %end;
23644     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
23645     +         call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
23646     +         call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
23647     +         numLevels + 1;
23648     +         output;
23649     +     %end;
23650     +     %else %do;
23651     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
23652     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
23653     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
23654     +            numLevels + 1;
23655     +            output;
23656     +         end;
23657     +         else do;
23658     +            %if &_segtype = C or &_segformat ne %then %do;
23659     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
23660     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
23661     +            %end;
23662     +            %else %do;
23663     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
23664     +            %end;
23665     +            othercount = othercount + count;
23666     +            otherpct   = otherpct + percent;
23667     +            if eof then do;
23668     +               SegmentValue = '_OTHER_';
23669     +               count   = othercount;
23670     +               percent = otherpct;
23671     +               numLevels + 1;
23672     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
23673     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
23674     +               output;
23675     +            end;
23676     +         end;
23677     +         cum = cum + percent;
23678     +     %end;
23679     +     if eof then
23680     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
23681     +  run ;
23683     +  /* Loop over segments */
23684     +  %do S = 1 %to &numLevels;
23685     +     %if &_segformat ne %then %do;
23686     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
23687     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
23688     +         %else
23689     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&s";
23690     +     %end;
23691     +     %else %do;
23692     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
23693     +                 %let where= &_segment in(&OTHERWHERE);
23694     +         %else %do;
23695     +             %if &_segtype eq N %then
23696     +                 %let where= &_segment = &&segments&s;
23697     +             %else
23698     +                 %let where= &_segment = "&&segments&s";
23699     +         %end;
23700     +     %end;
23702     +     %let SEGVARS=;
23703     +     %let SEGCLASS=;
23704     +     data _tempStat;
23705     +        set &_varsDs;
23706     +        where  SegmentVariable="&_segment" and SegmentValue="&&segments&s";
23707     +        if Type eq 'I' then
23708     +           call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
23709     +        else
23710     +           call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
23711     +     run ;
23713     +     %let _nobs = 0;
23714     +     %let dsid = %sysfunc(open(_tempStat));
23715     +     %if &dsid %then %do;
23716     +         %let _nobs = %sysfunc(attrn(&dsid, NLOBS));
23717     +         %let dsid = %sysfunc(close(&dsid));
23718     +     %end;
23719     +     %if &_nobs<1 %then %goto doskips;
23721     +     proc sort data=_tempStat;
23722     +        by Variable;
23723     +     run;
23725     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
23726     +        set &EM_IMPORT_DATA;
23728     +        where &where;
23730     +        %if (&FormatFref ne ) and (&segvars ne ) %then %do;
23731     +            %inc &FormatFref;
23732     +        %end;
23733     +     run;
23735     +     /* Profile Segment */
23736     +     %if &segclass ne %then %do;
23737     +         %class_profile(DATA=&EM_NODEID._TMP, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
23738     +         data _CLASS;
23739     +            length SegmentVariable $32 SegmentValue $200;
23740     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
23741     +            label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
23742     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
23743     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
23744     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
23745     +            set _CLASS;
23746     +         run;
23747     +         proc append base=&EM_USER_CLASSDIST data=_CLASS force;
23748     +         run;
23749     +         data _tempStat;
23750     +            merge _tempStat _STAT;
23751     +            by VARIABLE;
23752     +         run;
23753     +     %end;
23754     +     %if &segvars ne %then %do;
23755     +         %var_profile(DATA=&EM_NODEID._TMP, OUTPUT=_INTERVAL, VARS=&SEGVARS,
23756     +                           STAT=_STAT, BIN=N, FREQ=%EM_FREQ, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
23757     +         data _INTERVAL;
23758     +             length SegmentVariable $32 SegmentValue $200;
23759     +             retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
23760     +             label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
23761     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
23762     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
23763     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
23764     +             set _INTERVAL;
23765     +         run;
23767     +         proc append base=&EM_USER_INTDIST data=_INTERVAL force;
23768     +         run;
23770     +         proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
23771     +            by VARIABLE;
23772     +         run;
23773     +         data _tempStat;
23774     +            merge _tempStat _STAT;
23775     +            by VARIABLE;
23776     +         run;
23778     +     %end;
23780     +     proc sort data=_tempStat;
23781     +        by Rank;
23782     +     run;
23783     +     proc append base=&EM_USER_STATS data=_tempStat force;
23784     +     run;
23786     +     %doskips:
23788     +     proc datasets lib=work nolist mt=(DATA VIEW);
23789     +        delete _segment &EM_NODEID._TMP _interval _class
23791     +        %if %sysfunc(exist(_tempStat))>0 %then %do;
23792     +            _tempStat
23793     +        %end;
23794     +     ;
23795     +     run;
23796     +     quit;
23799     +  %end ;
23800     +%mend segmentSummary;
23802     +%macro train;
23804     +   /* Retrieve data set name */
23805     +   %EM_GETNAME(KEY=SIZE,       TYPE=DATA);
23806     +   %EM_GETNAME(KEY=FIT,        TYPE=DATA);
23807     +   %EM_GETNAME(KEY=STATS,      TYPE=DATA);
23808     +   %EM_GETNAME(KEY=WORTH,      TYPE=DATA);
23809     +   %EM_GETNAME(KEY=IMPORTANCE, TYPE=DATA);
23810     +   %EM_GETNAME(KEY=CLASSDIST,  TYPE=DATA);
23811     +   %EM_GETNAME(KEY=INTDIST,    TYPE=DATA);
23812     +   %EM_GETNAME(KEY=SELVARS,    TYPE=DATA);
23814     +   /* Delete previous data sets */
23815     +   proc datasets lib=&EM_LIB nolist;
23816     +      delete &EM_NODEID._SIZE  &EM_NODEID._STATS &EM_NODEID._FIT &EM_NODEID._WORTH
23817     +             &EM_NODEID._IMPORTANCE &EM_NODEID._SELVARS
23818     +             &EM_NODEID._CLASSDIST  &EM_NODEID._INTDIST &EM_NODEID._MACS(mt=catalog);
23819     +   run;
23821     +   %if (%sysfunc(exist(&EM_IMPORT_DATA))<1 and %sysfunc(exist(&EM_IMPORT_DATA, VIEW))<1)
23822     +       or (&EM_IMPORT_DATA eq ) %then %do;
23823     +       %let  EMEXCEPTIONSTRING = exception.server.emtool.PROFNEEDTRAINDATASET;
23824     +       %goto doendpt;
23825     +   %end;
23827     +    proc sort data=&EM_DATA_VARIABLESET;
23828     +       by Name;
23829     +    run;
23831     +    %let _segmentvar = %EM_SEGMENT %EM_TREATMENT;
23833     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq SEGMENT) %then
23834     +        %let _segmentvar= &_segmentvar %EM_BINARY_TARGET %EM_NOMINAL_TARGET %EM_ORDINAL_TARGET;
23836     +    /* Add report variables */
23837     +    %let REPORT_VARS = ;
23838     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq REPORT) %then %do;
23839     +        %let REPORT_VARS = %EM_TARGET;
23840     +    %end;
23841     +    %if &EM_PROPERTY_USEREPORTVARS eq Y %then %do;
23842     +        %let REPORT_VARS = &REPORT_VARS %EM_REPORT_VARS;
23843     +    %end;
23845     +    %if &REPORT_VARS ne %then %do;
23846     +        data _tempreport;
23847     +           length Variable $32;
23849     +        %let rndx= 0 ;
23850     +        %let rvar  = &REPORT_VARS;
23851     +        %do %while( &rndx < &EM_PROPERTY_MAXNUMREPORT and &rvar ne  ) ;
23852     +            %let rndx= %eval(&rndx+1);
23853     +            %let rvar = %scan(&REPORT_VARS, &rndx, ' ') ;
23854     +            %if &rvar ne %then %do;
23855     +                Variable="&rvar"; output;
23856     +            %end ;
23857     +        %end;
23859     +        run;
23860     +    %end;
23862     +    %em_profile(_segmentvar=&_segmentvar, _sizeDs=&EM_USER_SIZE,
23863     +                _varsDs=&EM_USER_SELVARS, _fitDs=&EM_USER_FIT, _reportDs=_tempReport);
23865     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) and (&REPORT_VARS eq ) %then %goto doendpt;
23867     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) %then %do;
23868     +        data &EM_USER_SELVARS;
23869     +           set _tempreport;
23870     +        run;
23871     +    %end;
23873     +    proc sort data=&EM_USER_SELVARS;
23874     +       by Variable;
23875     +    run;
23876     +    data &EM_USER_SELVARS;
23877     +       length Type $1;
23878     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
23879     +       merge &EM_USER_SELVARS(in=a) &EM_DATA_VARIABLESET(keep=NAME LEVEL LABEL rename=(NAME=Variable));
23880     +       by Variable;
23881     +       if LABEL eq '' then LABEL=VARIABLE;
23882     +       if a then do;
23883     +          if LEVEL = 'INTERVAL' then Type = 'I';
23884     +          else Type = 'C';
23885     +           output;
23886     +       end;
23887     +       drop LEVEL;
23888     +    run;
23890     +    proc sort data=&EM_USER_SELVARS out=_SummaryVars nodupkey;
23891     +       by Variable;
23892     +    run;
23893     +    %if &EM_PROPERTY_MAXDEPTH > 1 %then %let selStat = Importance;
23894     +    %else
23895     +        %let selStat = Worth;
23897     +   data &EM_USER_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank &selStat);
23898     +       length Type $1;
23899     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
23900     +       set _SummaryVars;
23901     +       SegmentVariable= "_OVERALL_"; SegmentValue= "&EM_IMPORT_DATA"  ;
23902     +       rank = .; &selStat=.;
23903     +       if Label eq '' then Label=Variable;
23904     +   run;
23906     +    /* Profile Entire Data */
23907     +   %put &EM_CODEBAR;
23908     +   %put * Profile Entire Data ;
23909     +   %put &EM_CODEBAR;
23911     +    %let segvars=;
23912     +    %let segclass=;
23913     +    data _null_;
23914     +       set  &EM_USER_STATS;
23915     +       if Type = 'I' then
23916     +          call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
23917     +       else
23918     +          call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
23919     +    run ;
23921     +    %if &segclass ne %then %do;
23922     +        %class_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
23923     +        data _CLASS;
23924     +           length SegmentVariable $32 SegmentValue $200;
23925     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
23926     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
23927     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
23928     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
23929     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
23930     +           set _CLASS;
23931     +        run;
23932     +        proc append base=&EM_USER_CLASSDIST data=_CLASS force;
23933     +        run;
23935     +        proc sort data=_STAT;
23936     +           by VARIABLE;
23937     +        run;
23938     +        data &EM_USER_STATS;
23939     +            merge  &EM_USER_STATS _STAT;
23940     +            by VARIABLE;
23941     +        run;
23942     +    %end;
23943     +    %if &segvars ne %then %do;
23944     +        /* Computing Min and Max for Interval Variables */
23945     +        %var_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_INTERVAL, VARS=&SEGVARS,
23946     +                          STAT=_STAT, BINDATA=DATA_STAT, FREQ=%EM_FREQ, BIN=Y, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
23947     +        data _INTERVAL;
23948     +           length SegmentVariable $32 SegmentValue $200;
23949     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
23950     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
23951     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
23952     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
23953     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
23954     +           set _INTERVAL;
23955     +        run;
23957     +        proc append base=&EM_USER_INTDIST data=_INTERVAL force;
23958     +        run;
23960     +        proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) OUT=_STAT;
23961     +           by VARIABLE;
23962     +        run;
23963     +        data &EM_USER_STATS;
23964     +            merge  &EM_USER_STATS _STAT;
23965     +            by VARIABLE;
23966     +        run;
23967     +    %end;
23969     +    filename X catalog "&EM_LIB..&EM_NODEID._INTERVAL.FORMAT.source";
23971     +    %if %sysfunc(exist(&EM_LIB..&EM_NODEID._INTERVAL, 'CATALOG')) %then %do;
23972     +        proc datasets lib=&EM_LIB nolist;
23973     +           delete &EM_NODEID._INTERVAL(mt=catalog);
23974     +        run;
23975     +    %end;
23977     +    %if %sysfunc(exist(DATA_STAT)) %then %do;
23978     +        data _null_;
23979     +           file X;
23981     +           %let dsid    =%sysfunc(open(DATA_STAT));
23982     +           %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
23983     +           %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
23984     +           %let obs = %sysfunc(fetch(&dsid));
23986     +           put 'format' ;
23988     +           %let _count = 0;
23989     +           %let _VARS=;
23990     +           %do %while(&obs=0);
23992     +               %let _count = %eval(&_count +1);
23993     +               %let _name = %sysfunc(getvarc(&dsid, &namenum));
23994     +               %let _VARS = &_VARS &_name;
23995     +               %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
23996     +               %do;
23997     +                  put "&_name &_fmtname..";
23998     +               %end;
23999     +               %let obs = %sysfunc(fetch(&dsid));
24000     +           %end;
24001     +           %let dsid=%sysfunc(close(&dsid));
24002     +           put ';';
24003     +        run;
24004     +    %end;
24006     +    /* Profile Segments */
24007     +    %if _segmentvar eq %then %goto doendpt;
24008     +    %let sndx = 0;
24010     +    %let svar = &_segmentvar;
24011     +    %do %while(&svar ne );
24012     +        %let sndx= %eval(&sndx+1);
24013     +        %let svar = %scan(&_segmentvar, &sndx,' ');
24014     +        %if &svar ne %then
24015     +            %segmentSummary(segment=&svar, _varsDs=&EM_USER_SELVARS, FormatFref=X);
24016     +    %end ;
24018     +    filename X;
24020     +    %doendpt:
24023     +    /* Set reports for the node */
24024     +    %let _keys= SIZE STATS CLASSDIST INTDIST;
24026     +    %if %sysfunc(exist( &EM_USER_CLASSDIST)) or  %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
24027     +        %if %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
24028     +            data &EM_USER_INTDIST;
24029     +               set &EM_USER_INTDIST;
24030     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
24031     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
24032     +                     Color           = "%sysfunc(sasmsg(sashelp.dmine, rpt_color_vlabel,  NOQUOTE))";
24033     +               if SegmentVariable = '_OVERALL_' then Color = 1;
24034     +               else Color = 0;
24035     +            run;
24036     +        %end;
24037     +        %if %sysfunc(exist(&EM_USER_CLASSDIST)) %then %do;
24038     +            data &EM_USER_CLASSDIST;
24039     +               set &EM_USER_CLASSDIST;
24040     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
24041     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
24042     +                     Groupindex      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel,  NOQUOTE))";
24043     +               if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
24044     +               else GroupIndex = 1;
24045     +            run;
24046     +        %end;
24048     +        %let svar = &_segmentvar;
24049     +        %let sndx = 0;
24050     +        %do %while(&svar ne );
24051     +            %let sndx= %eval(&sndx+1);
24052     +            %let svar = %scan(&_segmentvar, &sndx,' ');
24053     +            %if &svar ne %then %do;
24054     +                %let autodisplay = N;
24055     +                %if &sndx = 1 %then
24056     +                    %let autodisplay = Y;
24057     +                %EM_REPORT(KEY=&_keys, VIEWTYPE=PROFILEVIEW, DESCRIPTION=Profileview, SEGMENTVALUE=&svar,
24058     +                      STATS=STATS, SIZE=SIZE, CLASSDIST=CLASSDIST, INTDIST=INTDIST, AUTODISPLAY=&autodisplay, BLOCK=Plot,
24059     +                      LOCALIZE=Y, COLOR=COLOR);
24060     +            %end;
24061     +        %end ;
24062     +    %end;
24064     +    %if %sysfunc(exist( &EM_USER_STATS)) %then %do;
24065     +        %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
24066     +            data &EM_USER_WORTH;
24067     +               set &EM_USER_STATS;
24068     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
24069     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
24070     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
24071     +                     Rank   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
24072     +                     Worth  = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
24073     +               where WORTH ne .;
24074     +            run;
24075     +            %EM_REPORT(KEY=WORTH,     VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=WORTH,
24076     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=WORTH, DESCRIPTION=profworth, BLOCK=Plot,
24077     +                  LOCALIZE=Y, NCOLS=1);
24078     +        %end;
24079     +        %else %do;
24080     +            data &EM_USER_IMPORTANCE;
24081     +               set &EM_USER_STATS;
24082     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
24083     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
24084     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
24085     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
24086     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
24087     +               where IMPORTANCE ne .;
24088     +            run;
24089     +            %EM_REPORT(KEY=IMPORTANCE, VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=IMPORTANCE,
24090     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=IMPORTANCE, DESCRIPTION=profimportance, BLOCK=Plot,
24091     +                  LOCALIZE=Y, NCOLS=1);
24092     +       %end;
24093     +    %end;
24095     +    %if %sysfunc(exist( &EM_USER_SIZE)) %then %do;
24096     +        %if %sysfunc(exist( &EM_USER_FIT)) %then %do;
24097     +            data &EM_USER_SIZE;
24098     +               merge &EM_USER_SIZE &EM_USER_FIT;
24099     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
24100     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
24101     +               format PERCENT 5.2;
24102     +               format COUNT 12.;
24103     +            run;
24104     +        %end;
24105     +        %else %do;
24106     +            data &EM_USER_SIZE;
24107     +               set &EM_USER_SIZE;
24108     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
24109     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
24110     +               format PERCENT 5.2;
24111     +               format COUNT 12.;
24112     +            run;
24113     +        %end;
24115     +        %EM_REPORT(KEY=SIZE, VIEWTYPE=PIE, DESCRIPTION=segmentmanysize, X=SEGMENTVALUE, Y=COUNT, TIPTEXT=PERCENT,
24116     +                   REPORTID=SEGMENTVARIABLE, IDVALUE=SIZE, BLOCK=Plot, AUTODISPLAY=Y, LOCALIZE=Y);
24118     +    %end;
24120     +    %EM_REPORT(KEY=SIZE,      VIEWTYPE=DATA, DESCRIPTION=size,                BLOCK=Stats);
24121     +    %EM_REPORT(KEY=STATS,     VIEWTYPE=DATA, DESCRIPTION=profilevars,         BLOCK=Stats);
24122     +    %EM_REPORT(KEY=CLASSDIST, VIEWTYPE=DATA, DESCRIPTION=clusbarplot,         BLOCK=Stats);
24123     +    %EM_REPORT(KEY=INTDIST,   VIEWTYPE=DATA, DESCRIPTION=clushistplot,        BLOCK=Stats);
24125     +    proc datasets lib=&EM_LIB nolist;
24126     +       delete &EM_NODEID._SELVARS _SUMMARYVARS DATA_STAT &EM_NODEID._MACS(mt=catalog) &EM_NODEID._INTERVAL(mt=catalog);
24127     +    run;
24129     +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS3 nolist;
MPRINT(TRAIN):   delete Prof2_SIZE Prof2_STATS Prof2_FIT Prof2_WORTH Prof2_IMPORTANCE Prof2_SELVARS Prof2_CLASSDIST Prof2_INTDIST Prof2_MACS(mt=catalog);
MPRINT(TRAIN):   run;

NOTE: The file EMWS3.PROF2_SIZE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF2_STATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF2_FIT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF2_WORTH (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF2_IMPORTANCE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF2_SELVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF2_CLASSDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF2_INTDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF2_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS3.Prof2_VariableSet;
MPRINT(TRAIN):   by Name;
MPRINT(TRAIN):   run;

NOTE: There were 245 observations read from the data set EMWS3.PROF2_VARIABLESET.
NOTE: The data set EMWS3.PROF2_VARIABLESET has 245 observations and 21 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEVARMACROS):   filename X catalog "EMWS3.Prof2_MACS.INTERVAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS3.Prof2_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL="INTERVAL" and USE='Y') or (ROLE ='INPUT' and LEVEL="INTERVAL" and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;

NOTE: The file X is:
      Catalog Name=EMWS3.PROF2_MACS.INTERVAL_1.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=4,
      Creado=dom, 13 de dic de 2020 15:43:42,
      Última modificación=dom, 13 de dic de 2020 15:43:42,
      Nombre archivo=C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\prof2_macs.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=             9KB,
      Tamaño de archivo (bytes)=9216

NOTE: 22 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 79.
NOTE: There were 241 observations read from the data set EMWS3.PROF2_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (LEVEL='INTERVAL') and (USE='Y')) or ((ROLE='INPUT') and (LEVEL='INTERVAL') and USE in ('D', 'Y'));
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
MPRINT(EM_PROFILE):  ;
MPRINT(EM_PROFILE):  ;
*------------------------------------------------------------*
* Filtering input variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
MPRINT(TREE_PROFILE):   proc freq data=EMWS3.Clus2_TRAIN noprint ;
MPRINT(TREE_PROFILE):   table _SEGMENT_ / missing out=_SEGMENT_(keep=_SEGMENT_ count percent) ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.36 seconds
      cpu time            0.36 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: The data set WORK._SEGMENT_ has 10 observations and 3 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.37 seconds
      cpu time            0.39 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_SEGMENT_;
MPRINT(TREE_PROFILE):   by descending count ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGMENT_ has 10 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _segs;
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_";
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento";
MPRINT(TREE_PROFILE):   drop _SEGMENT_ cum othercount otherpct numLevels;
MPRINT(TREE_PROFILE):   retain cum othercount otherpct numLevels 0;
MPRINT(TREE_PROFILE):   format Count 8.;
MPRINT(TREE_PROFILE):   set _SEGMENT_ end=eof;
MPRINT(TREE_PROFILE):   SegmentValue= left(put(_SEGMENT_, best12.));
MPRINT(TREE_PROFILE):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
MPRINT(TREE_PROFILE):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(TREE_PROFILE):   numLevels + 1;
MPRINT(TREE_PROFILE):   output;
MPRINT(TREE_PROFILE):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGS has 10 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9 " " ;
MPRINT(TREE_PROFILE):   title10 "Frecuencias: _SEGMENT_";
MPRINT(TREE_PROFILE):   proc print data=_segs noobs label ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 10 observations read from the data set WORK._SEGS.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SIZE data=_segs force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._SEGS a EMWS3.PROF2_SIZE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 10 observations read from the data set WORK._SEGS.
NOTE: The data set EMWS3.PROF2_SIZE has 10 observations and 4 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE 
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT 
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD 
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE 
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND 
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER 
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 8 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT 
CODE COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI 
FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN 
KEYBOARD KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT 
PITTSBURGH PLACE POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE 
SIGNAL SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED 
WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1483343 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 145813504 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 17639920 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 161 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.54 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.54 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 161 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 161 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "8";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 8 Número: 1239";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE a EMWS3.PROF2_SELVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set EMWS3.PROF2_SELVARS has 20 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._SEGS (memtype=DATA).
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE 
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT 
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD 
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE 
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND 
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER 
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 9 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT 
CODE COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI 
FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN 
KEYBOARD KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT 
PITTSBURGH PLACE POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE 
SIGNAL SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED 
WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1483343 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 145813504 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 17639920 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 160 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.53 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           0.55 seconds
      cpu time            0.54 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 160 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 160 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "9";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 9 Número: 510";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 16 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 16 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE a EMWS3.PROF2_SELVARS.
NOTE: There were 16 observations read from the data set WORK._TEMPRULE.
NOTE: 16 observations added.
NOTE: The data set EMWS3.PROF2_SELVARS has 36 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE 
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT 
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD 
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE 
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND 
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER 
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 3 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT 
CODE COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI 
FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN 
KEYBOARD KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT 
PITTSBURGH PLACE POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE 
SIGNAL SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED 
WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1483343 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 145813504 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 17639920 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 161 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.55 seconds
      cpu time            0.54 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           0.56 seconds
      cpu time            0.56 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 161 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 161 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 3 Número: 425";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE a EMWS3.PROF2_SELVARS.
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF2_SELVARS has 56 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE 
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT 
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD 
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE 
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND 
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER 
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 5 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT 
CODE COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI 
FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN 
KEYBOARD KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT 
PITTSBURGH PLACE POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE 
SIGNAL SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED 
WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1483343 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 145813504 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 17639920 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 161 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.53 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.54 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 161 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 161 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "5";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 5 Número: 324";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 14 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 14 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE a EMWS3.PROF2_SELVARS.
NOTE: There were 14 observations read from the data set WORK._TEMPRULE.
NOTE: 14 observations added.
NOTE: The data set EMWS3.PROF2_SELVARS has 70 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE 
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT 
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD 
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE 
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND 
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER 
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 4 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT 
CODE COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI 
FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN 
KEYBOARD KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT 
PITTSBURGH PLACE POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE 
SIGNAL SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED 
WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1483343 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 145813504 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 17639920 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 159 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.53 seconds
      cpu time            0.54 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.56 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 159 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 159 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 4 Número: 160";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 3 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 3 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE a EMWS3.PROF2_SELVARS.
NOTE: There were 3 observations read from the data set WORK._TEMPRULE.
NOTE: 3 observations added.
NOTE: The data set EMWS3.PROF2_SELVARS has 73 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE 
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT 
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD 
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE 
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND 
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER 
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 2 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT 
CODE COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI 
FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN 
KEYBOARD KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT 
PITTSBURGH PLACE POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE 
SIGNAL SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED 
WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1483343 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 145813504 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 17639920 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 159 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.53 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.53 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 159 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 159 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 2 Número: 142";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 11 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 11 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE a EMWS3.PROF2_SELVARS.
NOTE: There were 11 observations read from the data set WORK._TEMPRULE.
NOTE: 11 observations added.
NOTE: The data set EMWS3.PROF2_SELVARS has 84 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE 
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT 
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD 
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE 
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND 
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER 
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 7 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT 
CODE COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI 
FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN 
KEYBOARD KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT 
PITTSBURGH PLACE POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE 
SIGNAL SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED 
WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1483343 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 145813504 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 17639920 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 5 nodes and 4 leaves.
NOTE: Using subtree with 5 nodes and 4 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 5 nodes and 4 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 159 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.53 seconds
      cpu time            0.53 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.53 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 159 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 159 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "7";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 7 Número: 69";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 8 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE a EMWS3.PROF2_SELVARS.
NOTE: There were 8 observations read from the data set WORK._TEMPRULE.
NOTE: 8 observations added.
NOTE: The data set EMWS3.PROF2_SELVARS has 92 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE 
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT 
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD 
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE 
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND 
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER 
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 10 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT 
CODE COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI 
FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN 
KEYBOARD KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT 
PITTSBURGH PLACE POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE 
SIGNAL SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED 
WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1483343 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 145813504 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 17639920 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 160 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.53 seconds
      cpu time            0.51 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           0.53 seconds
      cpu time            0.51 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 160 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 160 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "10";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 10 Número: 69";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 10.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 2 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE a EMWS3.PROF2_SELVARS.
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
NOTE: 2 observations added.
NOTE: The data set EMWS3.PROF2_SELVARS has 94 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE 
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT 
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD 
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE 
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND 
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER 
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 1 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.06 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT 
CODE COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI 
FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN 
KEYBOARD KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT 
PITTSBURGH PLACE POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE 
SIGNAL SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED 
WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1483343 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 145813504 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 17639920 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 160 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.55 seconds
      cpu time            0.56 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           0.56 seconds
      cpu time            0.56 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 160 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 160 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 1 Número: 43";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 2 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE a EMWS3.PROF2_SELVARS.
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
NOTE: 2 observations added.
NOTE: The data set EMWS3.PROF2_SELVARS has 96 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(TREE_PROFILE):  =ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT CODE 
COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI FACT 
FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN KEYBOARD 
KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT PITTSBURGH PLACE 
POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE SIGNAL SOFTWAR SOUND 
SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED WIDGET WINDOW WIRE WONDER 
WORK WORLD XLIB XTERM YEAR YOU _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 6 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=20 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   ACCESS ADAM ADDRESS ADVANC AMERICAN ANDI ANSWER APPLIC APPRECI ARAB AREA ARGIC ARMENIA ARMENIAN ATTACK AUDIO BANK BASE BATTERI BILL BOOK BRAIN BRIAN BUILD BUTTON CALIFORNIA CALL CAN CARD CASE CENTER CHANG CHIP CIRCUIT CLIENT 
CODE COLOR COMMUN COMP COMPANI COMPIL COMPUT CONNECT CONTROL COPI CORRECT CREAT CURRENT DAI DATA DAVID DEPART DEPT DESIGN DETECTOR DEVIC DISEAS DISPLAI DISTRIBUT DOCTOR DOESN DON DRAW DRIVE DRUG EDU EFFECT ELECTR ELECTRON EMAIL ENGIN ERROR EVENT EXPERI 
FACT FAX FEEL FILE FIND FOLLOWUP FONT FOOD FRI FRIEND FUNCTION GEB GENER GEORGIA GIVE GOOD GORDON GOVERN GRAPHIC GREAT GREEK GROUND GROUP HAPPEN HEAR HIGH HOME IDEA IMAG INCLUD INFO INFORM INPUT INSTITUT INTEREST INTERNET ISRA ISRAEL JEW JEWISH JOHN 
KEYBOARD KEYWORD KILL KIND LEVEL LIST LIVE LONG MACHIN MAIL MANAG MARK MED MEDIC MEDICIN MEMORI MICHAEL MIKE MON MOTIF MOTOROLA NATION NETWORK NEW NEWS NEWSREAD NOIS NUMBER OPER OPINION ORIGIN OUTPUT PAIN PALESTINIAN PART PATIENT PERSON PHONE PITT 
PITTSBURGH PLACE POINT POLICI POSIT POST POWER PROBLEM PRODUCT PROGRAM PROJECT PUBLIC QUESTION RADAR RADIO READ REASON RECEIV REMEMB REPLI REPORT REQUIR RESEARCH RESPONS ROBERT RUN SAT SCHOOL SCI SCIENC SCREEN SELL SEND SERDAR SERVER SERVIC SHOW SIDE 
SIGNAL SOFTWAR SOUND SOURC STANDARD START STATE STEVE STUDI SUBSCRIB SUGGEST SUN SUPPORT SWITCH SYSTEM TALK TECHNOLOG TERMIN TEST THAT THU TIME TREATMENT TRUE TUE TURKISH TYPE UNIV UNIVERS UNIX USENET USER UTEXA UUCP VERSION VIRGINIA VOLTAG WATER WED 
WIDGET WINDOW WIRE WONDER WORK WORLD XLIB XTERM YEAR YOU
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1483343 kilobytes of physical memory.
NOTE: Will use 3000 out of 3000 training cases.
NOTE: Using memory pool with 145813504 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 17639920 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 158 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.53 seconds
      cpu time            0.54 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR ha utilizado (Tiempo de proceso total):
      real time           0.54 seconds
      cpu time            0.56 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE a WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 158 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 158 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 40 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "6";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=20);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

*------------------------------------------------------------*
* No input variable meet the minimum worth criterion of 0.01
* You may identify profile variables by lowering this threshold, 
* or by increasing the maximum depth of the decision tree used.
*------------------------------------------------------------*
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 20 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segmento: 6 Número: 19";
MPRINT(TREE_PROFILE):   title10 "Perfiles de importancia del árbol de decisión";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 12.
NOTE: PROCEDURE PRINT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 0 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS3.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE a EMWS3.PROF2_SELVARS.
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
NOTE: 0 observations added.
NOTE: The data set EMWS3.PROF2_SELVARS has 96 observations and 5 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_PROFILE):   proc datasets lib=EMWS3 nolist;
MPRINT(EM_PROFILE):   delete Prof2_MACS(mt=catalog);
MPRINT(EM_PROFILE):   run;

NOTE: Deleting EMWS3.PROF2_MACS (memtype=CATALOG).
MPRINT(TRAIN):  ;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS3.Prof2_SELVARS;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;

NOTE: There were 96 observations read from the data set EMWS3.PROF2_SELVARS.
NOTE: The data set EMWS3.PROF2_SELVARS has 96 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   data EMWS3.Prof2_SELVARS;
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Tipo";
MPRINT(TRAIN):   merge EMWS3.Prof2_SELVARS(in=a) EMWS3.Prof2_VariableSet(keep=NAME LEVEL LABEL rename=(NAME=Variable));
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   if LABEL eq '' then LABEL=VARIABLE;
MPRINT(TRAIN):   if a then do;
MPRINT(TRAIN):   if LEVEL = 'INTERVAL' then Type = 'I';
MPRINT(TRAIN):   else Type = 'C';
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   end;
MPRINT(TRAIN):   drop LEVEL;
MPRINT(TRAIN):   run;

WARNING: Multiple lengths were specified for the BY variable Variable by input data sets. This might cause unexpected results.
NOTE: There were 96 observations read from the data set EMWS3.PROF2_SELVARS.
NOTE: There were 245 observations read from the data set EMWS3.PROF2_VARIABLESET.
NOTE: The data set EMWS3.PROF2_SELVARS has 96 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS3.Prof2_SELVARS out=_SummaryVars nodupkey;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;

NOTE: There were 96 observations read from the data set EMWS3.PROF2_SELVARS.
NOTE: 20 observations with duplicate key values were deleted.
NOTE: The data set WORK._SUMMARYVARS has 76 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   data EMWS3.Prof2_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank Worth);
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Tipo";
MPRINT(TRAIN):   set _SummaryVars;
MPRINT(TRAIN):   SegmentVariable= "_OVERALL_";
MPRINT(TRAIN):   SegmentValue= "EMWS3.Clus2_TRAIN" ;
MPRINT(TRAIN):   rank = .;
MPRINT(TRAIN):   Worth=.;
MPRINT(TRAIN):   if Label eq '' then Label=Variable;
MPRINT(TRAIN):   run;

NOTE: There were 76 observations read from the data set WORK._SUMMARYVARS.
NOTE: The data set EMWS3.PROF2_STATS has 76 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Profile Entire Data
*------------------------------------------------------------*
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS3.Prof2_STATS;
MPRINT(TRAIN):   if Type = 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(TRAIN):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(TRAIN):   run ;

NOTE: There were 76 observations read from the data set EMWS3.PROF2_STATS.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Prof2: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=4,
      Creado=dom, 13 de dic de 2020 15:43:50,
      Última modificación=dom, 13 de dic de 2020 15:43:50,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=             5KB,
      Tamaño de archivo (bytes)=5120

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
24133     +%macro _vars;
24134     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
NOTE: The quoted string currently being processed has become more than 262 characters long.  You might have unbalanced quotation marks.
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS3.Clus2_TRAIN(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ACCESS ADAM APPLIC ARAB ARGIC ARMENIA ARMENIAN ATTACK BANK CENTER CHIP CIRCUIT CLIENT COMP DESIGN DISEAS DISPLAI DISTRIBUT DOCTOR DRUG EDU EFFECT ELECTRON ERROR FILE FOLLOWUP FOOD GEB GORDON GOVERN GRAPHIC HIGH IMAG INTERNET ISRA 
ISRAEL JEW JEWISH KILL MED MEDIC MEDICIN MOTIF OPINION PAIN PALESTINIAN PATIENT PITT PITTSBURGH POLICI POWER PROBLEM PROGRAM RADIO REPLI REPORT RUN SCI SCIENC SCREEN SELL SERDAR SERVER SIGNAL TREATMENT TURKISH UNIV UNIX UUCP VERSION VOLTAG WIDGET WINDOW 
WORK XLIB XTERM;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 3000   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.35 seconds
      cpu time            0.35 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: The data set WORK._STAT has 76 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.36 seconds
      cpu time            0.37 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 76 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 76 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS3.Clus2_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=9;
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ACCESS ADAM APPLIC ARAB ARGIC ARMENIA ARMENIAN ATTACK BANK CENTER CHIP CIRCUIT CLIENT COMP DESIGN DISEAS DISPLAI DISTRIBUT DOCTOR DRUG EDU EFFECT ELECTRON ERROR FILE FOLLOWUP FOOD GEB GORDON GOVERN GRAPHIC HIGH IMAG INTERNET ISRA 
ISRAEL JEW JEWISH KILL MED MEDIC MEDICIN MOTIF OPINION PAIN PALESTINIAN PATIENT PITT PITTSBURGH POLICI POWER PROBLEM PROGRAM RADIO REPLI REPORT RUN SCI SCIENC SCREEN SELL SERDAR SERVER SIGNAL TREATMENT TURKISH UNIV UNIX UUCP VERSION VOLTAG WIDGET WINDOW 
WORK XLIB XTERM;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 3000   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.37 seconds
      cpu time            0.39 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: The data set WORK._CLASSOUT has 684 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.38 seconds
      cpu time            0.39 seconds
      

MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<9));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 684 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 684 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 684 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 684 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 76 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT9 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 76 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 11 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS3.Clus2_TRAIN(keep
MPRINT(VAR_PROFILE):  = ACCESS ADAM APPLIC ARAB ARGIC ARMENIA ARMENIAN ATTACK BANK CENTER CHIP CIRCUIT CLIENT COMP DESIGN DISEAS DISPLAI DISTRIBUT DOCTOR DRUG EDU EFFECT ELECTRON ERROR FILE FOLLOWUP FOOD GEB GORDON GOVERN GRAPHIC HIGH IMAG INTERNET ISRA 
ISRAEL JEW JEWISH KILL MED MEDIC MEDICIN MOTIF OPINION PAIN PALESTINIAN PATIENT PITT PITTSBURGH POLICI POWER PROBLEM PROGRAM RADIO REPLI REPORT RUN SCI SCIENC SCREEN SELL SERDAR SERVER SIGNAL TREATMENT TURKISH UNIV UNIX UUCP VERSION VOLTAG WIDGET WINDOW 
WORK XLIB XTERM obs=1000000);
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ACCESS ADAM APPLIC ARAB ARGIC ARMENIA ARMENIAN ATTACK BANK CENTER CHIP CIRCUIT CLIENT COMP DESIGN DISEAS DISPLAI DISTRIBUT DOCTOR DRUG EDU EFFECT ELECTRON ERROR FILE FOLLOWUP FOOD GEB GORDON GOVERN GRAPHIC HIGH IMAG INTERNET ISRA 
ISRAEL JEW JEWISH KILL MED MEDIC MEDICIN MOTIF OPINION PAIN PALESTINIAN PATIENT PITT PITTSBURGH POLICI POWER PROBLEM PROGRAM RADIO REPLI REPORT RUN SCI SCIENC SCREEN SELL SERDAR SERVER SIGNAL TREATMENT TURKISH UNIV UNIX UUCP VERSION VOLTAG WIDGET WINDOW 
WORK XLIB XTERM;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK._EMVARDIST.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.45 seconds
      cpu time            0.45 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 77 variables.
NOTE: PROCEDURE STDIZE ha utilizado (Tiempo de proceso total):
      real time           0.46 seconds
      cpu time            0.45 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=DATA_STAT(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK.DATA_STAT has 76 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=DATA_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 76 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 76 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   set DATA_STAT;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{20};
MPRINT(VAR_PROFILE):   array _bounds{20};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/8;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/8;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;

NOTE: There were 76 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 76 observations and 52 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   merge DATA_STAT _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;

WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 76 observations read from the data set WORK.DATA_STAT.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK.DATA_STAT has 76 observations and 54 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set DATA_STAT end=eof;
MPRINT(VAR_PROFILE):   array _bounds{18};
MPRINT(VAR_PROFILE):   array _midpoint{18};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 18-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_UB - _LB)>1e-10 then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=4,
      Creado=dom, 13 de dic de 2020 15:43:51,
      Última modificación=dom, 13 de dic de 2020 15:43:51,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\em.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=             5KB,
      Tamaño de archivo (bytes)=5120

NOTE: 911 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 76 observations read from the data set WORK.DATA_STAT.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
24135     +proc format;
MPRINT(VAR_PROFILE):   proc format;
24136     +value F1_
24137     +LOW -0 ="0 "
24138     +0 -0.0488086482 ="0.0488086482 "
24139     +0.0488086482 -0.0976172963 ="0.0976172963 "
24140     +0.0976172963 -0.1464259445 ="0.1464259445 "
24141     +0.1464259445 -0.1952345926 ="0.1952345926 "
24142     +0.1952345926 -HIGH="0.2440432408 "
24143     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -0 ="0 " 0 -0.0488086482 ="0.0488086482 " 0.0488086482 -0.0976172963 ="0.0976172963 " 0.0976172963 -0.1464259445 ="0.1464259445 " 0.1464259445 -0.1952345926 ="0.1952345926 " 0.1952345926 -HIGH="0.2440432408 " ;
NOTE: Format F1_ has been output.
24144     +value F2_
24145     +LOW -0 ="0 "
24146     +0 -0.0823583791 ="0.0823583791 "
24147     +0.0823583791 -0.1647167581 ="0.1647167581 "
24148     +0.1647167581 -0.2470751372 ="0.2470751372 "
24149     +0.2470751372 -0.3294335162 ="0.3294335162 "
24150     +0.3294335162 -HIGH="0.4117918953 "
24151     +;
MPRINT(VAR_PROFILE):   value F2_ LOW -0 ="0 " 0 -0.0823583791 ="0.0823583791 " 0.0823583791 -0.1647167581 ="0.1647167581 " 0.1647167581 -0.2470751372 ="0.2470751372 " 0.2470751372 -0.3294335162 ="0.3294335162 " 0.3294335162 -HIGH="0.4117918953 " ;
NOTE: Format F2_ has been output.
24152     +value F3_
24153     +LOW -0.0039957025 ="0.0019978512 "
24154     +0.0039957025 -0.0079914049 ="0.0059935537 "
24155     +0.0079914049 -0.0119871074 ="0.0099892561 "
24156     +0.0119871074 -0.0159828098 ="0.0139849586 "
24157     +0.0159828098 -0.0199785123 ="0.0179806611 "
24158     +0.0199785123 -0.0239742147 ="0.0219763635 "
24159     +0.0239742147 -0.0279699172 ="0.025972066 "
24160     +0.0279699172 -0.0319656197 ="0.0299677684 "
24161     +0.0319656197 -0.0757564826 ="0.0737586313 "
24162     +0.0757564826 -0.1195473455 ="0.1175494943 "
24163     +0.1195473455 -0.1633382084 ="0.1613403572 "
24164     +0.1633382084 -0.2071290713 ="0.2051312201 "
24165     +0.2071290713 -HIGH="0.248922083 "
24166     +;
MPRINT(VAR_PROFILE):   value F3_ LOW -0.0039957025 ="0.0019978512 " 0.0039957025 -0.0079914049 ="0.0059935537 " 0.0079914049 -0.0119871074 ="0.0099892561 " 0.0119871074 -0.0159828098 ="0.0139849586 " 0.0159828098 -0.0199785123 ="0.0179806611 " 
0.0199785123 -0.0239742147 ="0.0219763635 " 0.0239742147 -0.0279699172 ="0.025972066 " 0.0279699172 -0.0319656197 ="0.0299677684 " 0.0319656197 -0.0757564826 ="0.0737586313 " 0.0757564826 -0.1195473455 ="0.1175494943 " 0.1195473455 -0.1633382084 
="0.1613403572 " 0.1633382084 -0.2071290713 ="0.2051312201 " 0.2071290713 -HIGH="0.248922083 " ;
NOTE: Format F3_ has been output.
24167     +value F4_
24168     +LOW -0.0034318485 ="0.0017159243 "
24169     +0.0034318485 -0.006863697 ="0.0051477728 "
24170     +0.006863697 -0.0102955455 ="0.0085796213 "
24171     +0.0102955455 -0.013727394 ="0.0120114698 "
24172     +0.013727394 -0.0171592425 ="0.0154433183 "
24173     +0.0171592425 -0.020591091 ="0.0188751668 "
24174     +0.020591091 -0.0240229396 ="0.0223070153 "
24175     +0.0240229396 -0.0274547881 ="0.0257388638 "
24176     +0.0274547881 -0.0661706926 ="0.0644547683 "
24177     +0.0661706926 -0.1048865971 ="0.1031706729 "
24178     +0.1048865971 -0.1436025016 ="0.1418865774 "
24179     +0.1436025016 -0.1823184062 ="0.1806024819 "
24180     +0.1823184062 -0.2210343107 ="0.2193183864 "
24181     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -0.0034318485 ="0.0017159243 " 0.0034318485 -0.006863697 ="0.0051477728 " 0.006863697 -0.0102955455 ="0.0085796213 " 0.0102955455 -0.013727394 ="0.0120114698 " 0.013727394 -0.0171592425 ="0.0154433183 " 0.0171592425 
-0.020591091 ="0.0188751668 " 0.020591091 -0.0240229396 ="0.0223070153 " 0.0240229396 -0.0274547881 ="0.0257388638 " 0.0274547881 -0.0661706926 ="0.0644547683 " 0.0661706926 -0.1048865971 ="0.1031706729 " 0.1048865971 -0.1436025016 ="0.1418865774 " 
0.1436025016 -0.1823184062 ="0.1806024819 " 0.1823184062 -0.2210343107 ="0.2193183864 " ;
NOTE: Format F4_ has been output.
24182     +value F5_
24183     +LOW -0 ="0 "
24184     +0 -0.065000386 ="0.065000386 "
24185     +0.065000386 -0.130000772 ="0.130000772 "
24186     +0.130000772 -0.195001158 ="0.195001158 "
24187     +0.195001158 -0.260001544 ="0.260001544 "
24188     +0.260001544 -HIGH="0.3250019299 "
24189     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -0 ="0 " 0 -0.065000386 ="0.065000386 " 0.065000386 -0.130000772 ="0.130000772 " 0.130000772 -0.195001158 ="0.195001158 " 0.195001158 -0.260001544 ="0.260001544 " 0.260001544 -HIGH="0.3250019299 " ;
NOTE: Format F5_ has been output.
24190     +value F6_
24191     +LOW -0 ="0 "
24192     +0 -0.1160142256 ="0.1160142256 "
24193     +0.1160142256 -0.2320284511 ="0.2320284511 "
24194     +0.2320284511 -0.3480426767 ="0.3480426767 "
24195     +0.3480426767 -0.4640569023 ="0.4640569023 "
24196     +0.4640569023 -HIGH="0.5800711279 "
24197     +;
MPRINT(VAR_PROFILE):   value F6_ LOW -0 ="0 " 0 -0.1160142256 ="0.1160142256 " 0.1160142256 -0.2320284511 ="0.2320284511 " 0.2320284511 -0.3480426767 ="0.3480426767 " 0.3480426767 -0.4640569023 ="0.4640569023 " 0.4640569023 -HIGH="0.5800711279 " ;
NOTE: Format F6_ has been output.
24198     +value F7_
24199     +LOW -0 ="0 "
24200     +0 -0.0471809055 ="0.0471809055 "
24201     +0.0471809055 -0.0943618111 ="0.0943618111 "
24202     +0.0943618111 -0.1415427166 ="0.1415427166 "
24203     +0.1415427166 -0.1887236222 ="0.1887236222 "
24204     +0.1887236222 -HIGH="0.2359045277 "
24205     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -0 ="0 " 0 -0.0471809055 ="0.0471809055 " 0.0471809055 -0.0943618111 ="0.0943618111 " 0.0943618111 -0.1415427166 ="0.1415427166 " 0.1415427166 -0.1887236222 ="0.1887236222 " 0.1887236222 -HIGH="0.2359045277 " ;
NOTE: Format F7_ has been output.
24206     +value F8_
24207     +LOW -0.0009387754 ="0.0004693877 "
24208     +0.0009387754 -0.0018775507 ="0.001408163 "
24209     +0.0018775507 -0.0028163261 ="0.0023469384 "
24210     +0.0028163261 -0.0037551014 ="0.0032857137 "
24211     +0.0037551014 -0.0046938768 ="0.0042244891 "
24212     +0.0046938768 -0.0056326521 ="0.0051632644 "
24213     +0.0056326521 -0.0065714275 ="0.0061020398 "
24214     +0.0065714275 -0.0075102028 ="0.0070408151 "
24215     +0.0075102028 -0.0392357075 ="0.0387663198 "
24216     +0.0392357075 -0.0709612122 ="0.0704918246 "
24217     +0.0709612122 -0.1026867169 ="0.1022173293 "
24218     +0.1026867169 -0.1344122217 ="0.133942834 "
24219     +0.1344122217 -HIGH="0.1656683387 "
24220     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -0.0009387754 ="0.0004693877 " 0.0009387754 -0.0018775507 ="0.001408163 " 0.0018775507 -0.0028163261 ="0.0023469384 " 0.0028163261 -0.0037551014 ="0.0032857137 " 0.0037551014 -0.0046938768 ="0.0042244891 " 0.0046938768 
-0.0056326521 ="0.0051632644 " 0.0056326521 -0.0065714275 ="0.0061020398 " 0.0065714275 -0.0075102028 ="0.0070408151 " 0.0075102028 -0.0392357075 ="0.0387663198 " 0.0392357075 -0.0709612122 ="0.0704918246 " 0.0709612122 -0.1026867169 ="0.1022173293 " 
0.1026867169 -0.1344122217 ="0.133942834 " 0.1344122217 -HIGH="0.1656683387 " ;
NOTE: Format F8_ has been output.
24221     +value F9_
24222     +LOW -0.0015320254 ="0.0007660127 "
24223     +0.0015320254 -0.0030640507 ="0.002298038 "
24224     +0.0030640507 -0.0045960761 ="0.0038300634 "
24225     +0.0045960761 -0.0061281014 ="0.0053620887 "
24226     +0.0061281014 -0.0076601268 ="0.0068941141 "
24227     +0.0076601268 -0.0091921521 ="0.0084261394 "
24228     +0.0091921521 -0.0107241775 ="0.0099581648 "
24229     +0.0107241775 -0.0122562028 ="0.0114901901 "
24230     +0.0122562028 -0.0644165379 ="0.0636505252 "
24231     +0.0644165379 -0.1165768729 ="0.1158108603 "
24232     +0.1165768729 -0.168737208 ="0.1679711953 "
24233     +0.168737208 -0.2208975431 ="0.2201315304 "
24234     +0.2208975431 -HIGH="0.2722918655 "
24235     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -0.0015320254 ="0.0007660127 " 0.0015320254 -0.0030640507 ="0.002298038 " 0.0030640507 -0.0045960761 ="0.0038300634 " 0.0045960761 -0.0061281014 ="0.0053620887 " 0.0061281014 -0.0076601268 ="0.0068941141 " 0.0076601268 
-0.0091921521 ="0.0084261394 " 0.0091921521 -0.0107241775 ="0.0099581648 " 0.0107241775 -0.0122562028 ="0.0114901901 " 0.0122562028 -0.0644165379 ="0.0636505252 " 0.0644165379 -0.1165768729 ="0.1158108603 " 0.1165768729 -0.168737208 ="0.1679711953 " 
0.168737208 -0.2208975431 ="0.2201315304 " 0.2208975431 -HIGH="0.2722918655 " ;
NOTE: Format F9_ has been output.
24236     +value F10_
24237     +LOW -0.0030719237 ="0.0015359618 "
24238     +0.0030719237 -0.0061438473 ="0.0046078855 "
24239     +0.0061438473 -0.009215771 ="0.0076798092 "
24240     +0.009215771 -0.0122876947 ="0.0107517329 "
24241     +0.0122876947 -0.0153596184 ="0.0138236565 "
24242     +0.0153596184 -0.018431542 ="0.0168955802 "
24243     +0.018431542 -0.0215034657 ="0.0199675039 "
24244     +0.0215034657 -0.0245753894 ="0.0230394275 "
24245     +0.0245753894 -0.0509521162 ="0.0494161544 "
24246     +0.0509521162 -0.077328843 ="0.0757928812 "
24247     +0.077328843 -0.1037055698 ="0.102169608 "
24248     +0.1037055698 -0.1300822966 ="0.1285463348 "
24249     +0.1300822966 -HIGH="0.1549230616 "
24250     +;
MPRINT(VAR_PROFILE):   value F10_ LOW -0.0030719237 ="0.0015359618 " 0.0030719237 -0.0061438473 ="0.0046078855 " 0.0061438473 -0.009215771 ="0.0076798092 " 0.009215771 -0.0122876947 ="0.0107517329 " 0.0122876947 -0.0153596184 ="0.0138236565 " 0.0153596184 
-0.018431542 ="0.0168955802 " 0.018431542 -0.0215034657 ="0.0199675039 " 0.0215034657 -0.0245753894 ="0.0230394275 " 0.0245753894 -0.0509521162 ="0.0494161544 " 0.0509521162 -0.077328843 ="0.0757928812 " 0.077328843 -0.1037055698 ="0.102169608 " 
0.1037055698 -0.1300822966 ="0.1285463348 " 0.1300822966 -HIGH="0.1549230616 " ;
NOTE: Format F10_ has been output.
24251     +value F11_
24252     +LOW -0 ="0 "
24253     +0 -0.0589278606 ="0.0589278606 "
24254     +0.0589278606 -0.1178557212 ="0.1178557212 "
24255     +0.1178557212 -0.1767835818 ="0.1767835818 "
24256     +0.1767835818 -0.2357114424 ="0.2357114424 "
24257     +0.2357114424 -HIGH="0.294639303 "
24258     +;
MPRINT(VAR_PROFILE):   value F11_ LOW -0 ="0 " 0 -0.0589278606 ="0.0589278606 " 0.0589278606 -0.1178557212 ="0.1178557212 " 0.1178557212 -0.1767835818 ="0.1767835818 " 0.1767835818 -0.2357114424 ="0.2357114424 " 0.2357114424 -HIGH="0.294639303 " ;
NOTE: Format F11_ has been output.
24259     +value F12_
24260     +LOW -0 ="0 "
24261     +0 -0.0505948877 ="0.0505948877 "
24262     +0.0505948877 -0.1011897754 ="0.1011897754 "
24263     +0.1011897754 -0.1517846631 ="0.1517846631 "
24264     +0.1517846631 -0.2023795508 ="0.2023795508 "
24265     +0.2023795508 -HIGH="0.2529744385 "
24266     +;
MPRINT(VAR_PROFILE):   value F12_ LOW -0 ="0 " 0 -0.0505948877 ="0.0505948877 " 0.0505948877 -0.1011897754 ="0.1011897754 " 0.1011897754 -0.1517846631 ="0.1517846631 " 0.1517846631 -0.2023795508 ="0.2023795508 " 0.2023795508 -HIGH="0.2529744385 " ;
NOTE: Format F12_ has been output.
24267     +value F13_
24268     +LOW -0 ="0 "
24269     +0 -0.0560258611 ="0.0560258611 "
24270     +0.0560258611 -0.1120517221 ="0.1120517221 "
24271     +0.1120517221 -0.1680775832 ="0.1680775832 "
24272     +0.1680775832 -0.2241034442 ="0.2241034442 "
24273     +0.2241034442 -HIGH="0.2801293053 "
24274     +;
MPRINT(VAR_PROFILE):   value F13_ LOW -0 ="0 " 0 -0.0560258611 ="0.0560258611 " 0.0560258611 -0.1120517221 ="0.1120517221 " 0.1120517221 -0.1680775832 ="0.1680775832 " 0.1680775832 -0.2241034442 ="0.2241034442 " 0.2241034442 -HIGH="0.2801293053 " ;
NOTE: Format F13_ has been output.
24275     +value F14_
24276     +LOW -0.0057539499 ="0.0028769749 "
24277     +0.0057539499 -0.0115078998 ="0.0086309248 "
24278     +0.0115078998 -0.0172618497 ="0.0143848747 "
24279     +0.0172618497 -0.0230157996 ="0.0201388246 "
24280     +0.0230157996 -0.0287697495 ="0.0258927745 "
24281     +0.0287697495 -0.0345236993 ="0.0316467244 "
24282     +0.0345236993 -0.0402776492 ="0.0374006743 "
24283     +0.0402776492 -0.0460315991 ="0.0431546242 "
24284     +0.0460315991 -0.0828568784 ="0.0799799035 "
24285     +0.0828568784 -0.1196821577 ="0.1168051828 "
24286     +0.1196821577 -0.156507437 ="0.1536304621 "
24287     +0.156507437 -0.1933327163 ="0.1904557414 "
24288     +0.1933327163 -HIGH="0.2272810207 "
24289     +;
MPRINT(VAR_PROFILE):   value F14_ LOW -0.0057539499 ="0.0028769749 " 0.0057539499 -0.0115078998 ="0.0086309248 " 0.0115078998 -0.0172618497 ="0.0143848747 " 0.0172618497 -0.0230157996 ="0.0201388246 " 0.0230157996 -0.0287697495 ="0.0258927745 " 
0.0287697495 -0.0345236993 ="0.0316467244 " 0.0345236993 -0.0402776492 ="0.0374006743 " 0.0402776492 -0.0460315991 ="0.0431546242 " 0.0460315991 -0.0828568784 ="0.0799799035 " 0.0828568784 -0.1196821577 ="0.1168051828 " 0.1196821577 -0.156507437 
="0.1536304621 " 0.156507437 -0.1933327163 ="0.1904557414 " 0.1933327163 -HIGH="0.2272810207 " ;
NOTE: Format F14_ has been output.
24290     +value F15_
24291     +LOW -0.0008705799 ="0.0004352899 "
24292     +0.0008705799 -0.0017411597 ="0.0013058698 "
24293     +0.0017411597 -0.0026117396 ="0.0021764497 "
24294     +0.0026117396 -0.0034823194 ="0.0030470295 "
24295     +0.0034823194 -0.0043528993 ="0.0039176094 "
24296     +0.0043528993 -0.0052234792 ="0.0047881892 "
24297     +0.0052234792 -0.006094059 ="0.0056587691 "
24298     +0.006094059 -0.0069646389 ="0.006529349 "
24299     +0.0069646389 -0.0734969392 ="0.0730616492 "
24300     +0.0734969392 -0.1400292394 ="0.1395939495 "
24301     +0.1400292394 -0.2065615397 ="0.2061262498 "
24302     +0.2065615397 -0.2730938399 ="0.27265855 "
24303     +0.2730938399 -HIGH="0.3391908503 "
24304     +;
MPRINT(VAR_PROFILE):   value F15_ LOW -0.0008705799 ="0.0004352899 " 0.0008705799 -0.0017411597 ="0.0013058698 " 0.0017411597 -0.0026117396 ="0.0021764497 " 0.0026117396 -0.0034823194 ="0.0030470295 " 0.0034823194 -0.0043528993 ="0.0039176094 " 
0.0043528993 -0.0052234792 ="0.0047881892 " 0.0052234792 -0.006094059 ="0.0056587691 " 0.006094059 -0.0069646389 ="0.006529349 " 0.0069646389 -0.0734969392 ="0.0730616492 " 0.0734969392 -0.1400292394 ="0.1395939495 " 0.1400292394 -0.2065615397 
="0.2061262498 " 0.2065615397 -0.2730938399 ="0.27265855 " 0.2730938399 -HIGH="0.3391908503 " ;
NOTE: Format F15_ has been output.
24305     +value F16_
24306     +LOW -0 ="0 "
24307     +0 -0.0600802709 ="0.0600802709 "
24308     +0.0600802709 -0.1201605418 ="0.1201605418 "
24309     +0.1201605418 -0.1802408126 ="0.1802408126 "
24310     +0.1802408126 -0.2403210835 ="0.2403210835 "
24311     +0.2403210835 -HIGH="0.3004013544 "
24312     +;
MPRINT(VAR_PROFILE):   value F16_ LOW -0 ="0 " 0 -0.0600802709 ="0.0600802709 " 0.0600802709 -0.1201605418 ="0.1201605418 " 0.1201605418 -0.1802408126 ="0.1802408126 " 0.1802408126 -0.2403210835 ="0.2403210835 " 0.2403210835 -HIGH="0.3004013544 " ;
NOTE: Format F16_ has been output.
24313     +value F17_
24314     +LOW -0.0031482546 ="0.0015741273 "
24315     +0.0031482546 -0.0062965093 ="0.004722382 "
24316     +0.0062965093 -0.0094447639 ="0.0078706366 "
24317     +0.0094447639 -0.0125930185 ="0.0110188912 "
24318     +0.0125930185 -0.0157412732 ="0.0141671459 "
24319     +0.0157412732 -0.0188895278 ="0.0173154005 "
24320     +0.0188895278 -0.0220377824 ="0.0204636551 "
24321     +0.0220377824 -0.0251860371 ="0.0236119098 "
24322     +0.0251860371 -0.0729537247 ="0.0713795973 "
24323     +0.0729537247 -0.1207214123 ="0.1191472849 "
24324     +0.1207214123 -0.1684890998 ="0.1669149725 "
24325     +0.1684890998 -0.2162567874 ="0.2146826601 "
24326     +0.2162567874 -HIGH="0.2624503477 "
24327     +;
MPRINT(VAR_PROFILE):   value F17_ LOW -0.0031482546 ="0.0015741273 " 0.0031482546 -0.0062965093 ="0.004722382 " 0.0062965093 -0.0094447639 ="0.0078706366 " 0.0094447639 -0.0125930185 ="0.0110188912 " 0.0125930185 -0.0157412732 ="0.0141671459 " 
0.0157412732 -0.0188895278 ="0.0173154005 " 0.0188895278 -0.0220377824 ="0.0204636551 " 0.0220377824 -0.0251860371 ="0.0236119098 " 0.0251860371 -0.0729537247 ="0.0713795973 " 0.0729537247 -0.1207214123 ="0.1191472849 " 0.1207214123 -0.1684890998 
="0.1669149725 " 0.1684890998 -0.2162567874 ="0.2146826601 " 0.2162567874 -HIGH="0.2624503477 " ;
NOTE: Format F17_ has been output.
24328     +value F18_
24329     +LOW -0.0042365807 ="0.0021182904 "
24330     +0.0042365807 -0.0084731614 ="0.0063548711 "
24331     +0.0084731614 -0.0127097422 ="0.0105914518 "
24332     +0.0127097422 -0.0169463229 ="0.0148280325 "
24333     +0.0169463229 -0.0211829036 ="0.0190646132 "
24334     +0.0211829036 -0.0254194843 ="0.023301194 "
24335     +0.0254194843 -0.029656065 ="0.0275377747 "
24336     +0.029656065 -0.0338926458 ="0.0317743554 "
24337     +0.0338926458 -0.0554606931 ="0.0533424027 "
24338     +0.0554606931 -0.0770287404 ="0.07491045 "
24339     +0.0770287404 -0.0985967877 ="0.0964784973 "
24340     +0.0985967877 -0.120164835 ="0.1180465446 "
24341     +0.120164835 -HIGH="0.1396145919 "
24342     +;
MPRINT(VAR_PROFILE):   value F18_ LOW -0.0042365807 ="0.0021182904 " 0.0042365807 -0.0084731614 ="0.0063548711 " 0.0084731614 -0.0127097422 ="0.0105914518 " 0.0127097422 -0.0169463229 ="0.0148280325 " 0.0169463229 -0.0211829036 ="0.0190646132 " 
0.0211829036 -0.0254194843 ="0.023301194 " 0.0254194843 -0.029656065 ="0.0275377747 " 0.029656065 -0.0338926458 ="0.0317743554 " 0.0338926458 -0.0554606931 ="0.0533424027 " 0.0554606931 -0.0770287404 ="0.07491045 " 0.0770287404 -0.0985967877 
="0.0964784973 " 0.0985967877 -0.120164835 ="0.1180465446 " 0.120164835 -HIGH="0.1396145919 " ;
NOTE: Format F18_ has been output.
24343     +value F19_
24344     +LOW -0.0011933884 ="0.0005966942 "
24345     +0.0011933884 -0.0023867768 ="0.0017900826 "
24346     +0.0023867768 -0.0035801652 ="0.002983471 "
24347     +0.0035801652 -0.0047735536 ="0.0041768594 "
24348     +0.0047735536 -0.005966942 ="0.0053702478 "
24349     +0.005966942 -0.0071603303 ="0.0065636361 "
24350     +0.0071603303 -0.0083537187 ="0.0077570245 "
24351     +0.0083537187 -0.0095471071 ="0.0089504129 "
24352     +0.0095471071 -0.0683020059 ="0.0677053117 "
24353     +0.0683020059 -0.1270569047 ="0.1264602106 "
24354     +0.1270569047 -0.1858118036 ="0.1852151094 "
24355     +0.1858118036 -0.2445667024 ="0.2439700082 "
24356     +0.2445667024 -HIGH="0.302724907 "
24357     +;
MPRINT(VAR_PROFILE):   value F19_ LOW -0.0011933884 ="0.0005966942 " 0.0011933884 -0.0023867768 ="0.0017900826 " 0.0023867768 -0.0035801652 ="0.002983471 " 0.0035801652 -0.0047735536 ="0.0041768594 " 0.0047735536 -0.005966942 ="0.0053702478 " 0.005966942 
-0.0071603303 ="0.0065636361 " 0.0071603303 -0.0083537187 ="0.0077570245 " 0.0083537187 -0.0095471071 ="0.0089504129 " 0.0095471071 -0.0683020059 ="0.0677053117 " 0.0683020059 -0.1270569047 ="0.1264602106 " 0.1270569047 -0.1858118036 ="0.1852151094 " 
0.1858118036 -0.2445667024 ="0.2439700082 " 0.2445667024 -HIGH="0.302724907 " ;
NOTE: Format F19_ has been output.
24358     +value F20_
24359     +LOW -0 ="0 "
24360     +0 -0.0592100527 ="0.0592100527 "
24361     +0.0592100527 -0.1184201054 ="0.1184201054 "
24362     +0.1184201054 -0.1776301582 ="0.1776301582 "
24363     +0.1776301582 -0.2368402109 ="0.2368402109 "
24364     +0.2368402109 -HIGH="0.2960502636 "
24365     +;
MPRINT(VAR_PROFILE):   value F20_ LOW -0 ="0 " 0 -0.0592100527 ="0.0592100527 " 0.0592100527 -0.1184201054 ="0.1184201054 " 0.1184201054 -0.1776301582 ="0.1776301582 " 0.1776301582 -0.2368402109 ="0.2368402109 " 0.2368402109 -HIGH="0.2960502636 " ;
NOTE: Format F20_ has been output.
24366     +value F21_
24367     +LOW -0.0065346714 ="0.0032673357 "
24368     +0.0065346714 -0.0130693429 ="0.0098020071 "
24369     +0.0130693429 -0.0196040143 ="0.0163366786 "
24370     +0.0196040143 -0.0261386857 ="0.02287135 "
24371     +0.0261386857 -0.0326733571 ="0.0294060214 "
24372     +0.0326733571 -0.0392080286 ="0.0359406929 "
24373     +0.0392080286 -0.0457427 ="0.0424753643 "
24374     +0.0457427 -0.0522773714 ="0.0490100357 "
24375     +0.0522773714 -0.0850939943 ="0.0818266586 "
24376     +0.0850939943 -0.1179106172 ="0.1146432815 "
24377     +0.1179106172 -0.15072724 ="0.1474599043 "
24378     +0.15072724 -0.1835438629 ="0.1802765272 "
24379     +0.1835438629 -HIGH="0.2130931501 "
24380     +;
MPRINT(VAR_PROFILE):   value F21_ LOW -0.0065346714 ="0.0032673357 " 0.0065346714 -0.0130693429 ="0.0098020071 " 0.0130693429 -0.0196040143 ="0.0163366786 " 0.0196040143 -0.0261386857 ="0.02287135 " 0.0261386857 -0.0326733571 ="0.0294060214 " 0.0326733571 
-0.0392080286 ="0.0359406929 " 0.0392080286 -0.0457427 ="0.0424753643 " 0.0457427 -0.0522773714 ="0.0490100357 " 0.0522773714 -0.0850939943 ="0.0818266586 " 0.0850939943 -0.1179106172 ="0.1146432815 " 0.1179106172 -0.15072724 ="0.1474599043 " 0.15072724 
-0.1835438629 ="0.1802765272 " 0.1835438629 -HIGH="0.2130931501 " ;
NOTE: Format F21_ has been output.
24381     +value F22_
24382     +LOW -0.0027716464 ="0.0013858232 "
24383     +0.0027716464 -0.0055432927 ="0.0041574696 "
24384     +0.0055432927 -0.0083149391 ="0.0069291159 "
24385     +0.0083149391 -0.0110865855 ="0.0097007623 "
24386     +0.0110865855 -0.0138582319 ="0.0124724087 "
24387     +0.0138582319 -0.0166298782 ="0.015244055 "
24388     +0.0166298782 -0.0194015246 ="0.0180157014 "
24389     +0.0194015246 -0.022173171 ="0.0207873478 "
24390     +0.022173171 -0.0947745567 ="0.0933887335 "
24391     +0.0947745567 -0.1673759425 ="0.1659901193 "
24392     +0.1673759425 -0.2399773282 ="0.2385915051 "
24393     +0.2399773282 -0.312578714 ="0.3111928908 "
24394     +0.312578714 -HIGH="0.3837942766 "
24395     +;
MPRINT(VAR_PROFILE):   value F22_ LOW -0.0027716464 ="0.0013858232 " 0.0027716464 -0.0055432927 ="0.0041574696 " 0.0055432927 -0.0083149391 ="0.0069291159 " 0.0083149391 -0.0110865855 ="0.0097007623 " 0.0110865855 -0.0138582319 ="0.0124724087 " 
0.0138582319 -0.0166298782 ="0.015244055 " 0.0166298782 -0.0194015246 ="0.0180157014 " 0.0194015246 -0.022173171 ="0.0207873478 " 0.022173171 -0.0947745567 ="0.0933887335 " 0.0947745567 -0.1673759425 ="0.1659901193 " 0.1673759425 -0.2399773282 
="0.2385915051 " 0.2399773282 -0.312578714 ="0.3111928908 " 0.312578714 -HIGH="0.3837942766 " ;
NOTE: Format F22_ has been output.
24396     +value F23_
24397     +LOW -0.0061906102 ="0.0030953051 "
24398     +0.0061906102 -0.0123812203 ="0.0092859153 "
24399     +0.0123812203 -0.0185718305 ="0.0154765254 "
24400     +0.0185718305 -0.0247624407 ="0.0216671356 "
24401     +0.0247624407 -0.0309530508 ="0.0278577458 "
24402     +0.0309530508 -0.037143661 ="0.0340483559 "
24403     +0.037143661 -0.0433342712 ="0.0402389661 "
24404     +0.0433342712 -0.0495248813 ="0.0464295763 "
24405     +0.0495248813 -0.1386696677 ="0.1355743627 "
24406     +0.1386696677 -0.2278144541 ="0.2247191491 "
24407     +0.2278144541 -0.3169592406 ="0.3138639355 "
24408     +0.3169592406 -0.406104027 ="0.4030087219 "
24409     +0.406104027 -0.4952488134 ="0.4921535083 "
24410     +;
MPRINT(VAR_PROFILE):   value F23_ LOW -0.0061906102 ="0.0030953051 " 0.0061906102 -0.0123812203 ="0.0092859153 " 0.0123812203 -0.0185718305 ="0.0154765254 " 0.0185718305 -0.0247624407 ="0.0216671356 " 0.0247624407 -0.0309530508 ="0.0278577458 " 
0.0309530508 -0.037143661 ="0.0340483559 " 0.037143661 -0.0433342712 ="0.0402389661 " 0.0433342712 -0.0495248813 ="0.0464295763 " 0.0495248813 -0.1386696677 ="0.1355743627 " 0.1386696677 -0.2278144541 ="0.2247191491 " 0.2278144541 -0.3169592406 
="0.3138639355 " 0.3169592406 -0.406104027 ="0.4030087219 " 0.406104027 -0.4952488134 ="0.4921535083 " ;
NOTE: Format F23_ has been output.
24411     +value F24_
24412     +LOW -0 ="0 "
24413     +0 -0.057069693 ="0.057069693 "
24414     +0.057069693 -0.1141393861 ="0.1141393861 "
24415     +0.1141393861 -0.1712090791 ="0.1712090791 "
24416     +0.1712090791 -0.2282787722 ="0.2282787722 "
24417     +0.2282787722 -HIGH="0.2853484652 "
24418     +;
MPRINT(VAR_PROFILE):   value F24_ LOW -0 ="0 " 0 -0.057069693 ="0.057069693 " 0.057069693 -0.1141393861 ="0.1141393861 " 0.1141393861 -0.1712090791 ="0.1712090791 " 0.1712090791 -0.2282787722 ="0.2282787722 " 0.2282787722 -HIGH="0.2853484652 " ;
NOTE: Format F24_ has been output.
24419     +value F25_
24420     +LOW -0.0031650895 ="0.0015825448 "
24421     +0.0031650895 -0.0063301791 ="0.0047476343 "
24422     +0.0063301791 -0.0094952686 ="0.0079127238 "
24423     +0.0094952686 -0.0126603581 ="0.0110778133 "
24424     +0.0126603581 -0.0158254476 ="0.0142429029 "
24425     +0.0158254476 -0.0189905372 ="0.0174079924 "
24426     +0.0189905372 -0.0221556267 ="0.0205730819 "
24427     +0.0221556267 -0.0253207162 ="0.0237381715 "
24428     +0.0253207162 -0.1052914547 ="0.10370891 "
24429     +0.1052914547 -0.1852621932 ="0.1836796485 "
24430     +0.1852621932 -0.2652329317 ="0.263650387 "
24431     +0.2652329317 -0.3452036702 ="0.3436211255 "
24432     +0.3452036702 -HIGH="0.423591864 "
24433     +;
MPRINT(VAR_PROFILE):   value F25_ LOW -0.0031650895 ="0.0015825448 " 0.0031650895 -0.0063301791 ="0.0047476343 " 0.0063301791 -0.0094952686 ="0.0079127238 " 0.0094952686 -0.0126603581 ="0.0110778133 " 0.0126603581 -0.0158254476 ="0.0142429029 " 
0.0158254476 -0.0189905372 ="0.0174079924 " 0.0189905372 -0.0221556267 ="0.0205730819 " 0.0221556267 -0.0253207162 ="0.0237381715 " 0.0253207162 -0.1052914547 ="0.10370891 " 0.1052914547 -0.1852621932 ="0.1836796485 " 0.1852621932 -0.2652329317 
="0.263650387 " 0.2652329317 -0.3452036702 ="0.3436211255 " 0.3452036702 -HIGH="0.423591864 " ;
NOTE: Format F25_ has been output.
24434     +value F26_
24435     +LOW -0.0023282593 ="0.0011641296 "
24436     +0.0023282593 -0.0046565186 ="0.0034923889 "
24437     +0.0046565186 -0.0069847778 ="0.0058206482 "
24438     +0.0069847778 -0.0093130371 ="0.0081489075 "
24439     +0.0093130371 -0.0116412964 ="0.0104771667 "
24440     +0.0116412964 -0.0139695557 ="0.012805426 "
24441     +0.0139695557 -0.0162978149 ="0.0151336853 "
24442     +0.0162978149 -0.0186260742 ="0.0174619446 "
24443     +0.0186260742 -0.0575715021 ="0.0564073725 "
24444     +0.0575715021 -0.0965169301 ="0.0953528004 "
24445     +0.0965169301 -0.135462358 ="0.1342982283 "
24446     +0.135462358 -0.1744077859 ="0.1732436563 "
24447     +0.1744077859 -HIGH="0.2121890842 "
24448     +;
MPRINT(VAR_PROFILE):   value F26_ LOW -0.0023282593 ="0.0011641296 " 0.0023282593 -0.0046565186 ="0.0034923889 " 0.0046565186 -0.0069847778 ="0.0058206482 " 0.0069847778 -0.0093130371 ="0.0081489075 " 0.0093130371 -0.0116412964 ="0.0104771667 " 
0.0116412964 -0.0139695557 ="0.012805426 " 0.0139695557 -0.0162978149 ="0.0151336853 " 0.0162978149 -0.0186260742 ="0.0174619446 " 0.0186260742 -0.0575715021 ="0.0564073725 " 0.0575715021 -0.0965169301 ="0.0953528004 " 0.0965169301 -0.135462358 
="0.1342982283 " 0.135462358 -0.1744077859 ="0.1732436563 " 0.1744077859 -HIGH="0.2121890842 " ;
NOTE: Format F26_ has been output.
24449     +value F27_
24450     +LOW -0.0004289557 ="0.0002144778 "
24451     +0.0004289557 -0.0008579113 ="0.0006434335 "
24452     +0.0008579113 -0.001286867 ="0.0010723892 "
24453     +0.001286867 -0.0017158227 ="0.0015013448 "
24454     +0.0017158227 -0.0021447783 ="0.0019303005 "
24455     +0.0021447783 -0.002573734 ="0.0023592562 "
24456     +0.002573734 -0.0030026897 ="0.0027882118 "
24457     +0.0030026897 -0.0034316454 ="0.0032171675 "
24458     +0.0034316454 -0.0695058473 ="0.0692913695 "
24459     +0.0695058473 -0.1355800493 ="0.1353655714 "
24460     +0.1355800493 -0.2016542512 ="0.2014397734 "
24461     +0.2016542512 -0.2677284532 ="0.2675139754 "
24462     +0.2677284532 -HIGH="0.3335881773 "
24463     +;
MPRINT(VAR_PROFILE):   value F27_ LOW -0.0004289557 ="0.0002144778 " 0.0004289557 -0.0008579113 ="0.0006434335 " 0.0008579113 -0.001286867 ="0.0010723892 " 0.001286867 -0.0017158227 ="0.0015013448 " 0.0017158227 -0.0021447783 ="0.0019303005 " 0.0021447783 
-0.002573734 ="0.0023592562 " 0.002573734 -0.0030026897 ="0.0027882118 " 0.0030026897 -0.0034316454 ="0.0032171675 " 0.0034316454 -0.0695058473 ="0.0692913695 " 0.0695058473 -0.1355800493 ="0.1353655714 " 0.1355800493 -0.2016542512 ="0.2014397734 " 
0.2016542512 -0.2677284532 ="0.2675139754 " 0.2677284532 -HIGH="0.3335881773 " ;
NOTE: Format F27_ has been output.
24464     +value F28_
24465     +LOW -0 ="0 "
24466     +0 -0.0422674344 ="0.0422674344 "
24467     +0.0422674344 -0.0845348689 ="0.0845348689 "
24468     +0.0845348689 -0.1268023033 ="0.1268023033 "
24469     +0.1268023033 -0.1690697377 ="0.1690697377 "
24470     +0.1690697377 -HIGH="0.2113371721 "
24471     +;
MPRINT(VAR_PROFILE):   value F28_ LOW -0 ="0 " 0 -0.0422674344 ="0.0422674344 " 0.0422674344 -0.0845348689 ="0.0845348689 " 0.0845348689 -0.1268023033 ="0.1268023033 " 0.1268023033 -0.1690697377 ="0.1690697377 " 0.1690697377 -HIGH="0.2113371721 " ;
NOTE: Format F28_ has been output.
24472     +value F29_
24473     +LOW -0 ="0 "
24474     +0 -0.0575980056 ="0.0575980056 "
24475     +0.0575980056 -0.1151960113 ="0.1151960113 "
24476     +0.1151960113 -0.1727940169 ="0.1727940169 "
24477     +0.1727940169 -0.2303920226 ="0.2303920226 "
24478     +0.2303920226 -HIGH="0.2879900282 "
24479     +;
MPRINT(VAR_PROFILE):   value F29_ LOW -0 ="0 " 0 -0.0575980056 ="0.0575980056 " 0.0575980056 -0.1151960113 ="0.1151960113 " 0.1151960113 -0.1727940169 ="0.1727940169 " 0.1727940169 -0.2303920226 ="0.2303920226 " 0.2303920226 -HIGH="0.2879900282 " ;
NOTE: Format F29_ has been output.
24480     +value F30_
24481     +LOW -0.0018855556 ="0.0009427778 "
24482     +0.0018855556 -0.0037711111 ="0.0028283334 "
24483     +0.0037711111 -0.0056566667 ="0.0047138889 "
24484     +0.0056566667 -0.0075422223 ="0.0065994445 "
24485     +0.0075422223 -0.0094277778 ="0.0084850001 "
24486     +0.0094277778 -0.0113133334 ="0.0103705556 "
24487     +0.0113133334 -0.013198889 ="0.0122561112 "
24488     +0.013198889 -0.0150844445 ="0.0141416668 "
24489     +0.0150844445 -0.040755445 ="0.0398126672 "
24490     +0.040755445 -0.0664264455 ="0.0654836677 "
24491     +0.0664264455 -0.0920974459 ="0.0911546681 "
24492     +0.0920974459 -0.1177684464 ="0.1168256686 "
24493     +0.1177684464 -HIGH="0.142496669 "
24494     +;
MPRINT(VAR_PROFILE):   value F30_ LOW -0.0018855556 ="0.0009427778 " 0.0018855556 -0.0037711111 ="0.0028283334 " 0.0037711111 -0.0056566667 ="0.0047138889 " 0.0056566667 -0.0075422223 ="0.0065994445 " 0.0075422223 -0.0094277778 ="0.0084850001 " 
0.0094277778 -0.0113133334 ="0.0103705556 " 0.0113133334 -0.013198889 ="0.0122561112 " 0.013198889 -0.0150844445 ="0.0141416668 " 0.0150844445 -0.040755445 ="0.0398126672 " 0.040755445 -0.0664264455 ="0.0654836677 " 0.0664264455 -0.0920974459 
="0.0911546681 " 0.0920974459 -0.1177684464 ="0.1168256686 " 0.1177684464 -HIGH="0.142496669 " ;
NOTE: Format F30_ has been output.
24495     +value F31_
24496     +LOW -0 ="0 "
24497     +0 -0.1079914034 ="0.1079914034 "
24498     +0.1079914034 -0.2159828067 ="0.2159828067 "
24499     +0.2159828067 -0.3239742101 ="0.3239742101 "
24500     +0.3239742101 -0.4319656135 ="0.4319656135 "
24501     +0.4319656135 -HIGH="0.5399570168 "
24502     +;
MPRINT(VAR_PROFILE):   value F31_ LOW -0 ="0 " 0 -0.1079914034 ="0.1079914034 " 0.1079914034 -0.2159828067 ="0.2159828067 " 0.2159828067 -0.3239742101 ="0.3239742101 " 0.3239742101 -0.4319656135 ="0.4319656135 " 0.4319656135 -HIGH="0.5399570168 " ;
NOTE: Format F31_ has been output.
24503     +value F32_
24504     +LOW -0.0022498557 ="0.0011249279 "
24505     +0.0022498557 -0.0044997115 ="0.0033747836 "
24506     +0.0044997115 -0.0067495672 ="0.0056246394 "
24507     +0.0067495672 -0.008999423 ="0.0078744951 "
24508     +0.008999423 -0.0112492787 ="0.0101243508 "
24509     +0.0112492787 -0.0134991345 ="0.0123742066 "
24510     +0.0134991345 -0.0157489902 ="0.0146240623 "
24511     +0.0157489902 -0.0179988459 ="0.0168739181 "
24512     +0.0179988459 -0.069649436 ="0.0685245081 "
24513     +0.069649436 -0.121300026 ="0.1201750981 "
24514     +0.121300026 -0.172950616 ="0.1718256882 "
24515     +0.172950616 -0.2246012061 ="0.2234762782 "
24516     +0.2246012061 -HIGH="0.2751268682 "
24517     +;
MPRINT(VAR_PROFILE):   value F32_ LOW -0.0022498557 ="0.0011249279 " 0.0022498557 -0.0044997115 ="0.0033747836 " 0.0044997115 -0.0067495672 ="0.0056246394 " 0.0067495672 -0.008999423 ="0.0078744951 " 0.008999423 -0.0112492787 ="0.0101243508 " 0.0112492787 
-0.0134991345 ="0.0123742066 " 0.0134991345 -0.0157489902 ="0.0146240623 " 0.0157489902 -0.0179988459 ="0.0168739181 " 0.0179988459 -0.069649436 ="0.0685245081 " 0.069649436 -0.121300026 ="0.1201750981 " 0.121300026 -0.172950616 ="0.1718256882 " 
0.172950616 -0.2246012061 ="0.2234762782 " 0.2246012061 -HIGH="0.2751268682 " ;
NOTE: Format F32_ has been output.
24518     +value F33_
24519     +LOW -0 ="0 "
24520     +0 -0.0550754544 ="0.0550754544 "
24521     +0.0550754544 -0.1101509087 ="0.1101509087 "
24522     +0.1101509087 -0.1652263631 ="0.1652263631 "
24523     +0.1652263631 -0.2203018174 ="0.2203018174 "
24524     +0.2203018174 -HIGH="0.2753772718 "
24525     +;
MPRINT(VAR_PROFILE):   value F33_ LOW -0 ="0 " 0 -0.0550754544 ="0.0550754544 " 0.0550754544 -0.1101509087 ="0.1101509087 " 0.1101509087 -0.1652263631 ="0.1652263631 " 0.1652263631 -0.2203018174 ="0.2203018174 " 0.2203018174 -HIGH="0.2753772718 " ;
NOTE: Format F33_ has been output.
24526     +value F34_
24527     +LOW -0.0042541965 ="0.0021270983 "
24528     +0.0042541965 -0.0085083931 ="0.0063812948 "
24529     +0.0085083931 -0.0127625896 ="0.0106354913 "
24530     +0.0127625896 -0.0170167862 ="0.0148896879 "
24531     +0.0170167862 -0.0212709827 ="0.0191438844 "
24532     +0.0212709827 -0.0255251792 ="0.023398081 "
24533     +0.0255251792 -0.0297793758 ="0.0276522775 "
24534     +0.0297793758 -0.0340335723 ="0.031906474 "
24535     +0.0340335723 -0.1331090828 ="0.1309819845 "
24536     +0.1331090828 -0.2321845933 ="0.230057495 "
24537     +0.2321845933 -0.3312601038 ="0.3291330055 "
24538     +0.3312601038 -0.4303356143 ="0.428208516 "
24539     +0.4303356143 -HIGH="0.5272840265 "
24540     +;
MPRINT(VAR_PROFILE):   value F34_ LOW -0.0042541965 ="0.0021270983 " 0.0042541965 -0.0085083931 ="0.0063812948 " 0.0085083931 -0.0127625896 ="0.0106354913 " 0.0127625896 -0.0170167862 ="0.0148896879 " 0.0170167862 -0.0212709827 ="0.0191438844 " 
0.0212709827 -0.0255251792 ="0.023398081 " 0.0255251792 -0.0297793758 ="0.0276522775 " 0.0297793758 -0.0340335723 ="0.031906474 " 0.0340335723 -0.1331090828 ="0.1309819845 " 0.1331090828 -0.2321845933 ="0.230057495 " 0.2321845933 -0.3312601038 
="0.3291330055 " 0.3312601038 -0.4303356143 ="0.428208516 " 0.4303356143 -HIGH="0.5272840265 " ;
NOTE: Format F34_ has been output.
24541     +value F35_
24542     +LOW -0.005412828 ="0.002706414 "
24543     +0.005412828 -0.0108256559 ="0.0081192419 "
24544     +0.0108256559 -0.0162384839 ="0.0135320699 "
24545     +0.0162384839 -0.0216513118 ="0.0189448978 "
24546     +0.0216513118 -0.0270641398 ="0.0243577258 "
24547     +0.0270641398 -0.0324769677 ="0.0297705537 "
24548     +0.0324769677 -0.0378897957 ="0.0351833817 "
24549     +0.0378897957 -0.0433026236 ="0.0405962096 "
24550     +0.0433026236 -0.1028125761 ="0.1001061621 "
24551     +0.1028125761 -0.1623225286 ="0.1596161146 "
24552     +0.1623225286 -0.221832481 ="0.2191260671 "
24553     +0.221832481 -0.2813424335 ="0.2786360195 "
24554     +0.2813424335 -HIGH="0.338145972 "
24555     +;
MPRINT(VAR_PROFILE):   value F35_ LOW -0.005412828 ="0.002706414 " 0.005412828 -0.0108256559 ="0.0081192419 " 0.0108256559 -0.0162384839 ="0.0135320699 " 0.0162384839 -0.0216513118 ="0.0189448978 " 0.0216513118 -0.0270641398 ="0.0243577258 " 0.0270641398 
-0.0324769677 ="0.0297705537 " 0.0324769677 -0.0378897957 ="0.0351833817 " 0.0378897957 -0.0433026236 ="0.0405962096 " 0.0433026236 -0.1028125761 ="0.1001061621 " 0.1028125761 -0.1623225286 ="0.1596161146 " 0.1623225286 -0.221832481 ="0.2191260671 " 
0.221832481 -0.2813424335 ="0.2786360195 " 0.2813424335 -HIGH="0.338145972 " ;
NOTE: Format F35_ has been output.
24556     +value F36_
24557     +LOW -0.006628513 ="0.0033142565 "
24558     +0.006628513 -0.0132570259 ="0.0099427695 "
24559     +0.0132570259 -0.0198855389 ="0.0165712824 "
24560     +0.0198855389 -0.0265140519 ="0.0231997954 "
24561     +0.0265140519 -0.0331425648 ="0.0298283084 "
24562     +0.0331425648 -0.0397710778 ="0.0364568213 "
24563     +0.0397710778 -0.0463995908 ="0.0430853343 "
24564     +0.0463995908 -0.0530281038 ="0.0497138473 "
24565     +0.0530281038 -0.1012831474 ="0.0979688909 "
24566     +0.1012831474 -0.149538191 ="0.1462239345 "
24567     +0.149538191 -0.1977932346 ="0.1944789781 "
24568     +0.1977932346 -0.2460482782 ="0.2427340217 "
24569     +0.2460482782 -HIGH="0.2909890653 "
24570     +;
MPRINT(VAR_PROFILE):   value F36_ LOW -0.006628513 ="0.0033142565 " 0.006628513 -0.0132570259 ="0.0099427695 " 0.0132570259 -0.0198855389 ="0.0165712824 " 0.0198855389 -0.0265140519 ="0.0231997954 " 0.0265140519 -0.0331425648 ="0.0298283084 " 0.0331425648 
-0.0397710778 ="0.0364568213 " 0.0397710778 -0.0463995908 ="0.0430853343 " 0.0463995908 -0.0530281038 ="0.0497138473 " 0.0530281038 -0.1012831474 ="0.0979688909 " 0.1012831474 -0.149538191 ="0.1462239345 " 0.149538191 -0.1977932346 ="0.1944789781 " 
0.1977932346 -0.2460482782 ="0.2427340217 " 0.2460482782 -HIGH="0.2909890653 " ;
NOTE: Format F36_ has been output.
24571     +value F37_
24572     +LOW -0.0031751767 ="0.0015875883 "
24573     +0.0031751767 -0.0063503533 ="0.004762765 "
24574     +0.0063503533 -0.00952553 ="0.0079379416 "
24575     +0.00952553 -0.0127007066 ="0.0111131183 "
24576     +0.0127007066 -0.0158758833 ="0.014288295 "
24577     +0.0158758833 -0.01905106 ="0.0174634716 "
24578     +0.01905106 -0.0222262366 ="0.0206386483 "
24579     +0.0222262366 -0.0254014133 ="0.0238138249 "
24580     +0.0254014133 -0.0839158816 ="0.0823282933 "
24581     +0.0839158816 -0.14243035 ="0.1408427617 "
24582     +0.14243035 -0.2009448184 ="0.1993572301 "
24583     +0.2009448184 -0.2594592868 ="0.2578716985 "
24584     +0.2594592868 -HIGH="0.3163861668 "
24585     +;
MPRINT(VAR_PROFILE):   value F37_ LOW -0.0031751767 ="0.0015875883 " 0.0031751767 -0.0063503533 ="0.004762765 " 0.0063503533 -0.00952553 ="0.0079379416 " 0.00952553 -0.0127007066 ="0.0111131183 " 0.0127007066 -0.0158758833 ="0.014288295 " 0.0158758833 
-0.01905106 ="0.0174634716 " 0.01905106 -0.0222262366 ="0.0206386483 " 0.0222262366 -0.0254014133 ="0.0238138249 " 0.0254014133 -0.0839158816 ="0.0823282933 " 0.0839158816 -0.14243035 ="0.1408427617 " 0.14243035 -0.2009448184 ="0.1993572301 " 0.2009448184 
-0.2594592868 ="0.2578716985 " 0.2594592868 -HIGH="0.3163861668 " ;
NOTE: Format F37_ has been output.
24586     +value F38_
24587     +LOW -0.0013547365 ="0.0006773683 "
24588     +0.0013547365 -0.0027094731 ="0.0020321048 "
24589     +0.0027094731 -0.0040642096 ="0.0033868413 "
24590     +0.0040642096 -0.0054189461 ="0.0047415779 "
24591     +0.0054189461 -0.0067736827 ="0.0060963144 "
24592     +0.0067736827 -0.0081284192 ="0.0074510509 "
24593     +0.0081284192 -0.0094831557 ="0.0088057875 "
24594     +0.0094831557 -0.0108378923 ="0.010160524 "
24595     +0.0108378923 -0.0424417153 ="0.0417643471 "
24596     +0.0424417153 -0.0740455384 ="0.0733681702 "
24597     +0.0740455384 -0.1056493615 ="0.1049719932 "
24598     +0.1056493615 -0.1372531846 ="0.1365758163 "
24599     +0.1372531846 -HIGH="0.1681796394 "
24600     +;
MPRINT(VAR_PROFILE):   value F38_ LOW -0.0013547365 ="0.0006773683 " 0.0013547365 -0.0027094731 ="0.0020321048 " 0.0027094731 -0.0040642096 ="0.0033868413 " 0.0040642096 -0.0054189461 ="0.0047415779 " 0.0054189461 -0.0067736827 ="0.0060963144 " 
0.0067736827 -0.0081284192 ="0.0074510509 " 0.0081284192 -0.0094831557 ="0.0088057875 " 0.0094831557 -0.0108378923 ="0.010160524 " 0.0108378923 -0.0424417153 ="0.0417643471 " 0.0424417153 -0.0740455384 ="0.0733681702 " 0.0740455384 -0.1056493615 
="0.1049719932 " 0.1056493615 -0.1372531846 ="0.1365758163 " 0.1372531846 -HIGH="0.1681796394 " ;
NOTE: Format F38_ has been output.
24601     +value F39_
24602     +LOW -0.0026745226 ="0.0013372613 "
24603     +0.0026745226 -0.0053490452 ="0.0040117839 "
24604     +0.0053490452 -0.0080235677 ="0.0066863065 "
24605     +0.0080235677 -0.0106980903 ="0.009360829 "
24606     +0.0106980903 -0.0133726129 ="0.0120353516 "
24607     +0.0133726129 -0.0160471355 ="0.0147098742 "
24608     +0.0160471355 -0.0187216581 ="0.0173843968 "
24609     +0.0187216581 -0.0213961807 ="0.0200589194 "
24610     +0.0213961807 -0.0661851042 ="0.0648478429 "
24611     +0.0661851042 -0.1109740277 ="0.1096367664 "
24612     +0.1109740277 -0.1557629512 ="0.1544256899 "
24613     +0.1557629512 -0.2005518747 ="0.1992146135 "
24614     +0.2005518747 -HIGH="0.244003537 "
24615     +;
MPRINT(VAR_PROFILE):   value F39_ LOW -0.0026745226 ="0.0013372613 " 0.0026745226 -0.0053490452 ="0.0040117839 " 0.0053490452 -0.0080235677 ="0.0066863065 " 0.0080235677 -0.0106980903 ="0.009360829 " 0.0106980903 -0.0133726129 ="0.0120353516 " 
0.0133726129 -0.0160471355 ="0.0147098742 " 0.0160471355 -0.0187216581 ="0.0173843968 " 0.0187216581 -0.0213961807 ="0.0200589194 " 0.0213961807 -0.0661851042 ="0.0648478429 " 0.0661851042 -0.1109740277 ="0.1096367664 " 0.1109740277 -0.1557629512 
="0.1544256899 " 0.1557629512 -0.2005518747 ="0.1992146135 " 0.2005518747 -HIGH="0.244003537 " ;
NOTE: Format F39_ has been output.
24616     +value F40_
24617     +LOW -0.0042265072 ="0.0021132536 "
24618     +0.0042265072 -0.0084530144 ="0.0063397608 "
24619     +0.0084530144 -0.0126795216 ="0.010566268 "
24620     +0.0126795216 -0.0169060288 ="0.0147927752 "
24621     +0.0169060288 -0.021132536 ="0.0190192824 "
24622     +0.021132536 -0.0253590432 ="0.0232457896 "
24623     +0.0253590432 -0.0295855504 ="0.0274722968 "
24624     +0.0295855504 -0.0338120576 ="0.031698804 "
24625     +0.0338120576 -0.0483772516 ="0.046263998 "
24626     +0.0483772516 -0.0629424457 ="0.0608291921 "
24627     +0.0629424457 -0.0775076397 ="0.0753943861 "
24628     +0.0775076397 -0.0920728337 ="0.0899595801 "
24629     +0.0920728337 -HIGH="0.1045247742 "
24630     +;
MPRINT(VAR_PROFILE):   value F40_ LOW -0.0042265072 ="0.0021132536 " 0.0042265072 -0.0084530144 ="0.0063397608 " 0.0084530144 -0.0126795216 ="0.010566268 " 0.0126795216 -0.0169060288 ="0.0147927752 " 0.0169060288 -0.021132536 ="0.0190192824 " 0.021132536 
-0.0253590432 ="0.0232457896 " 0.0253590432 -0.0295855504 ="0.0274722968 " 0.0295855504 -0.0338120576 ="0.031698804 " 0.0338120576 -0.0483772516 ="0.046263998 " 0.0483772516 -0.0629424457 ="0.0608291921 " 0.0629424457 -0.0775076397 ="0.0753943861 " 
0.0775076397 -0.0920728337 ="0.0899595801 " 0.0920728337 -HIGH="0.1045247742 " ;
NOTE: Format F40_ has been output.
24631     +value F41_
24632     +LOW -0.0027367124 ="0.0013683562 "
24633     +0.0027367124 -0.0054734247 ="0.0041050686 "
24634     +0.0054734247 -0.0082101371 ="0.0068417809 "
24635     +0.0082101371 -0.0109468495 ="0.0095784933 "
24636     +0.0109468495 -0.0136835619 ="0.0123152057 "
24637     +0.0136835619 -0.0164202742 ="0.0150519181 "
24638     +0.0164202742 -0.0191569866 ="0.0177886304 "
24639     +0.0191569866 -0.021893699 ="0.0205253428 "
24640     +0.021893699 -0.0538781021 ="0.0525097459 "
24641     +0.0538781021 -0.0858625053 ="0.0844941491 "
24642     +0.0858625053 -0.1178469084 ="0.1164785522 "
24643     +0.1178469084 -0.1498313115 ="0.1484629553 "
24644     +0.1498313115 -HIGH="0.1804473585 "
24645     +;
MPRINT(VAR_PROFILE):   value F41_ LOW -0.0027367124 ="0.0013683562 " 0.0027367124 -0.0054734247 ="0.0041050686 " 0.0054734247 -0.0082101371 ="0.0068417809 " 0.0082101371 -0.0109468495 ="0.0095784933 " 0.0109468495 -0.0136835619 ="0.0123152057 " 
0.0136835619 -0.0164202742 ="0.0150519181 " 0.0164202742 -0.0191569866 ="0.0177886304 " 0.0191569866 -0.021893699 ="0.0205253428 " 0.021893699 -0.0538781021 ="0.0525097459 " 0.0538781021 -0.0858625053 ="0.0844941491 " 0.0858625053 -0.1178469084 
="0.1164785522 " 0.1178469084 -0.1498313115 ="0.1484629553 " 0.1498313115 -HIGH="0.1804473585 " ;
NOTE: Format F41_ has been output.
24646     +value F42_
24647     +LOW -0.0001597901 ="0.000079895 "
24648     +0.0001597901 -0.0003195801 ="0.0002396851 "
24649     +0.0003195801 -0.0004793702 ="0.0003994752 "
24650     +0.0004793702 -0.0006391603 ="0.0005592652 "
24651     +0.0006391603 -0.0007989503 ="0.0007190553 "
24652     +0.0007989503 -0.0009587404 ="0.0008788454 "
24653     +0.0009587404 -0.0011185305 ="0.0010386354 "
24654     +0.0011185305 -0.0012783205 ="0.0011984255 "
24655     +0.0012783205 -0.0551304682 ="0.0550505731 "
24656     +0.0551304682 -0.1089826158 ="0.1089027208 "
24657     +0.1089826158 -0.1628347635 ="0.1627548684 "
24658     +0.1628347635 -0.2166869111 ="0.2166070161 "
24659     +0.2166869111 -HIGH="0.2704591637 "
24660     +;
MPRINT(VAR_PROFILE):   value F42_ LOW -0.0001597901 ="0.000079895 " 0.0001597901 -0.0003195801 ="0.0002396851 " 0.0003195801 -0.0004793702 ="0.0003994752 " 0.0004793702 -0.0006391603 ="0.0005592652 " 0.0006391603 -0.0007989503 ="0.0007190553 " 
0.0007989503 -0.0009587404 ="0.0008788454 " 0.0009587404 -0.0011185305 ="0.0010386354 " 0.0011185305 -0.0012783205 ="0.0011984255 " 0.0012783205 -0.0551304682 ="0.0550505731 " 0.0551304682 -0.1089826158 ="0.1089027208 " 0.1089826158 -0.1628347635 
="0.1627548684 " 0.1628347635 -0.2166869111 ="0.2166070161 " 0.2166869111 -HIGH="0.2704591637 " ;
NOTE: Format F42_ has been output.
24661     +value F43_
24662     +LOW -0 ="0 "
24663     +0 -0.1124649729 ="0.1124649729 "
24664     +0.1124649729 -0.2249299458 ="0.2249299458 "
24665     +0.2249299458 -0.3373949187 ="0.3373949187 "
24666     +0.3373949187 -0.4498598916 ="0.4498598916 "
24667     +0.4498598916 -HIGH="0.5623248645 "
24668     +;
MPRINT(VAR_PROFILE):   value F43_ LOW -0 ="0 " 0 -0.1124649729 ="0.1124649729 " 0.1124649729 -0.2249299458 ="0.2249299458 " 0.2249299458 -0.3373949187 ="0.3373949187 " 0.3373949187 -0.4498598916 ="0.4498598916 " 0.4498598916 -HIGH="0.5623248645 " ;
NOTE: Format F43_ has been output.
24669     +value F44_
24670     +LOW -0.0031376007 ="0.0015688003 "
24671     +0.0031376007 -0.0062752013 ="0.004706401 "
24672     +0.0062752013 -0.009412802 ="0.0078440016 "
24673     +0.009412802 -0.0125504026 ="0.0109816023 "
24674     +0.0125504026 -0.0156880033 ="0.0141192029 "
24675     +0.0156880033 -0.0188256039 ="0.0172568036 "
24676     +0.0188256039 -0.0219632046 ="0.0203944042 "
24677     +0.0219632046 -0.0251008052 ="0.0235320049 "
24678     +0.0251008052 -0.0508709653 ="0.0493021649 "
24679     +0.0508709653 -0.0766411253 ="0.075072325 "
24680     +0.0766411253 -0.1024112853 ="0.100842485 "
24681     +0.1024112853 -0.1281814454 ="0.126612645 "
24682     +0.1281814454 -HIGH="0.1523828051 "
24683     +;
MPRINT(VAR_PROFILE):   value F44_ LOW -0.0031376007 ="0.0015688003 " 0.0031376007 -0.0062752013 ="0.004706401 " 0.0062752013 -0.009412802 ="0.0078440016 " 0.009412802 -0.0125504026 ="0.0109816023 " 0.0125504026 -0.0156880033 ="0.0141192029 " 0.0156880033 
-0.0188256039 ="0.0172568036 " 0.0188256039 -0.0219632046 ="0.0203944042 " 0.0219632046 -0.0251008052 ="0.0235320049 " 0.0251008052 -0.0508709653 ="0.0493021649 " 0.0508709653 -0.0766411253 ="0.075072325 " 0.0766411253 -0.1024112853 ="0.100842485 " 
0.1024112853 -0.1281814454 ="0.126612645 " 0.1281814454 -HIGH="0.1523828051 " ;
NOTE: Format F44_ has been output.
24684     +value F45_
24685     +LOW -0 ="0 "
24686     +0 -0.0890929078 ="0.0890929078 "
24687     +0.0890929078 -0.1781858156 ="0.1781858156 "
24688     +0.1781858156 -0.2672787233 ="0.2672787233 "
24689     +0.2672787233 -0.3563716311 ="0.3563716311 "
24690     +0.3563716311 -HIGH="0.4454645389 "
24691     +;
MPRINT(VAR_PROFILE):   value F45_ LOW -0 ="0 " 0 -0.0890929078 ="0.0890929078 " 0.0890929078 -0.1781858156 ="0.1781858156 " 0.1781858156 -0.2672787233 ="0.2672787233 " 0.2672787233 -0.3563716311 ="0.3563716311 " 0.3563716311 -HIGH="0.4454645389 " ;
NOTE: Format F45_ has been output.
24692     +value F46_
24693     +LOW -0 ="0 "
24694     +0 -0.0600439973 ="0.0600439973 "
24695     +0.0600439973 -0.1200879946 ="0.1200879946 "
24696     +0.1200879946 -0.1801319919 ="0.1801319919 "
24697     +0.1801319919 -0.2401759892 ="0.2401759892 "
24698     +0.2401759892 -HIGH="0.3002199865 "
24699     +;
MPRINT(VAR_PROFILE):   value F46_ LOW -0 ="0 " 0 -0.0600439973 ="0.0600439973 " 0.0600439973 -0.1200879946 ="0.1200879946 " 0.1200879946 -0.1801319919 ="0.1801319919 " 0.1801319919 -0.2401759892 ="0.2401759892 " 0.2401759892 -HIGH="0.3002199865 " ;
NOTE: Format F46_ has been output.
24700     +value F47_
24701     +LOW -0 ="0 "
24702     +0 -0.0372021233 ="0.0372021233 "
24703     +0.0372021233 -0.0744042466 ="0.0744042466 "
24704     +0.0744042466 -0.1116063699 ="0.1116063699 "
24705     +0.1116063699 -0.1488084932 ="0.1488084932 "
24706     +0.1488084932 -HIGH="0.1860106165 "
24707     +;
MPRINT(VAR_PROFILE):   value F47_ LOW -0 ="0 " 0 -0.0372021233 ="0.0372021233 " 0.0372021233 -0.0744042466 ="0.0744042466 " 0.0744042466 -0.1116063699 ="0.1116063699 " 0.1116063699 -0.1488084932 ="0.1488084932 " 0.1488084932 -HIGH="0.1860106165 " ;
NOTE: Format F47_ has been output.
24708     +value F48_
24709     +LOW -0 ="0 "
24710     +0 -0.0749655755 ="0.0749655755 "
24711     +0.0749655755 -0.149931151 ="0.149931151 "
24712     +0.149931151 -0.2248967264 ="0.2248967264 "
24713     +0.2248967264 -0.2998623019 ="0.2998623019 "
24714     +0.2998623019 -HIGH="0.3748278774 "
24715     +;
MPRINT(VAR_PROFILE):   value F48_ LOW -0 ="0 " 0 -0.0749655755 ="0.0749655755 " 0.0749655755 -0.149931151 ="0.149931151 " 0.149931151 -0.2248967264 ="0.2248967264 " 0.2248967264 -0.2998623019 ="0.2998623019 " 0.2998623019 -HIGH="0.3748278774 " ;
NOTE: Format F48_ has been output.
24716     +value F49_
24717     +LOW -0 ="0 "
24718     +0 -0.0410548518 ="0.0410548518 "
24719     +0.0410548518 -0.0821097035 ="0.0821097035 "
24720     +0.0821097035 -0.1231645553 ="0.1231645553 "
24721     +0.1231645553 -0.1642194071 ="0.1642194071 "
24722     +0.1642194071 -HIGH="0.2052742588 "
24723     +;
MPRINT(VAR_PROFILE):   value F49_ LOW -0 ="0 " 0 -0.0410548518 ="0.0410548518 " 0.0410548518 -0.0821097035 ="0.0821097035 " 0.0821097035 -0.1231645553 ="0.1231645553 " 0.1231645553 -0.1642194071 ="0.1642194071 " 0.1642194071 -HIGH="0.2052742588 " ;
NOTE: Format F49_ has been output.
24724     +value F50_
24725     +LOW -0.0013889983 ="0.0006944992 "
24726     +0.0013889983 -0.0027779966 ="0.0020834975 "
24727     +0.0027779966 -0.004166995 ="0.0034724958 "
24728     +0.004166995 -0.0055559933 ="0.0048614941 "
24729     +0.0055559933 -0.0069449916 ="0.0062504924 "
24730     +0.0069449916 -0.0083339899 ="0.0076394908 "
24731     +0.0083339899 -0.0097229882 ="0.0090284891 "
24732     +0.0097229882 -0.0111119866 ="0.0104174874 "
24733     +0.0111119866 -0.0326580067 ="0.0319635076 "
24734     +0.0326580067 -0.0542040269 ="0.0535095277 "
24735     +0.0542040269 -0.075750047 ="0.0750555479 "
24736     +0.075750047 -0.0972960672 ="0.096601568 "
24737     +0.0972960672 -0.1188420874 ="0.1181475882 "
24738     +;
MPRINT(VAR_PROFILE):   value F50_ LOW -0.0013889983 ="0.0006944992 " 0.0013889983 -0.0027779966 ="0.0020834975 " 0.0027779966 -0.004166995 ="0.0034724958 " 0.004166995 -0.0055559933 ="0.0048614941 " 0.0055559933 -0.0069449916 ="0.0062504924 " 0.0069449916 
-0.0083339899 ="0.0076394908 " 0.0083339899 -0.0097229882 ="0.0090284891 " 0.0097229882 -0.0111119866 ="0.0104174874 " 0.0111119866 -0.0326580067 ="0.0319635076 " 0.0326580067 -0.0542040269 ="0.0535095277 " 0.0542040269 -0.075750047 ="0.0750555479 " 
0.075750047 -0.0972960672 ="0.096601568 " 0.0972960672 -0.1188420874 ="0.1181475882 " ;
NOTE: Format F50_ has been output.
24739     +value F51_
24740     +LOW -0.0030215117 ="0.0015107559 "
24741     +0.0030215117 -0.0060430234 ="0.0045322676 "
24742     +0.0060430234 -0.0090645352 ="0.0075537793 "
24743     +0.0090645352 -0.0120860469 ="0.010575291 "
24744     +0.0120860469 -0.0151075586 ="0.0135968028 "
24745     +0.0151075586 -0.0181290703 ="0.0166183145 "
24746     +0.0181290703 -0.0211505821 ="0.0196398262 "
24747     +0.0211505821 -0.0241720938 ="0.0226613379 "
24748     +0.0241720938 -0.0856459989 ="0.084135243 "
24749     +0.0856459989 -0.147119904 ="0.1456091481 "
24750     +0.147119904 -0.2085938091 ="0.2070830532 "
24751     +0.2085938091 -0.2700677142 ="0.2685569583 "
24752     +0.2700677142 -HIGH="0.3300308634 "
24753     +;
MPRINT(VAR_PROFILE):   value F51_ LOW -0.0030215117 ="0.0015107559 " 0.0030215117 -0.0060430234 ="0.0045322676 " 0.0060430234 -0.0090645352 ="0.0075537793 " 0.0090645352 -0.0120860469 ="0.010575291 " 0.0120860469 -0.0151075586 ="0.0135968028 " 
0.0151075586 -0.0181290703 ="0.0166183145 " 0.0181290703 -0.0211505821 ="0.0196398262 " 0.0211505821 -0.0241720938 ="0.0226613379 " 0.0241720938 -0.0856459989 ="0.084135243 " 0.0856459989 -0.147119904 ="0.1456091481 " 0.147119904 -0.2085938091 
="0.2070830532 " 0.2085938091 -0.2700677142 ="0.2685569583 " 0.2700677142 -HIGH="0.3300308634 " ;
NOTE: Format F51_ has been output.
24754     +value F52_
24755     +LOW -0.0044157791 ="0.0022078896 "
24756     +0.0044157791 -0.0088315583 ="0.0066236687 "
24757     +0.0088315583 -0.0132473374 ="0.0110394478 "
24758     +0.0132473374 -0.0176631165 ="0.0154552269 "
24759     +0.0176631165 -0.0220788956 ="0.0198710061 "
24760     +0.0220788956 -0.0264946748 ="0.0242867852 "
24761     +0.0264946748 -0.0309104539 ="0.0287025643 "
24762     +0.0309104539 -0.035326233 ="0.0331183435 "
24763     +0.035326233 -0.0567808729 ="0.0545729833 "
24764     +0.0567808729 -0.0782355128 ="0.0760276232 "
24765     +0.0782355128 -0.0996901526 ="0.0974822631 "
24766     +0.0996901526 -0.1211447925 ="0.118936903 "
24767     +0.1211447925 -HIGH="0.1403915428 "
24768     +;
MPRINT(VAR_PROFILE):   value F52_ LOW -0.0044157791 ="0.0022078896 " 0.0044157791 -0.0088315583 ="0.0066236687 " 0.0088315583 -0.0132473374 ="0.0110394478 " 0.0132473374 -0.0176631165 ="0.0154552269 " 0.0176631165 -0.0220788956 ="0.0198710061 " 
0.0220788956 -0.0264946748 ="0.0242867852 " 0.0264946748 -0.0309104539 ="0.0287025643 " 0.0309104539 -0.035326233 ="0.0331183435 " 0.035326233 -0.0567808729 ="0.0545729833 " 0.0567808729 -0.0782355128 ="0.0760276232 " 0.0782355128 -0.0996901526 
="0.0974822631 " 0.0996901526 -0.1211447925 ="0.118936903 " 0.1211447925 -HIGH="0.1403915428 " ;
NOTE: Format F52_ has been output.
24769     +value F53_
24770     +LOW -0.0047826215 ="0.0023913108 "
24771     +0.0047826215 -0.0095652431 ="0.0071739323 "
24772     +0.0095652431 -0.0143478646 ="0.0119565538 "
24773     +0.0143478646 -0.0191304861 ="0.0167391754 "
24774     +0.0191304861 -0.0239131077 ="0.0215217969 "
24775     +0.0239131077 -0.0286957292 ="0.0263044185 "
24776     +0.0286957292 -0.0334783508 ="0.03108704 "
24777     +0.0334783508 -0.0382609723 ="0.0358696615 "
24778     +0.0382609723 -0.0824733731 ="0.0800820623 "
24779     +0.0824733731 -0.1266857739 ="0.1242944631 "
24780     +0.1266857739 -0.1708981746 ="0.1685068639 "
24781     +0.1708981746 -0.2151105754 ="0.2127192647 "
24782     +0.2151105754 -HIGH="0.2569316654 "
24783     +;
MPRINT(VAR_PROFILE):   value F53_ LOW -0.0047826215 ="0.0023913108 " 0.0047826215 -0.0095652431 ="0.0071739323 " 0.0095652431 -0.0143478646 ="0.0119565538 " 0.0143478646 -0.0191304861 ="0.0167391754 " 0.0191304861 -0.0239131077 ="0.0215217969 " 
0.0239131077 -0.0286957292 ="0.0263044185 " 0.0286957292 -0.0334783508 ="0.03108704 " 0.0334783508 -0.0382609723 ="0.0358696615 " 0.0382609723 -0.0824733731 ="0.0800820623 " 0.0824733731 -0.1266857739 ="0.1242944631 " 0.1266857739 -0.1708981746 
="0.1685068639 " 0.1708981746 -0.2151105754 ="0.2127192647 " 0.2151105754 -HIGH="0.2569316654 " ;
NOTE: Format F53_ has been output.
24784     +value F54_
24785     +LOW -0 ="0 "
24786     +0 -0.0610108102 ="0.0610108102 "
24787     +0.0610108102 -0.1220216204 ="0.1220216204 "
24788     +0.1220216204 -0.1830324306 ="0.1830324306 "
24789     +0.1830324306 -0.2440432408 ="0.2440432408 "
24790     +0.2440432408 -HIGH="0.305054051 "
24791     +;
MPRINT(VAR_PROFILE):   value F54_ LOW -0 ="0 " 0 -0.0610108102 ="0.0610108102 " 0.0610108102 -0.1220216204 ="0.1220216204 " 0.1220216204 -0.1830324306 ="0.1830324306 " 0.1830324306 -0.2440432408 ="0.2440432408 " 0.2440432408 -HIGH="0.305054051 " ;
NOTE: Format F54_ has been output.
24792     +value F55_
24793     +LOW -0.0038240509 ="0.0019120255 "
24794     +0.0038240509 -0.0076481018 ="0.0057360764 "
24795     +0.0076481018 -0.0114721527 ="0.0095601273 "
24796     +0.0114721527 -0.0152962036 ="0.0133841782 "
24797     +0.0152962036 -0.0191202545 ="0.0172082291 "
24798     +0.0191202545 -0.0229443054 ="0.02103228 "
24799     +0.0229443054 -0.0267683564 ="0.0248563309 "
24800     +0.0267683564 -0.0305924073 ="0.0286803818 "
24801     +0.0305924073 -0.056208941 ="0.0542969156 "
24802     +0.056208941 -0.0818254748 ="0.0799134494 "
24803     +0.0818254748 -0.1074420086 ="0.1055299832 "
24804     +0.1074420086 -0.1330585424 ="0.131146517 "
24805     +0.1330585424 -HIGH="0.1567630508 "
24806     +;
MPRINT(VAR_PROFILE):   value F55_ LOW -0.0038240509 ="0.0019120255 " 0.0038240509 -0.0076481018 ="0.0057360764 " 0.0076481018 -0.0114721527 ="0.0095601273 " 0.0114721527 -0.0152962036 ="0.0133841782 " 0.0152962036 -0.0191202545 ="0.0172082291 " 
0.0191202545 -0.0229443054 ="0.02103228 " 0.0229443054 -0.0267683564 ="0.0248563309 " 0.0267683564 -0.0305924073 ="0.0286803818 " 0.0305924073 -0.056208941 ="0.0542969156 " 0.056208941 -0.0818254748 ="0.0799134494 " 0.0818254748 -0.1074420086 
="0.1055299832 " 0.1074420086 -0.1330585424 ="0.131146517 " 0.1330585424 -HIGH="0.1567630508 " ;
NOTE: Format F55_ has been output.
24807     +value F56_
24808     +LOW -0.0018829724 ="0.0009414862 "
24809     +0.0018829724 -0.0037659448 ="0.0028244586 "
24810     +0.0037659448 -0.0056489173 ="0.004707431 "
24811     +0.0056489173 -0.0075318897 ="0.0065904035 "
24812     +0.0075318897 -0.0094148621 ="0.0084733759 "
24813     +0.0094148621 -0.0112978345 ="0.0103563483 "
24814     +0.0112978345 -0.0131808069 ="0.0122393207 "
24815     +0.0131808069 -0.0150637794 ="0.0141222931 "
24816     +0.0150637794 -0.0537100665 ="0.0527685802 "
24817     +0.0537100665 -0.0923563536 ="0.0914148673 "
24818     +0.0923563536 -0.1310026407 ="0.1300611544 "
24819     +0.1310026407 -0.1696489278 ="0.1687074416 "
24820     +0.1696489278 -HIGH="0.2073537287 "
24821     +;
MPRINT(VAR_PROFILE):   value F56_ LOW -0.0018829724 ="0.0009414862 " 0.0018829724 -0.0037659448 ="0.0028244586 " 0.0037659448 -0.0056489173 ="0.004707431 " 0.0056489173 -0.0075318897 ="0.0065904035 " 0.0075318897 -0.0094148621 ="0.0084733759 " 
0.0094148621 -0.0112978345 ="0.0103563483 " 0.0112978345 -0.0131808069 ="0.0122393207 " 0.0131808069 -0.0150637794 ="0.0141222931 " 0.0150637794 -0.0537100665 ="0.0527685802 " 0.0537100665 -0.0923563536 ="0.0914148673 " 0.0923563536 -0.1310026407 
="0.1300611544 " 0.1310026407 -0.1696489278 ="0.1687074416 " 0.1696489278 -HIGH="0.2073537287 " ;
NOTE: Format F56_ has been output.
24822     +value F57_
24823     +LOW -0.0038521144 ="0.0019260572 "
24824     +0.0038521144 -0.0077042289 ="0.0057781717 "
24825     +0.0077042289 -0.0115563433 ="0.0096302861 "
24826     +0.0115563433 -0.0154084578 ="0.0134824005 "
24827     +0.0154084578 -0.0192605722 ="0.017334515 "
24828     +0.0192605722 -0.0231126867 ="0.0211866294 "
24829     +0.0231126867 -0.0269648011 ="0.0250387439 "
24830     +0.0269648011 -0.0308169155 ="0.0288908583 "
24831     +0.0308169155 -0.0575473928 ="0.0556213356 "
24832     +0.0575473928 -0.0842778701 ="0.0823518129 "
24833     +0.0842778701 -0.1110083474 ="0.1090822902 "
24834     +0.1110083474 -0.1377388248 ="0.1358127675 "
24835     +0.1377388248 -HIGH="0.1625432448 "
24836     +;
MPRINT(VAR_PROFILE):   value F57_ LOW -0.0038521144 ="0.0019260572 " 0.0038521144 -0.0077042289 ="0.0057781717 " 0.0077042289 -0.0115563433 ="0.0096302861 " 0.0115563433 -0.0154084578 ="0.0134824005 " 0.0154084578 -0.0192605722 ="0.017334515 " 
0.0192605722 -0.0231126867 ="0.0211866294 " 0.0231126867 -0.0269648011 ="0.0250387439 " 0.0269648011 -0.0308169155 ="0.0288908583 " 0.0308169155 -0.0575473928 ="0.0556213356 " 0.0575473928 -0.0842778701 ="0.0823518129 " 0.0842778701 -0.1110083474 
="0.1090822902 " 0.1110083474 -0.1377388248 ="0.1358127675 " 0.1377388248 -HIGH="0.1625432448 " ;
NOTE: Format F57_ has been output.
24837     +value F58_
24838     +LOW -0.0034666464 ="0.0017333232 "
24839     +0.0034666464 -0.0069332928 ="0.0051999696 "
24840     +0.0069332928 -0.0103999391 ="0.008666616 "
24841     +0.0103999391 -0.0138665855 ="0.0121332623 "
24842     +0.0138665855 -0.0173332319 ="0.0155999087 "
24843     +0.0173332319 -0.0207998783 ="0.0190665551 "
24844     +0.0207998783 -0.0242665247 ="0.0225332015 "
24845     +0.0242665247 -0.0277331711 ="0.0259998479 "
24846     +0.0277331711 -0.0739551228 ="0.0722217996 "
24847     +0.0739551228 -0.1201770746 ="0.1184437514 "
24848     +0.1201770746 -0.1663990263 ="0.1646657031 "
24849     +0.1663990263 -0.2126209781 ="0.2108876549 "
24850     +0.2126209781 -HIGH="0.2571096066 "
24851     +;
MPRINT(VAR_PROFILE):   value F58_ LOW -0.0034666464 ="0.0017333232 " 0.0034666464 -0.0069332928 ="0.0051999696 " 0.0069332928 -0.0103999391 ="0.008666616 " 0.0103999391 -0.0138665855 ="0.0121332623 " 0.0138665855 -0.0173332319 ="0.0155999087 " 
0.0173332319 -0.0207998783 ="0.0190665551 " 0.0207998783 -0.0242665247 ="0.0225332015 " 0.0242665247 -0.0277331711 ="0.0259998479 " 0.0277331711 -0.0739551228 ="0.0722217996 " 0.0739551228 -0.1201770746 ="0.1184437514 " 0.1201770746 -0.1663990263 
="0.1646657031 " 0.1663990263 -0.2126209781 ="0.2108876549 " 0.2126209781 -HIGH="0.2571096066 " ;
NOTE: Format F58_ has been output.
24852     +value F59_
24853     +LOW -0.0046079132 ="0.0023039566 "
24854     +0.0046079132 -0.0092158264 ="0.0069118698 "
24855     +0.0092158264 -0.0138237396 ="0.011519783 "
24856     +0.0138237396 -0.0184316528 ="0.0161276962 "
24857     +0.0184316528 -0.0230395659 ="0.0207356093 "
24858     +0.0230395659 -0.0276474791 ="0.0253435225 "
24859     +0.0276474791 -0.0322553923 ="0.0299514357 "
24860     +0.0322553923 -0.0368633055 ="0.0345593489 "
24861     +0.0368633055 -0.0599614692 ="0.0576575126 "
24862     +0.0599614692 -0.0830596329 ="0.0807556763 "
24863     +0.0830596329 -0.1061577965 ="0.10385384 "
24864     +0.1061577965 -0.1292559602 ="0.1269520036 "
24865     +0.1292559602 -HIGH="0.1500501673 "
24866     +;
MPRINT(VAR_PROFILE):   value F59_ LOW -0.0046079132 ="0.0023039566 " 0.0046079132 -0.0092158264 ="0.0069118698 " 0.0092158264 -0.0138237396 ="0.011519783 " 0.0138237396 -0.0184316528 ="0.0161276962 " 0.0184316528 -0.0230395659 ="0.0207356093 " 
0.0230395659 -0.0276474791 ="0.0253435225 " 0.0276474791 -0.0322553923 ="0.0299514357 " 0.0322553923 -0.0368633055 ="0.0345593489 " 0.0368633055 -0.0599614692 ="0.0576575126 " 0.0599614692 -0.0830596329 ="0.0807556763 " 0.0830596329 -0.1061577965 
="0.10385384 " 0.1061577965 -0.1292559602 ="0.1269520036 " 0.1292559602 -HIGH="0.1500501673 " ;
NOTE: Format F59_ has been output.
24867     +value F60_
24868     +LOW -0 ="0 "
24869     +0 -0.0712427584 ="0.0712427584 "
24870     +0.0712427584 -0.1424855168 ="0.1424855168 "
24871     +0.1424855168 -0.2137282752 ="0.2137282752 "
24872     +0.2137282752 -0.2849710337 ="0.2849710337 "
24873     +0.2849710337 -0.3562137921 ="0.3562137921 "
24874     +;
MPRINT(VAR_PROFILE):   value F60_ LOW -0 ="0 " 0 -0.0712427584 ="0.0712427584 " 0.0712427584 -0.1424855168 ="0.1424855168 " 0.1424855168 -0.2137282752 ="0.2137282752 " 0.2137282752 -0.2849710337 ="0.2849710337 " 0.2849710337 -0.3562137921 ="0.3562137921 " 
;
NOTE: Format F60_ has been output.
24875     +value F61_
24876     +LOW -0 ="0 "
24877     +0 -0.0445723796 ="0.0445723796 "
24878     +0.0445723796 -0.0891447593 ="0.0891447593 "
24879     +0.0891447593 -0.1337171389 ="0.1337171389 "
24880     +0.1337171389 -0.1782895186 ="0.1782895186 "
24881     +0.1782895186 -HIGH="0.2228618982 "
24882     +;
MPRINT(VAR_PROFILE):   value F61_ LOW -0 ="0 " 0 -0.0445723796 ="0.0445723796 " 0.0445723796 -0.0891447593 ="0.0891447593 " 0.0891447593 -0.1337171389 ="0.1337171389 " 0.1337171389 -0.1782895186 ="0.1782895186 " 0.1782895186 -HIGH="0.2228618982 " ;
NOTE: Format F61_ has been output.
24883     +value F62_
24884     +LOW -0 ="0 "
24885     +0 -0.0952439638 ="0.0952439638 "
24886     +0.0952439638 -0.1904879276 ="0.1904879276 "
24887     +0.1904879276 -0.2857318914 ="0.2857318914 "
24888     +0.2857318914 -0.3809758552 ="0.3809758552 "
24889     +0.3809758552 -HIGH="0.476219819 "
24890     +;
MPRINT(VAR_PROFILE):   value F62_ LOW -0 ="0 " 0 -0.0952439638 ="0.0952439638 " 0.0952439638 -0.1904879276 ="0.1904879276 " 0.1904879276 -0.2857318914 ="0.2857318914 " 0.2857318914 -0.3809758552 ="0.3809758552 " 0.3809758552 -HIGH="0.476219819 " ;
NOTE: Format F62_ has been output.
24891     +value F63_
24892     +LOW -0.0027134791 ="0.0013567396 "
24893     +0.0027134791 -0.0054269583 ="0.0040702187 "
24894     +0.0054269583 -0.0081404374 ="0.0067836978 "
24895     +0.0081404374 -0.0108539165 ="0.0094971769 "
24896     +0.0108539165 -0.0135673956 ="0.0122106561 "
24897     +0.0135673956 -0.0162808748 ="0.0149241352 "
24898     +0.0162808748 -0.0189943539 ="0.0176376143 "
24899     +0.0189943539 -0.021707833 ="0.0203510935 "
24900     +0.021707833 -0.0950360629 ="0.0936793233 "
24901     +0.0950360629 -0.1683642927 ="0.1670075531 "
24902     +0.1683642927 -0.2416925226 ="0.240335783 "
24903     +0.2416925226 -0.3150207524 ="0.3136640128 "
24904     +0.3150207524 -HIGH="0.3869922427 "
24905     +;
MPRINT(VAR_PROFILE):   value F63_ LOW -0.0027134791 ="0.0013567396 " 0.0027134791 -0.0054269583 ="0.0040702187 " 0.0054269583 -0.0081404374 ="0.0067836978 " 0.0081404374 -0.0108539165 ="0.0094971769 " 0.0108539165 -0.0135673956 ="0.0122106561 " 
0.0135673956 -0.0162808748 ="0.0149241352 " 0.0162808748 -0.0189943539 ="0.0176376143 " 0.0189943539 -0.021707833 ="0.0203510935 " 0.021707833 -0.0950360629 ="0.0936793233 " 0.0950360629 -0.1683642927 ="0.1670075531 " 0.1683642927 -0.2416925226 
="0.240335783 " 0.2416925226 -0.3150207524 ="0.3136640128 " 0.3150207524 -HIGH="0.3869922427 " ;
NOTE: Format F63_ has been output.
24906     +value F64_
24907     +LOW -0 ="0 "
24908     +0 -0.0591601274 ="0.0591601274 "
24909     +0.0591601274 -0.1183202547 ="0.1183202547 "
24910     +0.1183202547 -0.1774803821 ="0.1774803821 "
24911     +0.1774803821 -0.2366405095 ="0.2366405095 "
24912     +0.2366405095 -HIGH="0.2958006368 "
24913     +;
MPRINT(VAR_PROFILE):   value F64_ LOW -0 ="0 " 0 -0.0591601274 ="0.0591601274 " 0.0591601274 -0.1183202547 ="0.1183202547 " 0.1183202547 -0.1774803821 ="0.1774803821 " 0.1774803821 -0.2366405095 ="0.2366405095 " 0.2366405095 -HIGH="0.2958006368 " ;
NOTE: Format F64_ has been output.
24914     +value F65_
24915     +LOW -0 ="0 "
24916     +0 -0.0467162195 ="0.0467162195 "
24917     +0.0467162195 -0.093432439 ="0.093432439 "
24918     +0.093432439 -0.1401486585 ="0.1401486585 "
24919     +0.1401486585 -0.186864878 ="0.186864878 "
24920     +0.186864878 -HIGH="0.2335810975 "
24921     +;
MPRINT(VAR_PROFILE):   value F65_ LOW -0 ="0 " 0 -0.0467162195 ="0.0467162195 " 0.0467162195 -0.093432439 ="0.093432439 " 0.093432439 -0.1401486585 ="0.1401486585 " 0.1401486585 -0.186864878 ="0.186864878 " 0.186864878 -HIGH="0.2335810975 " ;
NOTE: Format F65_ has been output.
24922     +value F66_
24923     +LOW -0.0010351004 ="0.0005175502 "
24924     +0.0010351004 -0.0020702008 ="0.0015526506 "
24925     +0.0020702008 -0.0031053011 ="0.002587751 "
24926     +0.0031053011 -0.0041404015 ="0.0036228513 "
24927     +0.0041404015 -0.0051755019 ="0.0046579517 "
24928     +0.0051755019 -0.0062106023 ="0.0056930521 "
24929     +0.0062106023 -0.0072457027 ="0.0067281525 "
24930     +0.0072457027 -0.0082808031 ="0.0077632529 "
24931     +0.0082808031 -0.0799044863 ="0.0793869361 "
24932     +0.0799044863 -0.1515281695 ="0.1510106193 "
24933     +0.1515281695 -0.2231518527 ="0.2226343025 "
24934     +0.2231518527 -0.2947755359 ="0.2942579857 "
24935     +0.2947755359 -HIGH="0.3658816689 "
24936     +;
MPRINT(VAR_PROFILE):   value F66_ LOW -0.0010351004 ="0.0005175502 " 0.0010351004 -0.0020702008 ="0.0015526506 " 0.0020702008 -0.0031053011 ="0.002587751 " 0.0031053011 -0.0041404015 ="0.0036228513 " 0.0041404015 -0.0051755019 ="0.0046579517 " 
0.0051755019 -0.0062106023 ="0.0056930521 " 0.0062106023 -0.0072457027 ="0.0067281525 " 0.0072457027 -0.0082808031 ="0.0077632529 " 0.0082808031 -0.0799044863 ="0.0793869361 " 0.0799044863 -0.1515281695 ="0.1510106193 " 0.1515281695 -0.2231518527 
="0.2226343025 " 0.2231518527 -0.2947755359 ="0.2942579857 " 0.2947755359 -HIGH="0.3658816689 " ;
NOTE: Format F66_ has been output.
24937     +value F67_
24938     +LOW -0 ="0 "
24939     +0 -0.0337394919 ="0.0337394919 "
24940     +0.0337394919 -0.0674789837 ="0.0674789837 "
24941     +0.0674789837 -0.1012184756 ="0.1012184756 "
24942     +0.1012184756 -0.1349579675 ="0.1349579675 "
24943     +0.1349579675 -HIGH="0.1686974593 "
24944     +;
MPRINT(VAR_PROFILE):   value F67_ LOW -0 ="0 " 0 -0.0337394919 ="0.0337394919 " 0.0337394919 -0.0674789837 ="0.0674789837 " 0.0674789837 -0.1012184756 ="0.1012184756 " 0.1012184756 -0.1349579675 ="0.1349579675 " 0.1349579675 -HIGH="0.1686974593 " ;
NOTE: Format F67_ has been output.
24945     +value F68_
24946     +LOW -0 ="0 "
24947     +0 -0.0605926765 ="0.0605926765 "
24948     +0.0605926765 -0.121185353 ="0.121185353 "
24949     +0.121185353 -0.1817780295 ="0.1817780295 "
24950     +0.1817780295 -0.242370706 ="0.242370706 "
24951     +0.242370706 -HIGH="0.3029633825 "
24952     +;
MPRINT(VAR_PROFILE):   value F68_ LOW -0 ="0 " 0 -0.0605926765 ="0.0605926765 " 0.0605926765 -0.121185353 ="0.121185353 " 0.121185353 -0.1817780295 ="0.1817780295 " 0.1817780295 -0.242370706 ="0.242370706 " 0.242370706 -HIGH="0.3029633825 " ;
NOTE: Format F68_ has been output.
24953     +value F69_
24954     +LOW -0.0025478268 ="0.0012739134 "
24955     +0.0025478268 -0.0050956536 ="0.0038217402 "
24956     +0.0050956536 -0.0076434804 ="0.006369567 "
24957     +0.0076434804 -0.0101913071 ="0.0089173937 "
24958     +0.0101913071 -0.0127391339 ="0.0114652205 "
24959     +0.0127391339 -0.0152869607 ="0.0140130473 "
24960     +0.0152869607 -0.0178347875 ="0.0165608741 "
24961     +0.0178347875 -0.0203826143 ="0.0191087009 "
24962     +0.0203826143 -0.0551669881 ="0.0538930747 "
24963     +0.0551669881 -0.0899513619 ="0.0886774485 "
24964     +0.0899513619 -0.1247357358 ="0.1234618224 "
24965     +0.1247357358 -0.1595201096 ="0.1582461962 "
24966     +0.1595201096 -HIGH="0.19303057 "
24967     +;
MPRINT(VAR_PROFILE):   value F69_ LOW -0.0025478268 ="0.0012739134 " 0.0025478268 -0.0050956536 ="0.0038217402 " 0.0050956536 -0.0076434804 ="0.006369567 " 0.0076434804 -0.0101913071 ="0.0089173937 " 0.0101913071 -0.0127391339 ="0.0114652205 " 
0.0127391339 -0.0152869607 ="0.0140130473 " 0.0152869607 -0.0178347875 ="0.0165608741 " 0.0178347875 -0.0203826143 ="0.0191087009 " 0.0203826143 -0.0551669881 ="0.0538930747 " 0.0551669881 -0.0899513619 ="0.0886774485 " 0.0899513619 -0.1247357358 
="0.1234618224 " 0.1247357358 -0.1595201096 ="0.1582461962 " 0.1595201096 -HIGH="0.19303057 " ;
NOTE: Format F69_ has been output.
24968     +value F70_
24969     +LOW -0.004148605 ="0.0020743025 "
24970     +0.004148605 -0.00829721 ="0.0062229075 "
24971     +0.00829721 -0.0124458149 ="0.0103715125 "
24972     +0.0124458149 -0.0165944199 ="0.0145201174 "
24973     +0.0165944199 -0.0207430249 ="0.0186687224 "
24974     +0.0207430249 -0.0248916299 ="0.0228173274 "
24975     +0.0248916299 -0.0290402349 ="0.0269659324 "
24976     +0.0290402349 -0.0331888399 ="0.0311145374 "
24977     +0.0331888399 -0.0633140945 ="0.061239792 "
24978     +0.0633140945 -0.0934393491 ="0.0913650467 "
24979     +0.0934393491 -0.1235646038 ="0.1214903013 "
24980     +0.1235646038 -0.1536898584 ="0.1516155559 "
24981     +0.1536898584 -HIGH="0.1817408106 "
24982     +;
MPRINT(VAR_PROFILE):   value F70_ LOW -0.004148605 ="0.0020743025 " 0.004148605 -0.00829721 ="0.0062229075 " 0.00829721 -0.0124458149 ="0.0103715125 " 0.0124458149 -0.0165944199 ="0.0145201174 " 0.0165944199 -0.0207430249 ="0.0186687224 " 0.0207430249 
-0.0248916299 ="0.0228173274 " 0.0248916299 -0.0290402349 ="0.0269659324 " 0.0290402349 -0.0331888399 ="0.0311145374 " 0.0331888399 -0.0633140945 ="0.061239792 " 0.0633140945 -0.0934393491 ="0.0913650467 " 0.0934393491 -0.1235646038 ="0.1214903013 " 
0.1235646038 -0.1536898584 ="0.1516155559 " 0.1536898584 -HIGH="0.1817408106 " ;
NOTE: Format F70_ has been output.
24983     +value F71_
24984     +LOW -0 ="0 "
24985     +0 -0.0708219297 ="0.0708219297 "
24986     +0.0708219297 -0.1416438593 ="0.1416438593 "
24987     +0.1416438593 -0.212465789 ="0.212465789 "
24988     +0.212465789 -0.2832877187 ="0.2832877187 "
24989     +0.2832877187 -HIGH="0.3541096483 "
24990     +;
MPRINT(VAR_PROFILE):   value F71_ LOW -0 ="0 " 0 -0.0708219297 ="0.0708219297 " 0.0708219297 -0.1416438593 ="0.1416438593 " 0.1416438593 -0.212465789 ="0.212465789 " 0.212465789 -0.2832877187 ="0.2832877187 " 0.2832877187 -HIGH="0.3541096483 " ;
NOTE: Format F71_ has been output.
24991     +value F72_
24992     +LOW -0 ="0 "
24993     +0 -0.122921598 ="0.122921598 "
24994     +0.122921598 -0.2458431959 ="0.2458431959 "
24995     +0.2458431959 -0.3687647939 ="0.3687647939 "
24996     +0.3687647939 -0.4916863919 ="0.4916863919 "
24997     +0.4916863919 -HIGH="0.6146079899 "
24998     +;
MPRINT(VAR_PROFILE):   value F72_ LOW -0 ="0 " 0 -0.122921598 ="0.122921598 " 0.122921598 -0.2458431959 ="0.2458431959 " 0.2458431959 -0.3687647939 ="0.3687647939 " 0.3687647939 -0.4916863919 ="0.4916863919 " 0.4916863919 -HIGH="0.6146079899 " ;
NOTE: Format F72_ has been output.
24999     +value F73_
25000     +LOW -0.0092859153 ="0.0046429576 "
25001     +0.0092859153 -0.0185718305 ="0.0139288729 "
25002     +0.0185718305 -0.0278577458 ="0.0232147881 "
25003     +0.0278577458 -0.037143661 ="0.0325007034 "
25004     +0.037143661 -0.0464295763 ="0.0417866186 "
25005     +0.0464295763 -0.0557154915 ="0.0510725339 "
25006     +0.0557154915 -0.0650014068 ="0.0603584491 "
25007     +0.0650014068 -0.074287322 ="0.0696443644 "
25008     +0.074287322 -0.130487296 ="0.1258443384 "
25009     +0.130487296 -0.1866872701 ="0.1820443125 "
25010     +0.1866872701 -0.2428872441 ="0.2382442865 "
25011     +0.2428872441 -0.2990872182 ="0.2944442605 "
25012     +0.2990872182 -HIGH="0.3506442346 "
25013     +;
MPRINT(VAR_PROFILE):   value F73_ LOW -0.0092859153 ="0.0046429576 " 0.0092859153 -0.0185718305 ="0.0139288729 " 0.0185718305 -0.0278577458 ="0.0232147881 " 0.0278577458 -0.037143661 ="0.0325007034 " 0.037143661 -0.0464295763 ="0.0417866186 " 0.0464295763 
-0.0557154915 ="0.0510725339 " 0.0557154915 -0.0650014068 ="0.0603584491 " 0.0650014068 -0.074287322 ="0.0696443644 " 0.074287322 -0.130487296 ="0.1258443384 " 0.130487296 -0.1866872701 ="0.1820443125 " 0.1866872701 -0.2428872441 ="0.2382442865 " 
0.2428872441 -0.2990872182 ="0.2944442605 " 0.2990872182 -HIGH="0.3506442346 " ;
NOTE: Format F73_ has been output.
25014     +value F74_
25015     +LOW -0.0040397532 ="0.0020198766 "
25016     +0.0040397532 -0.0080795065 ="0.0060596298 "
25017     +0.0080795065 -0.0121192597 ="0.0100993831 "
25018     +0.0121192597 -0.0161590129 ="0.0141391363 "
25019     +0.0161590129 -0.0201987662 ="0.0181788895 "
25020     +0.0201987662 -0.0242385194 ="0.0222186428 "
25021     +0.0242385194 -0.0282782726 ="0.026258396 "
25022     +0.0282782726 -0.0323180259 ="0.0302981492 "
25023     +0.0323180259 -0.0554781896 ="0.053458313 "
25024     +0.0554781896 -0.0786383533 ="0.0766184767 "
25025     +0.0786383533 -0.101798517 ="0.0997786404 "
25026     +0.101798517 -0.1249586807 ="0.1229388041 "
25027     +0.1249586807 -HIGH="0.1460989678 "
25028     +;
MPRINT(VAR_PROFILE):   value F74_ LOW -0.0040397532 ="0.0020198766 " 0.0040397532 -0.0080795065 ="0.0060596298 " 0.0080795065 -0.0121192597 ="0.0100993831 " 0.0121192597 -0.0161590129 ="0.0141391363 " 0.0161590129 -0.0201987662 ="0.0181788895 " 
0.0201987662 -0.0242385194 ="0.0222186428 " 0.0242385194 -0.0282782726 ="0.026258396 " 0.0282782726 -0.0323180259 ="0.0302981492 " 0.0323180259 -0.0554781896 ="0.053458313 " 0.0554781896 -0.0786383533 ="0.0766184767 " 0.0786383533 -0.101798517 
="0.0997786404 " 0.101798517 -0.1249586807 ="0.1229388041 " 0.1249586807 -HIGH="0.1460989678 " ;
NOTE: Format F74_ has been output.
25029     +value F75_
25030     +LOW -0 ="0 "
25031     +0 -0.1002445698 ="0.1002445698 "
25032     +0.1002445698 -0.2004891397 ="0.2004891397 "
25033     +0.2004891397 -0.3007337095 ="0.3007337095 "
25034     +0.3007337095 -0.4009782793 ="0.4009782793 "
25035     +0.4009782793 -HIGH="0.5012228492 "
25036     +;
MPRINT(VAR_PROFILE):   value F75_ LOW -0 ="0 " 0 -0.1002445698 ="0.1002445698 " 0.1002445698 -0.2004891397 ="0.2004891397 " 0.2004891397 -0.3007337095 ="0.3007337095 " 0.3007337095 -0.4009782793 ="0.4009782793 " 0.4009782793 -HIGH="0.5012228492 " ;
NOTE: Format F75_ has been output.
25037     +value F76_
25038     +LOW -0 ="0 "
25039     +0 -0.1065628985 ="0.1065628985 "
25040     +0.1065628985 -0.2131257971 ="0.2131257971 "
25041     +0.2131257971 -0.3196886956 ="0.3196886956 "
25042     +0.3196886956 -0.4262515941 ="0.4262515941 "
25043     +0.4262515941 -HIGH="0.5328144927 "
25044     +;
MPRINT(VAR_PROFILE):   value F76_ LOW -0 ="0 " 0 -0.1065628985 ="0.1065628985 " 0.1065628985 -0.2131257971 ="0.2131257971 " 0.2131257971 -0.3196886956 ="0.3196886956 " 0.3196886956 -0.4262515941 ="0.4262515941 " 0.4262515941 -HIGH="0.5328144927 " ;
NOTE: Format F76_ has been output.
MPRINT(VAR_PROFILE):   run;
25045     +run;

NOTE: PROCEDURE FORMAT ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS3.Clus2_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format ACCESS F1_. ADAM F2_. APPLIC F3_. ARAB F4_. ARGIC F5_. ARMENIA F6_. ARMENIAN F7_. ATTACK F8_. BANK F9_. CENTER F10_. CHIP F11_. CIRCUIT F12_. CLIENT F13_. COMP F14_. DESIGN F15_. DISEAS F16_. DISPLAI F17_. DISTRIBUT F18_. 
DOCTOR F19_. DRUG F20_. EDU F21_. EFFECT F22_. ELECTRON F23_. ERROR F24_. FILE F25_. FOLLOWUP F26_. FOOD F27_. GEB F28_. GORDON F29_. GOVERN F30_. GRAPHIC F31_. HIGH F32_. IMAG F33_. INTERNET F34_. ISRA F35_. ISRAEL F36_. JEW F37_. JEWISH F38_. KILL F39_. 
MED F40_. MEDIC F41_. MEDICIN F42_. MOTIF F43_. OPINION F44_. PAIN F45_. PALESTINIAN F46_. PATIENT F47_. PITT F48_. PITTSBURGH F49_. POLICI F50_. POWER F51_. PROBLEM F52_. PROGRAM F53_. RADIO F54_. REPLI F55_. REPORT F56_. RUN F57_. SCI F58_. SCIENC F59_. 
SCREEN F60_. SELL F61_. SERDAR F62_. SERVER F63_. SIGNAL F64_. TREATMENT F65_. TURKISH F66_. UNIV F67_. UNIX F68_. UUCP F69_. VERSION F70_. VOLTAG F71_. WIDGET F72_. WINDOW F73_. WORK F74_. XLIB F75_. XTERM F76_. ;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.11 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ACCESS ADAM APPLIC ARAB ARGIC ARMENIA ARMENIAN ATTACK BANK CENTER CHIP CIRCUIT CLIENT COMP DESIGN DISEAS DISPLAI DISTRIBUT DOCTOR DRUG EDU EFFECT ELECTRON ERROR FILE FOLLOWUP FOOD GEB GORDON GOVERN GRAPHIC HIGH IMAG INTERNET ISRA 
ISRAEL JEW JEWISH KILL MED MEDIC MEDICIN MOTIF OPINION PAIN PALESTINIAN PATIENT PITT PITTSBURGH POLICI POWER PROBLEM PROGRAM RADIO REPLI REPORT RUN SCI SCIENC SCREEN SELL SERDAR SERVER SIGNAL TREATMENT TURKISH UNIV UNIX UUCP VERSION VOLTAG WIDGET WINDOW 
WORK XLIB XTERM;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 3000   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK._BINNEDDATA.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.44 seconds
      cpu time            0.45 seconds
      
NOTE: There were 3000 observations read from the data set EMWS3.CLUS2_TRAIN.
NOTE: There were 3000 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 734 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.44 seconds
      cpu time            0.45 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 734 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 734 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data _INTERVAL;
MPRINT(TRAIN):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TRAIN):   retain SegmentVariable "_OVERALL_" SegmentValue "EMWS3.Clus2_TRAIN";
MPRINT(TRAIN):   label variable = "Variable" value = "Valor" count = "Número de ocurrencias" percent = "Porcentaje";
MPRINT(TRAIN):   set _INTERVAL;
MPRINT(TRAIN):   run;

NOTE: There were 734 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 734 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc append base=EMWS3.Prof2_INTDIST data=_INTERVAL force;
MPRINT(TRAIN):   run;

NOTE: Appending WORK._INTERVAL a EMWS3.PROF2_INTDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 734 observations read from the data set WORK._INTERVAL.
NOTE: The data set EMWS3.PROF2_INTDIST has 734 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) OUT=_STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 76 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 76 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   data EMWS3.Prof2_STATS;
MPRINT(TRAIN):   merge EMWS3.Prof2_STATS _STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: There were 76 observations read from the data set EMWS3.PROF2_STATS.
NOTE: There were 76 observations read from the data set WORK._STAT.
NOTE: The data set EMWS3.PROF2_STATS has 76 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   filename X catalog "EMWS3.Prof2_INTERVAL.FORMAT.source";
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   file X;
MPRINT(TRAIN):   put 'format' ;
MPRINT(TRAIN):   put "ACCESS F1_.";
MPRINT(TRAIN):   put "ADAM F2_.";
MPRINT(TRAIN):   put "APPLIC F3_.";
MPRINT(TRAIN):   put "ARAB F4_.";
MPRINT(TRAIN):   put "ARGIC F5_.";
MPRINT(TRAIN):   put "ARMENIA F6_.";
MPRINT(TRAIN):   put "ARMENIAN F7_.";
MPRINT(TRAIN):   put "ATTACK F8_.";
MPRINT(TRAIN):   put "BANK F9_.";
MPRINT(TRAIN):   put "CENTER F10_.";
MPRINT(TRAIN):   put "CHIP F11_.";
MPRINT(TRAIN):   put "CIRCUIT F12_.";
MPRINT(TRAIN):   put "CLIENT F13_.";
MPRINT(TRAIN):   put "COMP F14_.";
MPRINT(TRAIN):   put "DESIGN F15_.";
MPRINT(TRAIN):   put "DISEAS F16_.";
MPRINT(TRAIN):   put "DISPLAI F17_.";
MPRINT(TRAIN):   put "DISTRIBUT F18_.";
MPRINT(TRAIN):   put "DOCTOR F19_.";
MPRINT(TRAIN):   put "DRUG F20_.";
MPRINT(TRAIN):   put "EDU F21_.";
MPRINT(TRAIN):   put "EFFECT F22_.";
MPRINT(TRAIN):   put "ELECTRON F23_.";
MPRINT(TRAIN):   put "ERROR F24_.";
MPRINT(TRAIN):   put "FILE F25_.";
MPRINT(TRAIN):   put "FOLLOWUP F26_.";
MPRINT(TRAIN):   put "FOOD F27_.";
MPRINT(TRAIN):   put "GEB F28_.";
MPRINT(TRAIN):   put "GORDON F29_.";
MPRINT(TRAIN):   put "GOVERN F30_.";
MPRINT(TRAIN):   put "GRAPHIC F31_.";
MPRINT(TRAIN):   put "HIGH F32_.";
MPRINT(TRAIN):   put "IMAG F33_.";
MPRINT(TRAIN):   put "INTERNET F34_.";
MPRINT(TRAIN):   put "ISRA F35_.";
MPRINT(TRAIN):   put "ISRAEL F36_.";
MPRINT(TRAIN):   put "JEW F37_.";
MPRINT(TRAIN):   put "JEWISH F38_.";
MPRINT(TRAIN):   put "KILL F39_.";
MPRINT(TRAIN):   put "MED F40_.";
MPRINT(TRAIN):   put "MEDIC F41_.";
MPRINT(TRAIN):   put "MEDICIN F42_.";
MPRINT(TRAIN):   put "MOTIF F43_.";
MPRINT(TRAIN):   put "OPINION F44_.";
MPRINT(TRAIN):   put "PAIN F45_.";
MPRINT(TRAIN):   put "PALESTINIAN F46_.";
MPRINT(TRAIN):   put "PATIENT F47_.";
MPRINT(TRAIN):   put "PITT F48_.";
MPRINT(TRAIN):   put "PITTSBURGH F49_.";
MPRINT(TRAIN):   put "POLICI F50_.";
MPRINT(TRAIN):   put "POWER F51_.";
MPRINT(TRAIN):   put "PROBLEM F52_.";
MPRINT(TRAIN):   put "PROGRAM F53_.";
MPRINT(TRAIN):   put "RADIO F54_.";
MPRINT(TRAIN):   put "REPLI F55_.";
MPRINT(TRAIN):   put "REPORT F56_.";
MPRINT(TRAIN):   put "RUN F57_.";
MPRINT(TRAIN):   put "SCI F58_.";
MPRINT(TRAIN):   put "SCIENC F59_.";
MPRINT(TRAIN):   put "SCREEN F60_.";
MPRINT(TRAIN):   put "SELL F61_.";
MPRINT(TRAIN):   put "SERDAR F62_.";
MPRINT(TRAIN):   put "SERVER F63_.";
MPRINT(TRAIN):   put "SIGNAL F64_.";
MPRINT(TRAIN):   put "TREATMENT F65_.";
MPRINT(TRAIN):   put "TURKISH F66_.";
MPRINT(TRAIN):   put "UNIV F67_.";
MPRINT(TRAIN):   put "UNIX F68_.";
MPRINT(TRAIN):   put "UUCP F69_.";
MPRINT(TRAIN):   put "VERSION F70_.";
MPRINT(TRAIN):   put "VOLTAG F71_.";
MPRINT(TRAIN):   put "WIDGET F72_.";
MPRINT(TRAIN):   put "WINDOW F73_.";
MPRINT(TRAIN):   put "WORK F74_.";
MPRINT(TRAIN):   put "XLIB F75_.";
MPRINT(TRAIN):   put "XTERM F76_.";
MPRINT(TRAIN):   put ';';
MPRINT(TRAIN):   run;

NOTE: The file X is:
      Catalog Name=EMWS3.PROF2_INTERVAL.FORMAT.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=4,
      Creado=dom, 13 de dic de 2020 15:43:52,
      Última modificación=dom, 13 de dic de 2020 15:43:52,
      Nombre archivo=C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS3\prof2_interval.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=             9KB,
      Tamaño de archivo (bytes)=9216

NOTE: 78 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 17.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Summarizing variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
MPRINT(SEGMENTSUMMARY):   data _null_;
MPRINT(SEGMENTSUMMARY):   retain cum othercount otherpct numLevels 0;
MPRINT(SEGMENTSUMMARY):   format Count 8.;
MPRINT(SEGMENTSUMMARY):   set _SEGMENT_ end=eof;
MPRINT(SEGMENTSUMMARY):   SegmentValue= strip(put(_SEGMENT_, best12.));
MPRINT(SEGMENTSUMMARY):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
MPRINT(SEGMENTSUMMARY):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(SEGMENTSUMMARY):   numLevels + 1;
MPRINT(SEGMENTSUMMARY):   output;
MPRINT(SEGMENTSUMMARY):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 10 observations read from the data set WORK._SEGMENT_.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="8";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 20 observations read from the data set EMWS3.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='8');
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 8;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF2_INTERVAL.FORMAT.SOURCE.
25046     +format
25047     +ACCESS F1_.
25048     +ADAM F2_.
25049     +APPLIC F3_.
25050     +ARAB F4_.
25051     +ARGIC F5_.
25052     +ARMENIA F6_.
25053     +ARMENIAN F7_.
25054     +ATTACK F8_.
25055     +BANK F9_.
25056     +CENTER F10_.
25057     +CHIP F11_.
25058     +CIRCUIT F12_.
25059     +CLIENT F13_.
25060     +COMP F14_.
25061     +DESIGN F15_.
25062     +DISEAS F16_.
25063     +DISPLAI F17_.
25064     +DISTRIBUT F18_.
25065     +DOCTOR F19_.
25066     +DRUG F20_.
25067     +EDU F21_.
25068     +EFFECT F22_.
25069     +ELECTRON F23_.
25070     +ERROR F24_.
25071     +FILE F25_.
25072     +FOLLOWUP F26_.
25073     +FOOD F27_.
25074     +GEB F28_.
25075     +GORDON F29_.
25076     +GOVERN F30_.
25077     +GRAPHIC F31_.
25078     +HIGH F32_.
25079     +IMAG F33_.
25080     +INTERNET F34_.
25081     +ISRA F35_.
25082     +ISRAEL F36_.
25083     +JEW F37_.
25084     +JEWISH F38_.
25085     +KILL F39_.
25086     +MED F40_.
25087     +MEDIC F41_.
25088     +MEDICIN F42_.
25089     +MOTIF F43_.
25090     +OPINION F44_.
25091     +PAIN F45_.
25092     +PALESTINIAN F46_.
25093     +PATIENT F47_.
25094     +PITT F48_.
25095     +PITTSBURGH F49_.
25096     +POLICI F50_.
25097     +POWER F51_.
25098     +PROBLEM F52_.
25099     +PROGRAM F53_.
25100     +RADIO F54_.
25101     +REPLI F55_.
25102     +REPORT F56_.
25103     +RUN F57_.
25104     +SCI F58_.
25105     +SCIENC F59_.
25106     +SCREEN F60_.
25107     +SELL F61_.
25108     +SERDAR F62_.
25109     +SERVER F63_.
25110     +SIGNAL F64_.
25111     +TREATMENT F65_.
25112     +TURKISH F66_.
25113     +UNIV F67_.
25114     +UNIX F68_.
25115     +UUCP F69_.
25116     +VERSION F70_.
25117     +VOLTAG F71_.
25118     +WIDGET F72_.
25119     +WINDOW F73_.
25120     +WORK F74_.
25121     +XLIB F75_.
25122     +XTERM F76_.
25123     +;
MPRINT(SEGMENTSUMMARY):   format ACCESS F1_. ADAM F2_. APPLIC F3_. ARAB F4_. ARGIC F5_. ARMENIA F6_. ARMENIAN F7_. ATTACK F8_. BANK F9_. CENTER F10_. CHIP F11_. CIRCUIT F12_. CLIENT F13_. COMP F14_. DESIGN F15_. DISEAS F16_. DISPLAI F17_. DISTRIBUT F18_. 
DOCTOR F19_. DRUG F20_. EDU F21_. EFFECT F22_. ELECTRON F23_. ERROR F24_. FILE F25_. FOLLOWUP F26_. FOOD F27_. GEB F28_. GORDON F29_. GOVERN F30_. GRAPHIC F31_. HIGH F32_. IMAG F33_. INTERNET F34_. ISRA F35_. ISRAEL F36_. JEW F37_. JEWISH F38_. KILL F39_. 
MED F40_. MEDIC F41_. MEDICIN F42_. MOTIF F43_. OPINION F44_. PAIN F45_. PALESTINIAN F46_. PATIENT F47_. PITT F48_. PITTSBURGH F49_. POLICI F50_. POWER F51_. PROBLEM F52_. PROGRAM F53_. RADIO F54_. REPLI F55_. REPORT F56_. RUN F57_. SCI F58_. SCIENC F59_. 
SCREEN F60_. SELL F61_. SERDAR F62_. SERVER F63_. SIGNAL F64_. TREATMENT F65_. TURKISH F66_. UNIV F67_. UNIX F68_. UUCP F69_. VERSION F70_. VOLTAG F71_. WIDGET F72_. WINDOW F73_. WORK F74_. XLIB F75_. XTERM F76_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

*------------------------------------------------------------*
* Prof2: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=dom, 13 de dic de 2020 15:43:50,
      Última modificación=dom, 13 de dic de 2020 15:43:50,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            17KB,
      Tamaño de archivo (bytes)=17408

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
25124     +%macro _vars;
25125     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ARAB ARMENIAN CHIP CIRCUIT COMP DESIGN ELECTRON HIGH ISRA ISRAEL JEW MED POWER PROBLEM RADIO SCI SELL SIGNAL VOLTAG WINDOW;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 1239   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.40 seconds
      
NOTE: There were 1239 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=8;
NOTE: There were 1239 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.43 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ARAB ARMENIAN CHIP CIRCUIT COMP DESIGN ELECTRON HIGH ISRA ISRAEL JEW MED POWER PROBLEM RADIO SCI SELL SIGNAL VOLTAG WINDOW;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 1239   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.45 seconds
      cpu time            0.45 seconds
      
NOTE: There were 1239 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=8;
NOTE: There were 1239 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 167 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.46 seconds
      cpu time            0.48 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 167 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 167 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "8";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 167 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 167 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL a EMWS3.PROF2_INTDIST.
NOTE: There were 167 observations read from the data set WORK._INTERVAL.
NOTE: 167 observations added.
NOTE: The data set EMWS3.PROF2_INTDIST has 901 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF2_STATS.
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF2_STATS has 96 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="9";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 16 observations read from the data set EMWS3.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='9');
NOTE: The data set WORK._TEMPSTAT has 16 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 16 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 16 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 9;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF2_INTERVAL.FORMAT.SOURCE.
25126     +format
25127     +ACCESS F1_.
25128     +ADAM F2_.
25129     +APPLIC F3_.
25130     +ARAB F4_.
25131     +ARGIC F5_.
25132     +ARMENIA F6_.
25133     +ARMENIAN F7_.
25134     +ATTACK F8_.
25135     +BANK F9_.
25136     +CENTER F10_.
25137     +CHIP F11_.
25138     +CIRCUIT F12_.
25139     +CLIENT F13_.
25140     +COMP F14_.
25141     +DESIGN F15_.
25142     +DISEAS F16_.
25143     +DISPLAI F17_.
25144     +DISTRIBUT F18_.
25145     +DOCTOR F19_.
25146     +DRUG F20_.
25147     +EDU F21_.
25148     +EFFECT F22_.
25149     +ELECTRON F23_.
25150     +ERROR F24_.
25151     +FILE F25_.
25152     +FOLLOWUP F26_.
25153     +FOOD F27_.
25154     +GEB F28_.
25155     +GORDON F29_.
25156     +GOVERN F30_.
25157     +GRAPHIC F31_.
25158     +HIGH F32_.
25159     +IMAG F33_.
25160     +INTERNET F34_.
25161     +ISRA F35_.
25162     +ISRAEL F36_.
25163     +JEW F37_.
25164     +JEWISH F38_.
25165     +KILL F39_.
25166     +MED F40_.
25167     +MEDIC F41_.
25168     +MEDICIN F42_.
25169     +MOTIF F43_.
25170     +OPINION F44_.
25171     +PAIN F45_.
25172     +PALESTINIAN F46_.
25173     +PATIENT F47_.
25174     +PITT F48_.
25175     +PITTSBURGH F49_.
25176     +POLICI F50_.
25177     +POWER F51_.
25178     +PROBLEM F52_.
25179     +PROGRAM F53_.
25180     +RADIO F54_.
25181     +REPLI F55_.
25182     +REPORT F56_.
25183     +RUN F57_.
25184     +SCI F58_.
25185     +SCIENC F59_.
25186     +SCREEN F60_.
25187     +SELL F61_.
25188     +SERDAR F62_.
25189     +SERVER F63_.
25190     +SIGNAL F64_.
25191     +TREATMENT F65_.
25192     +TURKISH F66_.
25193     +UNIV F67_.
25194     +UNIX F68_.
25195     +UUCP F69_.
25196     +VERSION F70_.
25197     +VOLTAG F71_.
25198     +WIDGET F72_.
25199     +WINDOW F73_.
25200     +WORK F74_.
25201     +XLIB F75_.
25202     +XTERM F76_.
25203     +;
MPRINT(SEGMENTSUMMARY):   format ACCESS F1_. ADAM F2_. APPLIC F3_. ARAB F4_. ARGIC F5_. ARMENIA F6_. ARMENIAN F7_. ATTACK F8_. BANK F9_. CENTER F10_. CHIP F11_. CIRCUIT F12_. CLIENT F13_. COMP F14_. DESIGN F15_. DISEAS F16_. DISPLAI F17_. DISTRIBUT F18_. 
DOCTOR F19_. DRUG F20_. EDU F21_. EFFECT F22_. ELECTRON F23_. ERROR F24_. FILE F25_. FOLLOWUP F26_. FOOD F27_. GEB F28_. GORDON F29_. GOVERN F30_. GRAPHIC F31_. HIGH F32_. IMAG F33_. INTERNET F34_. ISRA F35_. ISRAEL F36_. JEW F37_. JEWISH F38_. KILL F39_. 
MED F40_. MEDIC F41_. MEDICIN F42_. MOTIF F43_. OPINION F44_. PAIN F45_. PALESTINIAN F46_. PATIENT F47_. PITT F48_. PITTSBURGH F49_. POLICI F50_. POWER F51_. PROBLEM F52_. PROGRAM F53_. RADIO F54_. REPLI F55_. REPORT F56_. RUN F57_. SCI F58_. SCIENC F59_. 
SCREEN F60_. SELL F61_. SERDAR F62_. SERVER F63_. SIGNAL F64_. TREATMENT F65_. TURKISH F66_. UNIV F67_. UNIX F68_. UUCP F69_. VERSION F70_. VOLTAG F71_. WIDGET F72_. WINDOW F73_. WORK F74_. XLIB F75_. XTERM F76_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.09 seconds
      

*------------------------------------------------------------*
* Prof2: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=dom, 13 de dic de 2020 15:43:50,
      Última modificación=dom, 13 de dic de 2020 15:43:52,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
25204     +%macro _vars;
25205     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   COMP DISEAS DOCTOR DRUG EFFECT ELECTRON FOOD MED MEDIC MEDICIN PAIN PATIENT PITT SCI TREATMENT WINDOW;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 510   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.40 seconds
      cpu time            0.40 seconds
      
NOTE: There were 510 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=9;
NOTE: There were 510 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 16 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.42 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 16 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 16 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   COMP DISEAS DOCTOR DRUG EFFECT ELECTRON FOOD MED MEDIC MEDICIN PAIN PATIENT PITT SCI TREATMENT WINDOW;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 510   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.40 seconds
      cpu time            0.39 seconds
      
NOTE: There were 510 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=9;
NOTE: There were 510 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 105 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.42 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 105 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 105 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "9";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 105 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 105 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL a EMWS3.PROF2_INTDIST.
NOTE: There were 105 observations read from the data set WORK._INTERVAL.
NOTE: 105 observations added.
NOTE: The data set EMWS3.PROF2_INTDIST has 1006 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 16 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 16 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 16 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 16 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 16 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 16 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 16 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF2_STATS.
NOTE: There were 16 observations read from the data set WORK._TEMPSTAT.
NOTE: 16 observations added.
NOTE: The data set EMWS3.PROF2_STATS has 112 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="3";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 20 observations read from the data set EMWS3.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='3');
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 3;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF2_INTERVAL.FORMAT.SOURCE.
25206     +format
25207     +ACCESS F1_.
25208     +ADAM F2_.
25209     +APPLIC F3_.
25210     +ARAB F4_.
25211     +ARGIC F5_.
25212     +ARMENIA F6_.
25213     +ARMENIAN F7_.
25214     +ATTACK F8_.
25215     +BANK F9_.
25216     +CENTER F10_.
25217     +CHIP F11_.
25218     +CIRCUIT F12_.
25219     +CLIENT F13_.
25220     +COMP F14_.
25221     +DESIGN F15_.
25222     +DISEAS F16_.
25223     +DISPLAI F17_.
25224     +DISTRIBUT F18_.
25225     +DOCTOR F19_.
25226     +DRUG F20_.
25227     +EDU F21_.
25228     +EFFECT F22_.
25229     +ELECTRON F23_.
25230     +ERROR F24_.
25231     +FILE F25_.
25232     +FOLLOWUP F26_.
25233     +FOOD F27_.
25234     +GEB F28_.
25235     +GORDON F29_.
25236     +GOVERN F30_.
25237     +GRAPHIC F31_.
25238     +HIGH F32_.
25239     +IMAG F33_.
25240     +INTERNET F34_.
25241     +ISRA F35_.
25242     +ISRAEL F36_.
25243     +JEW F37_.
25244     +JEWISH F38_.
25245     +KILL F39_.
25246     +MED F40_.
25247     +MEDIC F41_.
25248     +MEDICIN F42_.
25249     +MOTIF F43_.
25250     +OPINION F44_.
25251     +PAIN F45_.
25252     +PALESTINIAN F46_.
25253     +PATIENT F47_.
25254     +PITT F48_.
25255     +PITTSBURGH F49_.
25256     +POLICI F50_.
25257     +POWER F51_.
25258     +PROBLEM F52_.
25259     +PROGRAM F53_.
25260     +RADIO F54_.
25261     +REPLI F55_.
25262     +REPORT F56_.
25263     +RUN F57_.
25264     +SCI F58_.
25265     +SCIENC F59_.
25266     +SCREEN F60_.
25267     +SELL F61_.
25268     +SERDAR F62_.
25269     +SERVER F63_.
25270     +SIGNAL F64_.
25271     +TREATMENT F65_.
25272     +TURKISH F66_.
25273     +UNIV F67_.
25274     +UNIX F68_.
25275     +UUCP F69_.
25276     +VERSION F70_.
25277     +VOLTAG F71_.
25278     +WIDGET F72_.
25279     +WINDOW F73_.
25280     +WORK F74_.
25281     +XLIB F75_.
25282     +XTERM F76_.
25283     +;
MPRINT(SEGMENTSUMMARY):   format ACCESS F1_. ADAM F2_. APPLIC F3_. ARAB F4_. ARGIC F5_. ARMENIA F6_. ARMENIAN F7_. ATTACK F8_. BANK F9_. CENTER F10_. CHIP F11_. CIRCUIT F12_. CLIENT F13_. COMP F14_. DESIGN F15_. DISEAS F16_. DISPLAI F17_. DISTRIBUT F18_. 
DOCTOR F19_. DRUG F20_. EDU F21_. EFFECT F22_. ELECTRON F23_. ERROR F24_. FILE F25_. FOLLOWUP F26_. FOOD F27_. GEB F28_. GORDON F29_. GOVERN F30_. GRAPHIC F31_. HIGH F32_. IMAG F33_. INTERNET F34_. ISRA F35_. ISRAEL F36_. JEW F37_. JEWISH F38_. KILL F39_. 
MED F40_. MEDIC F41_. MEDICIN F42_. MOTIF F43_. OPINION F44_. PAIN F45_. PALESTINIAN F46_. PATIENT F47_. PITT F48_. PITTSBURGH F49_. POLICI F50_. POWER F51_. PROBLEM F52_. PROGRAM F53_. RADIO F54_. REPLI F55_. REPORT F56_. RUN F57_. SCI F58_. SCIENC F59_. 
SCREEN F60_. SELL F61_. SERDAR F62_. SERVER F63_. SIGNAL F64_. TREATMENT F65_. TURKISH F66_. UNIV F67_. UNIX F68_. UUCP F69_. VERSION F70_. VOLTAG F71_. WIDGET F72_. WINDOW F73_. WORK F74_. XLIB F75_. XTERM F76_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.13 seconds
      cpu time            0.12 seconds
      

*------------------------------------------------------------*
* Prof2: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=dom, 13 de dic de 2020 15:43:50,
      Última modificación=dom, 13 de dic de 2020 15:43:53,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
25284     +%macro _vars;
25285     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   APPLIC CLIENT COMP DISPLAI ERROR FILE GRAPHIC IMAG MOTIF PROBLEM PROGRAM RUN SCI SCREEN SERVER VERSION WIDGET WINDOW XLIB XTERM;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 425   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.59 seconds
      cpu time            0.45 seconds
      
NOTE: There were 425 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 425 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.60 seconds
      cpu time            0.46 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   APPLIC CLIENT COMP DISPLAI ERROR FILE GRAPHIC IMAG MOTIF PROBLEM PROGRAM RUN SCI SCREEN SERVER VERSION WIDGET WINDOW XLIB XTERM;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 425   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.40 seconds
      
NOTE: There were 425 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 425 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 172 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.43 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 172 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 172 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 172 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 172 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL a EMWS3.PROF2_INTDIST.
NOTE: There were 172 observations read from the data set WORK._INTERVAL.
NOTE: 172 observations added.
NOTE: The data set EMWS3.PROF2_INTDIST has 1178 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 20 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 20 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 20 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF2_STATS.
NOTE: There were 20 observations read from the data set WORK._TEMPSTAT.
NOTE: 20 observations added.
NOTE: The data set EMWS3.PROF2_STATS has 132 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="5";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 14 observations read from the data set EMWS3.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='5');
NOTE: The data set WORK._TEMPSTAT has 14 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 14 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 14 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 5;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF2_INTERVAL.FORMAT.SOURCE.
25286     +format
25287     +ACCESS F1_.
25288     +ADAM F2_.
25289     +APPLIC F3_.
25290     +ARAB F4_.
25291     +ARGIC F5_.
25292     +ARMENIA F6_.
25293     +ARMENIAN F7_.
25294     +ATTACK F8_.
25295     +BANK F9_.
25296     +CENTER F10_.
25297     +CHIP F11_.
25298     +CIRCUIT F12_.
25299     +CLIENT F13_.
25300     +COMP F14_.
25301     +DESIGN F15_.
25302     +DISEAS F16_.
25303     +DISPLAI F17_.
25304     +DISTRIBUT F18_.
25305     +DOCTOR F19_.
25306     +DRUG F20_.
25307     +EDU F21_.
25308     +EFFECT F22_.
25309     +ELECTRON F23_.
25310     +ERROR F24_.
25311     +FILE F25_.
25312     +FOLLOWUP F26_.
25313     +FOOD F27_.
25314     +GEB F28_.
25315     +GORDON F29_.
25316     +GOVERN F30_.
25317     +GRAPHIC F31_.
25318     +HIGH F32_.
25319     +IMAG F33_.
25320     +INTERNET F34_.
25321     +ISRA F35_.
25322     +ISRAEL F36_.
25323     +JEW F37_.
25324     +JEWISH F38_.
25325     +KILL F39_.
25326     +MED F40_.
25327     +MEDIC F41_.
25328     +MEDICIN F42_.
25329     +MOTIF F43_.
25330     +OPINION F44_.
25331     +PAIN F45_.
25332     +PALESTINIAN F46_.
25333     +PATIENT F47_.
25334     +PITT F48_.
25335     +PITTSBURGH F49_.
25336     +POLICI F50_.
25337     +POWER F51_.
25338     +PROBLEM F52_.
25339     +PROGRAM F53_.
25340     +RADIO F54_.
25341     +REPLI F55_.
25342     +REPORT F56_.
25343     +RUN F57_.
25344     +SCI F58_.
25345     +SCIENC F59_.
25346     +SCREEN F60_.
25347     +SELL F61_.
25348     +SERDAR F62_.
25349     +SERVER F63_.
25350     +SIGNAL F64_.
25351     +TREATMENT F65_.
25352     +TURKISH F66_.
25353     +UNIV F67_.
25354     +UNIX F68_.
25355     +UUCP F69_.
25356     +VERSION F70_.
25357     +VOLTAG F71_.
25358     +WIDGET F72_.
25359     +WINDOW F73_.
25360     +WORK F74_.
25361     +XLIB F75_.
25362     +XTERM F76_.
25363     +;
MPRINT(SEGMENTSUMMARY):   format ACCESS F1_. ADAM F2_. APPLIC F3_. ARAB F4_. ARGIC F5_. ARMENIA F6_. ARMENIAN F7_. ATTACK F8_. BANK F9_. CENTER F10_. CHIP F11_. CIRCUIT F12_. CLIENT F13_. COMP F14_. DESIGN F15_. DISEAS F16_. DISPLAI F17_. DISTRIBUT F18_. 
DOCTOR F19_. DRUG F20_. EDU F21_. EFFECT F22_. ELECTRON F23_. ERROR F24_. FILE F25_. FOLLOWUP F26_. FOOD F27_. GEB F28_. GORDON F29_. GOVERN F30_. GRAPHIC F31_. HIGH F32_. IMAG F33_. INTERNET F34_. ISRA F35_. ISRAEL F36_. JEW F37_. JEWISH F38_. KILL F39_. 
MED F40_. MEDIC F41_. MEDICIN F42_. MOTIF F43_. OPINION F44_. PAIN F45_. PALESTINIAN F46_. PATIENT F47_. PITT F48_. PITTSBURGH F49_. POLICI F50_. POWER F51_. PROBLEM F52_. PROGRAM F53_. RADIO F54_. REPLI F55_. REPORT F56_. RUN F57_. SCI F58_. SCIENC F59_. 
SCREEN F60_. SELL F61_. SERDAR F62_. SERVER F63_. SIGNAL F64_. TREATMENT F65_. TURKISH F66_. UNIV F67_. UNIX F68_. UUCP F69_. VERSION F70_. VOLTAG F71_. WIDGET F72_. WINDOW F73_. WORK F74_. XLIB F75_. XTERM F76_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.10 seconds
      cpu time            0.11 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.11 seconds
      cpu time            0.11 seconds
      

*------------------------------------------------------------*
* Prof2: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=dom, 13 de dic de 2020 15:43:50,
      Última modificación=dom, 13 de dic de 2020 15:43:54,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
25364     +%macro _vars;
25365     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ADAM ARAB ATTACK GOVERN ISRA ISRAEL JEW JEWISH KILL OPINION PALESTINIAN POLICI REPORT SCI;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 324   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.40 seconds
      cpu time            0.39 seconds
      
NOTE: There were 324 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=5;
NOTE: There were 324 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.39 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 14 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 14 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ADAM ARAB ATTACK GOVERN ISRA ISRAEL JEW JEWISH KILL OPINION PALESTINIAN POLICI REPORT SCI;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 324   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.40 seconds
      
NOTE: There were 324 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=5;
NOTE: There were 324 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 147 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.42 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 147 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 147 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "5";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 147 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 147 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL a EMWS3.PROF2_INTDIST.
NOTE: There were 147 observations read from the data set WORK._INTERVAL.
NOTE: 147 observations added.
NOTE: The data set EMWS3.PROF2_INTDIST has 1325 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 14 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 14 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 14 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 14 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 14 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 14 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 14 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF2_STATS.
NOTE: There were 14 observations read from the data set WORK._TEMPSTAT.
NOTE: 14 observations added.
NOTE: The data set EMWS3.PROF2_STATS has 146 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="4";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 3 observations read from the data set EMWS3.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='4');
NOTE: The data set WORK._TEMPSTAT has 3 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 3 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 4;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF2_INTERVAL.FORMAT.SOURCE.
25366     +format
25367     +ACCESS F1_.
25368     +ADAM F2_.
25369     +APPLIC F3_.
25370     +ARAB F4_.
25371     +ARGIC F5_.
25372     +ARMENIA F6_.
25373     +ARMENIAN F7_.
25374     +ATTACK F8_.
25375     +BANK F9_.
25376     +CENTER F10_.
25377     +CHIP F11_.
25378     +CIRCUIT F12_.
25379     +CLIENT F13_.
25380     +COMP F14_.
25381     +DESIGN F15_.
25382     +DISEAS F16_.
25383     +DISPLAI F17_.
25384     +DISTRIBUT F18_.
25385     +DOCTOR F19_.
25386     +DRUG F20_.
25387     +EDU F21_.
25388     +EFFECT F22_.
25389     +ELECTRON F23_.
25390     +ERROR F24_.
25391     +FILE F25_.
25392     +FOLLOWUP F26_.
25393     +FOOD F27_.
25394     +GEB F28_.
25395     +GORDON F29_.
25396     +GOVERN F30_.
25397     +GRAPHIC F31_.
25398     +HIGH F32_.
25399     +IMAG F33_.
25400     +INTERNET F34_.
25401     +ISRA F35_.
25402     +ISRAEL F36_.
25403     +JEW F37_.
25404     +JEWISH F38_.
25405     +KILL F39_.
25406     +MED F40_.
25407     +MEDIC F41_.
25408     +MEDICIN F42_.
25409     +MOTIF F43_.
25410     +OPINION F44_.
25411     +PAIN F45_.
25412     +PALESTINIAN F46_.
25413     +PATIENT F47_.
25414     +PITT F48_.
25415     +PITTSBURGH F49_.
25416     +POLICI F50_.
25417     +POWER F51_.
25418     +PROBLEM F52_.
25419     +PROGRAM F53_.
25420     +RADIO F54_.
25421     +REPLI F55_.
25422     +REPORT F56_.
25423     +RUN F57_.
25424     +SCI F58_.
25425     +SCIENC F59_.
25426     +SCREEN F60_.
25427     +SELL F61_.
25428     +SERDAR F62_.
25429     +SERVER F63_.
25430     +SIGNAL F64_.
25431     +TREATMENT F65_.
25432     +TURKISH F66_.
25433     +UNIV F67_.
25434     +UNIX F68_.
25435     +UUCP F69_.
25436     +VERSION F70_.
25437     +VOLTAG F71_.
25438     +WIDGET F72_.
25439     +WINDOW F73_.
25440     +WORK F74_.
25441     +XLIB F75_.
25442     +XTERM F76_.
25443     +;
MPRINT(SEGMENTSUMMARY):   format ACCESS F1_. ADAM F2_. APPLIC F3_. ARAB F4_. ARGIC F5_. ARMENIA F6_. ARMENIAN F7_. ATTACK F8_. BANK F9_. CENTER F10_. CHIP F11_. CIRCUIT F12_. CLIENT F13_. COMP F14_. DESIGN F15_. DISEAS F16_. DISPLAI F17_. DISTRIBUT F18_. 
DOCTOR F19_. DRUG F20_. EDU F21_. EFFECT F22_. ELECTRON F23_. ERROR F24_. FILE F25_. FOLLOWUP F26_. FOOD F27_. GEB F28_. GORDON F29_. GOVERN F30_. GRAPHIC F31_. HIGH F32_. IMAG F33_. INTERNET F34_. ISRA F35_. ISRAEL F36_. JEW F37_. JEWISH F38_. KILL F39_. 
MED F40_. MEDIC F41_. MEDICIN F42_. MOTIF F43_. OPINION F44_. PAIN F45_. PALESTINIAN F46_. PATIENT F47_. PITT F48_. PITTSBURGH F49_. POLICI F50_. POWER F51_. PROBLEM F52_. PROGRAM F53_. RADIO F54_. REPLI F55_. REPORT F56_. RUN F57_. SCI F58_. SCIENC F59_. 
SCREEN F60_. SELL F61_. SERDAR F62_. SERVER F63_. SIGNAL F64_. TREATMENT F65_. TURKISH F66_. UNIV F67_. UNIX F68_. UUCP F69_. VERSION F70_. VOLTAG F71_. WIDGET F72_. WINDOW F73_. WORK F74_. XLIB F75_. XTERM F76_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

*------------------------------------------------------------*
* Prof2: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=dom, 13 de dic de 2020 15:43:50,
      Última modificación=dom, 13 de dic de 2020 15:43:56,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
25444     +%macro _vars;
25445     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   COMP INTERNET WINDOW;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 160   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.40 seconds
      
NOTE: There were 160 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 160 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 3 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.40 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 3 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   COMP INTERNET WINDOW;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 160   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.40 seconds
      
NOTE: There were 160 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 160 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 32 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.42 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 32 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 32 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 32 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 32 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL a EMWS3.PROF2_INTDIST.
NOTE: There were 32 observations read from the data set WORK._INTERVAL.
NOTE: 32 observations added.
NOTE: The data set EMWS3.PROF2_INTDIST has 1357 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 3 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 3 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 3 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF2_STATS.
NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: 3 observations added.
NOTE: The data set EMWS3.PROF2_STATS has 149 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="2";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 11 observations read from the data set EMWS3.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='2');
NOTE: The data set WORK._TEMPSTAT has 11 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 11 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 11 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 2;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF2_INTERVAL.FORMAT.SOURCE.
25446     +format
25447     +ACCESS F1_.
25448     +ADAM F2_.
25449     +APPLIC F3_.
25450     +ARAB F4_.
25451     +ARGIC F5_.
25452     +ARMENIA F6_.
25453     +ARMENIAN F7_.
25454     +ATTACK F8_.
25455     +BANK F9_.
25456     +CENTER F10_.
25457     +CHIP F11_.
25458     +CIRCUIT F12_.
25459     +CLIENT F13_.
25460     +COMP F14_.
25461     +DESIGN F15_.
25462     +DISEAS F16_.
25463     +DISPLAI F17_.
25464     +DISTRIBUT F18_.
25465     +DOCTOR F19_.
25466     +DRUG F20_.
25467     +EDU F21_.
25468     +EFFECT F22_.
25469     +ELECTRON F23_.
25470     +ERROR F24_.
25471     +FILE F25_.
25472     +FOLLOWUP F26_.
25473     +FOOD F27_.
25474     +GEB F28_.
25475     +GORDON F29_.
25476     +GOVERN F30_.
25477     +GRAPHIC F31_.
25478     +HIGH F32_.
25479     +IMAG F33_.
25480     +INTERNET F34_.
25481     +ISRA F35_.
25482     +ISRAEL F36_.
25483     +JEW F37_.
25484     +JEWISH F38_.
25485     +KILL F39_.
25486     +MED F40_.
25487     +MEDIC F41_.
25488     +MEDICIN F42_.
25489     +MOTIF F43_.
25490     +OPINION F44_.
25491     +PAIN F45_.
25492     +PALESTINIAN F46_.
25493     +PATIENT F47_.
25494     +PITT F48_.
25495     +PITTSBURGH F49_.
25496     +POLICI F50_.
25497     +POWER F51_.
25498     +PROBLEM F52_.
25499     +PROGRAM F53_.
25500     +RADIO F54_.
25501     +REPLI F55_.
25502     +REPORT F56_.
25503     +RUN F57_.
25504     +SCI F58_.
25505     +SCIENC F59_.
25506     +SCREEN F60_.
25507     +SELL F61_.
25508     +SERDAR F62_.
25509     +SERVER F63_.
25510     +SIGNAL F64_.
25511     +TREATMENT F65_.
25512     +TURKISH F66_.
25513     +UNIV F67_.
25514     +UNIX F68_.
25515     +UUCP F69_.
25516     +VERSION F70_.
25517     +VOLTAG F71_.
25518     +WIDGET F72_.
25519     +WINDOW F73_.
25520     +WORK F74_.
25521     +XLIB F75_.
25522     +XTERM F76_.
25523     +;
MPRINT(SEGMENTSUMMARY):   format ACCESS F1_. ADAM F2_. APPLIC F3_. ARAB F4_. ARGIC F5_. ARMENIA F6_. ARMENIAN F7_. ATTACK F8_. BANK F9_. CENTER F10_. CHIP F11_. CIRCUIT F12_. CLIENT F13_. COMP F14_. DESIGN F15_. DISEAS F16_. DISPLAI F17_. DISTRIBUT F18_. 
DOCTOR F19_. DRUG F20_. EDU F21_. EFFECT F22_. ELECTRON F23_. ERROR F24_. FILE F25_. FOLLOWUP F26_. FOOD F27_. GEB F28_. GORDON F29_. GOVERN F30_. GRAPHIC F31_. HIGH F32_. IMAG F33_. INTERNET F34_. ISRA F35_. ISRAEL F36_. JEW F37_. JEWISH F38_. KILL F39_. 
MED F40_. MEDIC F41_. MEDICIN F42_. MOTIF F43_. OPINION F44_. PAIN F45_. PALESTINIAN F46_. PATIENT F47_. PITT F48_. PITTSBURGH F49_. POLICI F50_. POWER F51_. PROBLEM F52_. PROGRAM F53_. RADIO F54_. REPLI F55_. REPORT F56_. RUN F57_. SCI F58_. SCIENC F59_. 
SCREEN F60_. SELL F61_. SERDAR F62_. SERVER F63_. SIGNAL F64_. TREATMENT F65_. TURKISH F66_. UNIV F67_. UNIX F68_. UUCP F69_. VERSION F70_. VOLTAG F71_. WIDGET F72_. WINDOW F73_. WORK F74_. XLIB F75_. XTERM F76_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

*------------------------------------------------------------*
* Prof2: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=dom, 13 de dic de 2020 15:43:50,
      Última modificación=dom, 13 de dic de 2020 15:43:57,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
25524     +%macro _vars;
25525     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ARGIC ARMENIA ARMENIAN ATTACK DISTRIBUT FOLLOWUP REPLI SERDAR TURKISH UUCP WORK;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 142   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.40 seconds
      
NOTE: There were 142 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 142 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 11 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.42 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 11 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 11 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ARGIC ARMENIA ARMENIAN ATTACK DISTRIBUT FOLLOWUP REPLI SERDAR TURKISH UUCP WORK;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 142   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.40 seconds
      
NOTE: There were 142 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 142 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 82 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.42 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 82 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 82 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 82 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 82 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL a EMWS3.PROF2_INTDIST.
NOTE: There were 82 observations read from the data set WORK._INTERVAL.
NOTE: 82 observations added.
NOTE: The data set EMWS3.PROF2_INTDIST has 1439 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 11 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 11 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 11 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 11 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 11 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 11 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 11 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF2_STATS.
NOTE: There were 11 observations read from the data set WORK._TEMPSTAT.
NOTE: 11 observations added.
NOTE: The data set EMWS3.PROF2_STATS has 160 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="7";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 8 observations read from the data set EMWS3.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='7');
NOTE: The data set WORK._TEMPSTAT has 8 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 7;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF2_INTERVAL.FORMAT.SOURCE.
25526     +format
25527     +ACCESS F1_.
25528     +ADAM F2_.
25529     +APPLIC F3_.
25530     +ARAB F4_.
25531     +ARGIC F5_.
25532     +ARMENIA F6_.
25533     +ARMENIAN F7_.
25534     +ATTACK F8_.
25535     +BANK F9_.
25536     +CENTER F10_.
25537     +CHIP F11_.
25538     +CIRCUIT F12_.
25539     +CLIENT F13_.
25540     +COMP F14_.
25541     +DESIGN F15_.
25542     +DISEAS F16_.
25543     +DISPLAI F17_.
25544     +DISTRIBUT F18_.
25545     +DOCTOR F19_.
25546     +DRUG F20_.
25547     +EDU F21_.
25548     +EFFECT F22_.
25549     +ELECTRON F23_.
25550     +ERROR F24_.
25551     +FILE F25_.
25552     +FOLLOWUP F26_.
25553     +FOOD F27_.
25554     +GEB F28_.
25555     +GORDON F29_.
25556     +GOVERN F30_.
25557     +GRAPHIC F31_.
25558     +HIGH F32_.
25559     +IMAG F33_.
25560     +INTERNET F34_.
25561     +ISRA F35_.
25562     +ISRAEL F36_.
25563     +JEW F37_.
25564     +JEWISH F38_.
25565     +KILL F39_.
25566     +MED F40_.
25567     +MEDIC F41_.
25568     +MEDICIN F42_.
25569     +MOTIF F43_.
25570     +OPINION F44_.
25571     +PAIN F45_.
25572     +PALESTINIAN F46_.
25573     +PATIENT F47_.
25574     +PITT F48_.
25575     +PITTSBURGH F49_.
25576     +POLICI F50_.
25577     +POWER F51_.
25578     +PROBLEM F52_.
25579     +PROGRAM F53_.
25580     +RADIO F54_.
25581     +REPLI F55_.
25582     +REPORT F56_.
25583     +RUN F57_.
25584     +SCI F58_.
25585     +SCIENC F59_.
25586     +SCREEN F60_.
25587     +SELL F61_.
25588     +SERDAR F62_.
25589     +SERVER F63_.
25590     +SIGNAL F64_.
25591     +TREATMENT F65_.
25592     +TURKISH F66_.
25593     +UNIV F67_.
25594     +UNIX F68_.
25595     +UUCP F69_.
25596     +VERSION F70_.
25597     +VOLTAG F71_.
25598     +WIDGET F72_.
25599     +WINDOW F73_.
25600     +WORK F74_.
25601     +XLIB F75_.
25602     +XTERM F76_.
25603     +;
MPRINT(SEGMENTSUMMARY):   format ACCESS F1_. ADAM F2_. APPLIC F3_. ARAB F4_. ARGIC F5_. ARMENIA F6_. ARMENIAN F7_. ATTACK F8_. BANK F9_. CENTER F10_. CHIP F11_. CIRCUIT F12_. CLIENT F13_. COMP F14_. DESIGN F15_. DISEAS F16_. DISPLAI F17_. DISTRIBUT F18_. 
DOCTOR F19_. DRUG F20_. EDU F21_. EFFECT F22_. ELECTRON F23_. ERROR F24_. FILE F25_. FOLLOWUP F26_. FOOD F27_. GEB F28_. GORDON F29_. GOVERN F30_. GRAPHIC F31_. HIGH F32_. IMAG F33_. INTERNET F34_. ISRA F35_. ISRAEL F36_. JEW F37_. JEWISH F38_. KILL F39_. 
MED F40_. MEDIC F41_. MEDICIN F42_. MOTIF F43_. OPINION F44_. PAIN F45_. PALESTINIAN F46_. PATIENT F47_. PITT F48_. PITTSBURGH F49_. POLICI F50_. POWER F51_. PROBLEM F52_. PROGRAM F53_. RADIO F54_. REPLI F55_. REPORT F56_. RUN F57_. SCI F58_. SCIENC F59_. 
SCREEN F60_. SELL F61_. SERDAR F62_. SERVER F63_. SIGNAL F64_. TREATMENT F65_. TURKISH F66_. UNIV F67_. UNIX F68_. UUCP F69_. VERSION F70_. VOLTAG F71_. WIDGET F72_. WINDOW F73_. WORK F74_. XLIB F75_. XTERM F76_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

*------------------------------------------------------------*
* Prof2: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=dom, 13 de dic de 2020 15:43:50,
      Última modificación=dom, 13 de dic de 2020 15:43:58,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
25604     +%macro _vars;
25605     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   BANK EDU GEB GORDON PITT PITTSBURGH SCIENC UNIV;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 69   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.43 seconds
      
NOTE: There were 69 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=7;
NOTE: There were 69 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.43 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 8 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   BANK EDU GEB GORDON PITT PITTSBURGH SCIENC UNIV;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 69   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.42 seconds
      
NOTE: There were 69 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=7;
NOTE: There were 69 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 45 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.42 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 45 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 45 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "7";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 45 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 45 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL a EMWS3.PROF2_INTDIST.
NOTE: There were 45 observations read from the data set WORK._INTERVAL.
NOTE: 45 observations added.
NOTE: The data set EMWS3.PROF2_INTDIST has 1484 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 8 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 8 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 8 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 8 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF2_STATS.
NOTE: There were 8 observations read from the data set WORK._TEMPSTAT.
NOTE: 8 observations added.
NOTE: The data set EMWS3.PROF2_STATS has 168 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="10";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 2 observations read from the data set EMWS3.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='10');
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 10;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF2_INTERVAL.FORMAT.SOURCE.
25606     +format
25607     +ACCESS F1_.
25608     +ADAM F2_.
25609     +APPLIC F3_.
25610     +ARAB F4_.
25611     +ARGIC F5_.
25612     +ARMENIA F6_.
25613     +ARMENIAN F7_.
25614     +ATTACK F8_.
25615     +BANK F9_.
25616     +CENTER F10_.
25617     +CHIP F11_.
25618     +CIRCUIT F12_.
25619     +CLIENT F13_.
25620     +COMP F14_.
25621     +DESIGN F15_.
25622     +DISEAS F16_.
25623     +DISPLAI F17_.
25624     +DISTRIBUT F18_.
25625     +DOCTOR F19_.
25626     +DRUG F20_.
25627     +EDU F21_.
25628     +EFFECT F22_.
25629     +ELECTRON F23_.
25630     +ERROR F24_.
25631     +FILE F25_.
25632     +FOLLOWUP F26_.
25633     +FOOD F27_.
25634     +GEB F28_.
25635     +GORDON F29_.
25636     +GOVERN F30_.
25637     +GRAPHIC F31_.
25638     +HIGH F32_.
25639     +IMAG F33_.
25640     +INTERNET F34_.
25641     +ISRA F35_.
25642     +ISRAEL F36_.
25643     +JEW F37_.
25644     +JEWISH F38_.
25645     +KILL F39_.
25646     +MED F40_.
25647     +MEDIC F41_.
25648     +MEDICIN F42_.
25649     +MOTIF F43_.
25650     +OPINION F44_.
25651     +PAIN F45_.
25652     +PALESTINIAN F46_.
25653     +PATIENT F47_.
25654     +PITT F48_.
25655     +PITTSBURGH F49_.
25656     +POLICI F50_.
25657     +POWER F51_.
25658     +PROBLEM F52_.
25659     +PROGRAM F53_.
25660     +RADIO F54_.
25661     +REPLI F55_.
25662     +REPORT F56_.
25663     +RUN F57_.
25664     +SCI F58_.
25665     +SCIENC F59_.
25666     +SCREEN F60_.
25667     +SELL F61_.
25668     +SERDAR F62_.
25669     +SERVER F63_.
25670     +SIGNAL F64_.
25671     +TREATMENT F65_.
25672     +TURKISH F66_.
25673     +UNIV F67_.
25674     +UNIX F68_.
25675     +UUCP F69_.
25676     +VERSION F70_.
25677     +VOLTAG F71_.
25678     +WIDGET F72_.
25679     +WINDOW F73_.
25680     +WORK F74_.
25681     +XLIB F75_.
25682     +XTERM F76_.
25683     +;
MPRINT(SEGMENTSUMMARY):   format ACCESS F1_. ADAM F2_. APPLIC F3_. ARAB F4_. ARGIC F5_. ARMENIA F6_. ARMENIAN F7_. ATTACK F8_. BANK F9_. CENTER F10_. CHIP F11_. CIRCUIT F12_. CLIENT F13_. COMP F14_. DESIGN F15_. DISEAS F16_. DISPLAI F17_. DISTRIBUT F18_. 
DOCTOR F19_. DRUG F20_. EDU F21_. EFFECT F22_. ELECTRON F23_. ERROR F24_. FILE F25_. FOLLOWUP F26_. FOOD F27_. GEB F28_. GORDON F29_. GOVERN F30_. GRAPHIC F31_. HIGH F32_. IMAG F33_. INTERNET F34_. ISRA F35_. ISRAEL F36_. JEW F37_. JEWISH F38_. KILL F39_. 
MED F40_. MEDIC F41_. MEDICIN F42_. MOTIF F43_. OPINION F44_. PAIN F45_. PALESTINIAN F46_. PATIENT F47_. PITT F48_. PITTSBURGH F49_. POLICI F50_. POWER F51_. PROBLEM F52_. PROGRAM F53_. RADIO F54_. REPLI F55_. REPORT F56_. RUN F57_. SCI F58_. SCIENC F59_. 
SCREEN F60_. SELL F61_. SERDAR F62_. SERVER F63_. SIGNAL F64_. TREATMENT F65_. TURKISH F66_. UNIV F67_. UNIX F68_. UUCP F69_. VERSION F70_. VOLTAG F71_. WIDGET F72_. WINDOW F73_. WORK F74_. XLIB F75_. XTERM F76_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.06 seconds
      

*------------------------------------------------------------*
* Prof2: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=dom, 13 de dic de 2020 15:43:50,
      Última modificación=dom, 13 de dic de 2020 15:43:59,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
25684     +%macro _vars;
25685     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   CENTER POLICI;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 69   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.39 seconds
      
NOTE: There were 69 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=10;
NOTE: There were 69 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.40 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   CENTER POLICI;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 69   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.43 seconds
      
NOTE: There were 69 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=10;
NOTE: There were 69 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 13 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.43 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 13 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 13 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "10";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 13 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 13 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL a EMWS3.PROF2_INTDIST.
NOTE: There were 13 observations read from the data set WORK._INTERVAL.
NOTE: 13 observations added.
NOTE: The data set EMWS3.PROF2_INTDIST has 1497 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF2_STATS.
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: 2 observations added.
NOTE: The data set EMWS3.PROF2_STATS has 170 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="1";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 2 observations read from the data set EMWS3.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='1');
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Clus2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 1;
NOTE: %INCLUDE (level 1) file X is file EMWS3.PROF2_INTERVAL.FORMAT.SOURCE.
25686     +format
25687     +ACCESS F1_.
25688     +ADAM F2_.
25689     +APPLIC F3_.
25690     +ARAB F4_.
25691     +ARGIC F5_.
25692     +ARMENIA F6_.
25693     +ARMENIAN F7_.
25694     +ATTACK F8_.
25695     +BANK F9_.
25696     +CENTER F10_.
25697     +CHIP F11_.
25698     +CIRCUIT F12_.
25699     +CLIENT F13_.
25700     +COMP F14_.
25701     +DESIGN F15_.
25702     +DISEAS F16_.
25703     +DISPLAI F17_.
25704     +DISTRIBUT F18_.
25705     +DOCTOR F19_.
25706     +DRUG F20_.
25707     +EDU F21_.
25708     +EFFECT F22_.
25709     +ELECTRON F23_.
25710     +ERROR F24_.
25711     +FILE F25_.
25712     +FOLLOWUP F26_.
25713     +FOOD F27_.
25714     +GEB F28_.
25715     +GORDON F29_.
25716     +GOVERN F30_.
25717     +GRAPHIC F31_.
25718     +HIGH F32_.
25719     +IMAG F33_.
25720     +INTERNET F34_.
25721     +ISRA F35_.
25722     +ISRAEL F36_.
25723     +JEW F37_.
25724     +JEWISH F38_.
25725     +KILL F39_.
25726     +MED F40_.
25727     +MEDIC F41_.
25728     +MEDICIN F42_.
25729     +MOTIF F43_.
25730     +OPINION F44_.
25731     +PAIN F45_.
25732     +PALESTINIAN F46_.
25733     +PATIENT F47_.
25734     +PITT F48_.
25735     +PITTSBURGH F49_.
25736     +POLICI F50_.
25737     +POWER F51_.
25738     +PROBLEM F52_.
25739     +PROGRAM F53_.
25740     +RADIO F54_.
25741     +REPLI F55_.
25742     +REPORT F56_.
25743     +RUN F57_.
25744     +SCI F58_.
25745     +SCIENC F59_.
25746     +SCREEN F60_.
25747     +SELL F61_.
25748     +SERDAR F62_.
25749     +SERVER F63_.
25750     +SIGNAL F64_.
25751     +TREATMENT F65_.
25752     +TURKISH F66_.
25753     +UNIV F67_.
25754     +UNIX F68_.
25755     +UUCP F69_.
25756     +VERSION F70_.
25757     +VOLTAG F71_.
25758     +WIDGET F72_.
25759     +WINDOW F73_.
25760     +WORK F74_.
25761     +XLIB F75_.
25762     +XTERM F76_.
25763     +;
MPRINT(SEGMENTSUMMARY):   format ACCESS F1_. ADAM F2_. APPLIC F3_. ARAB F4_. ARGIC F5_. ARMENIA F6_. ARMENIAN F7_. ATTACK F8_. BANK F9_. CENTER F10_. CHIP F11_. CIRCUIT F12_. CLIENT F13_. COMP F14_. DESIGN F15_. DISEAS F16_. DISPLAI F17_. DISTRIBUT F18_. 
DOCTOR F19_. DRUG F20_. EDU F21_. EFFECT F22_. ELECTRON F23_. ERROR F24_. FILE F25_. FOLLOWUP F26_. FOOD F27_. GEB F28_. GORDON F29_. GOVERN F30_. GRAPHIC F31_. HIGH F32_. IMAG F33_. INTERNET F34_. ISRA F35_. ISRAEL F36_. JEW F37_. JEWISH F38_. KILL F39_. 
MED F40_. MEDIC F41_. MEDICIN F42_. MOTIF F43_. OPINION F44_. PAIN F45_. PALESTINIAN F46_. PATIENT F47_. PITT F48_. PITTSBURGH F49_. POLICI F50_. POWER F51_. PROBLEM F52_. PROGRAM F53_. RADIO F54_. REPLI F55_. REPORT F56_. RUN F57_. SCI F58_. SCIENC F59_. 
SCREEN F60_. SELL F61_. SERDAR F62_. SERVER F63_. SIGNAL F64_. TREATMENT F65_. TURKISH F66_. UNIV F67_. UNIX F68_. UUCP F69_. VERSION F70_. VOLTAG F71_. WIDGET F72_. WINDOW F73_. WORK F74_. XLIB F75_. XTERM F76_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS3.CLUS2_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

*------------------------------------------------------------*
* Prof2: calculando estadísticos de sumarización
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Tamaño de página del catálogo=4096,
      Número de páginas de catálogo=5,
      Creado=dom, 13 de dic de 2020 15:43:50,
      Última modificación=dom, 13 de dic de 2020 15:44:00,
      Nombre archivo=C:\Users\Admin\AppData\Local\Temp\SAS Temporary Files\_TD3368_MIIKYMEDIA_\Prc2\macros.sas7bcat,
      Versión creada=9.0401M6,Host creado=X64_10HOME,
      Nombre de propietario=MIIKYMEDIA\Admin,
      Tamaño archivo=            21KB,
      Tamaño de archivo (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
25764     +%macro _vars;
25765     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   ACCESS UNIX;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 43   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.42 seconds
      cpu time            0.43 seconds
      
NOTE: There were 43 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 43 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.43 seconds
      cpu time            0.43 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Ausente";
MPRINT(VAR_PROFILE):   label MIN = "Mínimo";
MPRINT(VAR_PROFILE):   label MAX = "Máximo";
MPRINT(VAR_PROFILE):   label MEAN = "Media";
MPRINT(VAR_PROFILE):   label STD = "Desviación estándar";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Asimetría";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Curtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   ACCESS UNIX;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 43   Memory used = 511K.
NOTE: There were 3000 observations read from the data set AMUL.TERMINOS_DOCUMENTOS_99.
NOTE: There were 3000 observations read from the data set EMWS3.IDS2_DATA.
NOTE: Vista WORK.PROF2_TMP.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.40 seconds
      
NOTE: There were 43 observations read from the data set EMWS3.CLUS2_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 43 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB ha utilizado (Tiempo de proceso total):
      real time           0.41 seconds
      cpu time            0.40 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Valor";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Número de ocurrencias";
MPRINT(VAR_PROFILE):   label PERCENT = "Porcentaje";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 12 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 12 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Valor" count = "Número de ocurrencias" percent = "Porcentaje";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 12 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 12 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL a EMWS3.PROF2_INTDIST.
NOTE: There were 12 observations read from the data set WORK._INTERVAL.
NOTE: 12 observations added.
NOTE: The data set EMWS3.PROF2_INTDIST has 1509 observations and 6 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 8 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 14 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS3.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT a EMWS3.PROF2_STATS.
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: 2 observations added.
NOTE: The data set EMWS3.PROF2_STATS has 172 observations and 14 variables.
NOTE: PROCEDURE APPEND ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS3.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="6";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 0 observations read from the data set EMWS3.PROF2_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='6');
NOTE: The data set WORK._TEMPSTAT has 0 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_TMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(TRAIN):   data EMWS3.Prof2_INTDIST;
MPRINT(TRAIN):   set EMWS3.Prof2_INTDIST;
MPRINT(TRAIN):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Color = "Color";
MPRINT(TRAIN):   if SegmentVariable = '_OVERALL_' then Color = 1;
MPRINT(TRAIN):   else Color = 0;
MPRINT(TRAIN):   run;

NOTE: There were 1509 observations read from the data set EMWS3.PROF2_INTDIST.
NOTE: The data set EMWS3.PROF2_INTDIST has 1509 observations and 7 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE STATS CLASSDIST INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PROFILEVIEW";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "Profileview";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "COLOR";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "_SEGMENT_";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
Sistema SAS

MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59115767459904;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS3.Prof2_WORTH;
MPRINT(TRAIN):   set EMWS3.Prof2_STATS;
MPRINT(TRAIN):   label SegmentVariable = "Variable de segmento" SegmentValue = "Valor de segmento" Variable = "Variable" Rank = "Clasificar" Worth = "Valor";
MPRINT(TRAIN):   where WORTH ne .;
MPRINT(TRAIN):   run;

NOTE: There were 96 observations read from the data set EMWS3.PROF2_STATS.
      WHERE WORTH not = .;
NOTE: The data set EMWS3.PROF2_WORTH has 96 observations and 14 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "LATTICE";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "1";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "BAR";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profworth";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "VARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.55026114478253;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS3.Prof2_SIZE;
MPRINT(TRAIN):   set EMWS3.Prof2_SIZE;
MPRINT(TRAIN):   label percent = "Porcentaje" count = "Número de ocurrencias";
MPRINT(TRAIN):   format PERCENT 5.2;
MPRINT(TRAIN):   format COUNT 12.;
MPRINT(TRAIN):   run;

NOTE: There were 10 observations read from the data set EMWS3.PROF2_SIZE.
NOTE: The data set EMWS3.PROF2_SIZE has 10 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PIE";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "segmentmanysize";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "COUNT";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "PERCENT";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.47675088396144;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "size";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.9276053146122;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profilevars";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.58012577732099;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 661 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clusbarplot";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7868315231925;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 661 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 793 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clushistplot";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.30031787804342;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 793 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 925 observations and 4 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS3 nolist;
MPRINT(TRAIN):   delete Prof2_SELVARS _SUMMARYVARS DATA_STAT Prof2_MACS(mt=catalog) Prof2_INTERVAL(mt=catalog);
MPRINT(TRAIN):   run;

NOTE: The file EMWS3._SUMMARYVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.DATA_STAT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.PROF2_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
NOTE: Deleting EMWS3.PROF2_SELVARS (memtype=DATA).
NOTE: Deleting EMWS3.PROF2_INTERVAL (memtype=CATALOG).
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
25766      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25767      * End TRAIN: Prof2;
MPRINT(EM_DIAGRAM):   * End TRAIN: Prof2;
25768      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25769      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25770      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
25771      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25772      ;
MPRINT(EM_DIAGRAM):   ;
25773      ;
MPRINT(EM_DIAGRAM):   ;
25774      ;
MPRINT(EM_DIAGRAM):   ;
25775      ;
MPRINT(EM_DIAGRAM):   ;
25776      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ;
25777      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
25778      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   quit;
25779      *------------------------------------------------------------*;
25780      /*; *"; *'; */
25781      ;
25782      run;
25783      quit;
25784      /* Reset EM Options */
25785      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
25786      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
25787      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
25788      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
25789      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
25790      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 925 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 925 observations and 4 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

25791      proc freq data=EMWS3.Prof2_WORTH noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS3.Prof2_WORTH noprint order=data;
25792      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
25793      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 96 observations read from the data set EMWS3.PROF2_WORTH.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

25794      proc freq data=EMWS3.Prof2_SIZE noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS3.Prof2_SIZE noprint order=data;
25795      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
25796      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS3.PROF2_SIZE.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
