MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00H18" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de puntuación";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de puntuación
Fecha:                13/12/20
Hora:                00H18
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O25GMDR5 "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\Clus\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O25GMDR5 new;
MPRINT(EM_DIAGRAM):   run;
64231      proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
64232      var PC_1--PC_9;
MPRINT(EM_DIAGRAM):   var PC_1--PC_9;
64233      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
64234      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

64235      proc sort data=WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_OUTVAR;
64236      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
64237      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

64238      proc sort data=EMWS1.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
64239      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
64240      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set EMWS1.CLUS_VARIABLESET.
NOTE: The data set WORK.CLUS_SORTEDVARS has 21 observations and 3 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

64241      data WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus_OUTVAR;
64242      merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
64243      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
64244      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
64245      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS_OUTVAR.
NOTE: There were 21 observations read from the data set WORK.CLUS_SORTEDVARS.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 6 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
64246      filename emflow "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64247      *------------------------------------------------------------*;
64248      * Clus: Scoring DATA data;
64249      *------------------------------------------------------------*;
64250      data EMWS1.Clus_TRAIN
64251      / view=EMWS1.Clus_TRAIN
64252      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TRAIN / view=EMWS1.Clus_TRAIN ;
64253      set EMWS1.PRINCOMP_TRAIN
64254      ;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_TRAIN ;
64255      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize PC_1 ;
MPRINT(EM_DIAGRAM):   drop T_PC_1 ;
MPRINT(EM_DIAGRAM):   if missing( PC_1 ) then T_PC_1 = .;
MPRINT(EM_DIAGRAM):   else T_PC_1 = (PC_1 - 0.03318655417595) * 15.2455507803493;
MPRINT(EM_DIAGRAM):   *** Standardize PC_10 ;
MPRINT(EM_DIAGRAM):   drop T_PC_10 ;
MPRINT(EM_DIAGRAM):   if missing( PC_10 ) then T_PC_10 = .;
MPRINT(EM_DIAGRAM):   else T_PC_10 = (PC_10 - 0.00180598335757) * 26.2885943947214;
MPRINT(EM_DIAGRAM):   *** Standardize PC_11 ;
MPRINT(EM_DIAGRAM):   drop T_PC_11 ;
MPRINT(EM_DIAGRAM):   if missing( PC_11 ) then T_PC_11 = .;
MPRINT(EM_DIAGRAM):   else T_PC_11 = (PC_11 - 0.00039402396105) * 26.9380594505906;
MPRINT(EM_DIAGRAM):   *** Standardize PC_12 ;
MPRINT(EM_DIAGRAM):   drop T_PC_12 ;
MPRINT(EM_DIAGRAM):   if missing( PC_12 ) then T_PC_12 = .;
MPRINT(EM_DIAGRAM):   else T_PC_12 = (PC_12 - 0.00235740769568) * 27.6533965483725;
MPRINT(EM_DIAGRAM):   *** Standardize PC_13 ;
MPRINT(EM_DIAGRAM):   drop T_PC_13 ;
MPRINT(EM_DIAGRAM):   if missing( PC_13 ) then T_PC_13 = .;
MPRINT(EM_DIAGRAM):   else T_PC_13 = (PC_13 - -0.00021858557335) * 28.0092731443424;
MPRINT(EM_DIAGRAM):   *** Standardize PC_14 ;
MPRINT(EM_DIAGRAM):   drop T_PC_14 ;
MPRINT(EM_DIAGRAM):   if missing( PC_14 ) then T_PC_14 = .;
MPRINT(EM_DIAGRAM):   else T_PC_14 = (PC_14 - 0.00007811443969) * 28.2884985540873;
MPRINT(EM_DIAGRAM):   *** Standardize PC_15 ;
MPRINT(EM_DIAGRAM):   drop T_PC_15 ;
MPRINT(EM_DIAGRAM):   if missing( PC_15 ) then T_PC_15 = .;
MPRINT(EM_DIAGRAM):   else T_PC_15 = (PC_15 - -0.00055492364217) * 28.5101404942049;
MPRINT(EM_DIAGRAM):   *** Standardize PC_16 ;
MPRINT(EM_DIAGRAM):   drop T_PC_16 ;
MPRINT(EM_DIAGRAM):   if missing( PC_16 ) then T_PC_16 = .;
MPRINT(EM_DIAGRAM):   else T_PC_16 = (PC_16 - 0.00145632265651) * 28.9395732981546;
MPRINT(EM_DIAGRAM):   *** Standardize PC_17 ;
MPRINT(EM_DIAGRAM):   drop T_PC_17 ;
MPRINT(EM_DIAGRAM):   if missing( PC_17 ) then T_PC_17 = .;
MPRINT(EM_DIAGRAM):   else T_PC_17 = (PC_17 - 0.00243600423981) * 29.4173957149439;
MPRINT(EM_DIAGRAM):   *** Standardize PC_18 ;
MPRINT(EM_DIAGRAM):   drop T_PC_18 ;
MPRINT(EM_DIAGRAM):   if missing( PC_18 ) then T_PC_18 = .;
MPRINT(EM_DIAGRAM):   else T_PC_18 = (PC_18 - -0.00014069832294) * 29.7560132338027;
MPRINT(EM_DIAGRAM):   *** Standardize PC_19 ;
MPRINT(EM_DIAGRAM):   drop T_PC_19 ;
MPRINT(EM_DIAGRAM):   if missing( PC_19 ) then T_PC_19 = .;
MPRINT(EM_DIAGRAM):   else T_PC_19 = (PC_19 - 0.00115709927046) * 29.9903255333019;
MPRINT(EM_DIAGRAM):   *** Standardize PC_2 ;
MPRINT(EM_DIAGRAM):   drop T_PC_2 ;
MPRINT(EM_DIAGRAM):   if missing( PC_2 ) then T_PC_2 = .;
MPRINT(EM_DIAGRAM):   else T_PC_2 = (PC_2 - 0.05473325942454) * 26.1754271468546;
MPRINT(EM_DIAGRAM):   *** Standardize PC_20 ;
MPRINT(EM_DIAGRAM):   drop T_PC_20 ;
MPRINT(EM_DIAGRAM):   if missing( PC_20 ) then T_PC_20 = .;
MPRINT(EM_DIAGRAM):   else T_PC_20 = (PC_20 - 0.00077669327732) * 30.3573128740427;
MPRINT(EM_DIAGRAM):   *** Standardize PC_3 ;
MPRINT(EM_DIAGRAM):   drop T_PC_3 ;
MPRINT(EM_DIAGRAM):   if missing( PC_3 ) then T_PC_3 = .;
MPRINT(EM_DIAGRAM):   else T_PC_3 = (PC_3 - 0.0080727347431) * 17.6572768381086;
MPRINT(EM_DIAGRAM):   *** Standardize PC_4 ;
MPRINT(EM_DIAGRAM):   drop T_PC_4 ;
MPRINT(EM_DIAGRAM):   if missing( PC_4 ) then T_PC_4 = .;
MPRINT(EM_DIAGRAM):   else T_PC_4 = (PC_4 - 0.00119227878951) * 19.0059033625974;
MPRINT(EM_DIAGRAM):   *** Standardize PC_5 ;
MPRINT(EM_DIAGRAM):   drop T_PC_5 ;
MPRINT(EM_DIAGRAM):   if missing( PC_5 ) then T_PC_5 = .;
MPRINT(EM_DIAGRAM):   else T_PC_5 = (PC_5 - 0.00677147298244) * 20.2894697299779;
MPRINT(EM_DIAGRAM):   *** Standardize PC_6 ;
MPRINT(EM_DIAGRAM):   drop T_PC_6 ;
MPRINT(EM_DIAGRAM):   if missing( PC_6 ) then T_PC_6 = .;
MPRINT(EM_DIAGRAM):   else T_PC_6 = (PC_6 - 0.00532096437585) * 21.1181468754015;
MPRINT(EM_DIAGRAM):   *** Standardize PC_7 ;
MPRINT(EM_DIAGRAM):   drop T_PC_7 ;
MPRINT(EM_DIAGRAM):   if missing( PC_7 ) then T_PC_7 = .;
MPRINT(EM_DIAGRAM):   else T_PC_7 = (PC_7 - 0.00342454535797) * 21.5967491364649;
MPRINT(EM_DIAGRAM):   *** Standardize PC_8 ;
MPRINT(EM_DIAGRAM):   drop T_PC_8 ;
MPRINT(EM_DIAGRAM):   if missing( PC_8 ) then T_PC_8 = .;
MPRINT(EM_DIAGRAM):   else T_PC_8 = (PC_8 - 0.00329851446281) * 23.6591862709302;
MPRINT(EM_DIAGRAM):   *** Standardize PC_9 ;
MPRINT(EM_DIAGRAM):   drop T_PC_9 ;
MPRINT(EM_DIAGRAM):   if missing( PC_9 ) then T_PC_9 = .;
MPRINT(EM_DIAGRAM):   else T_PC_9 = (PC_9 - 0.00291827138231) * 25.4860305464463;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUSvlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Id de segmento' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distancia' ;
MPRINT(EM_DIAGRAM):   array CLUSvads [23] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 23;
MPRINT(EM_DIAGRAM):   CLUSvads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_1 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_1 - 26.668151255032 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_1 - -0.19363895595414 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_1 - -0.05636096141465 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_1 - -0.08187447969882 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_1 - 0.64967166403847 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_1 - 18.1504889863368 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_1 - -0.0820458807773 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_1 - -0.01235497283253 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_1 - -0.09903026895614 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_1 - 10.1997378759499 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_1 - -0.01072184726071 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_1 - 0.41191923561408 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_1 - -0.04982769287253 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_1 - -0.009186707564 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_1 - 1.65701325090489 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_1 - 20.9319908172442 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_1 - -0.24576013524867 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_1 - 2.08030960111255 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_1 - 0.32953433342105 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_1 - 0.3038811750275 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_1 - 0.27066631623675 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_1 - 0.08727553901899 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_1 - 0.00246026144858 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_10 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_10 - -0.02204527098626 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_10 - -0.22127499562019 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_10 - 0.01110002286653 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_10 - -0.76679140232894 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_10 - -18.5851880241802 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_10 - -0.82954756972133 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_10 - -0.3285075436003 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_10 - 0.03182977905691 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_10 - 0.04692299707517 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_10 - -1.19077898493202 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_10 - -1.54312697670385 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_10 - 0.07093760417627 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_10 - -0.02618794779918 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_10 - -0.14613075504309 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_10 - 0.26117391895207 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_10 - -0.11701132995108 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_10 - 0.8147914885749 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_10 - 6.59608486804535 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_10 - -0.25307491893344 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_10 - -0.03505781846002 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_10 - -0.19840569855489 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_10 - 0.24195658973848 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_10 - -1.95400186233867 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_11 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_11 - 0.01102224600697 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_11 - -0.05515153202234 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_11 - -0.08652235130313 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_11 - 0.10109754158098 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_11 - 0.36700878979541 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_11 - 1.09834860268962 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_11 - 0.45815982191396 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_11 - -0.16032737389244 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_11 - 0.12431683361367 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_11 - 0.11577052537431 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_11 - -0.34767749205941 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_11 - 2.96144393038594 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_11 - -1.00722857420804 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_11 - -0.64142482619805 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_11 - 5.77281959604525 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_11 - 0.58248801833539 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_11 - 0.17085725572167 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_11 - -0.17276058432074 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_11 - 4.81084070162523 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_11 - -3.12466133855783 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_11 - -0.81110308133184 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_11 - -2.87429990894912 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_11 - 0.24405888980294 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_12 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_12 - -0.11057830967328 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_12 - -0.36173518801715 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_12 - -0.26756866575567 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_12 - -0.4660947670866 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_12 - 1.16295020192969 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_12 - 0.41919389972824 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_12 - -8.87639424981375 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_12 - 0.27049377833097 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_12 - -0.06308322672261 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_12 - -0.36538690075212 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_12 - -1.14511557562628 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_12 - -0.2035272457407 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_12 - 2.47683625248173 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_12 - 0.01162306250494 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_12 - -2.65853477434113 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_12 - 0.30416622008529 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_12 - -0.41237328996943 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_12 - -0.6589904960428 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_12 - -0.27346658810251 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_12 - -0.65962339057166 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_12 - 0.3916989045521 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_12 - 2.19019793684943 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_12 - -1.60945288754684 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_13 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_13 - 0.02520698359054 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_13 - 0.15011687834774 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_13 - 0.36863129955341 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_13 - -6.73041866959073 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_13 - 0.02835865622358 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_13 - 0.03054115274558 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_13 - 0.02238195455006 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_13 - -0.05198933742162 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_13 - -0.00032027257456 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_13 - -0.1131213636619 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_13 - 6.20766502342188 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_13 - 0.2157418356392 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_13 - 7.32375018017765 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_13 - 0.70206506507448 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_13 - 1.17349353138517 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_13 - 0.08325528653924 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_13 - -0.03892523494251 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_13 - 0.04384063859029 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_13 - 0.33674384609475 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_13 - 0.7793819046159 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_13 - -1.18933620087676 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_13 - -5.65810348028453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_13 - -20.3997838972411 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_14 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_14 - 0.2119418917834 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_14 - -0.12643247546891 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_14 - -0.55019208071305 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_14 - 2.82172641784853 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_14 - -0.53944579682452 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_14 - -0.29739722690038 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_14 - -0.19639184563757 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_14 - 0.08371892472231 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_14 - -0.30280868823997 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_14 - 0.15063072966793 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_14 - -3.73396063554461 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_14 - 0.15022786723009 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_14 - 1.60619926490385 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_14 - 3.19745572101823 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_14 - 1.97260539312879 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_14 - -0.17929253000013 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_14 - -0.04751121877252 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_14 - 0.29737484140501 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_14 - 0.36262929062803 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_14 - 2.47686550678129 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_14 - -2.86441337556014 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_14 - -13.7343731399856 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_14 - 8.31402180087728 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_15 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_15 - 0.0538158943611 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_15 - -0.05112606850168 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_15 - -0.37436281348608 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_15 - -0.02271271046707 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_15 - -0.54042320326894 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_15 - 0.03401032845638 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_15 - 2.27074455700245 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_15 - -0.08381827652876 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_15 - -0.42236106582171 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_15 - -0.55531246502302 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_15 - -1.22418852478213 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_15 - 0.121611799308 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_15 - 5.48041722098893 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_15 - 4.08592633843872 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_15 - -0.50461537532621 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_15 - 0.19434029765873 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_15 - 0.04969016491263 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_15 - 0.24775094919412 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_15 - 1.09396378654387 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_15 - 0.41953726283304 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_15 - 2.90102590014039 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_15 - 11.5963588646183 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_15 - -0.17204867161434 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_16 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_16 - -0.24287955570695 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_16 - -0.22883996445626 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_16 - 0.66534054334917 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_16 - 0.84184934942161 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_16 - 0.80533997223158 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_16 - 0.2071991722487 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_16 - 3.81732098984377 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_16 - 0.24515264853572 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_16 - -0.29250904003623 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_16 - -0.22406499327816 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_16 - -5.78195379579461 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_16 - -0.3706695660861 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_16 - 10.0705819816931 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_16 - -3.16511198619166 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_16 - -1.16641253936448 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_16 - 0.10882237868757 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_16 - -0.25301085118237 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_16 - -0.14165376912153 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_16 - -0.54192012408869 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_16 - -1.49644224433393 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_16 - -0.3657143344885 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_16 - -0.74085553755719 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_16 - 1.76640712860791 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_17 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_17 - -0.03338578591271 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_17 - 0.18230837721448 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_17 - 0.48480072095842 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_17 - -2.68468994128477 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_17 - 0.1678327587047 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_17 - 0.03903574067573 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_17 - 2.97302433223708 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_17 - 0.25943389126298 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_17 - -0.60659298909911 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_17 - 0.21906206196383 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_17 - -0.25217130788143 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_17 - 0.78891510419734 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_17 - -9.04911517048785 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_17 - -0.09256825057425 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_17 - 5.5211641740197 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_17 - -0.11779015201469 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_17 - -0.52715876112979 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_17 - 0.17758209183954 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_17 - -0.65647269956316 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_17 - 0.8869378975308 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_17 - -0.66356893468564 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_17 - 0.86806505919178 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_17 - -8.36630805770508 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_18 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_18 - 0.01113217169417 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_18 - 0.03848552035998 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_18 - 0.08890210727131 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_18 - 0.40374846932423 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_18 - 1.19288182900729 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_18 - 0.53601009949701 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_18 - -0.69195398028155 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_18 - -0.19673109345489 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_18 - 0.18494537109766 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_18 - -0.10806741854437 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_18 - -1.99014106516226 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_18 - 3.68632471902898 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_18 - 2.70200026396723 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_18 - -0.96409748002788 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_18 - 19.6792080997742 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_18 - 0.41501415916302 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_18 - 0.19283739753922 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_18 - -0.69212026567621 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_18 - -1.33425488057339 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_18 - 3.86515980892441 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_18 - -2.09287979417894 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_18 - 3.62473114104991 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_18 - 0.86865627176196 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_19 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_19 - 0.15072550354855 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_19 - 0.14900590615445 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_19 - 0.2026523256794 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_19 - -0.55648715031191 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_19 - 0.08709371990514 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_19 - 1.28261655163283 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_19 - -0.35811696030911 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_19 - -0.1127148516955 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_19 - 0.06984787123844 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_19 - 0.38292971198187 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_19 - -2.67956661977452 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_19 - -2.78301038878058 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_19 - -0.79929333303894 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_19 - -1.73560957378595 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_19 - -16.133975955835 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_19 - 0.62467096405658 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_19 - -0.12028604876744 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_19 - 0.15029498054084 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_19 - 2.83318422600406 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_19 - 4.37143862464033 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_19 - 0.513246895713 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_19 - 2.62520257328396 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_19 - -1.93158751332482 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_2 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_2 - -26.5931672666907 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_2 - -0.09697944927391 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_2 - 0.69029118072721 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_2 - 0.41727414720373 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_2 - 2.76347117924538 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_2 - -14.5330760027502 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_2 - 0.28537769286259 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_2 - -0.00419209512493 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_2 - 0.08350526999562 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_2 - -6.19892134903631 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_2 - 0.86534819533192 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_2 - 0.6634910402547 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_2 - 0.27520417463037 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_2 - 0.36034268821674 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_2 - 1.13718544701589 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_2 - -18.8238050496725 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_2 - -0.34718483044985 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_2 - 3.4850961624839 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_2 - 0.5281560566666 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_2 - 0.4482503906119 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_2 - 0.31068015884547 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_2 - 0.28383756199218 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_2 - 0.94399698168808 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_20 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_20 - -0.03574964321042 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_20 - 0.79630587338785 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_20 - -0.13282953522036 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_20 - -2.18592645490703 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_20 - 0.31457591915336 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_20 - 0.05724286973609 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_20 - -1.01994353736174 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_20 - -0.14237379199291 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_20 - 0.14755440177727 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_20 - 0.20033389811432 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_20 - -11.3051732591834 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_20 - -0.16622744442738 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_20 - -0.34516933107055 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_20 - 1.18394342221337 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_20 - -0.00430334137649 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_20 - -0.08618770171031 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_20 - -0.26401157452447 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_20 - -0.10396828090963 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_20 - -0.12228832733798 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_20 - -1.02550558965187 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_20 - 0.07419096905216 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_20 - -0.91740269424607 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_20 - -8.48969560345894 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_3 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_3 - 1.01537534278583 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_3 - 0.05370458853848 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_3 - 0.36375369351768 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_3 - 0.18227952447311 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_3 - -8.36809434575505 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_3 - -0.41286031587408 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_3 - 0.12587861844022 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_3 - 0.06100915021231 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_3 - 0.05099916761304 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_3 - -0.18275512451405 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_3 - 0.25642480701101 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_3 - 0.4234231223063 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_3 - 0.12441679676989 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_3 - 0.12047852082319 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_3 - 0.61937448903834 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_3 - -0.00230315393504 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_3 - -0.26113057222537 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_3 - -16.7065578936745 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_3 - 0.45354070607286 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_3 - 0.34745067207503 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_3 - 0.30335975350988 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_3 - 0.24605346385895 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_3 - 0.40718065489011 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_4 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_4 - 8.22204768794035 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_4 - 0.10554906417144 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_4 - -0.09433518478208 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_4 - 0.09561077658892 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_4 - -0.36144702905405 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_4 - -2.91983763179261 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_4 - -0.0862228549122 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_4 - 0.10635258014045 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_4 - -0.09067680641684 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_4 - -5.72672196634699 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_4 - 0.2784372358675 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_4 - -1.05842889027623 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_4 - -0.02274982365174 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_4 - 0.0077323878345 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_4 - -2.38060152497406 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_4 - 2.00350659921711 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_4 - -0.03680262700212 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_4 - -2.57606251132799 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_4 - -1.02020858406121 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_4 - -0.93402206124203 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_4 - -0.73670634652373 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_4 - -0.19972402427738 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_4 - 0.1325076022177 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_5 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_5 - 18.7160264635441 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_5 - 0.58869944736278 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_5 - 2.13190149158565 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_5 - 0.95757180682239 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_5 - 0.90667343842714 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_5 - -15.4313546534164 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_5 - 0.44082103759082 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_5 - -0.24484135738482 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_5 - 0.19944029281341 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_5 - -20.1976469705844 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_5 - 1.55497417232302 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_5 - -0.55885714823812 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_5 - 0.70949169833413 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_5 - 0.25587835192729 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_5 - -1.75835269298778 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_5 - 0.32796305558601 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_5 - 0.37622028254643 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_5 - 0.62972262137109 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_5 - -0.61368851934215 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_5 - -0.52766437744576 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_5 - -0.42168451301792 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_5 - -0.41408813494347 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_5 - 1.93664058262094 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_6 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_6 - -8.95011168807573 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_6 - 1.04435839342536 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_6 - 4.78862318156275 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_6 - 1.64749847583285 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_6 - -0.70586379677087 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_6 - 12.1081860864269 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_6 - 0.38834811963134 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_6 - -0.3367845213425 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_6 - 0.13639228240538 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_6 - 12.6260058039864 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_6 - 2.77542577296914 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_6 - -1.5396655356632 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_6 - 1.31486190552848 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_6 - 0.38664417310183 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_6 - -3.39071026470442 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_6 - 2.21899894566384 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_6 - 0.48791819917131 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_6 - -0.87277943338878 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_6 - -1.61952528927189 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_6 - -1.33279346684627 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_6 - -1.06078114117624 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_6 - -0.87810696987958 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_6 - 3.53185853803572 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_7 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_7 - -0.73588701766305 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_7 - 1.11491833952176 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_7 - -10.9006824591312 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_7 - 1.14599641537653 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_7 - -0.60966679087808 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_7 - 0.94545558941895 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_7 - -0.51147549259411 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_7 - -0.06208946190166 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_7 - -0.4035473650808 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_7 - 0.87530351914693 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_7 - 2.96351172415592 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_7 - -0.16775075895165 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_7 - 1.43412755585527 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_7 - -0.74286215076048 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_7 - -0.33445339354424 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_7 - 0.15140711726925 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_7 - 0.58712842318093 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_7 - -0.15419575913524 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_7 - -0.17047244800225 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_7 - -0.22490104656468 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_7 - -0.24428494901475 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_7 - -0.03562633945317 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_7 - 2.45452718985293 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_8 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_8 - -0.44482916059592 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_8 - -0.98818185007934 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_8 - -5.00825458836743 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_8 - -1.46198966647996 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_8 - 1.39224308956327 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_8 - 2.49785865214599 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_8 - 3.07381595073828 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_8 - -0.0837905081631 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_8 - 1.10877169992081 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_8 - 1.42138313753659 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_8 - -2.44239801063741 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_8 - -1.17202644393947 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_8 - -1.00617879229583 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_8 - 1.58411832454166 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_8 - -3.24632732630491 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_8 - 1.12980515397391 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_8 - -0.33686367745321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_8 - -1.2677213581031 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_8 - -1.33885556803294 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_8 - -0.61092730270902 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_8 - -0.3865667818057 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_8 - -0.56191057778711 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_8 - -3.70945757438495 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PC_9 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_PC_9 - -0.18398138922751 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_PC_9 - -0.53523614760947 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_PC_9 - 0.27408769773999 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_PC_9 - -1.62859949204097 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_PC_9 - 4.33296549875561 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [6] + ( T_PC_9 - 0.62736465917376 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [7] + ( T_PC_9 - -0.49273912287361 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [8] + ( T_PC_9 - -0.02394369684394 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [9] + ( T_PC_9 - -0.2879262270666 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [10] + ( T_PC_9 - 0.70656772368688 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [11] + ( T_PC_9 - -2.92554469718539 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [12] + ( T_PC_9 - -0.34086325370073 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [13] + ( T_PC_9 - -1.63743170904636 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [14] + ( T_PC_9 - -0.11234009573972 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [15] + ( T_PC_9 - -0.88764780776622 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [16] + ( T_PC_9 - 0.06503692363588 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [17] + ( T_PC_9 - 3.59351846345973 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [18] + ( T_PC_9 - -2.6880206854292 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [19] + ( T_PC_9 - -0.21410493508102 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [20] + ( T_PC_9 - -0.02468597014131 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [21] + ( T_PC_9 - 0.03152018016943 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [22] + ( T_PC_9 - -0.10894696216267 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [23] + ( T_PC_9 - -3.99349236039083 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   _vqnvar = 20 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 4.5474735088646E-11 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 23;
MPRINT(EM_DIAGRAM):   if CLUSvads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (20 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUSvlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 5 then _SEGMENT_LABEL_="Cluster5";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 6 then _SEGMENT_LABEL_="Cluster6";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 7 then _SEGMENT_LABEL_="Cluster7";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 8 then _SEGMENT_LABEL_="Cluster8";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 9 then _SEGMENT_LABEL_="Cluster9";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 10 then _SEGMENT_LABEL_="Cluster10";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 11 then _SEGMENT_LABEL_="Cluster11";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 12 then _SEGMENT_LABEL_="Cluster12";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 13 then _SEGMENT_LABEL_="Cluster13";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 14 then _SEGMENT_LABEL_="Cluster14";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 15 then _SEGMENT_LABEL_="Cluster15";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 16 then _SEGMENT_LABEL_="Cluster16";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 17 then _SEGMENT_LABEL_="Cluster17";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 18 then _SEGMENT_LABEL_="Cluster18";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 19 then _SEGMENT_LABEL_="Cluster19";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 20 then _SEGMENT_LABEL_="Cluster20";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 21 then _SEGMENT_LABEL_="Cluster21";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 22 then _SEGMENT_LABEL_="Cluster22";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 23 then _SEGMENT_LABEL_="Cluster23";
64970      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS1.CLUS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: Vista EMWS1.PRINCOMP_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.10 seconds
      cpu time            0.11 seconds
      
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.10 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_DIAGRAM):   quit;
64971      quit;
64972      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
64973      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
64974      * Clus: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus: Computing metadata for TRAIN data;
64975      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: Vista EMWS1.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.10 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\Clus\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Clus_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
Sistema SAS

MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Clus_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Clus_TRAIN out=WORK.M12QG1D3 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12QG1D3;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M12QG1D3(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12QG1D3;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M12QG1D3;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1J1XDVD NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1J1XDVD;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1J1XDVD;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M23VEX3C(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1J1XDVD;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1J1XDVD;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1J1XDVD;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1J1XDVD;
MPRINT(EMADVISECOLUMNS):   set WORK.M1J1XDVD;
MPRINT(EMADVISECOLUMNS):   label NAME = "Nombre de la variable" TYPE = "Tipo" ROLE = "Rol" LEVEL= "Nivel de medida" ORDER= "Orden" CREATOR= "Creador" FORMATTYPE= "Tipo de formato" FAMILY= "Familia" DISTRIBUTION= "Distribución" PRICE= "Precio" LOWERLIMIT= 
"Límite inferior" UPPERLIMIT= "Límite superior" REPORT= "Informe" COMMENT= "Comentario" INDEX= "Índice" INDEXTYPE= "TipoÍndice" LABEL= "Etiqueta" LENGTH= "Longitud";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: Vista EMWS1.CLUS_TRAIN.VIEW ha utilizado (Tiempo de proceso total):
      real time           0.10 seconds
      cpu time            0.12 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
