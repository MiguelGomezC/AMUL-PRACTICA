*------------------------------------------------------------*
Usuario:                Admin
Fecha:                13/12/20
Hora:                00H18
Sitio:                70161230
Plataforma:            X64_10HOME
Versión de mantenimiento: 9.04.01M6P111518
Versión de EM:          15.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00H16" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de entrenamiento";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de entrenamiento
Fecha:                13/12/20
Hora:                00H16
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2IMB7SK "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2IMB7SK new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00H16" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Sitio:                70161230";
MPRINT(EM_DIAGRAM):   put "Plataforma:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "Versión de mantenimiento: 9.04.01M6P111518";
MPRINT(EM_DIAGRAM):   put "Versión de EM:          15.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00H16" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Usuario:                Admin";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de entrenamiento";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida de puntuación";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Salida del informe";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.PRINCOMP_VariableSet noprint;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.PRINCOMPMETA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc print data=WORK.PRINCOMPMETA label noobs;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   label ROLE = "Rol" LEVEL = "Nivel de medida" COUNT = "Número de ocurrencias";
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Resumen de variables";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    data WORK.M2ZHB9SX;
MPRINT(EM_DIAGRAM):   set WORK.M2ZHB9SX;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('Y','D') then do;
MPRINT(EM_DIAGRAM):   role = 'INPUT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   role = 'INPUT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = 'FREQ' then do;
MPRINT(EM_DIAGRAM):   role = 'FREQ';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Create DMDB macros;
MPRINT(EM_DIAGRAM):   options nosource;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   options NOSOURCE;
MPRINT(EM_DIAGRAM):   * End DMDB macros generation;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Ids_DATA dmdbcat=WORK.EM_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   var
MPRINT(DMDBVAR):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW
ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN ATHENA ATTACH ATTACK
ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL
CHARACT CHARG CHASTITI CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN COLOR
COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT
CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD
DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG
DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI
FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND
FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD HUMAN HUNTSVIL ICON IDEA
IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB
LABEL LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG LONGER LOOK LOOP LOST
LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD
METHODOLOG MICHAEL MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR
NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM OMRAN OPEN
OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE
PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID
PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST
RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH
RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC
SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK
SPOT STAI STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS SURGERI
SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK
THOMA THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN
UNDERSTAND UNIT UNIV UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
Note: Large memory request: 606816
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
Note: Large memory request: 606816
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * PRINCOMP: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   proc dmneurl data=EMWS1.Ids_DATA dmdbcat=WORK.EM_DMDB outstat=EMWS1.PRINCOMP_OUTSTAT outclass=EMWS1.PRINCOMP_OUTCLASS NOMONITOR ;
MPRINT(EM_DIAGRAM):   var
MPRINT(INPUTS):   ABSOLUT ACCELER ACCEPT ACCESS ACCOUNT ACCUR ACID ACTION ACTIV ADAM ADCOM ADDIT ADDRESS ADMIN ADMINISTR ADRIAN ADVANC ADVIC AFFECT AGRE AID ALAN ALLERG ALLERGI ALLOC ALLOW ALTERN AMATEUR AMERICAN AMOUNT AMP AMPLIFI ANA ANALOG ANDI ANDREW
ANGEL ANIM ANNOUNC ANSWER ANTENNA ANTI ANTIBIOT APP APPAR APPEAR APPL APPLI APPLIC APPRECI APPROACH APRIL ARAB ARCAD AREA AREN ARGIC ARGUMENT ARM ARMENIA ARMENIAN ARMI ARTICL ARTIFICI ASK ASSEMBL ASSIST ASSOCI ASSUM ATARI ATHEN ATHENA ATTACH ATTACK
ATTEMPT ATTRIBUT AUDIO AUSTIN AUSTRALIA AUTHOR AVOID AZERI BACKGROUND BAND BANK BARBECU BASE BASIC BATTERI BECK BELL BENSON BERKELEI BEYER BILL BIRTHDAI BIT BITMAP BLACK BLOOD BLUE BOARD BODI BOMB BOOK BORDER BOSTON BOUGHT BOULDER BOX BRAD BRAIN BRAND
BREAK BRIAN BRING BRITISH BROWN BTW BUFFER BUILD BUILT BULB BUNCH BUSH BUSI BUTTON CABL CALIFORNIA CALL CAMBRIDG CAN CANADA CANCER CANDIDA CAPABL CAPACITOR CAPIT CAR CARD CARE CARNEGI CARRI CARTER CASE CATALOG CAUS CELL CENTER CENTR CHANC CHANG CHANNEL
CHARACT CHARG CHASTITI CHEAP CHECK CHEER CHEMIC CHICAGO CHILD CHILDREN CHINES CHIP CHOIC CHRI CHRISTIAN CHRISTOPH CIRCUIT CITI CITIZEN CIVIL CIVILIAN CLAIM CLASS CLEAR CLEVELAND CLIENT CLINIC CLINTON CLOCK CLOSE CLUB CMU CODE COLD COLLEG COLLIN COLOR
COLORADO COLORMAP COLUMBIA COMBIN COMMAND COMMENT COMMERCI COMMIT COMMON COMMUN COMP COMPANI COMPAR COMPAT COMPIL COMPLET COMPON COMPUT CONCERN CONCRET CONDIT CONFER CONFIGUR CONFLICT CONFUS CONNECT CONSID CONSIST CONSTRUCT CONSULT CONTACT CONTENT CONTEXT
CONTINU CONTROL CONVENT CONVERT COOL COPI CORN CORP CORPOR CORRECT COST COULDN COUNT COUNTRI COUPL COVER COVINGTON CPR CREAT CROHN CROSS CURE CURRENT CURSOR CUSTOM CUTE CYCL DAI DAILI DALE DAMAG DANGER DANIEL DANNI DATA DAVE DAVID DAVIDIAN DAYTON DEAD
DEAL DEAR DEATH DECID DECOD DEFAULT DEFIN DEFINIT DEGRE DEIR DELET DEPART DEPEND DEPT DEPTH DESIGN DESTROI DETAIL DETECT DETECTOR DETERMIN DEVELOP DEVIC DIAGNOS DIAGRAM DIALOG DICK DIDN DIEGO DIET DIFFER DIGIT DIMENS DIOD DIRECT DIRECTORI DISCHARG
DISCLAIM DISCUSS DISEAS DISK DISPLAI DISTANC DISTRIBUT DIVIS DOCTOR DOCUMENT DOESN DOMAIN DOMIN DON DONAT DORTMUND DOUBT DOUG DRAW DRIVE DRIVER DROP DRUG DUMP DYER EASI EASILI EAST EAT ECHO EDITOR EDU EDUC EDWARD EFFECT ELECTR ELECTRON EMAIL EMPLOY EMUL
ENERGI ENGIN ENGLAND ENTIR ENTRI ENVIRON EPROM EQUAL EQUIP ERIC ERROR ESCAP ESSENTI EUROP EUROPEAN EVENT EVID EXACT EXECUT EXERCIS EXIST EXPANS EXPECT EXPENS EXPERI EXPERIENC EXPLAIN EXPLOD EXPOS EXPRESS EXTENS EXTERMIN EXTRA FACE FACT FAIL FALS FAMILI
FAST FATHER FAVOR FAX FEATUR FEDER FEED FEEL FIELD FIGHT FIGUR FILE FILL FILTER FINAL FIND FINE FIRE FIX FLAME FLASH FLOOR FLUKE FOCU FOLK FOLLOWUP FONT FOOD FORC FORGET FORM FORMAT FOURD FRAME FRANC FRANK FREE FREEDOM FREEMAN FREQUENC FREQUENT FRI FRIEND
FULL FUNCTION FUTUR GAIN GAME GARFIEL GARI GATEWAI GAZA GEB GENER GENOCID GEORG GEORGIA GERMAN GERMANI GILBERT GIVE GOOD GORDON GOVERN GRANT GRAPHIC GREAT GREATLI GREEK GREEN GREG GROUND GROUP GUESS GUEST GUI HAMAZA HAMID HAND HANDL HANG HAPPEN HAPPI HARD
HARDWAR HARRI HARVARD HATE HAVEN HEAD HEADACH HEALTH HEAR HEARD HEART HEAT HEAVI HEIGHT HELP HENRI HENRIK HERNIA HERNLEM HEWLETT HEZBOLLAH HIGH HIGHER HINT HISTOR HISTORI HOLD HOLOCAUST HOME HOOK HOPE HOSPIT HOST HOUR HOUS HOWARD HUMAN HUNTSVIL ICON IDEA
IGNOR ILLEG ILLINOI IMAG IMAGIN IMAK IMPLEMENT IMPORT IMPRESS IMPROV INCLUD INCREAS INDIVIDU INDUSTRI INFECT INFO INFORM INJECT INPUT INSTAL INSTITUT INSTRUMENT INTEL INTELLECT INTELLIG INTEND INTEREST INTERFAC INTERGRAPH INTERN INTERNET INTERVIEW INVENT
INVOLV IRAN IRVIN ISLAM ISLAND ISN ISRA ISRAEL ISSU ITEM JACK JAKE JASON JEFF JEFFERSON JERUSALEM JESS JEW JEWISH JIM JIMMI JOEL JOHN JOSEPH JOYSTICK JUSTIFI KEI KEITH KEN KENNETH KEYBOARD KEYWORD KIDNEI KILL KIND KIRLIAN KLUTE KNOW KNOWLEDG KRILLEAN LAB
LABEL LABORATORI LACK LAND LANGUAG LARG LARRI LASER LAW LEAD LEADER LEARN LEAV LEBANES LEBANON LEFT LEGAL LET LETTER LEVEL LIBRARI LICENS LIFE LIGHT LIMIT LINK LINUX LIST LISTEN LITERATUR LIVE LIVNI LOAD LOCAL LOCAT LOGIC LOGIN LONG LONGER LOOK LOOP LOST
LOT LOVE LUCK LUNG LYME MACHIN MAHAN MAIL MAIN MAINTAIN MAJOR MAKE MAN MANAG MANUAL MAP MARC MARK MARKET MARTIN MASK MASS MASSACR MATERI MATH MATTER MCGILL MEAN MEASUR MECHAN MED MEDIA MEDIC MEDICIN MELLON MEMBER MEMORI MENTION MENU MESSAG METAL METHOD
METHODOLOG MICHAEL MIDDL MIGRAIN MIKE MILE MILITARI MILLION MIND MINUT MISC MISS MISTAK MODE MODEL MODIFI MODUL MON MONEI MONITOR MONTH MORAL MOTIF MOTOROLA MOUNTAIN MOUS MOVE MOVEMENT MSG MULTI MULTIPL MURDER MUSCL MUSLIM NAFTALI NAME NASA NATION NATUR
NAZI NECESSARILI NEED NEEDL NEGOTI NET NETANYAHU NETCOM NETNEW NETWORK NEUTRAL NEW NEWS NEWSREAD NICE NIGHT NNTP NOIS NORMAL NORTH NOTE NOTIC NUCLEAR NULL NUMBER OBJECT OBSERV OBTAIN OCCUP OCCUPI OCCUR ODOMET OFFER OFFIC OFFICI OHIO OLWM OMRAN OPEN
OPENLOOK OPENWINDOW OPER OPINION OPTION ORDER ORG ORGAN ORIGIN OSCIL OUTLET OUTPUT OWNER PACKAG PACKARD PACKET PAGE PAID PAIN PALESTIN PALESTINIAN PAPER PARENT PART PARTI PASS PATCH PATIENT PATRICK PAUL PEAC PERFORM PERIOD PERSIAN PERSON PETER PHONE
PHOTOGRAPHI PHYSIC PHYSICIAN PICA PICK PICTUR PILL PIN PITT PITTSBURGH PIXEL PIXMAP PLACE PLAI PLAIN PLAN PLANE PLAYER PLUG POINT POINTER POLIC POLICI POLIT POPUL POPULAR POPUP PORT POSIT POSSIBL POST POSTER POSTSCRIPT POWER PRACTIC PREFER PRESENT PRESID
PRESS PRETTI PREVENT PREVIOU PRICE PRINT PRINTER PRIVAT PROBLEM PROCESS PRODUC PRODUCT PROGRAM PROGRAMM PROJECT PROLIN PROPAGANDA PROPER PROPOS PROTECT PROTOCOL PROVE PROVID PUBLIC PUBLISH PULL PURPOS PUT QUACK QUALITI QUESTION QUOT RACE RACISM RACIST
RADAR RADIO RAINER RANG RATE REACTION READ READER REAL REALIZ REASON REC RECAL RECEIV RECOGN RECOMMEND REDUC REDUND REGION REGIST REILLI RELAI RELAT RELEAS RELIABL RELIGION REMAIN REMEMB REMOT REMOV REPEAT REPLAC REPLI REPORT REQUEST REQUIR RESEARCH
RESERV RESIST RESISTOR RESOURC RESPOND RESPONS REST RESULT RETURN REVIEW RICH RICHARD RICHARDSON RIGHT RIND RING RISK RIVER ROAD ROBERT ROCHEST RON ROOM ROOT RUI RULE RUN RUSSEL RUSSIAN SALAH SALE SALMON SAMPL SAT SAVE SCHEMAT SCHOOL SCHWARTZ SCI SCIENC
SCIENTIF SCIENTIST SCOPE SCOTT SCREEN SDSU SEA SEARCH SEATTL SECTION SECUR SEEK SEIZUR SELECT SELL SEMIT SEND SENS SENSIT SEPAR SEQUENC SERA SERDAR SERI SERIAL SERV SERVER SERVIC SET SEXUAL SHACK SHAME SHARE SHELL SHNEKENDORF SHOOT SHORT SHOSTACK SHOT
SHOULDN SHOW SICK SIDE SIGN SIGNAL SIGNIFIC SIMILAR SIMM SIMPL SIMPLI SINGL SITE SITUAT SIZE SKEPTIC SKIN SLEEP SLOW SMALL SMOKE SOCIETI SOFTWAR SOLARI SOLDIER SOLUT SORT SOUND SOURC SOUTH SOVIET SPACE SPARC SPEAK SPEC SPECIAL SPECIF SPEED SPELL SPOCK
SPOT STAI STAND STANDARD START STATE STATEMENT STATIC STATU STEIN STEPHEN STEVE STEVEN STONE STOP STORE STORI STRING STRIP STUDENT STUDI STUFF STUPID STYLE SUBSCRIB SUBSCRIV SUFFER SUGGEST SUIT SUMMARI SUN SUNO SUPERSTIT SUPPLI SUPPORT SUPPOS SURGERI
SURPRIS SURREND SUSPECT SWITCH SYMBOL SYMPTOM SYNDROM SYRIA SYSTEM TABL TAKE TALK TAPE TARGET TAST TCP TECHNIC TECHNOLOG TEKTRONIX TEL TELEPHON TELL TEMPERATUR TERM TERMIN TERRITORI TERROR TERRORIST TEST TEXA TEXT THAT THEE THEORI THERAPI THERE THEY THINK
THOMA THOUGHT THREAD THROW THU TIM TIME TIMER TITL TODAI TOLD TOM TONIGHT TOOL TOOLKIT TOPIC TORONTO TOTAL TOWER TRACE TRAFFIC TRAIN TRANSFORM TRANSLAT TRANSMIT TREAT TREATMENT TROOP TROUBL TRUE TRUTH TUBE TUE TURK TURKEI TURKISH TURN TYPE TYPIC UNDEFIN
UNDERSTAND UNIT UNIV UNIVERS UNIX UNKNOWN UPDAT URBANA USA USENET USER UTEXA UUCP VALU VANDERBYL VARIABL VAX VERSION VIDEO VIEW VILLAG VIRGINIA VIRTUAL VISUAL VOIC VOLT VOLTAG WAI WAIT WALL WANT WAR WARN WASHINGTON WASN WAST WATCH WATER WAVE WAYN WED WEEK
WEIGHT WEST WESTERN WHAT WHITE WIDE WIDGET WIDTH WIFE WIN WINDOW WIRE WOMEN WON WONDER WORD WORK WORLD WORTH WOULDN WPI WRITE WRITTEN WRONG WROTE XLIB XPUTIMAG XSERVER XTERM XTERMIN XVIEW XWINDOW YASSIN YEAH YEAR YEAST YIGAL YORK YOU YOUNG ZIONISM ZIONIST
ZUMA
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   run;
Note: Large memory request: 606816
 
Construyendo X'X  para el objetivo:  filas=1205 memoria=5.81 meg.
3000 registros leídos
3000 registros leídos
*** Número total de ejecuciones de los datos :        2
*** Número total de optimizaciones NL:        0
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_STDMEAN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_OUTSTAT;
MPRINT(EM_DIAGRAM):   if _TYPE_='_STDEV_' or _TYPE_='_MEAN_' then output;
MPRINT(EM_DIAGRAM):   DROP _EIGVAL_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_OUTSTAT;
MPRINT(EM_DIAGRAM):   if upcase(_TYPE_)='_V_MAP_' or upcase(_TYPE_)='_C_MAP_' or upcase(_TYPE_)='_MEAN_' or upcase(_TYPE_)='_STDEV_' or upcase(_TYPE_)='_EIGVAL_' or _EIGVAL_=0 then delete;
MPRINT(EM_DIAGRAM):   drop _TYPE_;
MPRINT(EM_DIAGRAM):   rename _EIGVAL_=Eigenvalue;
MPRINT(EM_DIAGRAM):   data EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   Keep EigenValue;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.PRINCOMP_EIGEN out=EMWS1.PRINCOMP_EIGEN prefix=PC_;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.PRINCOMP_EIGEN out=EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   data EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   merge EMWS1.PRINCOMP_EIGEN EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   DROP EigenValue;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   by EigenValue;
MPRINT(EM_DIAGRAM):   data EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   Difference=Eigenvalue-lag(Eigenvalue);
MPRINT(EM_DIAGRAM):   ProportionalEigenvalue=EigenValue/0.21216737509122;
MPRINT(EM_DIAGRAM):   LagProportionalEigenvalue=lag(ProportionalEigenvalue);
MPRINT(EM_DIAGRAM):   label EigenValue = "Autovalor";
MPRINT(EM_DIAGRAM):   label Difference = "Diferencia";
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   by DESCENDING EigenValue;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   CumProportionalEigenvalue+ProportionalEigenvalue;
MPRINT(EM_DIAGRAM):   if CumProportionalEigenvalue > 1.0 then CumProportionalEigenvalue=1.0;
MPRINT(EM_DIAGRAM):   LogEigenvalue=Log(Eigenvalue);
MPRINT(EM_DIAGRAM):   length Exported $8;
MPRINT(EM_DIAGRAM):   Exported = 'NO';
MPRINT(EM_DIAGRAM):   label LogEigenvalue = "Logaritmo del autovalor";
MPRINT(EM_DIAGRAM):   label Exported = "Exportado";
MPRINT(EM_DIAGRAM):   data WORK._DSEIGENCHART;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   PC_=_N_;
MPRINT(EM_DIAGRAM):   DROP _NAME_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._EMPRINDSSUBEIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   if ( CumProportionalEigenvalue GE 0.8 ) or (LagProportionalEigenvalue LT 0.1 and CumProportionalEigenvalue GE 0.9 ) or ( _N_ > 50-1) then delete;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   length PC 8.;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   if _N_ < 50+1 then Exported = 'YES';
MPRINT(EM_DIAGRAM):   Drop LagProportionalEigenvalue;
MPRINT(EM_DIAGRAM):   PC = _N_;
MPRINT(EM_DIAGRAM):   format PC 8.;
MPRINT(EM_DIAGRAM):   rename _NAME_ = Component;
MPRINT(EM_DIAGRAM):   label _NAME_ = "Componentes principales";
MPRINT(EM_DIAGRAM):   rename ProportionalEigenvalue = Proportion;
MPRINT(EM_DIAGRAM):   label ProportionalEigenvalue = "Autovalor proporcional";
MPRINT(EM_DIAGRAM):   rename CumProportionalEigenvalue = Cumulative;
MPRINT(EM_DIAGRAM):   label CumProportionalEigenvalue = "Autovalor proporcional acumulado";
MPRINT(EM_DIAGRAM):   label PC = "ID PC";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_SUBEIGENVECTOR;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   if _N_ > 50 then delete;
MPRINT(EM_DIAGRAM):   data WORK._EMPRINDSSUBEIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   if _N_ > 50 then delete;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.PRINCOMP_EIGENVECTOR name=Variable label=Label out=EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   label Label = "Etiqueta";
MPRINT(EM_DIAGRAM):   label Variable = "Variable";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file print;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "Resumen de componentes principales exportados";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put " ";
MPRINT(EM_DIAGRAM):   put "Número total de variables input: 1204";
MPRINT(EM_DIAGRAM):   put "Corte de número máximo de los componentes principales: 50";
MPRINT(EM_DIAGRAM):   put "Corte de autovalor proporcional acumulado: 0.8";
MPRINT(EM_DIAGRAM):   put "Corte de incremento de autovalor proporcional: 0.1";
MPRINT(EM_DIAGRAM):   put "Número de los componentes principales seleccionados: 50";
MPRINT(EM_DIAGRAM):   put "Variación total explicada por los componentes principales seleccionados: 0.305995824";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   length Name $32 formula $70 file $200;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
MPRINT(EM_DIAGRAM):   name='';
MPRINT(EM_DIAGRAM):   file="OPTCODE\"!!"_ALL_.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_1";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_1.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_10";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_10.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_11";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_11.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_12";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_12.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_13";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_13.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_14";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_14.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_15";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_15.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_16";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_16.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_17";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_17.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_18";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_18.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_19";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_19.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_2";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_2.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_20";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_20.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_21";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_21.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_22";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_22.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_23";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_23.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_24";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_24.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_25";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_25.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_26";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_26.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_27";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_27.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_28";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_28.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_29";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_29.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_3";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_3.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_30";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_30.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_31";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_31.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_32";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_32.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_33";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_33.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_34";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_34.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_35";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_35.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_36";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_36.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_37";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_37.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_38";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_38.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_39";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_39.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_4";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_4.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_40";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_40.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_41";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_41.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_42";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_42.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_43";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_43.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_44";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_44.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_45";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_45.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_46";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_46.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_47";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_47.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_48";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_48.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_49";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_49.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_5";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_5.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_50";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_50.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_6";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_6.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_7";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_7.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_8";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_8.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = "PC_9";
MPRINT(EM_DIAGRAM):   file="OPTCODE\PC_9.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00H18" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de puntuación";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de puntuación
Fecha:                13/12/20
Hora:                00H18
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O17YBIO_ "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O17YBIO_ new;
MPRINT(EM_DIAGRAM):   run;
18197      %em_getActionStatus(emlib=EMWS1, nodeid=PRINCOMP);
MPRINT(EM_DIAGRAM):
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;
 
18198      %let em_Train = N;
18199      %let em_Score = Y;
18200      %let em_Report = N;
18201      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_GETACTIONSTATUS):
MPRINT(EM_DIAGRAM):  ;
 
18202      data WORK.M14_9BHM;
MPRINT(EM_DIAGRAM):    data WORK.M14_9BHM;
18203      set WORK.M14_9BHM;
MPRINT(EM_DIAGRAM):   set WORK.M14_9BHM;
18204      if role = 'INPUT' and use in ('Y','D') then do;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('Y','D') then do;
18205      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
18206      output;
MPRINT(EM_DIAGRAM):   output;
18207      end;
MPRINT(EM_DIAGRAM):   end;
18208      if role = 'REJECTED' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use = 'Y' then do;
18209      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
18210      output;
MPRINT(EM_DIAGRAM):   output;
18211      end;
MPRINT(EM_DIAGRAM):   end;
18212      if role = 'FREQ' then do;
MPRINT(EM_DIAGRAM):   if role = 'FREQ' then do;
18213      role = 'FREQ';
MPRINT(EM_DIAGRAM):   role = 'FREQ';
18214      output;
MPRINT(EM_DIAGRAM):   output;
18215      end;
MPRINT(EM_DIAGRAM):   end;
18216      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1204 observations read from the data set WORK.M14_9BHM.
NOTE: The data set WORK.M14_9BHM has 1204 observations and 21 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18217      data EMWS1.PRINCOMP_STDMEAN;
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_STDMEAN;
18218      set EMWS1.PRINCOMP_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_OUTSTAT;
18219      if _TYPE_='_STDEV_' or _TYPE_='_MEAN_' then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_STDEV_' or _TYPE_='_MEAN_' then output;
18220      DROP _EIGVAL_;
MPRINT(EM_DIAGRAM):   DROP _EIGVAL_;
18221      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1210 observations read from the data set EMWS1.PRINCOMP_OUTSTAT.
NOTE: The data set EMWS1.PRINCOMP_STDMEAN has 2 observations and 1205 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
18222      /*----create a data set of eigenvalue-eigenvector pairs---*/
18223      data EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_EIGENVECTOR;
18224      set EMWS1.PRINCOMP_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_OUTSTAT;
18225      if upcase(_TYPE_)='_V_MAP_' or upcase(_TYPE_)='_C_MAP_' or upcase(_TYPE_)='_MEAN_' or upcase(_TYPE_)='_STDEV_' or upcase(_TYPE_)='_EIGVAL_' or _EIGVAL_=0 then delete;
MPRINT(EM_DIAGRAM):   if upcase(_TYPE_)='_V_MAP_' or upcase(_TYPE_)='_C_MAP_' or upcase(_TYPE_)='_MEAN_' or upcase(_TYPE_)='_STDEV_' or upcase(_TYPE_)='_EIGVAL_' or _EIGVAL_=0 then delete;
18226      drop _TYPE_;
MPRINT(EM_DIAGRAM):   drop _TYPE_;
18227      rename _EIGVAL_=Eigenvalue;
MPRINT(EM_DIAGRAM):   rename _EIGVAL_=Eigenvalue;
18228      /*--------- eigenvalue data set------------ */
 
NOTE: There were 1210 observations read from the data set EMWS1.PRINCOMP_OUTSTAT.
NOTE: The data set EMWS1.PRINCOMP_EIGENVECTOR has 1203 observations and 1205 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
18229      data EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   data EMWS1.PRINCOMP_EIGEN;
18230      set EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGENVECTOR;
18231      Keep EigenValue;
MPRINT(EM_DIAGRAM):   Keep EigenValue;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGENVECTOR.
NOTE: The data set EMWS1.PRINCOMP_EIGEN has 1203 observations and 1 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
18232      proc transpose data=EMWS1.PRINCOMP_EIGEN out=EMWS1.PRINCOMP_EIGEN prefix=PC_;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.PRINCOMP_EIGEN out=EMWS1.PRINCOMP_EIGEN prefix=PC_;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: The data set EMWS1.PRINCOMP_EIGEN has 1 observations and 1204 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
18233      proc transpose data=EMWS1.PRINCOMP_EIGEN out=EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.PRINCOMP_EIGEN out=EMWS1.PRINCOMP_EIGEN;
18234      /*----------Eigenvector data set ------------*/
 
NOTE: There were 1 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: The data set EMWS1.PRINCOMP_EIGEN has 1203 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18235      data EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   data EMWS1.PRINCOMP_EIGENVECTOR;
18236      merge EMWS1.PRINCOMP_EIGEN EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   merge EMWS1.PRINCOMP_EIGEN EMWS1.PRINCOMP_EIGENVECTOR;
18237      DROP EigenValue;
MPRINT(EM_DIAGRAM):   DROP EigenValue;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGENVECTOR.
NOTE: The data set EMWS1.PRINCOMP_EIGENVECTOR has 1203 observations and 1205 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
18238      proc sort data=EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.PRINCOMP_EIGEN;
18239      by EigenValue;
MPRINT(EM_DIAGRAM):   by EigenValue;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: The data set EMWS1.PRINCOMP_EIGEN has 1203 observations and 2 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18240      data EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   data EMWS1.PRINCOMP_EIGEN;
18241      set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
18242      Difference=Eigenvalue-lag(Eigenvalue);
MPRINT(EM_DIAGRAM):   Difference=Eigenvalue-lag(Eigenvalue);
18243      ProportionalEigenvalue=EigenValue/0.21216737509122;
MPRINT(EM_DIAGRAM):   ProportionalEigenvalue=EigenValue/0.21216737509122;
18244      LagProportionalEigenvalue=lag(ProportionalEigenvalue);
MPRINT(EM_DIAGRAM):   LagProportionalEigenvalue=lag(ProportionalEigenvalue);
18245      label EigenValue = "Autovalor";
MPRINT(EM_DIAGRAM):   label EigenValue = "Autovalor";
18246      label Difference = "Diferencia";
MPRINT(EM_DIAGRAM):   label Difference = "Diferencia";
 
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      1 en 18242:22
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: The data set EMWS1.PRINCOMP_EIGEN has 1203 observations and 5 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18247      proc sort data=EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.PRINCOMP_EIGEN;
18248      by DESCENDING EigenValue;
MPRINT(EM_DIAGRAM):   by DESCENDING EigenValue;
18249      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: The data set EMWS1.PRINCOMP_EIGEN has 1203 observations and 5 variables.
NOTE: PROCEDURE SORT ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18250      data EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_EIGEN;
18251      set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
18252      CumProportionalEigenvalue+ProportionalEigenvalue;
MPRINT(EM_DIAGRAM):   CumProportionalEigenvalue+ProportionalEigenvalue;
18253      /* to avoid  CumProportionalEigenvalue > 1 because of the precision */
18254      if CumProportionalEigenvalue > 1.0 then CumProportionalEigenvalue=1.0;
MPRINT(EM_DIAGRAM):   if CumProportionalEigenvalue > 1.0 then CumProportionalEigenvalue=1.0;
18255      LogEigenvalue=Log(Eigenvalue);
MPRINT(EM_DIAGRAM):   LogEigenvalue=Log(Eigenvalue);
18256      length Exported $8;
MPRINT(EM_DIAGRAM):   length Exported $8;
18257      Exported = 'NO';
MPRINT(EM_DIAGRAM):   Exported = 'NO';
18258      label LogEigenvalue = "Logaritmo del autovalor";
MPRINT(EM_DIAGRAM):   label LogEigenvalue = "Logaritmo del autovalor";
18259      label Exported = "Exportado";
MPRINT(EM_DIAGRAM):   label Exported = "Exportado";
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: The data set EMWS1.PRINCOMP_EIGEN has 1203 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18260      data WORK._DSEIGENCHART;
MPRINT(EM_DIAGRAM):   data WORK._DSEIGENCHART;
18261      set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
18262      PC_=_N_;
MPRINT(EM_DIAGRAM):   PC_=_N_;
18263      DROP _NAME_;
MPRINT(EM_DIAGRAM):   DROP _NAME_;
18264      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: The data set WORK._DSEIGENCHART has 1203 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18265      data WORK._EMPRINDSSUBEIGEN;
MPRINT(EM_DIAGRAM):    data WORK._EMPRINDSSUBEIGEN;
18266      set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
18267      if ( CumProportionalEigenvalue GE 0.8 ) or (LagProportionalEigenvalue LT 0.1 and CumProportionalEigenvalue GE 0.9 )
18268      or ( _N_ > 20-1)
18269      then delete;
MPRINT(EM_DIAGRAM):   if ( CumProportionalEigenvalue GE 0.8 ) or (LagProportionalEigenvalue LT 0.1 and CumProportionalEigenvalue GE 0.9 ) or ( _N_ > 20-1) then delete;
18270      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: The data set WORK._EMPRINDSSUBEIGEN has 19 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18271      data EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_EIGEN;
18272      length PC 8.;
MPRINT(EM_DIAGRAM):   length PC 8.;
18273      set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
18274      if _N_ < 20+1 then Exported = 'YES';
MPRINT(EM_DIAGRAM):   if _N_ < 20+1 then Exported = 'YES';
18275      Drop LagProportionalEigenvalue;
MPRINT(EM_DIAGRAM):   Drop LagProportionalEigenvalue;
18276      PC = _N_;
MPRINT(EM_DIAGRAM):   PC = _N_;
18277      format PC 8.;
MPRINT(EM_DIAGRAM):   format PC 8.;
18278      rename _NAME_ = Component;
MPRINT(EM_DIAGRAM):   rename _NAME_ = Component;
18279      label _NAME_ = "Componentes principales";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Componentes principales";
18280      rename ProportionalEigenvalue = Proportion;
MPRINT(EM_DIAGRAM):   rename ProportionalEigenvalue = Proportion;
18281      label ProportionalEigenvalue = "Autovalor proporcional";
MPRINT(EM_DIAGRAM):   label ProportionalEigenvalue = "Autovalor proporcional";
18282      rename CumProportionalEigenvalue = Cumulative;
MPRINT(EM_DIAGRAM):   rename CumProportionalEigenvalue = Cumulative;
18283      label CumProportionalEigenvalue ="Autovalor proporcional acumulado";
MPRINT(EM_DIAGRAM):   label CumProportionalEigenvalue = "Autovalor proporcional acumulado";
18284      label PC = "ID PC";
MPRINT(EM_DIAGRAM):   label PC = "ID PC";
18285      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: The data set EMWS1.PRINCOMP_EIGEN has 1203 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18286      data EMWS1.PRINCOMP_SUBEIGENVECTOR;
MPRINT(EM_DIAGRAM):    data EMWS1.PRINCOMP_SUBEIGENVECTOR;
18287      set EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGENVECTOR;
18288      if _N_ > 20 then delete;
MPRINT(EM_DIAGRAM):   if _N_ > 20 then delete;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGENVECTOR.
NOTE: The data set EMWS1.PRINCOMP_SUBEIGENVECTOR has 20 observations and 1205 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
18289      data WORK._EMPRINDSSUBEIGEN;
MPRINT(EM_DIAGRAM):   data WORK._EMPRINDSSUBEIGEN;
18290      set EMWS1.PRINCOMP_EIGEN;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGEN;
18291      if _N_ > 20 then delete;
MPRINT(EM_DIAGRAM):   if _N_ > 20 then delete;
18292      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGEN.
NOTE: The data set WORK._EMPRINDSSUBEIGEN has 20 observations and 8 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18293      proc transpose data=EMWS1.PRINCOMP_EIGENVECTOR name=Variable label=Label out=EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.PRINCOMP_EIGENVECTOR name=Variable label=Label out=EMWS1.PRINCOMP_EIGENVECTOR;
18294      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1203 observations read from the data set EMWS1.PRINCOMP_EIGENVECTOR.
NOTE: The data set EMWS1.PRINCOMP_EIGENVECTOR has 1204 observations and 1204 variables.
NOTE: PROCEDURE TRANSPOSE ha utilizado (Tiempo de proceso total):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
18295      data EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   data EMWS1.PRINCOMP_EIGENVECTOR;
18296      set EMWS1.PRINCOMP_EIGENVECTOR;
MPRINT(EM_DIAGRAM):   set EMWS1.PRINCOMP_EIGENVECTOR;
18297      label Label = "Etiqueta";
MPRINT(EM_DIAGRAM):   label Label = "Etiqueta";
18298      label Variable = "Variable";
MPRINT(EM_DIAGRAM):   label Variable = "Variable";
18299      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
NOTE: There were 1204 observations read from the data set EMWS1.PRINCOMP_EIGENVECTOR.
NOTE: The data set EMWS1.PRINCOMP_EIGENVECTOR has 1204 observations and 1204 variables.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
18300      filename newout "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename newout "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
18301      ;
18302      proc printto print=newout;
MPRINT(EM_DIAGRAM):   proc printto print=newout;
18303      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: PROCEDURE PRINTTO ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18304      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18305      file print;
MPRINT(EM_DIAGRAM):   file print;
18306      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
18307      put "%sysfunc(sasmsg(sashelp.dmine, rpt_princomp_sum_rescore_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   put "Resumen de componentes principales exportados - Vueltos a puntuar";
18308      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
18309      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
18310      put "%sysfunc(sasmsg(sashelp.dmine, rpt_princomp_sum_ninput , NOQUOTE, 1204))";
MPRINT(EM_DIAGRAM):   put "Número total de variables input: 1204";
18311      put "%sysfunc(sasmsg(sashelp.dmine, rpt_princomp_sum_maxpc , NOQUOTE, 20))";
MPRINT(EM_DIAGRAM):   put "Corte de número máximo de los componentes principales: 20";
18312      put "%sysfunc(sasmsg(sashelp.dmine, rpt_princomp_sum_cumcut , NOQUOTE, 0.8))";
MPRINT(EM_DIAGRAM):   put "Corte de autovalor proporcional acumulado: 0.8";
18313      put "%sysfunc(sasmsg(sashelp.dmine, rpt_princomp_sum_increcut , NOQUOTE, 0.1))";
MPRINT(EM_DIAGRAM):   put "Corte de incremento de autovalor proporcional: 0.1";
18314      put "%sysfunc(sasmsg(sashelp.dmine, rpt_princomp_sum_nselpc , NOQUOTE, 20))";
MPRINT(EM_DIAGRAM):   put "Número de los componentes principales seleccionados: 20";
18315      put "%sysfunc(sasmsg(sashelp.dmine, rpt_princomp_sum_totvar , NOQUOTE, 0.1872056212))";
MPRINT(EM_DIAGRAM):   put "Variación total explicada por los componentes principales seleccionados: 0.1872056212";
 
NOTE: 9 lines were written to file PRINT.
NOTE: The DATA step printed page 1.
NOTE: DATA statement ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
18316      proc printto;
MPRINT(EM_DIAGRAM):   proc printto;
18317      run;
MPRINT(EM_DIAGRAM):   run;
 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13/12/20" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00H18" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log del informe";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log del informe
Fecha:                13/12/20
Hora:                00H18
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O23KFMJ9 "C:\Users\Admin\Documents\GitHub\AMUL-PRACTICA\practica_AMUL\Workspaces\EMWS1\PRINCOMP\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O23KFMJ9 new;
MPRINT(EM_DIAGRAM):   run;
58585      %em_getActionStatus(emlib=EMWS1, nodeid=PRINCOMP);
MPRINT(EM_DIAGRAM):
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;
 
58586      %let em_Train = N;
58587      %let em_Score = Y;
58588      %let em_Report = N;
58589      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY ha utilizado (Tiempo de proceso total):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_GETACTIONSTATUS):
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
